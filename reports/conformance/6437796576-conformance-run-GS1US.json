{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a3f22da4-b8e0-4017-a57c-ae6968522b03",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d4e39b23-89ec-43be-9c68-904925a19d53",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99b62127-9292-4293-baf6-e69713ca2bf2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72e4d1a6-11e4-4d0d-ad44-5a7dd2e78e14"
                }
              }
            ]
          },
          {
            "id": "c31dfd04-62c1-4aaf-93d1-96480cd5773e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "98f8827b-565b-416b-8b5e-3c9a3b8c36cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03298924-dca4-44c1-9f08-e6ee68d0acc0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7c5d4996-42b0-4200-ba91-07f7f590dda4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7b0aad03-b040-4ee8-b53d-e62bef39b405",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f984747-7d12-495c-b975-d58beb37c05a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da606833-9193-41ee-a37d-f6a7c1f7b616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64070258-8895-4480-a83a-5fede3856464"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "060c2be6-8970-4ae1-ad10-6bb2aee0f865",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ca629cc-e6fe-42ed-a41b-4929d0a42ca0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40ead415-d452-44d0-ba6c-88a828a14c93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "999bb6ee-96f2-4c30-8912-7e0605f3362e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e369264a-a402-4fed-a249-969ed45f55fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c361d05e-4bf6-4bcd-bb03-288ad8e1af6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9005821d-5349-403c-b0e5-c3b5c89bfa3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d2240eb-be76-438e-ae4b-6c44f7396a0b"
            }
          }
        ]
      },
      {
        "id": "be2755b4-8cc8-498f-bf6d-0332e10b119e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "91c286a3-1a73-4b56-adf5-8cb92fa4dd27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52f3acbe-8024-4816-ad58-db56ab4c0a2b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0fd0491-5509-4d35-93f4-a742d518204d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e3f78-3aea-48f5-9dd7-5383eb9fde55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "611f314b-d9f6-4d4f-ade7-3f0b62b4d311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabbca8d-b384-4fe6-9caf-9ba6fe9ba9d3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eb5634-a1a8-456f-8e66-0616ec6721e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a8bbf9-340c-4615-88b9-0120c17c9eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a8a2ac-50e4-4bbe-a578-eb56176ba89a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb7e32a-b07d-4f6f-98dd-aeea1e06103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dd1b8d0-6aed-4587-82ce-5065b783fd96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c82fc0f7-2680-49a3-a1f3-aa2b5f234a0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "028baccc-e212-4b9a-8c82-e0456c01bc25",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c6a24b-9d20-447e-9e52-a4c951ef5078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d96203a-840b-45d5-b7f0-1b23375db042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b60830c-a196-450d-a245-47e3a108d30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28fd6e8-32e8-4821-a80d-b61aff2b31b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e99f32e7-c4af-44ad-81f2-b61f27d6be54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a225dd6-2135-4d8e-9b2b-0f5025333462",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40109825-54ac-413f-93c8-8aac3c1a0e26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a1d217bd-60a3-49f7-9d93-1fdc29891a6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7ee20d1-97ae-4f76-9040-85cdf9b5e402",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b09e3af3-3906-4808-940e-f8a096941a8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f66f6b19-1b43-431e-9f08-8b669798992e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b16d27d-5639-441e-93ae-e9c4bc2826d9"
            }
          }
        ]
      },
      {
        "id": "23a2302e-337e-4956-972c-cf62ed334b70",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b3353a4-0001-4324-8061-a0afef6330f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0c016b9-20d9-4e88-8537-923f03f75216",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "479ee482-c6c3-43fd-a15f-6dbc7f09bdc6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66ed840-b8fb-42b0-91ef-e263751ebc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ee6384-07c0-4ab8-bcee-573dd3e42cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c60ee27-0f17-4d12-a81f-823d2a418246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "476eb8ba-86ff-4f7a-be14-fb7425836ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca68295e-3c19-4a9d-a87a-55bfebe368c8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e68ad4-8b52-4acc-94b3-521291c73897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddc0de9-bf37-492a-8f89-f733af478b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c4fbc7-4adb-41a8-bbf5-a7d22e430f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62fb5c42-b014-4d6a-a6b2-0aab90855403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba9446d-699b-4ce8-a116-332a891ab8ad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b61adb-3fd1-401d-9304-663461241a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510fef5-3370-43cb-bc6e-4fe624aad469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3c4549-1424-427e-8d74-2d7d0b4391bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3d50e52-609a-44ad-9732-c52b8ecff3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675be13a-65a5-445c-9aab-9101a34571a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e9f4f8-9d4d-4029-aeb2-f3efcad98f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44f7f27-a7f1-4610-8f8b-65a198e0a3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f8378d-b7c3-4263-98ab-cc8032f29798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1108d07-c539-4f19-ba7c-607884465b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f795888-c658-426a-a2f0-db9bd5dac612",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a8871-dc53-41e0-a384-42c7e8a560cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddbacae-3b29-44b9-80a5-adbb9b98e4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de3ab09-a5d2-4890-b14e-969feb954dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d77bee55-cd08-47f1-96f7-e8e38450835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc25003-1496-40d7-b125-6746675d5750",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ea307-931f-426a-8b8b-116e11f1e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61b0e53-bc14-4878-bbd9-664ca80870c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c92ec0-cc0f-4234-aaa8-9fb42c6c46b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d217e91-66cd-469b-bae6-3e9d6cffc86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fe93be-7681-4975-a751-edd49681a284",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a1387d-7599-49d8-9c43-4a7811741832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae007c46-6cf5-42d7-9c1d-debaaa440226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3c2306-7fa0-4b6a-8fde-dc043d59fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b11a0df-e915-4936-8c9f-681c14df8713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24008a50-384d-4c00-8b29-9be7aa9c8cdc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f1a60a-5b3a-405a-a385-6a2a8a0cbbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e5c469-abd8-42ac-88ca-379302d73c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a0bae5-f4d9-4feb-b096-221f6e83e288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9276f7e-0fae-4598-aeea-2417d0f23856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d410e7d8-94ed-4aa7-b59e-83a588a02ace",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8286eef0-874d-458d-8439-adead48f8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db854ebe-9212-4d52-99f2-5be6d11258a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ba4a0a-c0cd-4a8f-b280-9d6fbeed79d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a67a472-4412-4fea-8fb7-1df7235bc25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3af9ac-9d58-4a68-b255-4248c421e726",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beca8e99-bf09-4724-af6b-d89fe01195dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e350f5c-e4a8-40fa-8f84-c004cf7c1639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e05dae-6013-49fc-b28d-5fa70369b42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4cc3b61-52a7-4b0f-a591-c84a0169120f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bd8d4f-c0c6-4ae1-9fca-859356c75117",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b18d3ba-cbbd-44ce-8d23-549651a81fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eef1af3-cbe4-4e86-aa66-4e93be0e7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4483b0-68d2-4005-b531-6447001d32e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "101ed1eb-34a8-4ef1-b015-200806f55977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de0b6e-10e6-4259-a8a0-a9e632abe746",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec424d7d-7e7c-4f54-918d-7f32001cabed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaf939b-d7e9-4a42-98fe-ad6fcaabb245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48540263-3693-45c1-a982-d90ddc7c7266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21668768-5354-44e0-8247-93cb427c1779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c684408-dedf-43cf-899d-b2572765774c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583c2268-7705-4ad8-a746-8b4bc5f3fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae85bae8-6df3-447b-b524-fab247178395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b00c33-e62f-4146-9343-e51ddc10b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d778f17-1a61-4905-b7ac-12764dd5ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eced332b-3092-4797-ab30-7d46270fabfd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1cd2ec-2633-469e-9245-ff058585cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84b953e-4c72-431c-a4b6-7eee5a40b8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324cc5a5-2263-4e14-80c1-72404f748e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e971d4cc-a2c0-4d0d-bece-207cf03f8263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870a6bcc-12f4-4ed8-97e8-12f8fc27c0e6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e5f79-4425-41b3-8f2e-2c901975f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57943a60-7acb-4477-89ce-b33a7bb5c6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570bc2cf-7ca4-43f0-ba34-61d8738ab469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92babf8e-3c48-4c5b-ad6a-ccb23cac4519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdc04d0-a126-4f5b-8568-42bf6cc573f5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf9ef9d-e5f3-47cb-bad0-8d57ca3b2509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7695274-90f4-4351-acf5-3104cc2c5de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c85521-f89a-4229-a709-541376f8d199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51d09d03-8821-4b55-a33d-6424a4a08310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9794a423-d23f-4c21-8fcb-8a7ddd679c1b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fb9c68-d4e7-4a2c-b0f0-436217c673ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e459709-a258-47ce-b73d-780c622bdf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc99b95-1ebb-479a-8e15-f6e24412036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49ef7996-5c94-4cff-8484-85467130d715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbe6352-535c-4847-bac1-79638e357859",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03834d2a-f766-4192-9d13-84329a8abf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8e262c-ded4-4e2d-be4a-7f7a2d99b5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e93f77-5926-4667-be38-47a378be5184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ad5c5-f063-4fc2-8239-e86041960a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b696cda-8f18-47bc-b6e5-e4846f435296",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690a4e29-09b7-40f9-a160-2070082c7ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf8a45e-276a-42e4-ac90-b1fa7b092890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a7855f-d1fa-422d-830a-49ff53916901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "031bce9e-199d-4515-b434-ca46a88a41c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6d68a5-faca-4c72-9006-5574f791e659",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50732e09-208b-448f-b116-fbd251a60d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d927729d-599c-4d1c-8d33-50636d7bb691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c38607-ba64-4662-b956-1254996b0a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d58d6ff-67bc-4afc-9a3e-991fa1c3f537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837616d9-420c-4ef7-8d2d-0da16a2a57a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70649a97-3530-4abb-bd4f-146bd7204a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2773622-fc7e-4594-9b6a-286c022337d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ecdb5-8675-46e3-aef8-1d6c6726bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775a3ce2-e174-4128-9e81-1a2d35ba5b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e38c58-b35f-471e-93cd-ba683f55c362",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281f43f3-193b-4dee-9bdc-bc250a210ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132ec604-f5ed-4262-841c-853f47dbab69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e932dc7d-270b-4dce-a5fd-16fa395716ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7195575d-5662-446c-a76e-bf02813d0c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca547b3-f324-4f25-82f2-c6f775ef52c0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320e441c-72b7-48c2-98c0-1b1bed803d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a64664-51c9-4ef5-b22f-6700419052dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808fa190-fa95-4ba8-b525-b79349e26a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "affc76bd-755a-4b0b-baec-38cdba12fcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75096bf-a9f2-45f4-98ef-9430fb40a108",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299c99be-178b-492e-8c15-9a877708f7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefea809-2214-4415-b915-5e60c68ed9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4007e17b-6db4-4070-a71f-a499624355d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "652ec78a-ac86-4b76-b1fb-cc30b1d408fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ac8487-3257-4f39-b482-5e5d194bbb4c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75254286-981e-46aa-881b-2f483d3447cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb52e50-35bc-4459-bfca-c2ddb70ec84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe0b881-1689-4cbd-8066-a36d106b9b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2714954f-6528-4732-9aaf-9cd3b0ac7ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922fb7ec-3af0-477b-9b7e-0fe514fa456e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83924a0a-48af-439b-abdf-33ffbae85f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4942d7a-48e7-477f-8832-abfc5c8c4033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa788eb-09e1-4ba5-a0f9-a10898b64905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "051b01f7-6fe4-40db-b0db-38691133afba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b7236f-5b32-4bf6-8fb7-1a233cc321b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea0e6a-813f-4439-8e22-d12016a32362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc338b8-4b25-46e5-8c1e-ab1893492df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff201c-873c-463f-953f-169add3cd21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0d7c35-0fc9-4d3d-905b-d4d4edbac57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02892c3a-39b5-42a1-987c-d507a42838b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe7474-c818-451d-bfd2-445531be4891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c0864-ffa2-45a3-9d20-11f855c696d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bbdca0-56a1-4376-9b29-5bd9b64c8b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "279575bc-1602-4870-8aee-291c2166592e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77204b8d-351d-48c2-b042-11592c749257",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8d7e90-8f44-4405-a15d-4530f294600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ce5095-e782-42fb-964e-743c43fa2b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18575bcb-ee08-4cb9-95e7-56919de3e8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ffa130-05ca-4be5-8e19-09712f5a974d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4936dd10-bf99-41dd-868b-510a4fb4e175",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc7c9e2-7222-4f45-8561-e0f26238a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0f2531-385f-4ecc-a2c5-2c94693729b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b38c8b2-5c26-49e2-9d60-a55378f5455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9337a357-2a2f-421e-a6f3-8c017db808ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e6f513-a4e7-42c1-97f0-8f39133c3aca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f921b8b-6846-46dc-81ad-3a75f7be814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef083e18-04a8-4704-b49f-0cb55d8c9891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c50abb-94f3-4bad-9def-c0b9d3b94968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9945765-936c-4507-a724-485d36659416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cfb638-bcb5-4a41-867c-5c2ab1ea8b0c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a205922-bb4d-41fd-8eaa-3a7168b633a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9da709-724f-4f94-a4bc-62298654132e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09633be0-6afc-4207-9c6f-d1067e0a29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6951abb1-e1ff-4789-95c8-b5400a4fe626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae77e3f-6688-4c71-9346-6fe57c6af3b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b1ba66-d27d-4b4a-9230-fda8657724d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7d4a26-1809-4cd5-a6a9-90fc76466180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab202e94-fbc2-4edc-baa9-a67c706a0b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4f7de-b9b1-4c29-b3d1-2bffbcb322a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d703044-610c-4b04-b3e8-53e3e038dbfc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32798019-9df9-4599-b21e-c18dfb45d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2ecb60-5686-4a95-ab73-69f7516a3792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c2097b-3978-40f8-bead-53cf96f1fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5268a7a-120d-4781-b264-4e34b1fc49a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8919acba-20cb-41d2-8b22-acf213e37e5d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33bb9aa-fba1-4304-a387-604c4df94c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af26a59e-e313-4ded-a075-9e58152c9652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3411cef8-957a-4e43-b2ed-586fb1c871b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8022b3-3dda-4c46-8ee3-22366f023a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88eaaf9-39a1-43ea-8d3e-05fff61d275a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b26b1a-f78e-4b27-8aa7-abcd29b15060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c62763e1-559c-471c-8afb-82c0f4bb0914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb2f1fb-81c0-44ea-93b8-bbb88f35b000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6de78e58-8701-4525-ac3d-65b7bb6246c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caeacfa-5d15-4c8a-984d-cfc5ab7e60ea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4f0679-cff1-4695-8d29-04f2e761d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4177c14a-b946-4618-9dae-1ad7eb9453e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f774d-49b6-4131-a0ed-baa1f7b8383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c43f58-a210-4d0e-9507-1a93e2e2201a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b8b63-9f29-400f-bec9-7d0e3650df10",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a9acd-55b4-4b29-b44a-15d0c698cb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec58e449-ee16-4b9a-b738-4339b641eedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52fbf71-d213-4b55-b92d-c19697d4fa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c69dd6-55f7-4bbf-ad6c-5088d3fef0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d78f866-c93d-490f-8fc7-394b53cfb93d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734a3f5a-ac4d-4918-b4ce-1e03178935e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a74ca22-25f8-415f-8e7c-e526ad545d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c08631-b331-46fc-b46d-d761b5dd8069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b7127c-f669-4044-87a2-26883f34f356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f05b86-3123-4f57-85e9-faf9b9fa100e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8124f75d-d55e-443e-b256-185df81816f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6cb318-7fdf-4641-906e-26ea0ece0e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d58e508-1cf2-4b1c-b1f7-24e03afb0325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee827007-7186-4f4a-aca9-255cb24dadc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ed8d91-7988-4975-8c90-d719ccf988ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75fea39-de27-4eaa-b339-bbbc4bc6bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c17066b-b5b9-4f4c-b090-2fab5b8cde7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0adb23-9061-49e1-90f9-ab10d0431406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "378a6718-5603-49a4-b2ed-5aab7e9af0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0879971-984c-4bae-bba1-50fb3880fe07",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ac823e-7bca-4168-81f8-31cd3515c2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1fec48-cbd3-4653-a721-09f084a24aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f057d11-e53c-43fc-ba0e-0e449586e676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "98bd6610-13a1-4a91-bef4-6b75fafdd2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a98b8be-ce97-4515-b01e-9dbc963d5581",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad35e186-9126-458e-8a98-e8b9cf26c072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4014b12c-4951-449b-b95f-1fa59d0ca2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6b8b47-cb55-4979-a719-3ec2743a34a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4f6be4-cc48-46fd-a920-463eca54a9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3956815e-fe8d-4fa2-9209-7583bf10a48b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c984c4-83e7-4d09-b9e1-7ee01e5d7b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06470fff-5fa1-44a9-ba59-b46f6afcd690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f6bfc2-6377-4ba1-970a-1c75c3aa35c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5bf832-127f-413b-8622-5ec1a0ac3752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1dbf98-c395-4602-86d0-eefe25b37b6e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e23ebd-c9e2-4863-95e8-5f1e6e698ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2be0a7-3fb9-43e9-8dd4-d1da963d5e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dea0c48-cd7c-4595-88f4-21ed310af502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45da6677-e9d2-49c4-bcc3-aaf600127f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2d263b-9a0f-46c5-93d1-2dca785d2e62",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169ee601-b56c-48ac-9338-a0c1b1f4e803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d383aaa-72ef-445f-bfb8-0df088ce306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e6ddec-001d-4ce9-92f0-cb654cb54796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "423f2005-b35c-42f8-9f84-14d67040fb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d952ec80-2fc0-4eb6-93d5-0b955cb39eaf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ffd216-8008-4556-b5cd-085353eda8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0628ec62-40db-4444-b4b9-81dc47f2097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0cc94-c34d-4b27-a3e6-659c99d6a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d40dbb-af73-406d-929a-6593d36b3dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5116252-56d0-445d-9f53-bd4b53d7662c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e49bf64-d78f-4af0-9579-7246e8dff166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dacce7-0da0-4dc2-8f2b-224299c4e326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ce985b-dc15-4bf9-afdf-15ccce64bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0893e2f1-315d-4fb1-9400-4bdaacce4816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8ece7a-8fea-4929-97b4-a013177c0504",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b99148d-fddd-4cd3-a38b-a23cc40cf21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f4c39d-e8aa-4de5-b168-51b178bace75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44c5006-7b81-4b4a-b2e1-7b63593a812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a71be3-8a59-4376-9894-a94da62a24b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89968a0a-967c-4ab1-b1b4-b37fac3e2ed3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366dc446-0050-467a-8415-b56bb56546f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912ae71a-c787-4e4d-a81d-1cfc2193b7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f4fe45-958c-457e-8376-0d496ab0a72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18d28350-31e7-441f-a432-95e7b7301576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cc684c-21c5-42a0-ae2d-89d08f4669dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cd0e45-d40b-4b79-a265-172eeb082f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c5eb9-cce1-48e4-b4b9-ca8fb622f661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8de9d4-2be6-466b-95a7-5ba7c7813276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd53b32-e616-49ef-955e-9cde9b8c5f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ea147d-a980-4780-a89c-414d8c3308db",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07c7697-3ddc-407a-a3da-101f7f0b05bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43666515-ef84-47c3-bdb1-38325a89fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e444679-5fd4-46ce-a070-4fdad9253233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57931aef-0582-452e-a301-d2a38da35c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6e3cb7-bfbd-4842-b4d7-3090ac39210c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e7bdef-9723-4964-916f-baf34a7303eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94eb2c6-b7f1-4a98-bc33-322cfcd95132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ea2c16-6303-4b9c-822e-d53a5639d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70cb93f-1797-4322-85ba-2d97a80aca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8944f99-81c3-48a4-b886-65d95f1f784b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fd47d6-281f-44ed-8414-57a50e73c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c7780b-7f89-485a-84df-541c53bef3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecbbe90-ae0b-44b0-9814-fa370fd26d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d532097-ee64-4f20-b56b-8206d3e3a72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d39cdf-dc79-4e40-8a41-156694859277",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6636c238-d781-46fc-a0f0-010c2128df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add093ab-5889-4238-90bb-bf76a3451ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42f123f-a3b5-4207-a94e-5f98f7119cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cba159-d813-4764-92c9-ad48bf09c8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29751d05-9253-45d9-bdb3-b96188122e38",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee735054-a058-4a63-b6b1-3fbb761c466a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d493c29e-2654-472a-8e93-427ab3cb3366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005eb12d-7775-4f5d-838d-28c0472444a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "229a1fcf-318e-4479-9f4e-7d31ac327883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1557d69-320b-4682-823d-24cc33130d6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c0b167-724e-4a06-82c0-e2b92d248378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888dae39-72d0-4354-a796-62d38232632a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a763dfeb-40f4-4550-8d13-5eb16388b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffafde7e-c9a1-4225-b571-459e565a18c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b18b346-ff6d-4884-8902-2918680d9c38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d274b40-d241-48ef-be3b-2319e59ab118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45218549-ddee-493b-892d-0cdd832efc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d824e-35bd-4210-9b9a-05b8ac225632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade2e27d-5a1a-454e-baf0-3f4546cdc424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54788cb7-8083-466f-9c11-60b4c519548a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48af3ced-e38f-4655-a7b6-ff70b10a3218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7b0d6d-0e0b-478d-a485-51464f20c619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d575e5f3-a9ce-42b5-b0a5-ee6cfe91cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "304c275b-df7d-45ea-88a5-1e2c9ecfeb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7005f0d6-1c87-487c-ab7a-9834bf2fa002",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760eb6e0-0049-4bf8-81b6-ec307a4d71e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d266f9e-65c0-40d8-99d3-3da6925fc414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13fc01d-c861-4237-a209-3f70e8b1cdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "949050a0-79b9-4096-9a6e-934606e94ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367626de-ad83-4b42-9309-7d537a94eaf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f1e5cd-2e6d-4dca-8832-e211053e3dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd78ab1-b4d8-485c-b407-a0e9b4e74208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e17517c-3760-49ff-ad9d-1ff1fce09fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ceb927-f6b4-4df3-9efa-fc83ce5f6201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b0bc3b-3d80-4388-a441-59c1c16422df",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e23450-d776-42c9-bc9a-46067acc49fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e926793-e281-4a04-ae38-9b8c353e2546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0e6849-144b-4d23-a036-56864487f9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "78180c4f-1eed-4e63-8f73-82e87742ca9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b4c097-29f9-492a-8296-fa4ffe0efd1b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace8d142-c768-41f6-92f4-042f3d291036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11ec6b3-0664-446b-82c6-9041f6a6df22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb035348-0f09-4590-9275-b638c3341a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "135d3e86-d161-4169-ae7e-1915735b712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ecc236-e5d8-4334-b392-82febfb53be8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a756ed-d574-446a-bb43-83ebb13bfaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f509fd-02b2-4101-b02c-6119a166bc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9158fd-1de3-47cb-9287-7c5ae75beee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09db1dd6-7b5b-4d01-b6d8-91f77e2395ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0866f7af-1d3d-4432-8231-8164af6d9a28",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb51de5c-9787-4bc0-a778-251a9c87c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837d8246-b7c3-49c7-b431-4351de16b7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b60a1-9e9a-49e2-bd07-f8a3d4c4c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c171060-905a-44c1-bd96-f22803f1f07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17475116-7ce1-43ff-a2de-75fe0347bcef",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47919fe-7007-4b81-9a21-0feff48d9154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b75538-ebe8-4b74-b2ad-542dd76f7d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53753109-6f4c-4951-aeb4-270e8e204835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1985247-8605-42c1-8e06-b067ca8ef400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d8b708-26b5-40f4-b762-1c081a8da49b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6288b7-18d5-4919-919f-fbd936fa079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48e24a3-3b8e-4ad0-8dc1-3f61bbfeb619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c129fa-6f67-4381-9b2b-e6629a5a1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04909dde-7ed3-47b0-b5e0-ee02d6500a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a083cae-efe9-4519-a5dc-a29b7268ad21",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54abe381-3f27-4944-85d8-79bc37c2194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c1f311-b090-4b08-a485-b0e54b64e6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2cf35a-1497-4155-81af-67b4d1a21a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "460e34dc-381a-47bf-a363-279a0583dace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e68d1a-aa6c-47c9-a48f-8ab902d771d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db0730-713c-456d-99f8-9365e162af59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5730959-b673-4880-97d3-93caad4e83e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73c0fd6-f7b3-4930-beb4-df926c0554b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06f54a2-b613-44ba-8268-00fcf3dd89d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff49cb6-a876-4c51-96f6-bad5c781cf61",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3201d9ef-2750-4403-aa32-0243ce37f1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4dc56e-205d-49ae-be7e-c647e575be8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1534a7b-8c21-46c5-8de0-1c4af105a959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfa9aaf-e9f2-45a6-8ff5-6a5e714459dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f400d8c-3c05-4d01-afc3-6463204b687c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d387f475-4f21-4dd7-8aea-b051d180009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac26293-eb04-4c06-83d2-af92380a26b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe2fc9a-f6de-48e8-81cb-8349ca9705d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "876c0004-1e5e-4a3b-86f3-cc3360f56771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69798522-fc26-4486-b908-6278c8666ce2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd2d0ec-9ab8-4577-83f0-09c546652704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0872d5-a193-4df3-a4ca-9f05a66e922f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557c233-d480-4c47-938d-9440de6d85a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cc0f3f-7322-44c8-9a9a-43c8b11a2504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e45dfc0-6cea-4fa6-aacc-f28b594d17c6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9caad-5214-43f6-a2d9-1a1cce615b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d03f082-f0e4-4ac4-90f9-35abcadb99ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8662e830-7e4f-42fd-80d1-cb2cc33692fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "064f0318-8a72-46d0-b70e-9f3ff47f58e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64162a7-fbbf-49cb-bce1-418891062b2c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a731e24-71d4-4cf8-a2c6-66e0ec5c3466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c55385-a88e-467f-a770-dc4c79f0d011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03568b6-6a71-48a6-9f22-ba8276047016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db736eee-99bb-477d-a37f-e858ddf09f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b99ebf-92c8-41ab-b5fd-8ddca84ec29c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d41875-f902-41b8-902c-f1b9d67d9d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6a7621-28c1-4b58-8aa5-b3e578aab0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b46022-e5af-4029-a1f2-8ef1be47e374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcea2e6-1ca0-4657-aba7-cc7abdc9fb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b446cb3-ecea-4ae4-9eea-364fc1b3db46",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabbcdae-a633-4434-b21f-3362efab4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef55d67d-07ea-4041-a70b-488f3ea9f754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c32280-f385-46de-8a9e-1ea8c19c82e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "648f70fe-540f-49f9-a449-46a3f553c13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0025f60b-091a-42cd-bf66-c7fe3c96f3fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82835024-85e6-4c0c-a168-65fd2e918208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfd8133-c34f-451e-af51-88c1b1a9d92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81f0c07-0f05-47d2-b654-29c5bab4b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b983c21-1c2c-4413-8a4c-bfc64b54bd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a2b01b-c6a8-43eb-b30a-71dd05d366d6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d700423-a26b-44df-af30-289200999425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6413bda2-b5f6-4b9a-b23d-c706b5fc915b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991d6692-09cb-4cfe-9a4f-e7ff1e55a505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84e9240-7ef3-44ad-a54b-2872192b9a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6afbf0-1a87-42b3-b4a1-ccf1c8c5597c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bea7811-737d-4acd-9617-21df129184ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae5893-0657-4dac-8f85-9b62823efdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63b81e-1ffb-44d7-8331-22702bb2b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89f036d0-b59c-4dac-ab31-8676489549b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c230bc-39a2-4d2b-9997-026dde697ad6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc77594-a8b2-4be2-ac01-3f6941069d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67733a6b-a7c5-4a3b-9c3a-a50c2dc253b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f79b92-8f3d-4c16-85aa-0e87cc181001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88beeba5-2cba-45c5-952a-3ee41b509183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25401cc5-a115-43c8-bfec-f58fdd43249f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ba7ea-578d-460b-a8c6-e2fa929d37f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dc9591-590c-4fcc-951f-033d93527f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d510f9fc-d00c-4e4b-9cb6-07a2c19c7c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c735ff9-8bf5-43ab-85c8-acacd85bca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cb69f8-032a-491e-9691-a074fae58424",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04af63bd-f64f-4fa5-9609-3c7920c85749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8ff3a8-9c32-46d6-b05f-218248b6a21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d420f1d4-78dc-4e69-893d-9481f9cc42e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "342035ca-2bdb-41c1-930f-40d78bb3a3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff66219-a874-4763-b448-4371741cdf70",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea874ca3-d016-47e5-9c10-b49ab86ad5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe68f70-68a6-4774-b89f-2dddde28e4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9542ab9-b4b5-4754-9829-a2cc48b38ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f49af5-a745-4fb5-94f2-545a417dc64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d4fbf0-a3fb-4a7d-a949-ee191921da3a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a1a26-49e9-42bc-8ded-b2a83f5ff2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2ac35b-cdd9-4bf5-a336-0603a51655ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f330b941-dcd4-4dd9-a6ff-8b19cb59949f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "977d983c-8341-4132-a660-e94760e80034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266d47b4-0f89-4df5-8794-e932ec9d7711",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756849ca-285f-4957-847f-e0c7650623ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ad1283-1019-4ac6-8f1f-d3e252bae860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22784899-f3d0-4845-9369-0629d2e3ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c54af2b3-db2c-4eca-8fc3-6301a6421243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3881b9f-2295-49f3-bca6-7a98dc03e4e8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8e890b-81c3-4a81-bd43-38e480b22163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78890e60-2fa7-40a8-8538-fb1872ed2444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ad637e-480f-487d-bda9-037a5d010e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e14836-aed4-40a4-8b90-a824279e1313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826365d8-6582-4dee-850b-38c29ba25e8b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47163d-14c3-4996-8f56-cef432b61d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634d6a69-97ba-43d7-b0fa-790baa0b8153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84ee1c0-ee85-453f-874d-3d29059840d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c046f8-2d5f-4e48-b6b4-fc0b988c5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aa4181-1366-47a7-8bf5-2dc2d4e7e3ab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f676be-7296-445a-9d8a-9dab23994def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f01ae5a-2f03-4812-b197-6d4db2cea869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b6a0a-37f2-4682-b039-48b17b48f41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "795b5b4a-b237-4c0a-81cf-2a27bb2f3f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dfbcf2-d8dc-4d60-8fd5-819f213e99d7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4592f929-afeb-44da-a438-8b6833de36b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d95c5d-4e4e-4fa8-8636-0c13ffb76649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b5efc6-1e48-43e4-865a-51ea0eb6f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1da54baf-83a0-4d55-b5e1-87beab7fcf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea703700-ce3a-426b-99f4-ae4c6bd43bda",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcafa500-f7d8-4404-bc30-0df83d9a9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b90ebb6-0ecc-4adf-88a7-dae792140e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44361836-e61d-49a6-b18d-3a1e50080382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cfc1ab-7f85-4a67-b4c1-e5505cb3d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35541d9c-7e55-4a9d-81f4-5306d2352db1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30beed6-d0f8-4792-bdc1-83727c585953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceff874-099e-4988-852f-7a4a6b4cae9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71638b85-f387-4306-8fdf-3a4e6e70f8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "439235c6-ca6b-4e77-8711-0e3e0037e3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691190d9-6d38-45c2-bc94-f3be0b2df1a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ca034-631b-4eb7-aecc-b23350bee6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75905e9d-2d74-48c7-9385-d38ec4643cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d32ae5f-0d3c-45c3-ad4e-38608282c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1575ec7-8c24-437d-8d28-c0024f6b9e76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "336cb3a2-a020-416d-b75b-23f60d0556f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "907056bd-0e3d-49b7-8111-8ef85d55cb19",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c87ee7-1d58-4102-a30e-fd94083e066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b316104-6795-49f6-801a-4038bdbf562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe71912-5fa2-4275-a91b-211b776bc867",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52c976c6-d174-4805-bd8d-4015746173f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9769b5d4-f9a0-44ec-878c-435e61eb22ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ffbb826-7a90-493f-829f-22a65ba0a55f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4615ccee-0764-4b03-b584-091c6f72d473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15f6e225-5698-4db9-90b3-4c8528dba404"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aced3e2c-4d0d-4368-b377-a0e06013c04e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "238959fa-78b2-4a50-adc3-3e75e3fd25b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca073c7c-57f4-4c27-b408-c662a3991302",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d64008f7-edf9-4d48-80f2-df75c1ae01da"
                }
              }
            ]
          },
          {
            "id": "8e181f7c-640f-41ec-a0f8-24c9ba519b62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37176d45-46ad-495d-958f-156b511ff733",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c228bf9-57c2-459d-83d6-72473b0c107c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cdec7b3-c16e-4321-bbef-d2008c738e91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a468772-fa4c-4331-9d4f-13eb4b3cd9f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffb02024-c215-486d-b0dc-7edb29930655"
                    }
                  }
                ]
              },
              {
                "id": "660a419d-b53e-40c0-8990-a1f2750af18f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ac375e7-41f9-4453-b056-a45aed966695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdefb32d-d2b4-479f-8462-5b19a835dab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b366e53-16ac-417a-8c51-72492246c21a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a627c619-dc37-4cd2-a06e-0ffa6ebd529b"
                    }
                  }
                ]
              },
              {
                "id": "23876e61-d8a9-4a8d-b9d8-39293bd04789",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bccd506-9f17-4185-9325-ce28db531ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb158998-1eed-41f2-a003-05265fcbe94b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a18466f0-7b30-4980-8e4c-a50a4bc8877a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1396974-1c92-4945-a63a-d9d4290c6a41"
                    }
                  }
                ]
              },
              {
                "id": "c43f0cd7-9613-495a-9595-141975b8c1bb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8bbfdce-0d09-43d9-b8a6-ec427c1662ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "becf36ae-e170-4b8a-af55-647189082560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd97a662-10d9-4a9b-8cc5-3422b56441d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5e071e1c-9e6b-4eef-a6ac-b2cfb143d972"
                    }
                  }
                ]
              },
              {
                "id": "1c90d19b-bb76-4fdb-8ecf-4a9335bd45bc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0606999e-3adc-4b63-bde9-4c8e9e4578bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f678858d-a165-4306-9a09-bb61a3194a22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68fa178b-77bb-4bce-bd42-583a687265ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2946be3f-f11b-4c7b-b4eb-f36106004d26"
                    }
                  }
                ]
              },
              {
                "id": "28bb3093-827c-43a5-96b0-509a1b77a709",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dddd746-0588-4d09-b4b4-4c4c4ec5300c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19678d58-ee77-4a46-ad8d-2b34c0248917"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88dfde67-ff27-4eef-803a-647d30110344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10285614-5ce0-4ba3-b011-a46b586277d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c0ee30f-a79a-48a2-915a-18544aedd189",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "210b63ef-12e6-41ef-ae96-0bdc05840147"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5bbd5a1-6e2f-4454-866e-76f2965dd324",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75b47135-e1de-4cf1-8300-4f4363b6835a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d7b84f7-5805-4600-a9b5-7f7565e9b0f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9782013-4266-4d8d-b3de-3dbc971a2c4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adc86dd3-55ac-46f9-a926-883400a9f627",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5096fdeb-e2d2-4b13-be9f-bddd84adde48"
            }
          }
        ]
      },
      {
        "id": "6435318e-9278-4e1b-8c08-9b67da63acd5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b43d8c02-4d9c-4308-8d96-d4d1604b9bbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "353fc573-4aaf-4f1b-979d-830d8a4097f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "977c03bf-9447-4f96-94b2-45ab20313762",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254adbe5-c5a1-43b8-9da4-39847b5cb566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a937c15-25f0-4728-befe-7dc20c7b9232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619286b9-3172-45c8-9787-5f4f45813181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dceec6-0624-4efa-9e8e-5a946b6ea451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c4ec62-395d-44a4-83c6-39a633b1c475",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76e0145-4269-4e7a-8a1b-b57169b748a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a292e89-3177-4f61-86e4-08899b9b9e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d635555-1048-4ffc-b3d1-1db19914ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61989854-d3ff-4466-b5c0-a47955899fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15007909-0b95-48b8-9bec-124af3087da4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14587aa5-fc81-4878-8f05-1e4536f8591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c1ad33-24c5-4c8e-a768-80ce4a2375fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f168bf0-6363-4765-bd42-af66abdb78e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86294753-c90a-484f-98bd-15c7f4377274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955122e4-cd82-49e7-9beb-d1b7eff85847",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08a6816-7f22-442d-aaa5-2773f5e6102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba3a04c-536d-4ba5-8d67-38acc0b2beca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1013b723-a733-44aa-90c6-456e93e27dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc85baf2-a75d-4c85-9db7-b7d1708b6a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75818f01-edd5-474b-895d-b03ff5aaa941",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de3ddd4-ad45-422e-aa29-464b5a4b6ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e85c8b-5bfe-4dae-be20-bd6f1b6ecb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d398e-76cb-4460-b8e2-10dc51d07f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32bb11a-c70c-4e30-b84c-611928d3f6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff403c02-0925-4ac0-8e23-b1f2ed8d5ff7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95074bdf-ad1d-4acc-a4fa-a8330d5383df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6760fe16-d29e-4e18-8c67-8646dd6aca3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855d037a-0ff3-4a3d-bb66-74a0e5529cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e18465a6-303a-4fbf-b7ee-a161513399c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98404b92-ef16-449e-a5fa-de3224214ac1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f4ace-152d-428d-bc72-bb573cd9142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461fbd7b-3190-42de-9705-cb88769f5121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac4f57d-914f-4d90-98a3-5055301168ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed98ec8c-131e-449a-bffe-cdebd9eda0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe514f8-8f47-4152-9aba-c714e25ca4c3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ec1263-c0a2-4d8d-99ab-d3281d22bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60ff421-48d5-4e31-92ee-deb827ccd23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7143412-ec1a-4254-9b63-1a22c14df4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32811de5-4648-4734-a593-f76878c031f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1374cd-bb90-4e97-9459-52e4f267af80",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfbce1a-6dce-4af6-a17f-f5537944428b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5034d758-6e1d-44bf-a282-5bf97e0543fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b15d34-33f6-43c2-babb-e3fc08f8f72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1553ad94-1789-4a4f-b509-2c69c33a1ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c56b5b-82fb-4459-9eb4-a8112813fff2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fba28d-cbdd-4161-9789-c9dc9fae64b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6b646c-4262-4283-8570-f15b4dd850fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7222d722-a560-44cb-bd8c-c65dfc158cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "860c9564-21ee-43aa-af52-7e5ae4eb7c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9300acc1-2e2f-4ddc-b48c-65e748b674cf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37ce067-b009-45b1-96aa-e9ec040a9b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccc829c-a0e3-4ed5-81e4-2fb46ac6be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0049bb50-c98b-48a4-bfd1-cc3ef0f9c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37c66f34-311e-4ddb-a5db-095005155daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae5b0c6-31c2-49f1-8c40-41fb676ed7e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db677157-637c-459d-803b-bc6d197c28ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075c3775-dd43-4796-89b6-77efa354a53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43252115-605e-40d0-a859-3e6f3e7fd39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4e8d88-d262-453e-a4ee-79bb43c3b38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9397eaa7-45e8-418e-994d-7da7d1b2424a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9bcbfe-c33a-4366-88ef-fbd6edb2ec14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c82469b-9fe2-41e6-b7d8-5b863454d35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c270edd4-34b5-41de-aada-c20d4cdf985f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd641f8-a98c-4c51-ae7f-1397ddd5da9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5c731b-ea44-4008-91b2-0deddc183241",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc892f-0c78-41c4-8489-0298b6058600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e2f1aa-b1ec-450a-a3e1-76ff9583461d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b78eb3b-e622-4636-8907-b9c832e9f602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "797620a2-b1cf-45e2-a4b6-b9b7600941f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4658b46d-f939-4d8f-bdcf-e3aa67032e18",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3b8f46-42f4-424b-a1f9-2e8c06d58829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5551ca7c-c4f1-401b-a9a7-b9d44d5a2493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f74d6c2-1a5d-429a-91cf-b0277a228504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7532c58-f555-4f95-895c-aafd2deb90eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac31e228-c73f-41d1-9351-4c86072c3d82",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643342d1-3155-4cf1-a005-619d86039595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb05b727-c2af-4f78-8874-30480c446a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411fbd35-4ac9-4fb2-a8bc-22fe913b17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fadd98a8-df9b-4f37-8101-a71a776fc3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4c31e4-23c4-4dff-ab00-7ad0c60f3d36",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6cf922-eeea-4b0b-a64a-b0b1ecc237a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2866a486-5602-4f19-aba1-56fa578ddda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8ad5f1-454d-42c3-a4a3-ec57721483bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3156adff-87a7-4972-abe9-db0f6b474b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd0924-adfd-4b2c-b611-e878834c1153",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e659a12-8377-48f7-9c20-857c3e69dcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3361d21-18d2-42b4-ab42-ab5c6d59c00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7958c5d8-e8eb-496f-9b8a-4e408b5d9d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f151f774-046e-4530-a77b-fdeed93ce346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eda35d-c641-4249-a206-ab1091f7b962",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42a30c9-d0db-43f5-a908-1a3765994300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b75837-a289-491d-848f-a4793588c8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ba788b-8f36-4a74-aa94-0409f27d1529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b7ce75-8512-4dc0-b01c-589f15576cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2208de5c-c19b-4150-b009-cf5a56c268e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c07cdb-dc92-4ca6-938d-5160ed83ab14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82134c6c-abd9-43d2-97ac-39abbf439989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b48b85-5f5c-4c44-a42a-7990c8f2b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3825bd80-3544-459c-8559-02796cc72772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f6e504-4133-4df8-916e-d14a90177b69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d87521f-3d4a-4079-a56b-537e36fe1bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56173418-ea86-4a92-ab48-028a59abf814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9cdb42-3caa-496e-ab09-85d60c418ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a233458d-2d58-40ff-b8f6-a378efb4ff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b82ea4b-ed23-4a44-a6d5-a4c04a4e4561",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b4aba9-e53b-4bdf-b77a-ee74800feadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c48b8a9-4276-4a27-b704-cac247145bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6ce32f-a0a7-4ade-bd16-355d2a7445c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f470c8-1831-4d12-a4e4-08655e19ef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a71785d-5df3-4b2d-97a8-1616c1b64624",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eff236d-d11c-4867-9a25-7ccd76737d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbee33c-0188-4e79-abeb-f3dac854ff8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1949bfb-9470-4926-a88c-39970fd02cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ac1c2f-f3e1-4e44-a579-fc2b035a9029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731327b9-a46c-498a-a3d9-b6da5d3bdc72",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0602d465-aa2e-46a7-88bf-d40a21757148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e69f8d-ffde-4fcf-a326-3ee6f5066f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b69dfb0-0245-4683-adb4-61ff11bc0ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34bd9116-edaa-41a0-9a03-373ebc4854f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8dc48-223d-4cad-997f-2075aec6d238",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84d76a1-c163-4d29-bcad-a51b1eec514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c7e07c-7bbd-4c05-9749-a8c210f6118d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a76d281-3e63-4d32-87c5-8af5dcc0880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80557b79-6978-40b5-8c17-11f7c2dd0ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18fecdd-e511-4b1c-aa2f-273ce6e14c69",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9aeb6b-b932-48cc-b587-aa8ddf3bb45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7df400b-e96b-489c-b4f6-ab25167beea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62773e7-946f-4627-bc45-0d780b522079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e837f54a-17f9-49cb-b1b6-2e7c0462912b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41b6971-20c8-45b7-911e-ca782964f20d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a39bc5-d187-49be-82c9-6e8562824361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2709381e-0dd5-4995-848b-ea6b849658f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39296552-c085-492e-9770-91f56b3ac5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3e761c-deb1-4f24-a602-cab42bd57cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fd3fce-d36c-4bce-8726-06e8a55b4c2b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfebb2-8140-48b8-aabc-1598ba926981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5738292-aff6-47cf-a562-77c84220fb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf540a3-80a6-4afd-997f-62412bc31c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77df199-53e1-4d74-9ac2-f8b2dbda71b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ef22d-fe57-4c69-aa2a-959f647a6369",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0a1e6a-b85a-4e21-99f7-a9f580a49d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08472e3-fe04-4d29-8a1b-c287e5db794a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f8175f-18a4-45ab-b015-a505b12ed66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a00926e-dabf-4bd8-ba88-978b571afab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb8e8c4-2948-44a0-a4ca-d0fd1bc2d322",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e11d5e-1ef5-4c18-8b23-9584680bcdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df2579e-162d-470e-abc3-d4ef2802d54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20603d4-b95d-49a5-a80e-56147672be7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f816ea43-abd1-4218-b65e-af0a708e7673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bc686b-62b0-450b-bae8-461bdb509593",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea144fd8-a3db-47b9-b6fe-5b1bca8801cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf915a94-8904-4f73-9c57-4b0e7ac74e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c44100-d585-4f20-94b3-88f8722559a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a21f20-c968-462b-a41a-1b58f70fdede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc5ed8e-e1c8-4573-b5e9-67751b33cb8f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547572cb-1eeb-4e20-87a5-90b653f9bd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca004d07-89db-4ae5-b5fe-c449897be1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbc172-1b55-4d4c-ba17-fd63808fd043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "338de9c9-43d4-460a-b9a9-5af681e014f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8f2058d-de66-4347-b1ba-aef9f86e15b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7837cba5-3838-406f-bbf6-478ba240b320",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab0c140-f86a-4520-af4b-2799d14b76a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11e9c9f8-c831-453d-b7ef-740251700b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037450ea-ead9-4d20-982e-4b15f0aee488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4a3b2c8-c45e-4b65-ae63-bb6b14c95270"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3a403c9-c461-41e0-a52c-b0815207027c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68a5b8e9-1c78-45d2-964e-24372450db51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e0c722-b8af-489e-a6ea-295842acffdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a16cb0a-57db-43b0-b045-80622670b3b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6e652b7-6f38-41f1-a158-f162c0062e30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c46bb57-7173-4647-9167-e8f15c7825d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbd76f39-9d57-45f8-8833-646d04783d2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac386a33-5eb7-4dfd-909e-bcdeae170679"
            }
          }
        ]
      },
      {
        "id": "d4ee0172-a0bb-427e-a436-acd1b0b0c0a1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "078df34b-70bb-4c1a-932c-9c547fea6b3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcd37284-57cc-4c2e-868c-58da0b2fdf16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c32888d-53b8-44f9-9832-0748ccced18d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133ad696-0580-4eb0-91a7-2b8b458492e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16af877-144a-4690-bfe3-22456005fe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3932b069-3d6a-4e2f-9ba4-931cbd1bf326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "700443d1-485c-4f53-bcec-c8104c6ccca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa2301-b7c1-4a2c-9810-e3f4bad8376f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d39de3c-3ada-4e97-b455-245a5368112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e4c145-1b09-483c-842a-6ac6cb1fa177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc51cfa-1324-4996-874c-ecbea89b0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b7e582-1418-4cb0-8b9a-dcf02c1d6c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e79f07-1d94-4c84-8c63-8bf6c1f5df38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604fd2f3-2d89-406a-9849-003e1d7dc65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b0eacb-65d1-48ce-9f8e-14ac557e847c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838d9a8a-a97e-46c6-9e2b-d2d29d7975a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc483c1-e272-4dfe-ac12-2492cc9fc8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c93be-cf05-43ed-8c51-9f7bf47e8ad5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8667186a-a234-4305-8fad-de672ace2e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69689608-738c-43fc-8ddf-fa37d84bbc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e016582-5b36-4541-971c-f63f10caaa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52826a30-7d14-4fab-9fef-c66ab2c0e197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ce12df-5090-4274-bb00-759dc787aebc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097e8f16-7b6b-40e7-8687-61e4458b5c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec3f1c8-43a2-4037-be6a-3e6d163b91e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da273dc-c0b0-4afb-9b39-8c50200f1895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa328cc-8ba6-470f-8318-331dc50969f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63568a6d-1eca-4af1-ac75-30f538f1bea3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de441198-ba00-4348-a645-846ba9def7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabee4c9-1558-480b-aef2-31871bf4091a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a8743d-d7c3-4b08-b844-f234888fb406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f61b4b-9d48-42f3-bb61-18c7a0171424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeb79de-a996-4f24-a267-bc01a64b93bc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e803f-9c7f-4a96-a04b-81c750dcf548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8191bc-b23b-4df1-a967-b61b55175ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e19d30-3d3d-4cb7-a0ac-170eb7445f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3ef567-0827-4629-bd88-57e03a47a47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77673904-a980-4efc-8365-87e3115fc8db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d13a4-8c46-4164-ae43-27b2e19e46be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444ead61-a90a-4e66-b3bb-067722307354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a81d309-edab-445e-80d7-705b746a4a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60ae981-77b1-4b56-b16e-066b53e737e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cb057b-5cdb-4b26-8d77-8a7a1931136a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7277e8de-181b-41fb-a797-9bbc81a9c40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf9cce6-4369-4092-9e96-023753a58d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f59501-3c16-4496-99b6-c0078bf7884e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7c2ab2-152a-4748-9a56-0a4222b35cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f0d12a-90b7-4bde-b170-8626aa020165",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b48e586-f3c2-4c14-98e5-5a4358a9a285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42549d7-13c6-4100-8003-04cdd6cc178a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e2287-cf37-4f59-b97a-e729f733f229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e8bb3d-5cab-4864-9f11-5d7adf2544fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f7b78-3f79-42bd-ba97-6f91d7bdd571",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d9d25e-120b-4145-a613-f2365949de6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a85c97d-4b3e-40c4-a039-befd3c1a104d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789eea6c-5050-44ec-b195-0313f9249602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f6433534-4c08-4b27-b0dd-de205c1fd456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d93bf-9e33-4e7d-8f2b-4e32b6949adf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4592b99-34fa-4db0-ad47-e41d842fe9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac8da5f-fa5f-41e1-8334-454e907e9b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d4fe0-71ad-4830-bc0d-933ed4b65321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0af0e98f-a7f9-494a-8159-1c1a06f8f6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bd2c61-45af-4f53-ab69-5f85275978dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f516263-35bd-4a3e-8ad0-759b690f64c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8baee3-bf17-43be-b2e5-7ea8856180f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1eedae-8d8b-4219-9ddf-0530af51f988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5bd368-05eb-4d9d-a4eb-0f8648a6f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1185b3cc-b9aa-476e-89b1-093e9789dbe2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec55b0e7-e867-479f-9c9a-46ee8a8b7aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0344aa03-4b20-4a27-9a3c-8e2a9affb7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf35f8c2-6d89-4cde-90be-6f2685b93614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da17065e-51c2-4c7e-93e3-84016806fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3346935b-23f8-4d43-9484-7ebb8cd090e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e044d9a-8cfa-4a27-b58a-981cb5cfef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760b987c-091d-42b2-b9e8-9c274b612af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e831d3f9-292f-4c0d-9ddc-26e5da1e5bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2ef9a2-66c4-4e34-a903-87a6fcc7a2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e110c0-c7a2-4c36-b6e3-c993bb417134",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8c684-ebb9-4739-b54d-aa71288145ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4dbcd7-09cb-470c-b60f-65628879d609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f997afa-c91f-4497-9227-3e1b6ffb5b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "36588795-17a2-4baa-95f7-d2315ff4ccae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f031b-28f0-48cf-b88e-36d43c1a984c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe3c21a-2f8e-4ce0-a570-8e3bfdce634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1705d416-dc67-4832-a8d4-39a5483ee1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb331542-2d45-4d9c-acaa-bdf62db395a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "287b0521-9194-43bb-b5de-33d7bf8531ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54186321-47b8-42ad-94fa-bf33073bf8dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2be8c9-e0fd-4972-8f01-ffb8a5980cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e303246d-d925-41bd-8863-be5576f53005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91173c3e-2f94-45fb-84fc-4556a6b9b68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce7e641-0a5a-48ba-a715-7ebbe6121645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f54c09a-617d-48f0-87cd-cd797c1dd130",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967967c-818b-494e-839f-0aaeb5cdb251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040279d-45a5-4f7c-a9fc-583dc6115fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376cf2e5-27fa-40eb-85b3-5874afb01a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8842ea96-444e-4a8e-80c8-b7f3d9b61be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ed5e55-45b4-4505-8ea1-53b4523e0ccd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bccd62-a9c2-445f-a24c-89fa62c4215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc188a12-784a-4ed4-8f1e-3814664d5044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb02cb-e8ab-4703-9878-29e3c0195427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "287f5b03-078d-4c9a-82bf-108109da5f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44429cba-e0a3-435a-9e5d-1d5787e3e180",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21df5ec5-f559-45d1-a083-3edee5c4edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2c950c-c3da-46bc-90fa-5ae826cbe823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2635ef44-a806-4ca1-a659-9399d7a392e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fde44f-f48b-41f0-9b76-0c50accdf012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c4c284-73b6-4065-898a-a6f420d37968",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13adaca-f733-43ae-a4ff-f140e146984a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7951b648-693c-4df8-8ca9-473297c1dec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef09a9b-ed67-4e5c-9455-570ec629c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da297b33-87c2-4282-8aea-5fd735f109df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0c8188-f3fa-4e0a-8ffb-97db3ad1cefb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9cea24-75e9-4fe4-8919-643b81d8db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fc3081-cb70-457d-a020-db95169f2272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ce51f2-e2c6-4179-a450-d60403b6c24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61d9716-f9e1-48b0-ad4b-20564932a10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9b7a2f-037c-49e8-b940-e7eaa752d288",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750b0617-4df1-465f-95ab-9072140abdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2e1e56-08e7-4644-bae1-5a8d347feb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d5b264-ca4b-4c59-97fa-4b5d5104da03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb648f7-6e8f-4a5c-b9e5-b5211835715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1846905b-747a-48ce-8713-884d52d4793c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce12c6d-abb6-429b-b384-bd62ca7409cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f125ed-363b-4c56-896a-d4ede7765d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7850ce1-c981-4e4f-b5f2-576ade815bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d272279-2803-4f86-b9ff-073d248a4c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a53a7ed-9091-46f7-82cb-010af1266746",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e22eea-daec-4c91-bab5-7bdc484d80c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b20f80-701c-48b7-b9cd-ed6d0bed77c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a10471f-c0c3-4467-8622-950d42606738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb49d593-fd5f-4abb-bffd-651be6d0f9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8779cfcb-ec0f-4600-bd32-745d94b98462",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc67d4e-2abc-4031-8f64-12b4f20df371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8c72a2-e5bc-4e94-b3cd-7e961adfd07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b6c65-ee62-4e27-969d-0b8c9608200e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a703b8d4-6b0d-4d9a-bbec-890ff432c463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e33a53-59b8-4b77-abc5-337b19d97eb5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72851519-b9f5-4ce1-b44d-cd2b8ad3fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bc5ee7-946e-49d5-9e9e-4cf582fb5c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9079fcd9-4c5b-4bfe-8879-97aef0f4b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be364230-039f-488a-8ffa-50aa0271e56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef49110-e7c4-467d-8fb3-e4c9ec74b7fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257d8035-f5cd-4296-a7b1-a04dd0928693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf25f9-5a9c-49d9-9206-4fe3b9cb4a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0547a77-6b58-47d2-971b-94d4cb07c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc5c962-40b3-40d7-85d1-b8c53526202d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bfe12f-154f-47ba-8702-6132823cc979",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a120e-c635-42d4-8437-be357bdab0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f713b2af-01cf-43eb-a166-4f026e41bc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92be8f7-7550-4d8a-8222-12d2334110e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d5207d-ef6a-44e6-8df8-4ddc30a9fa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcc0654-821e-49c3-a117-006b102c7b8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66670752-d455-4114-b003-5e0bbbffa7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39d6646-d178-433d-8e82-21ff8485add5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908d760a-a216-472d-a2ed-d2551a8d149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b16ff1-9ad2-4cd0-875d-e5e382827c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4b7cc1-c906-40f6-881c-583b702db390",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa70876-36a7-47af-812b-096131c99007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e66f4fb-9bb8-4251-9217-25b3029d9522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31695626-4b93-4092-b3dd-e9c5fc426d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bced2a91-6916-493d-a573-d3e077998211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa87849-ac86-4d44-a790-3a62c65a46e2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c07db0f-7c16-48b8-ac2a-0d1cd589307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b6ac91-3b80-4369-b4b7-050eac962419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60daaae8-8f09-4f14-bafa-f599684e90ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32241d0c-43a5-4b51-a676-cbdbe7f52b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad3c987-441e-42e8-b8d5-290359ae9e4f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdf3cfc-8b5c-42d1-b2c4-f19cc480c45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4ee35c-a1eb-401c-8d48-f6f4643f1a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3099b8e8-119c-444f-834a-cdfaa581a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dcd441-d123-44e0-beff-3d8bcf72d239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd2be92-1ccf-448f-beb1-edb2cc8868cd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7630107d-e859-4839-9ac7-f16620d63e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f773123-23b9-47a2-94b6-52cd8a4a1e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364ef6d5-1e4e-40cc-86a0-e2482a92699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4b7c2b-7fd4-4a12-b661-78809840799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbe3a1d-bdbc-46ef-8e83-5e29c46cef8c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d70a0-d60c-42d9-a119-bb217e68b826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2ecc2e-02c0-45c2-8179-4e64e18cf3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b051224-dac4-4444-9d15-a6968ef2d7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8623dd-c244-4c7d-842f-0e00db9d61d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b74e02-206d-48da-93d0-cebd264b6c3a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089fd2a7-7af9-471b-86ea-8bbf79d3399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adfe81f-7bab-4c9d-8bc3-232d6ca4f32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562eb348-496e-424f-8c07-c0661f80bd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f361abd-6fd0-4d3f-a87d-c0ac486ca7a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0d6f76b-1ea3-43a9-8f72-1688ac78e8a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "779d72f6-9238-41f5-8526-02088837b782",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61083cf4-bcc5-4427-bdce-e581c3517a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3b640fb4-05bd-4f27-85c1-26eafc0b1d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64248bef-871c-4a46-8668-1bc6addd2c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f67bba35-f097-402b-b0b0-c23bbde4c065"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b034d38-4c94-48b1-81e6-c189635c42c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c539052-c804-4b04-982a-5dcc787fda94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ecbe0ca-1a0c-41a9-91e7-a02e7c173bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02f5423d-bdb6-426b-87d8-1b705ad877b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6afe7e2-fc06-478f-8e65-6d81979ed565",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa25673a-789a-4daf-ae85-a6ebf7d8bdb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d02e23c-9101-4f34-9a34-a026e896d8f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0a352a0-c3a4-4385-88b8-86ef040cb900"
            }
          }
        ]
      },
      {
        "id": "a020bb9d-d2fd-4eff-a86e-c1d5399027ed",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7423ecad-5430-49c0-a2ce-5e03cc0b8a26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5ae58ac-9faf-4304-9276-26d891df6acf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fc1fecc-9155-4c17-833c-c9d4f7119104",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbb0cfd-4a71-443b-a583-fd7cdfe2131f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077f9bf4-c894-482b-aaea-36711eb6c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b944a0d-0fdb-4d94-ad22-a8fd2e789bf4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb09bd3-13e0-4049-8e4e-6f6be2bfd738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f33bc1-16d7-4abb-b8d6-3af6d84b76ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b4e05c-0ddb-46de-a4ad-edbf58de4490",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615119e2-2e8d-4141-be98-b02db54e7c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b4d9d4-9d6d-4392-844b-96cc0499315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aec6cb3-0e05-470a-90fd-a4ad46574aba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce70a4cc-1fea-4c47-b0d5-060e66e7a1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99919216-bba8-475e-8318-fbbfc2db05ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec94a4-6b71-416f-a2c3-d043991497cb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171aa1da-1352-43c0-a0ec-c18f1f5f5f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedaae02-7392-40b0-b1d1-57d24e1cb825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab57406f-c047-4a5d-9432-01f71a86bfbc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2289ff40-9b3f-43ef-8314-92ce66cfe019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b506a8-770a-4aca-ae47-d98fa8828e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e9d9c4-9d8d-4619-ac10-58208b4cc274",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100ebf35-ab12-4e8c-aade-890e45c2046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caedb51c-2e43-4bdf-bb28-1d544062cb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8c56d9-68f1-4b41-866c-6426ef4273dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306c80fa-6f7c-467b-b37c-95970d5bade9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa12ca-29e2-4060-bb8b-2e5be4519e87",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180bb4c3-e1f5-4318-8f2f-174204f19de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f352287-df71-4cd0-9faf-48809ace7378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1189fe63-36c0-4c28-85fa-32ab81fd2253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c23014-b5e3-4e7e-b53e-a81b6cc00935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6bf52b-10c9-4ab4-8492-ab1b249ebdfa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4ae1d-1199-45e4-bbc5-f42c645d2510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463360a2-21b5-4c01-be9c-2af969ea0f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6768d4-8ea8-4d7c-a60e-f4d301c40e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bf5aea-5630-40ec-970d-d6453835aedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57dd8a5-030f-4438-9673-ad153be8aafa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b8349-6b96-4542-a5fd-890cac1e35a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82a59b0-b1de-41d3-8243-acaf8655aca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c01fc-00ba-4b4f-bdf3-4730331816a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fd14ba-cebf-4f31-9647-dad9eba123cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c1667-d335-4c10-9e0a-85895760a038",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0d7016-b320-40aa-8191-1460489bb379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38dd55d6-66b3-4aea-8c4e-91ffcf349273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8b6cd2-2ddf-4698-97cd-3dd9e3c7a12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeaa0e8-e4c6-45ae-a85d-42755147ea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f637ec3-c5a2-4acd-8f97-a8c1efaecc4b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e2d152-7ab0-4957-8b8c-9b3544f6f346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7176afc2-7cfb-418b-b8c9-c21cb63eb844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a457d891-580b-4871-b94b-c665d583eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39785cd2-8328-4f92-9382-064c3e300fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf34513-490b-4192-9861-607f11542e8c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4ddf3c-213f-4893-babe-5b347ec6985b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b45b2d-c01a-4c21-911c-0f837f5e5446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a8053-cdfb-48cd-8ada-cc8cddad21aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1db6c0-8ac8-4289-8195-d81feca1ec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9555e17e-97db-4b90-bdd6-376893d576a0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5f6f43-7c71-49b3-8a94-4fdf2a786753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b61b519-0d27-42ec-92d1-889766905596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b042e818-868c-43be-8176-bab14abd7c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a1aaa7-8d58-4b90-b6f0-93511f77702f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e388534-b863-4ed0-8a0e-44c4984b7a91",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a73369-b92d-4243-80a8-e10e31ca9fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e1b6e0-7a69-47c7-96cc-45114bcb5373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8bfd48-6764-4396-8559-fa15d2e120cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c8db0-f381-43b7-9e24-e3a5dfbf824d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90ac750-b045-4c31-87f0-413c7f6ac99f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e89957-58e0-4012-b7cd-e4bf86658642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8700f0e7-d368-42f7-9a0a-8bfafdef9449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5a54e5-93b8-43e6-88d3-f6028028a47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8647ac92-c9a4-4c49-b116-418d1d99acc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b414791a-4d24-40c5-a0ee-993fa4713419",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0e19e5-3bc3-42d2-b85e-49c497872313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8e737d-ea06-491d-ae6d-082732f4cd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b3c36f-240e-4ee3-880f-4f7c75d7042c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01e85bc-678e-49f4-84ad-bb30887bd896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1480816-55f7-4c20-901d-897194a71ff5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094c9ca3-6f95-47e7-9031-9e6bf97961e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4913afae-3321-47e0-b733-8b7c0dcd5766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05273d-8c3b-4603-b5a3-1419ec17eb2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ac1869-9cec-4494-bc49-6472d8f06590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eddf18-7458-4b15-b5d0-81b5e96e94ad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91647a-003f-47fd-8763-e3e1211b2af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b214e2d6-a1ab-4966-ad4f-447ae66317f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8190a08-fc89-4597-bd05-f6b4a0d24f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983c7c72-dfcc-4c25-8151-15d2bbc7580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40770d1d-d7e4-4ca9-934c-35f58d1a7c75",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dffccd-30c9-4017-823c-72f40e791219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b8b81a-2283-4e4d-9528-b62c86a06a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b44d54b-36a6-429c-ad8b-4a2ff92aaabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ae3516-8840-4b32-8a43-fc18e42290bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0959332-ab43-42d4-ae06-bf7420732801",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074534ea-da7a-4a0c-930f-5374edbe5177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8388e518-f16a-403a-adcc-50b7f4824529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e591203-08cc-42ae-a5c7-d83329a3a862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee2f0f6-71c5-4416-8b60-ac89efbf6130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3136e86a-450c-4471-b138-4cdb187d1f25",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeaf53d-9696-43bb-a35c-bdad21925427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a9186d-cd82-4a6b-9f65-840c952ea3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e18918-d478-497e-8591-2f95eb7ffd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56d007e-4198-42e6-aa28-110f2ce5ebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c03007-4d22-4059-b091-cdea552693be",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b318d3e8-7eb7-499d-be74-7b11671e4706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f025558-0585-4007-8690-704406eaa1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c669ba5a-0fd4-4117-ad11-98b17e7cc9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ca7877-3df3-4dd0-b286-bea14af93d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2617b73-bdc5-4c0e-981e-83b74f87c468",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb049d-a78f-4f82-b1ab-7138aca3f828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd656613-a4ea-4dd2-b3e5-584d940c5e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e771c68-43a7-4c8b-90cb-b51084876ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47fb551-158b-4e25-ab38-d9d97cb7eaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801fa2da-33d8-49dc-908a-4cdbf4f6d5e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6590af4b-49ea-4914-b98d-0ff4ccaf20c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6581e6d4-cb93-4fbd-9d34-797f69dc61fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1538ba19-c7f4-45d8-9f64-8956920b43a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53b7279-c509-401b-a086-1ef02ff80803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925440c2-5383-49ab-9640-f6fbf2fbf2ed",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb308d-d2d6-4a67-9413-d1b01717d089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54966425-b988-452d-abf8-865108e9cf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0776158b-39fc-417c-b902-503b47fa899d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cd2d8c-f31f-4b8a-8abd-e5247a6b4e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4008f-9ccb-48a0-99cc-10ae1e33b15a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d74d614-c899-4f3a-b259-dfb81462b640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f37216a-8aa6-4258-8410-a0520103a61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67047f91-9a9e-4e19-8324-b0c90c38eda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52bd224-824c-4506-a081-a8ce4565b6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a3904-1e2d-4627-bea4-18f00cad5af9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49264165-4e47-4d59-b365-cea2e8351e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea29acdd-7ab6-43da-b982-5c193f42fc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d3686c-04ba-43a7-8917-7aaafec14345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60549595-5add-4ac0-844b-122038c6844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9276bf4-2c4d-46a2-982b-a38c9f1e7b5b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dc5404-0870-4a4e-858e-8c00783117a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e1c980-fa7d-4993-bc70-9e26660ffe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e66f0a4-2fa8-47ac-a3d4-ae3bcc448913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b13273-e8a0-4463-ad3c-5806841ed766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797cb9ec-ebf6-431e-a7ea-b7a6852136da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf0af2-5a67-401c-95fe-787073f743a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4adceace-a7c5-483e-ba7f-ad38bdb43fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f4d30-b4f6-4aa2-9a72-98fff6caa67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29282c25-c342-4a9d-a9fd-d83efa6ec41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32bda9d-5ec2-4344-8524-fd09f6d43dbe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16877853-8b9b-4830-887a-f643dd5bc314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b0ef13-3537-45a5-8791-2bb41accf208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9653d44a-9fed-412b-8458-49d74e5adfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca45996c-f4ae-41c0-930a-307880356bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89099ec7-c463-406b-a6a3-ca402ac27254",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a088fc77-fa18-4675-8329-7d62b32a4581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a0f133-42cc-4510-bfb6-fd8f43c14978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89dc75e-bfec-4909-b520-db656c6964ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34c3933-c4a8-4825-a0ba-d39cec9a0d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9a0874-5236-4f86-a131-96ddc69b31a8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48418794-7884-4c16-9f47-7e4412aad84c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c2b141-2f9c-4704-affb-e8ca0bddab4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca439b5-37e7-4a8d-a01e-255a89c08553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8740dea2-61c1-4fa8-a956-2d55cc5afcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d8594a-f535-4cc5-b319-7cc096516084",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feab56fb-9675-4f0d-bcf1-5a0811faede7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96e230f-c8bc-46f4-998e-8568946692cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587c5eca-7af5-4dda-89cd-e81aeb3b0a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebc3786-15e1-4eba-a687-9aa26b182f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e989f998-cfd1-44c5-bb18-e55ffb771aa6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a209041f-3b0c-4f25-9312-c4e269dd1d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba01296-c1f7-4ac8-8b42-7c775b7422e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02edd45-cb13-4aa3-ae8b-dd25fb67b6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f2878a-3b9d-4024-8df5-fb4824d0b227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ed8f38-6138-4656-a560-f66139f985dd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec332b40-1398-4718-a9e8-fb5b8990212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51bf5cf-9606-4806-9d2c-3c4cafc61d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed3e915-f0cd-44d9-b95c-b9e8493f92df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee29d73-0642-4a85-a824-71d32114a6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2face45-8a94-46e8-814b-569356737f75",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50af81a-d674-40f1-a3c9-c53f52f6d4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9995af-5a34-44e8-aba8-d1b719a1d6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ba17af-dcc5-41a6-a1c8-8d53f6db1d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ab856-7303-411c-a8c6-d2a30e714893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49479ff-f416-473b-82f6-c04ec18134cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bed6a4-2ccf-4b91-a4d5-17d3d3c63615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1ac1be-f510-4efd-acfe-d86923d65811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b87183-e366-4ea9-aca6-b05ec46ea635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a938a99-a044-4574-948d-04c1b5915ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af643f71-19c7-4565-b24a-19dc519c9816",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe44b99-c71c-4300-b06f-97136e90e8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40a8f32-cecd-4b92-80af-3ca0646022a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1df7322-4bac-4765-877c-e963a70b9f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab8c21e-04c3-473e-b566-bdb62182fe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8766ddf-f298-46e0-933e-55f09de7400e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aab0ed-5add-44f2-be9c-da57a0ccd5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6507bc0-ed13-453c-9a1e-a82c88d13974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0567a9d1-8ba3-476c-82ad-3562cc3b5f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5fac81-fd55-48e1-9283-2d0117119b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe590844-4d91-4066-b4bb-d083b93e3a1f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddbae56-8246-4a6f-b7b2-7292b3bcc64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252fc8fd-f338-4755-b563-e6211b344663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2da728-0a28-47fa-a6b8-548a8ebe2f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4141b905-66e6-4896-b5a7-87fff26bc3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97251add-08b2-4bc9-9a2f-9eb68d9b407d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c31a54a-130a-4225-8dbc-9c9504c78e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e92fc8-809f-42e2-b3ed-947ac91b09d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816447b-6eb9-4b6c-b429-39002a18bd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb63f1e4-523f-4cc7-9241-919e1c41ab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84761dac-de7e-44c9-a0d5-7415c8e20a21",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6702c7-8940-467a-ae9c-e4a8eba16b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a148ac76-1cd9-4043-9e94-0f52896cfaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce0bc7d-204b-4f17-8890-ec5ffecd1509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb67eb31-c980-41cc-ba65-0c8f1116ed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e50549f-8a3f-44fb-be46-744b59a0e4bb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccd551d-d3b1-4458-9ab7-89bc786f6157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5098657-5c14-4927-8b8c-590268b0276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6710fe78-3289-4341-9b72-fa674d07f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aab3de8-0c80-432f-8caf-25ba8112776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c92e9e-eecc-4e14-89ae-55d4daa556ae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a354b65-1fbf-47ab-bfdf-b39e4fca9908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed73f9e5-b219-4763-8749-d2da87c51526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f49196-c24d-4f8b-aa7c-5e4770b09395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187d7da6-fc58-414a-8fea-7c50531271dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea8ff30-77e8-4d59-9e65-d2c39c8373a8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f005d18-592a-469d-a68f-86f1ed160728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173d9389-d8a2-485c-a19b-cf6b5079a30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879466ac-11ba-4289-881e-a33c0ded5113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f27a109-b095-458f-bf39-3cf2b8a22c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d661fe-0e44-4daf-88f1-75a302352aef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0d906c-c293-4d9f-98a1-b42650f02be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697adaef-059c-494f-8c40-0860f3bc91c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8f5e40-43f4-4e65-9f8a-d0a76df14c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646424f1-46ca-4402-842e-31d6dedf07d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8072fd3c-fe17-45d5-ad96-b812f96c1a73",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4010d610-c1d0-458b-af35-616712994bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40b4f9e-a5f9-4645-aebc-4615cce7e63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41ba74-9ebf-473c-8834-4f79c51935a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59d3605-fcd8-4238-b0ba-1976c677d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5898cf0-64af-487b-b94d-5c7f1c447b01",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157268c6-c15b-49da-a7ee-7ef1f7ad4833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b450376-eecc-4313-b849-2c3eb8e39edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46af7c5-0738-4be0-8620-9a65a6245d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e77e513-3b1c-42dc-b9a9-da9c31583c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911da5af-e940-4e72-a318-c5170d7ae34e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62efb6fb-06ce-4482-8042-eb2445561903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0e90e3-6e5b-4d1f-bab5-7841513aac36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dd2e63-2fbd-420d-b1b3-16a3a8990971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93af279f-62d1-4b6e-aef2-2ad2437dabb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a7454-f53d-42fa-9199-c45413016520",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc239e7-7d3a-4264-9a98-bb1af34ada73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5919579f-45f3-4d30-ad36-474316115278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d35ba49-be73-4752-9a12-3cd7bcd9b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160ad456-1628-4762-b2ca-de6550562610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53600605-27e5-44cd-b8f3-b828254082b2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffafb7f-44d3-4ae9-a3e4-c715bf54045d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef89f9d-4342-4344-b92a-d4dd34fc6db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1590b791-21d8-4497-82cf-2d3b7690efea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9121f1-f826-4ee0-a0b0-6efa50b66bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6887d3-6814-4221-b981-fe22e1bca563",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5876224-5fd4-4208-b91b-e4502e68acd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7eef9e-82ca-4460-87ea-b1aa2317aabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fc0202-2ef9-4a80-8a45-7e0106cbabe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c01749-2ae5-425b-b2e0-af14ac479a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6a9822-34ea-4b81-a401-8f5ba1e0e8f4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a180aee-94c4-4c7c-98a7-df2af592425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c59478-292d-45e0-bd12-a6ba764427dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a78c75-b8a5-4fb6-a4b3-e46103eb69e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2066a484-b09e-42b8-a1fa-393cc3cd8036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201e2f92-9d29-4cba-96f1-1c6b37be27ec",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be5d976-b82a-4e76-81ab-1bd8633ce085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5612c99f-a5f6-4a3f-ac7d-f4bade8abe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716c5751-20ac-4de5-a119-b08db5986a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59aa84bf-a4ba-4997-9d45-c5b60c6cf1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c6eef6-ea16-4995-896c-9fe6ea635924",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848abc7b-b4f3-4e94-b6a2-25847f670b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37426260-c664-42bd-b1d8-6433c6cb723a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3a8f3e-d5c8-4b44-9653-a1c26803b876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc683c8-a7e9-4e6d-9f02-5147b2c0836e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e14af02-525a-47db-a60c-666a7a84320a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374e4ac6-5d68-4acd-95e0-dc5bb69bd04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76f710c-f604-46bd-bd5f-598248fabb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d6e1c8-cf72-4ff3-9514-0b3394937e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aace3904-307f-41b3-8f48-2e88bec0fafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ef9ab0-52a9-4a98-a725-4513c41c7750",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb5e5e4-f259-4c96-a297-dd2692d70cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67becb04-d947-4c08-90af-7c8b44a7bb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b08097-7583-4af6-bf3e-d8aec4a3ffac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6a63c6-fbfd-4734-ae87-05585f4198b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815d8539-18b9-48a2-b2d4-fad804d197c3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8110436f-6850-4409-a047-9c4e13a3f7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dffb5c-f8e1-45c0-9bec-8928aa0a3cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e97374-f5cb-4bae-9d20-54e4e5cfa7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876089d-f3a0-4e7a-89d0-b1c0e674633c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae4a6a-e63f-4d10-bb1e-89fec2b0d006",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b34fe57-72b3-4eee-8d67-ce8ec53573b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109509bf-b6b6-4003-bd6e-eea9c9c78c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60c7325-bc6a-4500-84fd-c82f7608147e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9840dc5b-dff3-4d93-a8f8-a5956741a422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a426b5b7-ee32-4100-b280-c7da9a118238",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe190bab-3985-4b8f-93a1-12f6c1548d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7c677f-66a5-4c51-a965-be0809539c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2b7faf-e96a-4fc8-ac8f-474ae9cf339b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e02cbca-36fd-4c1a-94e2-a66d91c69aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fdfb0d-53d2-402e-8070-ddaab763b1eb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2e6190-73ac-43db-8d27-a968d93f3bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b703d19b-b7d7-4bdf-b7e9-2911bb325951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e4dadf-dc4c-47b6-b77a-74f62e261067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042cde30-a24a-406a-8e96-713f0e4dabcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75471426-c876-4cb8-b72d-dc568c949195",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3915ba9-d2d6-429f-bad9-973d75036fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeaa33e8-2d7a-47f6-85eb-d012d604051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d67c334-46be-45d5-8e92-8a32539bf0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b40e759-ed3e-430a-bbc6-f48ca5dbb0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b19a2a-44eb-4656-8b8f-004a358c5850",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bfc42d-8611-4cec-a00d-b6f95cd6392e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a69cf14-9818-4784-a322-d8846ec7c853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affb67e6-9baf-4aa4-b921-f7dbca6b03dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e300b44-7e36-4aca-9578-068e91534d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6cf991-a820-491b-b093-ab86943805fd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee590cd-bd15-4091-8d19-9b44815ca08b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcc0b81-b03a-4fe4-aa71-615a1335ea76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0fc1bc-8214-4c9b-b991-f5c31225a6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df8bf5a-08bd-45bd-8739-274f71782f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a550018-2a73-4594-afc1-71c0990bbbf3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01adfd5c-a762-4ca2-a408-c2ee5320c97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590ba9c2-acb4-4ef2-ae14-eab86ff1b542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be380a-7f1b-4b8e-ac90-5f866f6ce1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75630bcc-8c93-4983-8b82-50cd3f2a5c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6a622-e1b2-48d8-8b39-dfdf6844cefe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdf98f2-d761-4ad1-8d58-be8ba74e7d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c368be4-63ef-4aba-a748-653184720ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b7d0b-2d4e-455e-a198-13a6a84bc00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142b14fa-f68e-4963-960d-10cda102380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259361f5-5cd1-4e3d-90f8-580d8110a8fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9339709a-fc24-424e-8c92-fe7b7c5469e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea7f2ef-8804-4bf8-8e6a-5477a9be3b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94ca2a-c990-444d-a3d1-a6b1f88af70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42f3ad8-5b3d-4fdc-a4e7-56e6b6049a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed241e8f-afae-4c46-a435-10a16e558b8d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1036160a-638c-48d2-825c-0e56743ba53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75526b26-6b39-4057-9c17-20266ee458e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b3395d-4e83-4fcd-9436-f475189ed9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41c874b-4713-4ad2-b912-7c583d99a2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc4b3a-6007-4dad-a09e-dee29405cd7c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efedf194-6821-478c-86ea-87524f835e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4dc9091-4eeb-4dad-b56f-2e5246a8f6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0469ab62-8e29-4026-89ad-33842d8e46cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173a6f8d-e886-41f0-b509-e3b2eebdf5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5264f179-0ea5-48f1-9328-dbb38e7b3449",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d685b5f-234b-46f1-91d7-d0fa29e14779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e6ead9-0fa9-4c5b-b7ec-9e2f28b579ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bb3528-411f-4356-b8a3-d466652837b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe41036a-916d-45cd-a78b-3d173d03d424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da0b6cc-1035-43be-9e27-4340e612731f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c4a99f-c2ed-45e1-80f5-04a1335b33ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b27bc45-9a8a-41bb-bdab-d6152b94e1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc71b405-9dcd-4b27-9c64-cd36340986e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe77419-714a-43dc-83cc-720edb0f8061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0852c365-0302-4cb0-8fc8-6918cde9d8cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fcd615-095f-485a-a1dd-bc67cd131c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f53bd0-f5c5-4f54-80dc-0a5126210586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03005169-83b0-464a-9ecc-f52d2e1cc3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63105128-3f06-4c99-a0ff-5a94b4ee698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36af7d2-bf3c-430d-b483-1c0e58b96013",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46216f65-ee23-4cd4-84e8-1cfc034b59bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63064344-e466-4db9-975f-c4f879d85477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7d8e1-7614-497a-83a3-c813dfa7fe39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b940dfa5-3852-4828-9884-36e8b4881f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb74196-91b2-423c-85ca-c31ef0061285",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7f93e4-929a-453c-b585-afbcaa65e649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c023bf-0204-46f4-b470-d787ace5b93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722bc9c-7999-4b9f-a66a-a4179b20bc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf2a061-8a97-44cf-bc3a-1d76f2378a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03e4157-aa8b-46dd-9e29-64a2504e328d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32da9098-183a-4823-b5f3-6f408990dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31abc82-40c9-4207-96d2-21f7542cd244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff14346-a45c-44fc-b90e-a4c40be09c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63c6da1-340c-4c40-bbaf-983686a5622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c97ab35-436a-4084-825b-226e8196af9d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e8f78-18ad-4bd8-b8ae-992210d9b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a3507b-525a-4cef-8f25-dbc7d5ce2f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cfeed2-e0e5-424b-a813-6f7c2682b623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d231f9-b00a-44c9-b985-9102d857b0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eb1f4c-1bc6-40db-afd1-748ed3c92c4d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a63981e-05c2-40d1-b7f5-f666ab28df2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f158899-c76f-48f8-9038-4923c035bcd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53314905-185c-442c-8aef-31ff6f20a0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffccafa-dabe-4d65-815b-7f01fb9e4054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd65fcc-3f83-4bad-8e95-50bd08b40397",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5a66e2-d9a1-468f-a53a-a13b43edff68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a6a225-4d48-42b3-9316-b53f33bca1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2084545f-9bf0-4e60-939c-b97441450229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d762f6-905f-4882-8211-a19e8a0b9404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ab1111-d824-4448-8a10-553b7a12b39b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e6c1ed-c0f8-4469-a6a5-54e7e24171d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09aac65-10b8-490d-886b-dcb807ed5178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e8a57e-7e7d-4415-838a-5dc62d91bbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8a06aa-0110-4b08-8ce5-188a9b269559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d4d751-943f-4779-8e5c-974f7600a136",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102017e1-8e78-4693-8a64-9f7edc92e761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893a6550-96ef-4390-98f2-914f6b51319d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b787b3e4-fa37-432f-89a0-db21fe28ba35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76460bc4-2cd9-4abf-99b6-f91dc10ba7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc95b6e-e42e-44b5-a730-d5d2416bccdd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb853c8-9905-4f7e-8bc9-9cacf216ab9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9761b9ef-19c5-42d0-a76c-5617182d733a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502d0e65-b5f1-45c6-8229-765132d4b1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3ba638-17fc-426a-8363-668a2fca4146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c9484b-5996-42d3-8cf4-15f237b5d212",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92596183-b7a5-4b50-bf3d-350817cd9e70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23fada31-6a7a-4597-8fe8-6e1e6c817d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7188e3de-972e-4aeb-8cad-83edcf9eebce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990dad1a-6fe8-4e8b-8203-7472a56f7110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a010ae8-88ce-430f-ba67-8fb12c7fa18c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0fdca-ae95-49f9-a114-b1df903a6455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb36f84-d37e-4564-8f8f-57d9d65efa4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b207ecd8-34ef-4854-9f69-a988d74acf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8843b056-de97-4350-9237-cdb8ffec9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86701a3a-7e39-42b9-bf2a-938cffe70037",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead756f0-461a-4ecc-bd93-12c39a0d38e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c014026-b05b-4680-9e6f-e206441ef0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a5e4a-6357-4db8-bbf1-b36193786415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2070027f-4b04-492f-afc5-db971fac7b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa4116-4d0f-49a6-88b4-c2143e357772",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74655740-70d4-4db2-98d9-7ba65ef3939c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01ca2ac-7d51-4236-a152-ab05dbc55dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b004f1e-9961-4d3c-9a80-cf75987fcf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8619ea9b-e454-485b-9e2f-12c1f8d92c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66b479e-f995-43ee-a1b4-34b34318b8b3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1f2463-12d7-4fef-a053-e387d741d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41946fab-858a-4e07-88e2-24ee90b9eadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a0784a-aae5-4943-ae94-625c115a05fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828fe8b8-9a98-467f-a613-bdf6c96a547e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e2c9ea-80e2-4d1f-b9e9-195972cef7f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05651b96-f087-4f8b-ae3a-0873d2ecd684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6be364-df78-45a2-9d9d-7ab4c4e797be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331badf3-21e8-499d-9586-82051b64aa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a3c911-03c9-495d-aba0-be882165106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52393e4e-3890-4b39-8fdc-e954757a197a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c884bdb3-d42e-476a-ac77-9b107e311123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cb81d4-7559-4d85-ad2d-d181b51f6c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71870ebe-ca81-4a2c-b4a5-0aa9d02a4bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6968d4-37af-466b-9e97-7f55b2250e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eda3112-6ae6-472e-88cf-6d7f464dc2c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d1136-a1f5-4b17-b457-89f9286449ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3452e5-4fbf-4645-97fc-22c6d8899cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d929d7-b7e7-4fa9-a7d8-c2552b500111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c741f2-8187-4e60-995e-093f5ce76f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba1b351-11bb-4534-91a2-e7ec02f1c3cb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf3905-d5e0-4d1f-884a-e020bfec8ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943555fe-49cd-4013-876c-dc47730e8aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22878c3-a9bf-4d27-b18a-f35b9fa2af3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c0a029-497a-4ca0-9ee6-9d85e9e7266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6fa5aa-1804-41c7-9c92-d2f3da7f0ad3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3852e3e1-e94d-4281-8747-64130c90c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a66bfd0-23fd-416b-a0ad-f36dc1ae136b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c96114-ede7-4c8b-9a19-0b31cc35dc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120ef242-b43f-4fa4-a3a3-d7e7c8e29558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a121b-77dc-4eda-a5b5-25b7df0b609f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fd7549-bc3b-4ae2-95c0-91e7fe9af017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c524203d-aa5a-47f6-ae33-d289eedd4f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b156a6c-868d-4f1d-8a80-735e16c76c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c879cd-5524-4cc3-b947-dee8287502de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef968a9-bad2-4290-875e-76336c13464b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bd6ddb-9383-419d-909a-9432d830952c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7a2f1e-dac8-49e7-b4a0-1e07a6cab100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13712dfa-75c2-4d60-bee4-ce0077781812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df22160-eee3-4d31-ae76-5082ff0281a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b8376-824c-46dd-b79c-f9aebc26f522",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf052e89-60ad-4355-b6e9-48581373b3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fa794d-d40b-443e-9f7a-18d905587442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c5c484-c3da-4582-8e07-c1ded28936e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ba3ef7-a288-4ef0-a8d9-e831ecbb6e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8b5c9a-c630-47bf-be09-531a18239f35",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da78e2e0-65df-4b68-9d29-51e763bffeb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52d6e8b-da41-4676-9cd9-5c3f25243c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c626bea-7d65-47f4-85b6-1357b646779e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59ab56e-69f1-478d-bce1-45ddcf3d7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aefc46-1f48-423f-80df-8fe1212bc50d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06283d8e-0ec8-4936-851a-a9babe998ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948e3ad5-4f1b-4c34-abf8-562a66ba1dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd21075b-1215-465f-a7fa-a240c67675fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c104406f-6e09-4982-8826-60ae1d1ed689"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3233a8cc-92db-47ff-add8-859f2b7edee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d3c0884-c728-4bf4-8927-4a1d90c0d12d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae02f14-f3ae-4d0d-a409-2b059ac9e459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0356baf-3310-45f3-836c-d51843242e33"
                    }
                  }
                ]
              },
              {
                "id": "f278d2db-42de-4904-b39f-c13a64a8915f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "455d775e-bc18-42eb-b53c-321b6af8ff49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79159c72-be99-4068-8f67-1ed1de016441",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c6ec1fae-afd8-4396-ab07-f86a6e0bc0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b932d55d-06c0-4107-8521-d7f843153acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dacd3ea-ff27-489c-8a66-c96de327496f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f376c4ec-e311-44c3-9a6b-5df5ec510f0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71f5296a-59e1-47a1-a602-caa528903280"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1bdb326-8cac-48b5-8ef7-1d4a6b4f9d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7d99672-6391-4d85-8e82-215e15e323ef"
                    }
                  }
                ]
              },
              {
                "id": "8ecde790-754e-45cb-a963-9b8078370361",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d3ad5d89-7d86-4d44-9c49-9fd1e70d419e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476fa29b-417d-4169-877f-fb80400afffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "479e1a6f-0612-4e08-b20c-dbe7ba5204c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0fed15-bf24-4b8d-b11f-7889e1423eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b59a8b6-a42b-4a60-bc4b-7cf830940c55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "edac279a-b51c-43cc-99e5-e57128ecedfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4587378c-1ba0-481a-8111-68c18e36d2d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4bf6cba-7682-4d07-acb3-fb1e16fc6a66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e0acfab8-e11d-4075-b8f8-a37c7811c52a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cbade94-3c12-42e4-a363-6b221bea4c5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8c85f31-44eb-4a82-81c8-ee5596a74a6e"
                    }
                  }
                ]
              },
              {
                "id": "7a06fbf9-0a7c-4b7f-ac57-ed8932be2f8e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9196ad79-e832-4a2e-a419-950ccc9a27d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5eda4d0b-dbac-4f16-aceb-b5d5468c010c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75e25c53-ba19-4592-91bd-6809aa73100e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45fdc0a8-2b63-4d67-a51d-16456df61ab4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09cc650a-b525-4ea6-9043-e9c392a4b1b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "67402191-c3d0-4151-9195-f847683ff52a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d05721c-64ae-4ac7-a23a-f05e34195332",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab7d8989-c3aa-4d15-959b-c55813058d14"
            }
          }
        ]
      },
      {
        "id": "ff30f099-b988-4dda-8fbf-f77263dfdea2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1aa0526c-c9a4-46fb-ac44-0599043f1887",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65212bec-8942-4834-9fce-6e9d8ba15c61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdff98d6-2bef-4c3d-9522-3451b76f3e3a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6c0bb8-c141-4bfc-b2a9-59ca1ce875b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4829b6b6-0e8b-4f6f-98bb-3985f4899d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c248c32-0779-4326-affb-352afa99f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a38bd929-f145-4f62-9ef3-31369f570dc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6515ebc2-a016-4977-87df-17f8eb6dc5aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a81e513c-99c9-4037-8054-ce6286b643e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5252d9c7-9b38-424d-8952-66cbe0f96c7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84eab4bd-6e2c-48fb-9fd6-abe8e28f3e0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c07cda23-7abc-4467-a7dc-934f5737f945",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59cd0c1e-fd4f-42d3-a19b-93d6e7b0583e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae6c2e97-b78c-45d7-83af-4f5e41502929",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11e7cbf8-8a6a-42ec-a07e-b061ea7189d4"
            }
          }
        ]
      },
      {
        "id": "a8ab58e4-3b79-4e1f-bea6-407aefc15173",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2486b3ae-aa98-4672-859d-3e5b00d7663c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a123795a-ecf3-4737-8b5a-dec94950286f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f89d8f80-788e-4601-9d9a-36ab3e4a5888",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a327a44-6ae4-473e-8e3b-246a3836cab9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97754306-f57e-4dae-96d4-02d11adb7c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e0a1fa-9915-4b40-959f-7e28735a44f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dd3e7db-e987-4210-93ea-6f39a264d3f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b10d5e22-5f7e-4729-aa4a-1d7ff86c4720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a6bee68-e1d6-4e1b-a369-5b68b10bc397"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06558c57-b3c0-479e-9330-4a33cac2f249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7470dee-dc85-44af-abb9-4aa384ff7398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77985443-077d-42e1-9d64-52bfe53c1949",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c91a85c1-7938-4c70-af6b-aa0bc03b3a04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "168b3086-3080-496d-b107-6ca39a9e3e1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "987e8008-37c1-4ed0-9d38-5cbe23300edf"
            }
          }
        ]
      },
      {
        "id": "7ec18cde-6516-45b4-9eb5-9eac53d6be19",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bdbc6f00-a9f9-423c-a730-020238c84beb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb16a519-f4db-4074-8b18-8edd4703076b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf7171cd-767e-48e3-923c-844ceabf9500",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9dd97d-4391-45e0-8bbf-ee11f581ee76",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d3635f-c728-40f7-a9af-a11b063fc376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a59249-7e56-4d5c-80ce-195784ba3216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1a867fa-3ada-4c3c-9af9-8f3065796825"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3e6c3c-ab24-413b-9118-503b30619e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf17b04-5d66-48a3-b9fc-eaae5216eb6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cf5d059-7bb9-4744-8ac9-14dfe3cc71cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a599caa1-138b-45b9-8e4d-7f7dedc98cb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8c95b6b-2098-4434-934f-b6279d776ced",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f03482f0-edce-447a-8553-f362b91c20cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4dba19c-458a-4153-ad37-8ce02bc03314",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e3b6a85-a8da-4d74-a90a-dcc39775350c"
            }
          }
        ]
      },
      {
        "id": "a719f776-5aec-49d9-9f04-539d5571d74b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cdf1501-877b-4a46-bf56-3b95e8635bae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d10fd5b8-b2a2-41f5-92c1-ec550873a387",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b0d49df3-46dc-480c-b53b-0c037f2c3d0b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89d57dee-75b7-45d9-9c77-d902e4246025",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e15111a-486d-4cf0-bbd4-fa629db2eaeb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.45070422535208,
      "responseMin": 11,
      "responseMax": 4587,
      "responseSd": 369.96127657023226,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696638772742,
      "completed": 1696638810454
    },
    "executions": [
      {
        "id": "d4e39b23-89ec-43be-9c68-904925a19d53",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "74d67098-7b47-491a-8cbc-bdbec218bf05",
          "httpRequestId": "156ace42-eb18-4470-9f11-2941c4cc0129"
        },
        "item": {
          "id": "d4e39b23-89ec-43be-9c68-904925a19d53",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "70625744-6a70-4f94-b330-35d53881236d",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "c31dfd04-62c1-4aaf-93d1-96480cd5773e",
        "cursor": {
          "ref": "3fa7ff3c-c2d0-4103-ad63-2737d5636663",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "179eec1f-baa6-4c82-8d1f-e40941bdf1b1"
        },
        "item": {
          "id": "c31dfd04-62c1-4aaf-93d1-96480cd5773e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "59885c2b-72c4-4d0f-9e1d-3612f86afedd",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7f984747-7d12-495c-b975-d58beb37c05a",
        "cursor": {
          "ref": "b0435f18-fb99-4923-88a3-626978b3781e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93c53be9-99a0-4578-ada3-1bc992029775"
        },
        "item": {
          "id": "7f984747-7d12-495c-b975-d58beb37c05a",
          "name": "did_json"
        },
        "response": {
          "id": "6f4e2702-764b-498e-bc7c-93f4e13f3f9d",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd0491-5509-4d35-93f4-a742d518204d",
        "cursor": {
          "ref": "f7326d64-c0fe-4869-b289-5a9de7add543",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87331fda-2b98-4072-a8d3-2acc7bf91b4b"
        },
        "item": {
          "id": "f0fd0491-5509-4d35-93f4-a742d518204d",
          "name": "did:invalid"
        },
        "response": {
          "id": "1965dd98-833e-491e-b8b3-5c3df55d822b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 799,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd0491-5509-4d35-93f4-a742d518204d",
        "cursor": {
          "ref": "f7326d64-c0fe-4869-b289-5a9de7add543",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87331fda-2b98-4072-a8d3-2acc7bf91b4b"
        },
        "item": {
          "id": "f0fd0491-5509-4d35-93f4-a742d518204d",
          "name": "did:invalid"
        },
        "response": {
          "id": "1965dd98-833e-491e-b8b3-5c3df55d822b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 799,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabbca8d-b384-4fe6-9caf-9ba6fe9ba9d3",
        "cursor": {
          "ref": "18282e40-f042-487f-9a31-0f3716b95207",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c92c51e1-9567-4df7-a0d9-7d7563115eb4"
        },
        "item": {
          "id": "cabbca8d-b384-4fe6-9caf-9ba6fe9ba9d3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a25d9515-8a32-4d78-bb11-ec0b820202f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a8a2ac-50e4-4bbe-a578-eb56176ba89a",
        "cursor": {
          "ref": "bdfec9a8-e734-4cb6-b034-4d09f3ed2c00",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c8ebe0f2-2124-4548-a5f4-0d868505b5d0"
        },
        "item": {
          "id": "99a8a2ac-50e4-4bbe-a578-eb56176ba89a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2f089842-0d0b-49b2-b372-b50cab4f10eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028baccc-e212-4b9a-8c82-e0456c01bc25",
        "cursor": {
          "ref": "5fc6cf59-ffb5-4a0d-8680-abbb372855b3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3ed75fb6-5424-4a45-8a51-8273c90473b0"
        },
        "item": {
          "id": "028baccc-e212-4b9a-8c82-e0456c01bc25",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e4225ef8-95cd-411f-9b0a-34adccbfddcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 91,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a225dd6-2135-4d8e-9b2b-0f5025333462",
        "cursor": {
          "ref": "71ed68e8-ca3a-4603-a671-f8df774a6de8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c9ec947-667a-468c-a9f3-a8d44da6e784"
        },
        "item": {
          "id": "1a225dd6-2135-4d8e-9b2b-0f5025333462",
          "name": "identifiers"
        },
        "response": {
          "id": "62bb4b7a-620d-4d15-94ed-853c73fb81a3",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479ee482-c6c3-43fd-a15f-6dbc7f09bdc6",
        "cursor": {
          "ref": "cf17b690-54ef-40a0-96ed-ec5494cbce65",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88c82107-93c2-4177-b723-132071e4d3e3"
        },
        "item": {
          "id": "479ee482-c6c3-43fd-a15f-6dbc7f09bdc6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a97f236-2ef4-40a6-9e91-9a722c60e644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca68295e-3c19-4a9d-a87a-55bfebe368c8",
        "cursor": {
          "ref": "93b4481d-5adb-4579-9c7f-824ba710d6ac",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c969db4a-29df-4600-b9a1-d115fd595c51"
        },
        "item": {
          "id": "ca68295e-3c19-4a9d-a87a-55bfebe368c8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c15d6f32-b505-4d77-872e-131841984ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba9446d-699b-4ce8-a116-332a891ab8ad",
        "cursor": {
          "ref": "616c13c7-ef02-4eff-87d4-bfef7916926f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "977e4f14-8e58-4fa5-81fc-4ab8d3157ade"
        },
        "item": {
          "id": "eba9446d-699b-4ce8-a116-332a891ab8ad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8f47f073-17e6-4ba1-8252-b4406ed63193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675be13a-65a5-445c-9aab-9101a34571a2",
        "cursor": {
          "ref": "07de6158-95f3-4b35-9e6a-a102a45fbe71",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "07267ef6-e78e-4e77-ad4e-17b45dbbdc97"
        },
        "item": {
          "id": "675be13a-65a5-445c-9aab-9101a34571a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6d338a8-bd66-461c-b7bb-792b1b234537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f795888-c658-426a-a2f0-db9bd5dac612",
        "cursor": {
          "ref": "e818d347-9f49-4a0d-b293-80f65afd2f5a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "623e392d-7969-4eed-b488-cf5b07dcfcbb"
        },
        "item": {
          "id": "0f795888-c658-426a-a2f0-db9bd5dac612",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb7de4f5-aabb-4081-b9de-9a42705b74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc25003-1496-40d7-b125-6746675d5750",
        "cursor": {
          "ref": "67be9e88-5ea8-4493-97ad-aa5f57b74e60",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c0bd053-65a2-441d-bd13-4cf4d5090b4c"
        },
        "item": {
          "id": "7cc25003-1496-40d7-b125-6746675d5750",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "89a9c4db-c625-445e-bebd-38574ef3429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fe93be-7681-4975-a751-edd49681a284",
        "cursor": {
          "ref": "cfd9746a-24d2-48d8-aad3-561a1be1bb48",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "62d1a4bc-9929-4c18-96c8-fa8889f1f851"
        },
        "item": {
          "id": "36fe93be-7681-4975-a751-edd49681a284",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5be5d31c-80bd-4ddc-acc5-e3ae0c2b2a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24008a50-384d-4c00-8b29-9be7aa9c8cdc",
        "cursor": {
          "ref": "ccfa07be-5b65-425b-8b02-dbcabee3e22e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b331e62-abda-41b6-a445-47cabbbd699c"
        },
        "item": {
          "id": "24008a50-384d-4c00-8b29-9be7aa9c8cdc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "40b01951-78e9-4760-914e-88cb9219357f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d410e7d8-94ed-4aa7-b59e-83a588a02ace",
        "cursor": {
          "ref": "a1157441-caa1-41c8-bb56-7ee6dc0b51d4",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e12a5f3a-9f67-4599-b612-445d747904ff"
        },
        "item": {
          "id": "d410e7d8-94ed-4aa7-b59e-83a588a02ace",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d2542048-7a8d-46be-9b3b-443ba4bef92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3af9ac-9d58-4a68-b255-4248c421e726",
        "cursor": {
          "ref": "cd1c5117-0a29-4e60-94b5-2afd3d6f358b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "69b31fcc-1668-4a94-a41e-ee9a57b2101a"
        },
        "item": {
          "id": "cb3af9ac-9d58-4a68-b255-4248c421e726",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3d529d99-4fef-4745-8268-1ba8e6e937b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bd8d4f-c0c6-4ae1-9fca-859356c75117",
        "cursor": {
          "ref": "dc8f14eb-0761-4dcc-80fe-7536990d5c10",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "db682790-705f-4959-b7fe-c2262ea1942f"
        },
        "item": {
          "id": "21bd8d4f-c0c6-4ae1-9fca-859356c75117",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21ded12d-bf6a-4eed-a222-e253b1945ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de0b6e-10e6-4259-a8a0-a9e632abe746",
        "cursor": {
          "ref": "d6d859df-b4fd-4baa-aaa2-9398c9ba6255",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b42afed3-3a1d-4426-b357-7b563d747e1a"
        },
        "item": {
          "id": "46de0b6e-10e6-4259-a8a0-a9e632abe746",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eeec214f-826f-44fc-841b-d0dad2f155d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c684408-dedf-43cf-899d-b2572765774c",
        "cursor": {
          "ref": "fc4f8e48-ec9a-4be5-a034-8e0f89407b3a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bc5f48f9-b2c5-49e9-b909-88f770a186ee"
        },
        "item": {
          "id": "5c684408-dedf-43cf-899d-b2572765774c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e33f8250-cb2a-4a9a-9881-c03cb6f2bd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eced332b-3092-4797-ab30-7d46270fabfd",
        "cursor": {
          "ref": "98678eb0-73a8-4f1d-8b1f-f51bc8a76ac2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2155c503-8b11-49fa-b129-7363576b4628"
        },
        "item": {
          "id": "eced332b-3092-4797-ab30-7d46270fabfd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2441805-6745-4615-a354-d7256951f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870a6bcc-12f4-4ed8-97e8-12f8fc27c0e6",
        "cursor": {
          "ref": "2ec4f4f5-e643-4817-b617-3fb1e42ab595",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d2500e1f-c26b-4f81-9fde-56419fe62188"
        },
        "item": {
          "id": "870a6bcc-12f4-4ed8-97e8-12f8fc27c0e6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "92613896-429c-424f-8f05-25ac1cb2ffdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdc04d0-a126-4f5b-8568-42bf6cc573f5",
        "cursor": {
          "ref": "377e128c-1901-4811-a0f0-696c8d276ff7",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d3909bd9-0f58-4d9b-87ce-24c964916dad"
        },
        "item": {
          "id": "2fdc04d0-a126-4f5b-8568-42bf6cc573f5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "81d9dab1-0cbf-486b-ae73-12213ff3c96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9794a423-d23f-4c21-8fcb-8a7ddd679c1b",
        "cursor": {
          "ref": "a89cfad5-ad5d-406a-9bc5-57d4672f1018",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "efbd66dd-e9d9-404f-9310-03890792edf4"
        },
        "item": {
          "id": "9794a423-d23f-4c21-8fcb-8a7ddd679c1b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "58be69d7-82aa-46a6-83d8-fea4be19839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbe6352-535c-4847-bac1-79638e357859",
        "cursor": {
          "ref": "233e405d-271e-4a6c-a887-17339cb05faf",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c4f48d92-5c9f-47f1-95aa-95378a21fed2"
        },
        "item": {
          "id": "cfbe6352-535c-4847-bac1-79638e357859",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c48fdbb6-28ed-42e9-984f-27678e205897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b696cda-8f18-47bc-b6e5-e4846f435296",
        "cursor": {
          "ref": "46de94ee-4e78-437c-9353-6917ad33f75b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c0f6b45c-4920-47cc-a202-74ccb4581f8d"
        },
        "item": {
          "id": "3b696cda-8f18-47bc-b6e5-e4846f435296",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "98fb628a-d8f6-4e83-bdbf-275df1013794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6d68a5-faca-4c72-9006-5574f791e659",
        "cursor": {
          "ref": "039ebfd1-8653-4609-a071-3b2ce8062578",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "14de426c-3a27-4bac-8984-b6e6daaddfe3"
        },
        "item": {
          "id": "7e6d68a5-faca-4c72-9006-5574f791e659",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e96188a-b772-4537-a9a0-8734b48fed46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837616d9-420c-4ef7-8d2d-0da16a2a57a6",
        "cursor": {
          "ref": "031fdc24-9a20-4e32-902b-0295ed1eb3b8",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b32ca73e-584f-4032-b1f6-e6382b4d5a62"
        },
        "item": {
          "id": "837616d9-420c-4ef7-8d2d-0da16a2a57a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3f9b5629-1c97-4dd6-9582-adbae18be1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e38c58-b35f-471e-93cd-ba683f55c362",
        "cursor": {
          "ref": "f8115595-123f-4b77-a71b-f1e6cbb7527b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44e8cd6d-f5cf-4625-bd52-35f415bf5b8b"
        },
        "item": {
          "id": "f6e38c58-b35f-471e-93cd-ba683f55c362",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0e6a19f9-fb73-48a6-bf45-910ca812cce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca547b3-f324-4f25-82f2-c6f775ef52c0",
        "cursor": {
          "ref": "df5c5974-5146-4272-8860-04f67d72f28b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3474d4b7-a414-4c33-b0ef-977a676ac1ae"
        },
        "item": {
          "id": "fca547b3-f324-4f25-82f2-c6f775ef52c0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7fbb3dea-16e2-46fb-bbdf-c865b6dee507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75096bf-a9f2-45f4-98ef-9430fb40a108",
        "cursor": {
          "ref": "842422e6-2579-4ace-9738-1fe0f66efc45",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a819aefe-6133-4a49-a528-a550953f7101"
        },
        "item": {
          "id": "a75096bf-a9f2-45f4-98ef-9430fb40a108",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c6f002c-ea2c-4517-a82c-c660cab7672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ac8487-3257-4f39-b482-5e5d194bbb4c",
        "cursor": {
          "ref": "4b441534-904e-46f9-8fa9-c21cbd9118df",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "303f107f-0f96-4f80-a67b-df22c70fb5eb"
        },
        "item": {
          "id": "a6ac8487-3257-4f39-b482-5e5d194bbb4c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a1b9597e-5059-4eb9-b93f-136ab4404f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922fb7ec-3af0-477b-9b7e-0fe514fa456e",
        "cursor": {
          "ref": "57143299-405c-41d5-af07-15bdf17908c2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8c94e2d8-5648-404e-a7f0-86f90c0fca0d"
        },
        "item": {
          "id": "922fb7ec-3af0-477b-9b7e-0fe514fa456e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9e4a6b4d-3869-44ad-bacd-09c0d602c6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b7236f-5b32-4bf6-8fb7-1a233cc321b5",
        "cursor": {
          "ref": "3192efed-48cf-497d-8878-a219602e9e4b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f786fa9e-9562-4b58-bd22-678a5b946d25"
        },
        "item": {
          "id": "17b7236f-5b32-4bf6-8fb7-1a233cc321b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5732524-7bfb-45cc-9015-fed1eaa1df93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02892c3a-39b5-42a1-987c-d507a42838b1",
        "cursor": {
          "ref": "bb8bf973-9aaa-4265-bf2d-61d5bd1b30ea",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c31f87bd-eda9-4933-adf2-9553dd69d1ab"
        },
        "item": {
          "id": "02892c3a-39b5-42a1-987c-d507a42838b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8162d2ca-c7bb-4604-8c7f-ae53d01ce13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77204b8d-351d-48c2-b042-11592c749257",
        "cursor": {
          "ref": "50b335c1-2b47-440c-862c-3aee83e5dcf1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4dab93b2-8c8c-4523-b2f6-32744689bd70"
        },
        "item": {
          "id": "77204b8d-351d-48c2-b042-11592c749257",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3ae6ea99-5dfb-4856-b791-6ecb08042165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4936dd10-bf99-41dd-868b-510a4fb4e175",
        "cursor": {
          "ref": "2daa8fd7-188e-41fd-8c1e-d4e47d986a80",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78137bc9-c5db-4c42-9efd-63dca7e5212b"
        },
        "item": {
          "id": "4936dd10-bf99-41dd-868b-510a4fb4e175",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e854cb9b-18a2-4a19-b414-bfef058f59ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e6f513-a4e7-42c1-97f0-8f39133c3aca",
        "cursor": {
          "ref": "4d536759-d1f5-4ae4-8a12-a46abd9e4bbd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ed4524ce-190b-46cf-914c-db0565fb3722"
        },
        "item": {
          "id": "95e6f513-a4e7-42c1-97f0-8f39133c3aca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "704fb10f-c524-406a-8efe-79f7f32b2222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cfb638-bcb5-4a41-867c-5c2ab1ea8b0c",
        "cursor": {
          "ref": "c73f3b43-ebcd-406d-ab13-a5b87013ef0c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e26a7c4f-3ecf-484a-b4e5-fb7624647398"
        },
        "item": {
          "id": "c6cfb638-bcb5-4a41-867c-5c2ab1ea8b0c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3051728-6a6a-45ae-bdef-6a757af98daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae77e3f-6688-4c71-9346-6fe57c6af3b1",
        "cursor": {
          "ref": "41e0964e-ca21-4710-b34c-47cd70e0a7a3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8a7fceed-55b8-4706-86bb-ffecef803d56"
        },
        "item": {
          "id": "7ae77e3f-6688-4c71-9346-6fe57c6af3b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd649416-dbe9-4e76-b41d-8ddef3a4b9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d703044-610c-4b04-b3e8-53e3e038dbfc",
        "cursor": {
          "ref": "67302490-0bc5-4e6a-9432-db182eeb91d6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2bfad9d7-711b-478d-aee2-c8f25550fc85"
        },
        "item": {
          "id": "2d703044-610c-4b04-b3e8-53e3e038dbfc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ef830ca2-3f59-447a-8b5a-9505b46b302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8919acba-20cb-41d2-8b22-acf213e37e5d",
        "cursor": {
          "ref": "9f48adc4-84bd-467c-9dc4-46e91be62b1e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "65434e62-54b5-4985-899f-4e9ef91c57d9"
        },
        "item": {
          "id": "8919acba-20cb-41d2-8b22-acf213e37e5d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ad01f185-ba84-4116-a49e-b192e248033e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88eaaf9-39a1-43ea-8d3e-05fff61d275a",
        "cursor": {
          "ref": "50716d6d-3638-40b7-af6a-63f4720ab87f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "739be301-a821-4398-9a8a-90e52cc22491"
        },
        "item": {
          "id": "f88eaaf9-39a1-43ea-8d3e-05fff61d275a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "51ac1895-bce5-4698-bbc9-e5728d55a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caeacfa-5d15-4c8a-984d-cfc5ab7e60ea",
        "cursor": {
          "ref": "7703e01b-7e2e-4bc2-b7d2-b82e2e97bb8a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2cd42d32-9c55-492b-a7bd-466bcbccaff2"
        },
        "item": {
          "id": "4caeacfa-5d15-4c8a-984d-cfc5ab7e60ea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1d22352c-1f36-4d05-b979-2419cd674646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b8b63-9f29-400f-bec9-7d0e3650df10",
        "cursor": {
          "ref": "eb671bde-a005-4980-802e-cf5de80e9aac",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "75bde882-b02f-4638-a77d-72349fa73fc2"
        },
        "item": {
          "id": "ba5b8b63-9f29-400f-bec9-7d0e3650df10",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1ea2f611-e211-4e29-8310-ea7664feef94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d78f866-c93d-490f-8fc7-394b53cfb93d",
        "cursor": {
          "ref": "bd73278a-20a2-4fb9-9428-61069f91b018",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0273dc65-f328-4c12-ab30-b1c6d8b1bfc4"
        },
        "item": {
          "id": "4d78f866-c93d-490f-8fc7-394b53cfb93d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "59cee153-08c1-44a5-af5f-660e6d5ecb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f05b86-3123-4f57-85e9-faf9b9fa100e",
        "cursor": {
          "ref": "6a83f5cd-41fd-43f2-b17e-861f27bd4153",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b4e36802-fc80-4863-a529-3a3c6c6734dd"
        },
        "item": {
          "id": "f1f05b86-3123-4f57-85e9-faf9b9fa100e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "75044404-df4f-407b-8b10-a32b67fc2f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ed8d91-7988-4975-8c90-d719ccf988ca",
        "cursor": {
          "ref": "f494efa3-91f6-4e06-9fbb-979f8ed128cc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c17fdcaf-4857-482a-bbd5-1a23262f3fda"
        },
        "item": {
          "id": "70ed8d91-7988-4975-8c90-d719ccf988ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6d16eecd-d4af-4c43-8e68-cbc9057265ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0879971-984c-4bae-bba1-50fb3880fe07",
        "cursor": {
          "ref": "a73ae81b-9afd-4ea8-a447-30a5e0355012",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c95ae7a1-b707-4ab1-aa0a-d8fda86caf9e"
        },
        "item": {
          "id": "b0879971-984c-4bae-bba1-50fb3880fe07",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d00dfebc-5ace-4454-bdc5-0564831e3658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a98b8be-ce97-4515-b01e-9dbc963d5581",
        "cursor": {
          "ref": "40286c29-612f-473f-ad4f-9e85e51e2de0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "10bdb7e2-5445-416c-bb98-a99d937585d6"
        },
        "item": {
          "id": "0a98b8be-ce97-4515-b01e-9dbc963d5581",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d73f5477-bdf0-418d-8769-931e6d5a2319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3956815e-fe8d-4fa2-9209-7583bf10a48b",
        "cursor": {
          "ref": "ecfc7971-60b1-4dc6-83d2-a5baa269b674",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "364471c3-6ff2-4241-9db2-6ca1e4654cc7"
        },
        "item": {
          "id": "3956815e-fe8d-4fa2-9209-7583bf10a48b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6d153eb2-5774-4ece-9f09-a1542a0b6468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1dbf98-c395-4602-86d0-eefe25b37b6e",
        "cursor": {
          "ref": "81193856-47e4-49da-b4f8-3fb60f65c1b8",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0398638e-3a7c-4c48-bea5-57aebbadff92"
        },
        "item": {
          "id": "ac1dbf98-c395-4602-86d0-eefe25b37b6e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab9b39fb-9a2e-4d8d-9072-721466c6a533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2d263b-9a0f-46c5-93d1-2dca785d2e62",
        "cursor": {
          "ref": "3ba8b0e4-814b-4b31-8a58-de1c9814e0e5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5bee05aa-9c26-480b-8cfc-f2a3ff5d60ae"
        },
        "item": {
          "id": "2f2d263b-9a0f-46c5-93d1-2dca785d2e62",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f45f7984-7d8a-4cae-9072-698785e016ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d952ec80-2fc0-4eb6-93d5-0b955cb39eaf",
        "cursor": {
          "ref": "631b82bd-5247-4803-9a67-71efddea7b59",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "72e47a59-3ead-41a7-a0f3-4f9794ecd971"
        },
        "item": {
          "id": "d952ec80-2fc0-4eb6-93d5-0b955cb39eaf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bfc915cf-1d5d-4cc6-a9a0-06d04547d2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5116252-56d0-445d-9f53-bd4b53d7662c",
        "cursor": {
          "ref": "e926bfca-4fcd-4930-aa25-1cbe2eaa4f94",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "176bcbc4-a6b6-4246-a266-c9d03b28d79f"
        },
        "item": {
          "id": "b5116252-56d0-445d-9f53-bd4b53d7662c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "156ccaf7-9a44-431b-8c85-2840c9577c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8ece7a-8fea-4929-97b4-a013177c0504",
        "cursor": {
          "ref": "9677cf82-85ef-4c1d-b9cc-b4effe80bda5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5492e538-68e3-4d5e-be8e-dcf5e5c43cbd"
        },
        "item": {
          "id": "2e8ece7a-8fea-4929-97b4-a013177c0504",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bbe18f4e-fe45-4144-a9e1-8e875ef3c673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89968a0a-967c-4ab1-b1b4-b37fac3e2ed3",
        "cursor": {
          "ref": "bc9295ed-f7e4-40a8-a5ab-3db3ca0fdc8c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ef7655a5-c260-43d5-b572-f554886e508e"
        },
        "item": {
          "id": "89968a0a-967c-4ab1-b1b4-b37fac3e2ed3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e4ab93ab-c075-4d20-8eec-a93b7a592332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cc684c-21c5-42a0-ae2d-89d08f4669dc",
        "cursor": {
          "ref": "ecd7c37d-052d-4af3-8057-3aaac425dd2d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4256f252-a2b3-4e94-9ee1-6883887b9a95"
        },
        "item": {
          "id": "a5cc684c-21c5-42a0-ae2d-89d08f4669dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "77387991-1591-4a67-b318-4bdd90801e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ea147d-a980-4780-a89c-414d8c3308db",
        "cursor": {
          "ref": "3b8b7fcc-f04b-48bb-8138-7268d42e0acc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0be4b698-425d-4cf6-a37e-b50eaead25f2"
        },
        "item": {
          "id": "e9ea147d-a980-4780-a89c-414d8c3308db",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa5fbb6e-9f13-4346-b8fd-51f96dc320f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6e3cb7-bfbd-4842-b4d7-3090ac39210c",
        "cursor": {
          "ref": "1030e76b-8b32-48d2-aada-9443857f46bd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7ce3ed4d-b815-4429-b56a-bdfabf29a953"
        },
        "item": {
          "id": "ee6e3cb7-bfbd-4842-b4d7-3090ac39210c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "879a53d5-a60d-4310-823d-032e58af0e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8944f99-81c3-48a4-b886-65d95f1f784b",
        "cursor": {
          "ref": "c5e889c7-e621-403e-b1f7-068d0de73014",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4ebc2dd-c1e4-4c01-9d95-e6d21ebea0e8"
        },
        "item": {
          "id": "a8944f99-81c3-48a4-b886-65d95f1f784b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0df420e9-7997-4dbd-b3d3-d43c1a050900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d39cdf-dc79-4e40-8a41-156694859277",
        "cursor": {
          "ref": "986ea135-85a5-483b-8ab2-7b92058b3d88",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3f4c8629-5f42-4f4b-a5a4-9323d0cb23d0"
        },
        "item": {
          "id": "d8d39cdf-dc79-4e40-8a41-156694859277",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e79fdbcb-0f4a-4716-9892-707b755082f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29751d05-9253-45d9-bdb3-b96188122e38",
        "cursor": {
          "ref": "20841736-22d0-4119-8378-ddc2b45ad58e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a91974ba-bb76-4b32-8052-c824c43c5b30"
        },
        "item": {
          "id": "29751d05-9253-45d9-bdb3-b96188122e38",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "77f9ca7d-e155-4c83-8d81-cdf5346913b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1557d69-320b-4682-823d-24cc33130d6b",
        "cursor": {
          "ref": "5ebe92d8-e76d-4e61-be6d-1d4327beac9c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8027c82c-e1f0-4c10-9bc5-449b870c896e"
        },
        "item": {
          "id": "c1557d69-320b-4682-823d-24cc33130d6b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4171b834-3257-4304-9a21-3dcf51e9cb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b18b346-ff6d-4884-8902-2918680d9c38",
        "cursor": {
          "ref": "caacb3c1-7ccd-4de5-89e1-cb7369aac7d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "182b3ab6-433d-4602-943e-6a1147f7b4df"
        },
        "item": {
          "id": "4b18b346-ff6d-4884-8902-2918680d9c38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b6abda60-06dd-415f-bea2-9e9b6ba9a672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54788cb7-8083-466f-9c11-60b4c519548a",
        "cursor": {
          "ref": "ed6638a6-3849-44ce-985c-541e8cc426e7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f7ac30e-a70d-436f-9102-808b59dbd215"
        },
        "item": {
          "id": "54788cb7-8083-466f-9c11-60b4c519548a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fc60a7ab-29db-472b-9c6f-6b8ae49ea4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7005f0d6-1c87-487c-ab7a-9834bf2fa002",
        "cursor": {
          "ref": "80e74633-88b2-40f3-8a63-fdbb6d298d01",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "56471734-c8bb-449f-ab91-83bf0c90f9f9"
        },
        "item": {
          "id": "7005f0d6-1c87-487c-ab7a-9834bf2fa002",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c0b6698e-e310-4b9f-b203-8d2c748ab5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367626de-ad83-4b42-9309-7d537a94eaf9",
        "cursor": {
          "ref": "d3ad9730-968d-4e33-acc5-faa9bc86122a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "218d72b1-47af-4c5e-a02f-9d9bc6463675"
        },
        "item": {
          "id": "367626de-ad83-4b42-9309-7d537a94eaf9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e85336d-f6de-4693-89ca-7cbc5b7e0c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b0bc3b-3d80-4388-a441-59c1c16422df",
        "cursor": {
          "ref": "9c260bc9-5724-49cb-9b77-9edb46e5ca78",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c7dc4869-e84d-4eb9-b65c-53a0d0712662"
        },
        "item": {
          "id": "c4b0bc3b-3d80-4388-a441-59c1c16422df",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "48c8214e-b12e-40d3-85a2-6c8c93c94edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b4c097-29f9-492a-8296-fa4ffe0efd1b",
        "cursor": {
          "ref": "bb766923-5657-4a67-8daf-0ce658faff31",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0d11ac17-453d-45bd-9a9f-ce43b26109d3"
        },
        "item": {
          "id": "91b4c097-29f9-492a-8296-fa4ffe0efd1b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2ad52abd-b171-4e07-af0f-a472d305e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ecc236-e5d8-4334-b392-82febfb53be8",
        "cursor": {
          "ref": "af417be3-14f8-41bd-bf6b-130ee3bb098d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9d73bae0-a983-4559-aeb0-1e71e4d0d380"
        },
        "item": {
          "id": "00ecc236-e5d8-4334-b392-82febfb53be8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49547dd3-fe17-4468-8630-4105c4f76c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0866f7af-1d3d-4432-8231-8164af6d9a28",
        "cursor": {
          "ref": "cfea0266-9c67-4004-8560-7c72be010c35",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "097c9b6a-ec7e-4c9d-b690-63665fb1b13c"
        },
        "item": {
          "id": "0866f7af-1d3d-4432-8231-8164af6d9a28",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "71c0df4f-0d8c-463c-bedd-f8c1a347a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17475116-7ce1-43ff-a2de-75fe0347bcef",
        "cursor": {
          "ref": "3089be40-da45-49d6-be76-c28b5595f84e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f6d8367-99b9-44d9-958d-716cb4d083b2"
        },
        "item": {
          "id": "17475116-7ce1-43ff-a2de-75fe0347bcef",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7965f37-8172-4dfc-9d2c-96cc0f7640c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d8b708-26b5-40f4-b762-1c081a8da49b",
        "cursor": {
          "ref": "65525883-8b06-48e4-9a61-5e360de5f16e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ebf19a9d-fbd1-487b-8eb4-6138c4b6a5a7"
        },
        "item": {
          "id": "59d8b708-26b5-40f4-b762-1c081a8da49b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "551800cb-d9c9-4641-a935-a84e87ae438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a083cae-efe9-4519-a5dc-a29b7268ad21",
        "cursor": {
          "ref": "b81253d0-c6e5-4985-a611-65dee1a25ecd",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c59dc432-fea6-4d5e-8614-debadd16e547"
        },
        "item": {
          "id": "5a083cae-efe9-4519-a5dc-a29b7268ad21",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bd874da1-a344-4c6b-ad8b-b5335fb580f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e68d1a-aa6c-47c9-a48f-8ab902d771d1",
        "cursor": {
          "ref": "e370607a-41db-4170-9840-df03fddf1fdb",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b6e68f44-4764-4ee2-adfd-ae76a87a261d"
        },
        "item": {
          "id": "e9e68d1a-aa6c-47c9-a48f-8ab902d771d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3044a0d7-dc39-48ed-93cb-f81974cd3d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff49cb6-a876-4c51-96f6-bad5c781cf61",
        "cursor": {
          "ref": "395f8360-84db-4233-ae50-aeb6a3ef3d03",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bfc68564-2780-4c72-bb0f-d8ed949d2ae6"
        },
        "item": {
          "id": "8ff49cb6-a876-4c51-96f6-bad5c781cf61",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4b1a6ee5-7682-4ba5-973b-7c9efea4b3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f400d8c-3c05-4d01-afc3-6463204b687c",
        "cursor": {
          "ref": "d48a802e-3331-4425-a966-ad1656ed318f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "651d228d-a5fc-4ef5-a711-13032e856dcb"
        },
        "item": {
          "id": "5f400d8c-3c05-4d01-afc3-6463204b687c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "95879658-2c13-4790-89ea-bc8707f39329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69798522-fc26-4486-b908-6278c8666ce2",
        "cursor": {
          "ref": "81528434-f23c-4b23-a797-effc866adf03",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1f27af4a-a00f-4396-8f8a-c5a92a2e7e26"
        },
        "item": {
          "id": "69798522-fc26-4486-b908-6278c8666ce2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a438ea0c-460d-4046-a13d-68cdce6753d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e45dfc0-6cea-4fa6-aacc-f28b594d17c6",
        "cursor": {
          "ref": "8de24bdb-cacb-4204-895c-f737391f73a4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "edbe2e98-819d-4a86-90d4-63c7b57d4a7c"
        },
        "item": {
          "id": "1e45dfc0-6cea-4fa6-aacc-f28b594d17c6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bcd4f448-6e2b-4096-bc0e-69ab49398280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64162a7-fbbf-49cb-bce1-418891062b2c",
        "cursor": {
          "ref": "38dca2d3-8c10-4a70-a10d-b33345ffef21",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "49d2b610-e355-4c44-916c-a240a42eb0ce"
        },
        "item": {
          "id": "a64162a7-fbbf-49cb-bce1-418891062b2c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f1cf197b-b19a-469b-ad52-40680595d108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b99ebf-92c8-41ab-b5fd-8ddca84ec29c",
        "cursor": {
          "ref": "9d4576dd-2b56-45cb-8517-5f6a6e325f81",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e26d28b-b733-46e0-8f85-03cd7cd372e1"
        },
        "item": {
          "id": "62b99ebf-92c8-41ab-b5fd-8ddca84ec29c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "df69e302-1ae1-492d-aae8-62be055ff1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b446cb3-ecea-4ae4-9eea-364fc1b3db46",
        "cursor": {
          "ref": "f291521f-ffc0-42a0-9b88-37ce01befe69",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1737018e-2dcb-4f6b-9f69-f87dfbf6f640"
        },
        "item": {
          "id": "0b446cb3-ecea-4ae4-9eea-364fc1b3db46",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "aa5d5af2-9535-4358-b00a-347d07a04345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0025f60b-091a-42cd-bf66-c7fe3c96f3fe",
        "cursor": {
          "ref": "01805b7f-2550-429b-96b5-369245b25bc2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "699308c7-fafc-49be-ab2b-98c9682c719a"
        },
        "item": {
          "id": "0025f60b-091a-42cd-bf66-c7fe3c96f3fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "66554bc7-d54f-4b9f-bb07-a0e9e1a722a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a2b01b-c6a8-43eb-b30a-71dd05d366d6",
        "cursor": {
          "ref": "f71af7b6-5d86-45ad-b1b6-889d051b491c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3095eb6a-5a96-4156-aa69-95f84e822ad5"
        },
        "item": {
          "id": "c7a2b01b-c6a8-43eb-b30a-71dd05d366d6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec76ab65-3c62-491b-9c99-39e573e17848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6afbf0-1a87-42b3-b4a1-ccf1c8c5597c",
        "cursor": {
          "ref": "58ff3d6f-e929-4c6a-883a-93e17caea398",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "33dfed30-43d3-460d-8eba-766773a17499"
        },
        "item": {
          "id": "9a6afbf0-1a87-42b3-b4a1-ccf1c8c5597c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bce3ba99-e7d9-4fff-9b65-119fd058fd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c230bc-39a2-4d2b-9997-026dde697ad6",
        "cursor": {
          "ref": "00088caf-53f0-45f7-bd92-660a49b9df68",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0fef71c0-2d25-46ae-b311-62bf0e7a75a6"
        },
        "item": {
          "id": "d5c230bc-39a2-4d2b-9997-026dde697ad6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f99b0c0c-4277-4f6a-afe9-548a9c88010e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25401cc5-a115-43c8-bfec-f58fdd43249f",
        "cursor": {
          "ref": "e13d7f8a-756b-4356-8f2f-4f311f5d7f5e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be10aac8-f1fa-4319-ab27-59e5dc33735b"
        },
        "item": {
          "id": "25401cc5-a115-43c8-bfec-f58fdd43249f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "953e8476-2837-4249-ac72-9038f5533e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cb69f8-032a-491e-9691-a074fae58424",
        "cursor": {
          "ref": "9d840977-8e9a-4ffa-ad84-8dc1b003f20d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7dc9887b-81ba-47cf-8973-5f2820eae727"
        },
        "item": {
          "id": "66cb69f8-032a-491e-9691-a074fae58424",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c1965931-8c71-4335-b734-b647fb108e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff66219-a874-4763-b448-4371741cdf70",
        "cursor": {
          "ref": "ec35fe8f-d12b-419e-8493-7a23ee7e6c29",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "40f05c06-8dac-4dab-882d-6e0002842b33"
        },
        "item": {
          "id": "7ff66219-a874-4763-b448-4371741cdf70",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be7843d5-7786-4be9-96eb-3a859bf35f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d4fbf0-a3fb-4a7d-a949-ee191921da3a",
        "cursor": {
          "ref": "1d2fe7a0-9906-4770-b9c5-151d06c6afaa",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f893826-bcc3-4450-9acb-5b9ed886f5d8"
        },
        "item": {
          "id": "68d4fbf0-a3fb-4a7d-a949-ee191921da3a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "75b68f44-8537-4df1-8c8c-d75eb0f0278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266d47b4-0f89-4df5-8794-e932ec9d7711",
        "cursor": {
          "ref": "770fdd8c-4cdf-47a9-b0fa-b9433d942787",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c4956b3b-5948-4f99-9671-bf9d6f6f9b35"
        },
        "item": {
          "id": "266d47b4-0f89-4df5-8794-e932ec9d7711",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ea81a33c-8d98-42b6-aaab-93dfd5755bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3881b9f-2295-49f3-bca6-7a98dc03e4e8",
        "cursor": {
          "ref": "e909a57b-cde6-4791-9856-0ae34c16ad9d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6230afb4-9696-4ce7-981a-5709e5afaa6c"
        },
        "item": {
          "id": "b3881b9f-2295-49f3-bca6-7a98dc03e4e8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ebe3e5f3-7add-4edd-9c42-c3c9fdddf09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826365d8-6582-4dee-850b-38c29ba25e8b",
        "cursor": {
          "ref": "ca3b7b68-7fc4-4398-a388-49364b3bd0fb",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "65295731-b40a-4b54-8daf-d8a3706dac20"
        },
        "item": {
          "id": "826365d8-6582-4dee-850b-38c29ba25e8b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8ce6aa95-c630-464d-b7bf-e9ffdd7ec05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aa4181-1366-47a7-8bf5-2dc2d4e7e3ab",
        "cursor": {
          "ref": "51705dcc-1f07-40c6-ac81-457a17b9fe2f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d710574f-8930-4d5e-b3e0-12682bbe0825"
        },
        "item": {
          "id": "f6aa4181-1366-47a7-8bf5-2dc2d4e7e3ab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c80f77b4-bbc6-427d-9708-876fb2c2e2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dfbcf2-d8dc-4d60-8fd5-819f213e99d7",
        "cursor": {
          "ref": "bf09347e-1075-49d5-b5f8-e329aec1d488",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5ee7b91f-4bb7-49da-8068-ab5f12875e70"
        },
        "item": {
          "id": "09dfbcf2-d8dc-4d60-8fd5-819f213e99d7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b058783a-dc63-4e07-a8fc-b19e07c0a35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea703700-ce3a-426b-99f4-ae4c6bd43bda",
        "cursor": {
          "ref": "318ad709-6ea7-4169-a09f-0971a6e23065",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c8cee95d-f114-405f-b894-ea9f0a194433"
        },
        "item": {
          "id": "ea703700-ce3a-426b-99f4-ae4c6bd43bda",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "257d96a3-826d-418c-9609-40dd039013e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35541d9c-7e55-4a9d-81f4-5306d2352db1",
        "cursor": {
          "ref": "bd9945c3-d035-4682-bf0c-536619b5a459",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b09ebc7c-de72-4b13-9500-259bf8d45c28"
        },
        "item": {
          "id": "35541d9c-7e55-4a9d-81f4-5306d2352db1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fce5321b-6d3a-40ef-90a1-fe024276e023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691190d9-6d38-45c2-bc94-f3be0b2df1a1",
        "cursor": {
          "ref": "492edc1a-36e9-40d8-8726-5ad708b2c398",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8f8a223c-e8c4-43af-8ef3-3f2c02892d26"
        },
        "item": {
          "id": "691190d9-6d38-45c2-bc94-f3be0b2df1a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8e3f90d5-85ba-47b4-82b6-4805cf62f90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907056bd-0e3d-49b7-8111-8ef85d55cb19",
        "cursor": {
          "ref": "7e7c38dc-f59d-4a24-bcfb-0c1e69673323",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "322b54e4-27a9-4960-a5f0-6e0810c09fa9"
        },
        "item": {
          "id": "907056bd-0e3d-49b7-8111-8ef85d55cb19",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87ab016e-1d24-47bb-99d9-e75e238e1627",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37176d45-46ad-495d-958f-156b511ff733",
        "cursor": {
          "ref": "53260714-9ba1-483b-a6ac-7967dc26d394",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "76c5e259-7ee2-4e16-b89a-43ab2a84ca6b"
        },
        "item": {
          "id": "37176d45-46ad-495d-958f-156b511ff733",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b7c95f06-c258-4483-9bbe-256a961393da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "660a419d-b53e-40c0-8990-a1f2750af18f",
        "cursor": {
          "ref": "ead99a03-5198-46cc-8654-83d507f9f30d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cfd134d-693c-446f-ac7c-6ab182665dfa"
        },
        "item": {
          "id": "660a419d-b53e-40c0-8990-a1f2750af18f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "56ede94b-bf7d-44f2-ba99-229f936ec00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "23876e61-d8a9-4a8d-b9d8-39293bd04789",
        "cursor": {
          "ref": "34c5b41f-28e8-488a-bc31-3864d1eab692",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bbaa913b-827e-4ec3-b5cd-ec2acee8f880"
        },
        "item": {
          "id": "23876e61-d8a9-4a8d-b9d8-39293bd04789",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "caa76fc0-89e6-4a4b-b2b8-d59caddf85af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c43f0cd7-9613-495a-9595-141975b8c1bb",
        "cursor": {
          "ref": "6eec8074-a375-48e2-8536-5f7cb9191f9f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39911229-bf49-4ff1-bd5c-25cb2aa272d6"
        },
        "item": {
          "id": "c43f0cd7-9613-495a-9595-141975b8c1bb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b0cd6bd5-46a4-4a36-83ff-434c9386d828",
          "status": "Created",
          "code": 201,
          "responseTime": 4587,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c90d19b-bb76-4fdb-8ecf-4a9335bd45bc",
        "cursor": {
          "ref": "8652d3c7-e3c3-4e68-b3dc-822ea4b5da01",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c0e0d3b-0877-4b70-8a68-ce5ed8f39a1d"
        },
        "item": {
          "id": "1c90d19b-bb76-4fdb-8ecf-4a9335bd45bc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "271e1678-f769-4eae-baf5-38b4d3fd3e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "28bb3093-827c-43a5-96b0-509a1b77a709",
        "cursor": {
          "ref": "6be478c6-ca9c-4b77-bf5f-2b242e1af71f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04f4cc44-2960-4af7-bb17-aab1151dab25"
        },
        "item": {
          "id": "28bb3093-827c-43a5-96b0-509a1b77a709",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "67e434d1-dd71-4cba-b1a5-eb36325c1c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "977c03bf-9447-4f96-94b2-45ab20313762",
        "cursor": {
          "ref": "3857e732-4ff6-4100-b8da-0e66de57f8b6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4680b9d7-93a0-48c6-ab2a-b33edb528982"
        },
        "item": {
          "id": "977c03bf-9447-4f96-94b2-45ab20313762",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6454ff52-5df5-4687-ab3a-007873a8953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c4ec62-395d-44a4-83c6-39a633b1c475",
        "cursor": {
          "ref": "489adfd9-4288-4142-86bb-302ed4c27aed",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "70fb8e53-7a77-46cb-a5e6-ae4824ecf3e5"
        },
        "item": {
          "id": "61c4ec62-395d-44a4-83c6-39a633b1c475",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "05b0b0e8-0289-46a7-b115-81e5c26b0d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15007909-0b95-48b8-9bec-124af3087da4",
        "cursor": {
          "ref": "ce95dded-1729-40ba-9a53-395f5d97a70c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5adb3ac6-dba9-479f-909e-e932525fcdf4"
        },
        "item": {
          "id": "15007909-0b95-48b8-9bec-124af3087da4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18e1b589-4630-4868-929a-ae08f74a1a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955122e4-cd82-49e7-9beb-d1b7eff85847",
        "cursor": {
          "ref": "c29be0af-39f1-4fb2-b09e-4e7ba1a32cac",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "50fd3834-6303-49f4-a973-60917f8c712c"
        },
        "item": {
          "id": "955122e4-cd82-49e7-9beb-d1b7eff85847",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1638833-fb0d-43bf-8a58-24b6b7cce233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75818f01-edd5-474b-895d-b03ff5aaa941",
        "cursor": {
          "ref": "0a076e53-8036-459e-b4df-61f9d803c0b5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7817534b-8bf4-4a9b-930a-bdf33f31c558"
        },
        "item": {
          "id": "75818f01-edd5-474b-895d-b03ff5aaa941",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3b841b2f-ad30-4bb8-8f47-132e3e55cc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff403c02-0925-4ac0-8e23-b1f2ed8d5ff7",
        "cursor": {
          "ref": "f2cd0bbe-5a5a-42e2-8025-f83764524089",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d355254e-b0e3-429a-ba9b-eea21ba7a57e"
        },
        "item": {
          "id": "ff403c02-0925-4ac0-8e23-b1f2ed8d5ff7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc5928e8-f348-4c70-9056-b62f77c9f6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98404b92-ef16-449e-a5fa-de3224214ac1",
        "cursor": {
          "ref": "26b51666-c16a-489c-a165-6f28be202f6d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "566cee61-ef4c-4307-a8fa-0e964cd8792e"
        },
        "item": {
          "id": "98404b92-ef16-449e-a5fa-de3224214ac1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6bb92180-e3f6-4861-bfd8-2f521f0c96fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe514f8-8f47-4152-9aba-c714e25ca4c3",
        "cursor": {
          "ref": "1cd1fe5f-47a8-4fb0-93c8-13649d68399a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c3c1280-96b1-4782-91af-2cf847fd5154"
        },
        "item": {
          "id": "1fe514f8-8f47-4152-9aba-c714e25ca4c3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2705a29d-e5ef-4973-ac3b-899cdce4824b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1374cd-bb90-4e97-9459-52e4f267af80",
        "cursor": {
          "ref": "cdeebd71-1c09-4da6-9212-efcfc5330750",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0ba6abcb-b2fa-481a-996f-beeabd8ed6a9"
        },
        "item": {
          "id": "8e1374cd-bb90-4e97-9459-52e4f267af80",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e60fedb-f600-4d83-82fa-c1ae21b4d8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c56b5b-82fb-4459-9eb4-a8112813fff2",
        "cursor": {
          "ref": "361c5664-e4dd-405a-bb52-90e77fea5a94",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "10532b98-cc9d-48a2-bd50-86fddab79c7a"
        },
        "item": {
          "id": "56c56b5b-82fb-4459-9eb4-a8112813fff2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c773073c-8ca3-4e6b-8085-3291d5e32afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300acc1-2e2f-4ddc-b48c-65e748b674cf",
        "cursor": {
          "ref": "a7a72700-fc91-490e-8bd9-65db26f8b85f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5cb7b063-9510-40d1-a83a-52ed9ebbf774"
        },
        "item": {
          "id": "9300acc1-2e2f-4ddc-b48c-65e748b674cf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9fdb8ad2-9f4f-4649-b100-fd6894ad660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae5b0c6-31c2-49f1-8c40-41fb676ed7e5",
        "cursor": {
          "ref": "14bba058-2254-4873-9c08-ad9c9a4480e2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b444405e-be1c-4abd-96ee-3a99c10e5524"
        },
        "item": {
          "id": "bae5b0c6-31c2-49f1-8c40-41fb676ed7e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a38d3537-2791-4770-a8ea-26916b5eb057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9397eaa7-45e8-418e-994d-7da7d1b2424a",
        "cursor": {
          "ref": "75d1be8c-d656-4da0-9a6c-7ae26c75e741",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9f175aaf-2ad6-4200-ab36-c401fcd4ae34"
        },
        "item": {
          "id": "9397eaa7-45e8-418e-994d-7da7d1b2424a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4daba835-ca46-48e4-b42d-c5e2c1167940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5c731b-ea44-4008-91b2-0deddc183241",
        "cursor": {
          "ref": "8946ebca-e209-42d8-b60f-67bd7b826f7f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f8a1114-1ff9-45df-ac18-32968ebc9c60"
        },
        "item": {
          "id": "5a5c731b-ea44-4008-91b2-0deddc183241",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d8b116f-9e17-420b-ab2c-316a78bb7268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4658b46d-f939-4d8f-bdcf-e3aa67032e18",
        "cursor": {
          "ref": "f8ad6320-f437-493c-b7a5-c6d1ec6caf13",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a2b5a886-959d-453a-8914-9d6748b4896f"
        },
        "item": {
          "id": "4658b46d-f939-4d8f-bdcf-e3aa67032e18",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b1d6116d-6371-4a41-a558-177cf57d2720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac31e228-c73f-41d1-9351-4c86072c3d82",
        "cursor": {
          "ref": "a113d03c-5a18-4d21-ba9f-389ad65e5ad0",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "206df9ef-5eb3-4480-a2a9-1813e85be7c3"
        },
        "item": {
          "id": "ac31e228-c73f-41d1-9351-4c86072c3d82",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f124c243-19b5-434a-9d89-c0e41954a648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4c31e4-23c4-4dff-ab00-7ad0c60f3d36",
        "cursor": {
          "ref": "7fb64b3f-6d11-4d37-8881-b5ce433d5acf",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9acfedd8-e6a9-48ca-a7cb-292295254756"
        },
        "item": {
          "id": "ea4c31e4-23c4-4dff-ab00-7ad0c60f3d36",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3094b4ca-1a7f-4384-8431-12983cbdc987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd0924-adfd-4b2c-b611-e878834c1153",
        "cursor": {
          "ref": "658835f9-99b9-4e47-adca-49df72b8923b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "aff0c62d-cfee-4004-9a35-441e1382bbcf"
        },
        "item": {
          "id": "7acd0924-adfd-4b2c-b611-e878834c1153",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5e319a88-867a-4875-928d-32864bbefdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eda35d-c641-4249-a206-ab1091f7b962",
        "cursor": {
          "ref": "d0b141ea-8483-4fcc-84c3-40196eef218c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4d80ea84-98c9-481e-99d4-9ec725a6e852"
        },
        "item": {
          "id": "29eda35d-c641-4249-a206-ab1091f7b962",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89a27d9f-4aaf-423f-8dc4-2fbcc46f6b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2208de5c-c19b-4150-b009-cf5a56c268e8",
        "cursor": {
          "ref": "cc4e544a-e6dd-432b-93c2-24717168dd88",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0437fa03-4c73-4b0e-8de4-42671b01c193"
        },
        "item": {
          "id": "2208de5c-c19b-4150-b009-cf5a56c268e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3828c62a-1cfd-4347-a38a-f39bb5ae936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f6e504-4133-4df8-916e-d14a90177b69",
        "cursor": {
          "ref": "3e6114f3-52a4-4d5d-b2a8-57dd63a8b506",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86ed03ec-f10a-44b7-b094-91a5ae0eba32"
        },
        "item": {
          "id": "32f6e504-4133-4df8-916e-d14a90177b69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1748dc14-6719-4ac8-a177-89bf6ea50b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b82ea4b-ed23-4a44-a6d5-a4c04a4e4561",
        "cursor": {
          "ref": "536d4430-71cb-4fcc-b07c-bb371de61617",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1874be1d-6955-4ef7-ae14-fbbdc4526b76"
        },
        "item": {
          "id": "7b82ea4b-ed23-4a44-a6d5-a4c04a4e4561",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cca15af6-fb23-4a96-b983-102d4a3627a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a71785d-5df3-4b2d-97a8-1616c1b64624",
        "cursor": {
          "ref": "413ab22e-a12f-4a60-80a1-ce78f7412f56",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f0b7e457-f8c6-4d28-9cc9-f1dc185788f2"
        },
        "item": {
          "id": "2a71785d-5df3-4b2d-97a8-1616c1b64624",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8eac5e6b-abaa-4031-a5c8-cc0a3768f46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731327b9-a46c-498a-a3d9-b6da5d3bdc72",
        "cursor": {
          "ref": "e1ab78f6-6062-4ee4-a834-2aecf05a009b",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dcb63f51-fd3e-409f-b992-945650914608"
        },
        "item": {
          "id": "731327b9-a46c-498a-a3d9-b6da5d3bdc72",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3309778e-ba72-4317-9c1b-362a08588b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8dc48-223d-4cad-997f-2075aec6d238",
        "cursor": {
          "ref": "5c8038d2-13a1-46d6-a8d5-67653c64d223",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "673fed25-d4e6-45de-b018-583b94b9323d"
        },
        "item": {
          "id": "6ea8dc48-223d-4cad-997f-2075aec6d238",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5e32102b-f89e-43d2-ac16-b94bdd11aab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18fecdd-e511-4b1c-aa2f-273ce6e14c69",
        "cursor": {
          "ref": "b42d3db9-f472-4721-9663-d584e4f72103",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "46ae7933-ea09-486f-a8e3-3d1e9f625613"
        },
        "item": {
          "id": "e18fecdd-e511-4b1c-aa2f-273ce6e14c69",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3dbd3ae3-7af9-4b3b-83a2-1cb11e4bd080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41b6971-20c8-45b7-911e-ca782964f20d",
        "cursor": {
          "ref": "3b3caa8b-bbb6-416e-94e0-965939815d67",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ffafde13-58c2-4d3f-8419-f9a9e5078e06"
        },
        "item": {
          "id": "a41b6971-20c8-45b7-911e-ca782964f20d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1233fd8e-69af-4489-9f0e-25158ccee27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fd3fce-d36c-4bce-8726-06e8a55b4c2b",
        "cursor": {
          "ref": "838ae75f-49df-4faa-98f8-adfe682f7031",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ca36cbd-af19-4227-a953-514026b32cde"
        },
        "item": {
          "id": "57fd3fce-d36c-4bce-8726-06e8a55b4c2b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05ca3103-d74b-4ce1-8583-26298aa1d2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ef22d-fe57-4c69-aa2a-959f647a6369",
        "cursor": {
          "ref": "5a5ac383-0946-4150-b1b8-57093feced9f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e9019ba0-a2e4-435c-a949-bb9c76581d79"
        },
        "item": {
          "id": "de8ef22d-fe57-4c69-aa2a-959f647a6369",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fac35a2e-5ab7-4287-8274-e4441c3488e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb8e8c4-2948-44a0-a4ca-d0fd1bc2d322",
        "cursor": {
          "ref": "8f303304-413d-4d64-94d1-7f720087866f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4a72160f-9eee-401f-a3d7-4ff69a6ddaf1"
        },
        "item": {
          "id": "ccb8e8c4-2948-44a0-a4ca-d0fd1bc2d322",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b59534fe-5bb9-48a2-8d8c-f0dcb9d3e0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bc686b-62b0-450b-bae8-461bdb509593",
        "cursor": {
          "ref": "af389f86-94b1-4a8c-8d23-8b063bb840a4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cff733f1-31b1-4870-9ed3-53f612f2638f"
        },
        "item": {
          "id": "a8bc686b-62b0-450b-bae8-461bdb509593",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fcc40ff9-d983-4edb-87da-79380ac3a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc5ed8e-e1c8-4573-b5e9-67751b33cb8f",
        "cursor": {
          "ref": "ba477b9f-1241-4115-b134-3bb0295b37bd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "911c7c5e-9c03-424d-9f55-66b3cbfa600f"
        },
        "item": {
          "id": "1cc5ed8e-e1c8-4573-b5e9-67751b33cb8f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dcdca481-7703-4a2c-80e7-d186cc57377a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7837cba5-3838-406f-bbf6-478ba240b320",
        "cursor": {
          "ref": "89887e6d-a615-49a8-b818-b31801dd1356",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "68f143e1-ed76-42f5-982f-49c0a033083e"
        },
        "item": {
          "id": "7837cba5-3838-406f-bbf6-478ba240b320",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a0500e77-60f1-4c4f-89fe-87178808f3c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32888d-53b8-44f9-9832-0748ccced18d",
        "cursor": {
          "ref": "ff2badbe-c715-4c0a-b23a-1a9af9bd597d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f55cd409-33f2-4f06-af9b-8b306bde2b18"
        },
        "item": {
          "id": "8c32888d-53b8-44f9-9832-0748ccced18d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "19622186-cda1-455a-b60c-fe56af6c9c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa2301-b7c1-4a2c-9810-e3f4bad8376f",
        "cursor": {
          "ref": "eaca1e26-4adc-4afb-9196-7ef9f745dc2c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "463460f3-04b5-4edd-8717-8a624be51f50"
        },
        "item": {
          "id": "d2fa2301-b7c1-4a2c-9810-e3f4bad8376f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c782e1f-73d9-4d51-b1c1-03bc5bf59c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e79f07-1d94-4c84-8c63-8bf6c1f5df38",
        "cursor": {
          "ref": "6e2939fc-c23d-4ecf-ad8f-dceac0832ccb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "80e0b824-d185-41c1-a9b1-ce2bda350294"
        },
        "item": {
          "id": "39e79f07-1d94-4c84-8c63-8bf6c1f5df38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2fe44fb-eb14-4bac-9643-1c856ec12c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c93be-cf05-43ed-8c51-9f7bf47e8ad5",
        "cursor": {
          "ref": "b5689905-694a-4c84-a379-1f570fb566a2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3987a9a2-46aa-44f3-a38d-24608112c9b5"
        },
        "item": {
          "id": "ee3c93be-cf05-43ed-8c51-9f7bf47e8ad5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2297efe4-8a2e-469b-a2f4-45c02e2cbf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ce12df-5090-4274-bb00-759dc787aebc",
        "cursor": {
          "ref": "f5a57b04-f652-4991-8326-d8fb78cac55b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4fee3f86-c3ef-421a-922a-93cf42299d76"
        },
        "item": {
          "id": "51ce12df-5090-4274-bb00-759dc787aebc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "479ba7e6-fddc-4570-8191-8f2b4a13a535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63568a6d-1eca-4af1-ac75-30f538f1bea3",
        "cursor": {
          "ref": "9bf3b4ba-1cee-47ce-9d96-6e890a6a784d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8043ea50-1560-4273-abdf-ab20a70011d2"
        },
        "item": {
          "id": "63568a6d-1eca-4af1-ac75-30f538f1bea3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80638cff-bb5e-489d-a4ba-0e35be6b5d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeb79de-a996-4f24-a267-bc01a64b93bc",
        "cursor": {
          "ref": "657e3b8c-6ee3-4738-bc59-73c686763012",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0259033-c4e3-46ed-8ef3-8634a14d7ef2"
        },
        "item": {
          "id": "8eeb79de-a996-4f24-a267-bc01a64b93bc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "592564ad-24c2-4888-9049-426290106648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77673904-a980-4efc-8365-87e3115fc8db",
        "cursor": {
          "ref": "82a21bb7-0659-4056-aaeb-ebe2d66c9250",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4371132c-e4a9-4da8-b88d-771c10159e14"
        },
        "item": {
          "id": "77673904-a980-4efc-8365-87e3115fc8db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "70f76983-feab-40e4-8312-e8d296d77a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cb057b-5cdb-4b26-8d77-8a7a1931136a",
        "cursor": {
          "ref": "866813da-618e-4b23-b905-43b45782cfdf",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0979b783-76c3-4717-a428-a19b8c4f123a"
        },
        "item": {
          "id": "76cb057b-5cdb-4b26-8d77-8a7a1931136a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd3a79e7-3c12-4272-b083-52d1f42bbf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f0d12a-90b7-4bde-b170-8626aa020165",
        "cursor": {
          "ref": "7230f729-386d-4914-abec-5fc461d48187",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c96754b4-6355-49da-b138-dc4baefd4257"
        },
        "item": {
          "id": "d8f0d12a-90b7-4bde-b170-8626aa020165",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ebb3112-dc55-4b12-ab35-2311da3f5326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f7b78-3f79-42bd-ba97-6f91d7bdd571",
        "cursor": {
          "ref": "7cf12946-abfb-48ea-8d9f-fbe3ad3bd42d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1ff862de-982c-4e35-ab1e-a9d156a5c01b"
        },
        "item": {
          "id": "bf2f7b78-3f79-42bd-ba97-6f91d7bdd571",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a6cc6e57-9059-4104-aed2-71270bf63d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d93bf-9e33-4e7d-8f2b-4e32b6949adf",
        "cursor": {
          "ref": "53112cf7-583c-4a95-9cce-94c75caf699d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "09337233-2a6b-47a7-b35a-312dad6290d6"
        },
        "item": {
          "id": "9e2d93bf-9e33-4e7d-8f2b-4e32b6949adf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3243406-fa7f-4bbd-9864-4c69c33aa1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bd2c61-45af-4f53-ab69-5f85275978dc",
        "cursor": {
          "ref": "142b019a-c3f1-4381-8b73-f4654e6ce87c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "81009982-29c4-411a-89d0-0f6f1f2faf04"
        },
        "item": {
          "id": "e0bd2c61-45af-4f53-ab69-5f85275978dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aff4d677-4ab8-4218-ae03-4bfb60f652d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1185b3cc-b9aa-476e-89b1-093e9789dbe2",
        "cursor": {
          "ref": "6eb3c141-4f89-4429-943d-70673b3dd9a3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "790d33df-de3e-4b80-9c74-6073c40297a6"
        },
        "item": {
          "id": "1185b3cc-b9aa-476e-89b1-093e9789dbe2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "719a303d-a438-4457-85cf-195a208d0981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3346935b-23f8-4d43-9484-7ebb8cd090e5",
        "cursor": {
          "ref": "d61af8b7-23a6-4c37-8b6c-01b253ca0088",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e17c6f06-4f35-461e-be22-9af6450da851"
        },
        "item": {
          "id": "3346935b-23f8-4d43-9484-7ebb8cd090e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0b31b3b-1c2a-4c8d-9368-7ba5811bf9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e110c0-c7a2-4c36-b6e3-c993bb417134",
        "cursor": {
          "ref": "64e72c76-ac5f-4b5f-a356-557c1250d519",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b8dcaff-3a57-439f-897e-e61acd83b9b5"
        },
        "item": {
          "id": "d1e110c0-c7a2-4c36-b6e3-c993bb417134",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dda5cfc3-91bc-4eac-99b4-60ce9c59e304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f031b-28f0-48cf-b88e-36d43c1a984c",
        "cursor": {
          "ref": "6e2cf1fd-943d-4586-99c5-54bb01410347",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "def78f9c-3016-4877-aa31-0061ed231748"
        },
        "item": {
          "id": "796f031b-28f0-48cf-b88e-36d43c1a984c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ba41bf73-e839-46c7-8fff-42b596001dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54186321-47b8-42ad-94fa-bf33073bf8dd",
        "cursor": {
          "ref": "20669a59-159e-4b16-8db5-5bc66378e6e8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34420fa3-586d-4286-bafc-bccf765735dd"
        },
        "item": {
          "id": "54186321-47b8-42ad-94fa-bf33073bf8dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb4183d5-978d-481c-82c7-4d28be479264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f54c09a-617d-48f0-87cd-cd797c1dd130",
        "cursor": {
          "ref": "c8cd28c7-6daa-4f88-8ee7-3293b74995fc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d69306e5-ef85-41ef-b2bf-6249df9e9068"
        },
        "item": {
          "id": "4f54c09a-617d-48f0-87cd-cd797c1dd130",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8544760-4235-4358-b8c7-3f000b8d926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ed5e55-45b4-4505-8ea1-53b4523e0ccd",
        "cursor": {
          "ref": "c5cd68eb-4aca-4bc1-857b-47cd2ce39512",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "be4b1312-a2ff-45ef-93ac-608ab53bf65f"
        },
        "item": {
          "id": "16ed5e55-45b4-4505-8ea1-53b4523e0ccd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86d26fb3-f73f-4243-89fd-2b96892e1a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44429cba-e0a3-435a-9e5d-1d5787e3e180",
        "cursor": {
          "ref": "e86f5ff7-9a0b-4185-8fa3-be3cd83b19f2",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "101e96a8-e00f-4dba-a1bf-7e1ab532e856"
        },
        "item": {
          "id": "44429cba-e0a3-435a-9e5d-1d5787e3e180",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac471d73-37a0-4aed-a486-4a2640c146af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c4c284-73b6-4065-898a-a6f420d37968",
        "cursor": {
          "ref": "5c2903e4-1e3c-4a2e-8954-f5e0e109e226",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2a7b3054-ae02-42ea-b254-e3b27a6fae32"
        },
        "item": {
          "id": "48c4c284-73b6-4065-898a-a6f420d37968",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ebf4847-c948-4cb9-893a-d257423a2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0c8188-f3fa-4e0a-8ffb-97db3ad1cefb",
        "cursor": {
          "ref": "b052640d-42d0-4f33-b480-54f7440ef42b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da382e13-803e-4a98-9fea-bf9dbdfe6408"
        },
        "item": {
          "id": "3d0c8188-f3fa-4e0a-8ffb-97db3ad1cefb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "060e08b0-68cb-4f75-87d7-f349113b74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9b7a2f-037c-49e8-b940-e7eaa752d288",
        "cursor": {
          "ref": "3196864b-be23-49f7-a1c7-a42e3e82879a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6f19b852-f7a7-4257-8364-023f62e8b36d"
        },
        "item": {
          "id": "cb9b7a2f-037c-49e8-b940-e7eaa752d288",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f236b7f3-bea3-4831-a2a2-04d608efa0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1846905b-747a-48ce-8713-884d52d4793c",
        "cursor": {
          "ref": "fb5ce874-5830-47fb-9181-cf2c0fade2af",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "afaca785-c4b7-471c-aff1-ef00537c0e0b"
        },
        "item": {
          "id": "1846905b-747a-48ce-8713-884d52d4793c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4981c7f8-9746-41b1-9657-f88b46ac8f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a53a7ed-9091-46f7-82cb-010af1266746",
        "cursor": {
          "ref": "f19b7f8b-6d03-41cb-a818-a25876de96e6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a715d2ff-f056-462e-b61a-9b6f0d058712"
        },
        "item": {
          "id": "4a53a7ed-9091-46f7-82cb-010af1266746",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dbc1cf44-69f8-467f-a51f-019398fd74ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8779cfcb-ec0f-4600-bd32-745d94b98462",
        "cursor": {
          "ref": "adfa1482-8fc2-4b7a-aefb-c8db11c03e0d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a618e6a1-d7cc-4cee-8a21-beeaa6f5116d"
        },
        "item": {
          "id": "8779cfcb-ec0f-4600-bd32-745d94b98462",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4a59e01-fd91-4cfa-b519-82aea1ae38e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e33a53-59b8-4b77-abc5-337b19d97eb5",
        "cursor": {
          "ref": "504032db-802d-4561-b928-1ae0188dd27f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8848370-4374-402e-a4e6-e7da24d7b794"
        },
        "item": {
          "id": "73e33a53-59b8-4b77-abc5-337b19d97eb5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b1642873-a74b-4520-b7b9-8dee8dce243b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef49110-e7c4-467d-8fb3-e4c9ec74b7fd",
        "cursor": {
          "ref": "78647549-2239-4b12-8def-749fd31ed46c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a2ecc392-b84f-408d-888a-90f3927e6944"
        },
        "item": {
          "id": "7ef49110-e7c4-467d-8fb3-e4c9ec74b7fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6011ff24-fae3-4052-84aa-cf7dc25f87c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bfe12f-154f-47ba-8702-6132823cc979",
        "cursor": {
          "ref": "1a8575e1-a56d-4985-a04f-7545eea6b7fa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "476ccc34-da0c-4161-94f0-3fa2c2e6be3f"
        },
        "item": {
          "id": "34bfe12f-154f-47ba-8702-6132823cc979",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1374cb0a-c222-42c1-a8fa-4bbec9e2660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcc0654-821e-49c3-a117-006b102c7b8d",
        "cursor": {
          "ref": "0da2a90a-9978-478c-b5d9-4914656ba640",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0406ba21-c388-484e-96b4-fa6a73fb7948"
        },
        "item": {
          "id": "1dcc0654-821e-49c3-a117-006b102c7b8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7dc47a03-b566-4284-a997-e4003b2b8894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4b7cc1-c906-40f6-881c-583b702db390",
        "cursor": {
          "ref": "1b05ff67-42a8-44a9-88d3-5dc95170ea50",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed93a9c0-80c4-49d0-a1dc-fff4aba84e12"
        },
        "item": {
          "id": "6d4b7cc1-c906-40f6-881c-583b702db390",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8273f1c1-8eba-4a95-9329-9eec615c5a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa87849-ac86-4d44-a790-3a62c65a46e2",
        "cursor": {
          "ref": "cdc4889d-6cf4-4039-9e7c-96eb7a97597a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0ffb582b-3230-4ced-9ee1-9008a203fd36"
        },
        "item": {
          "id": "6fa87849-ac86-4d44-a790-3a62c65a46e2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "38feb6a5-393d-4f33-977f-c78d53bcc15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad3c987-441e-42e8-b8d5-290359ae9e4f",
        "cursor": {
          "ref": "d0909a76-0665-48bc-acb2-b8d185ffec1b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "131b275f-fc9f-4793-809c-9d74a904c18f"
        },
        "item": {
          "id": "7ad3c987-441e-42e8-b8d5-290359ae9e4f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "53459af9-83e1-49d0-9591-b68563a0048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd2be92-1ccf-448f-beb1-edb2cc8868cd",
        "cursor": {
          "ref": "8b9d1886-0a61-4794-9eaf-edd02cebe32e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52d92481-30a9-4918-8c9c-b39fa05da0f1"
        },
        "item": {
          "id": "ddd2be92-1ccf-448f-beb1-edb2cc8868cd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "00641e9a-af17-4aa6-9ad5-c3366b106773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbe3a1d-bdbc-46ef-8e83-5e29c46cef8c",
        "cursor": {
          "ref": "eca205ee-2202-465b-ae71-c3b424685e9c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2363b50c-5af1-44fb-9fab-3ee658b513d0"
        },
        "item": {
          "id": "1cbe3a1d-bdbc-46ef-8e83-5e29c46cef8c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a4b8d973-fed8-4526-8235-329963e59cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b74e02-206d-48da-93d0-cebd264b6c3a",
        "cursor": {
          "ref": "22cccd16-a442-4210-8f66-3b7c636f5eb9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e04461eb-afdf-49cc-8228-6b0397a5de8d"
        },
        "item": {
          "id": "e1b74e02-206d-48da-93d0-cebd264b6c3a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a285ffb7-ebaf-4a79-a01c-be476354e2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d72f6-9238-41f5-8526-02088837b782",
        "cursor": {
          "ref": "c309abf0-db4f-4e90-be0e-ed34851f013a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "91f75504-a434-42d9-9815-ed1ce759ae80"
        },
        "item": {
          "id": "779d72f6-9238-41f5-8526-02088837b782",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8eae7c52-70b7-4058-80cb-3d18f6837706",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc1fecc-9155-4c17-833c-c9d4f7119104",
        "cursor": {
          "ref": "885ac657-9f06-4b5a-abf3-41011ff035f1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "35220fb4-d0f7-40dd-a53e-da7a908d1820"
        },
        "item": {
          "id": "6fc1fecc-9155-4c17-833c-c9d4f7119104",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "469bd997-ff0d-4643-be44-f321619f68d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b944a0d-0fdb-4d94-ad22-a8fd2e789bf4",
        "cursor": {
          "ref": "f2ad195c-2701-43be-89b8-c08ebf2e5fb4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7bc80671-e624-4a5d-a164-72a9aa2edf49"
        },
        "item": {
          "id": "3b944a0d-0fdb-4d94-ad22-a8fd2e789bf4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4218e676-c6ea-4540-9895-2d53ae113b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b4e05c-0ddb-46de-a4ad-edbf58de4490",
        "cursor": {
          "ref": "d2f4bfce-2e87-4fc4-890f-662632f84417",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aea12ec7-cf75-43d4-84d4-acfd14040fdd"
        },
        "item": {
          "id": "d1b4e05c-0ddb-46de-a4ad-edbf58de4490",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b8aef5db-b55d-4c25-bb0d-baeaf68715b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aec6cb3-0e05-470a-90fd-a4ad46574aba",
        "cursor": {
          "ref": "cd556bae-2ada-41d1-bf4d-ac431b098f73",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be2483c0-9eb7-4c5a-a98b-379fd0d4f233"
        },
        "item": {
          "id": "3aec6cb3-0e05-470a-90fd-a4ad46574aba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2c3dedbd-3979-462f-ad5d-b786ff98134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec94a4-6b71-416f-a2c3-d043991497cb",
        "cursor": {
          "ref": "a2e82724-4665-4980-b4d9-6138036e84e4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "abe34723-e651-41a9-8883-be440ac13a94"
        },
        "item": {
          "id": "8cec94a4-6b71-416f-a2c3-d043991497cb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3656f822-9b1e-47ef-97c1-dd6b6352344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab57406f-c047-4a5d-9432-01f71a86bfbc",
        "cursor": {
          "ref": "a017f8b1-fc9d-4bc8-90d0-0ca76a7dd515",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "24f50f15-d462-467d-bffa-870c41eb6871"
        },
        "item": {
          "id": "ab57406f-c047-4a5d-9432-01f71a86bfbc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94846068-00c2-400f-a097-0c97f4edb856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e9d9c4-9d8d-4619-ac10-58208b4cc274",
        "cursor": {
          "ref": "c7a8ed94-54b4-47bb-80cf-c940cfebf136",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bd814074-8f31-4bbe-94e1-c8cb0ec7ac82"
        },
        "item": {
          "id": "52e9d9c4-9d8d-4619-ac10-58208b4cc274",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "abee1dd2-4890-4151-b176-c24bd2ddfd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa12ca-29e2-4060-bb8b-2e5be4519e87",
        "cursor": {
          "ref": "fde48f54-f705-4e20-ba9f-68284c59957a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6cbd6e4f-6a0a-4c7a-9f9f-283360863f2b"
        },
        "item": {
          "id": "43aa12ca-29e2-4060-bb8b-2e5be4519e87",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "18f965f2-c0ef-434c-9c3d-850e206789db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6bf52b-10c9-4ab4-8492-ab1b249ebdfa",
        "cursor": {
          "ref": "64489ba8-93d9-4b75-be94-037f35dc6b45",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2aee369e-bcc4-4cee-b5e1-f7af7e151dda"
        },
        "item": {
          "id": "de6bf52b-10c9-4ab4-8492-ab1b249ebdfa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e87e0c55-10dc-42b6-8723-89afa1abae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57dd8a5-030f-4438-9673-ad153be8aafa",
        "cursor": {
          "ref": "643e1040-6386-47bd-af43-b4813f2e2454",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d23a2db4-b832-4c64-bc52-f95a74c26442"
        },
        "item": {
          "id": "a57dd8a5-030f-4438-9673-ad153be8aafa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0a1b43c3-8976-4022-89ea-d393618ec40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c1667-d335-4c10-9e0a-85895760a038",
        "cursor": {
          "ref": "2202a2c5-f880-49ab-87e6-d11015063237",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f50573d-7632-401a-a044-1b9b3c3c3158"
        },
        "item": {
          "id": "f04c1667-d335-4c10-9e0a-85895760a038",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "34b649cd-3ed6-4e48-a4b8-f1ed9a909775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f637ec3-c5a2-4acd-8f97-a8c1efaecc4b",
        "cursor": {
          "ref": "54e59184-272b-4fc4-adf5-a51718b339be",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "628b3588-1f53-4d37-8480-826be4fce626"
        },
        "item": {
          "id": "2f637ec3-c5a2-4acd-8f97-a8c1efaecc4b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b3ceaf66-b583-478e-b2fa-93745117e695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf34513-490b-4192-9861-607f11542e8c",
        "cursor": {
          "ref": "1d9461e2-df27-4996-8f62-7e7347d941c7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5a4b2931-6da6-4d8f-aee3-8384e6a4c764"
        },
        "item": {
          "id": "bdf34513-490b-4192-9861-607f11542e8c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "435fc804-7392-4ffa-bb04-6770de0112f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9555e17e-97db-4b90-bdd6-376893d576a0",
        "cursor": {
          "ref": "52365896-9e0e-4f1f-9767-8edec5af60eb",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e8ca34e9-3cc4-4133-89fb-44aba5c488bc"
        },
        "item": {
          "id": "9555e17e-97db-4b90-bdd6-376893d576a0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5842b04d-64a6-4f51-8258-d978117fb82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e388534-b863-4ed0-8a0e-44c4984b7a91",
        "cursor": {
          "ref": "daacfc0c-bb90-4971-b2be-c7dc0f22f89c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "564bee0c-97f7-4969-9566-fa8dac66506b"
        },
        "item": {
          "id": "0e388534-b863-4ed0-8a0e-44c4984b7a91",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da3b7e33-069b-43de-b0e8-eec3e576bd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ac750-b045-4c31-87f0-413c7f6ac99f",
        "cursor": {
          "ref": "1035603a-504a-4258-983c-ab67810c3109",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "66765d27-eb01-4bc6-8544-7e4ae650d83d"
        },
        "item": {
          "id": "d90ac750-b045-4c31-87f0-413c7f6ac99f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "823e2671-1dcc-48cd-9580-439e28ae6b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b414791a-4d24-40c5-a0ee-993fa4713419",
        "cursor": {
          "ref": "6a39c97e-cade-456b-b1ba-47e9823508ff",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "47e3a862-7e80-4de8-89d5-869b6278b106"
        },
        "item": {
          "id": "b414791a-4d24-40c5-a0ee-993fa4713419",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "123081b3-405e-440e-8341-e741f470c1a4",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "e1480816-55f7-4c20-901d-897194a71ff5",
        "cursor": {
          "ref": "7ad4361b-e8a3-4f29-9bc8-fe83dd2a6c73",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e9086118-d69a-4ad5-8dc7-c84adbe10ee3"
        },
        "item": {
          "id": "e1480816-55f7-4c20-901d-897194a71ff5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "db1461ed-20aa-4420-9f07-38c53521d72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eddf18-7458-4b15-b5d0-81b5e96e94ad",
        "cursor": {
          "ref": "e749adc3-0466-4478-a45d-b983f72af1fc",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a388689-4536-442e-8261-b888c09b5663"
        },
        "item": {
          "id": "39eddf18-7458-4b15-b5d0-81b5e96e94ad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f7c05a54-58f9-4e62-8b08-d0f302f2a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40770d1d-d7e4-4ca9-934c-35f58d1a7c75",
        "cursor": {
          "ref": "e97d92f0-3443-46b8-b291-a80df0ccfd7c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75830cac-db31-4ba3-96a9-9e1ce0eab377"
        },
        "item": {
          "id": "40770d1d-d7e4-4ca9-934c-35f58d1a7c75",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fd787059-b746-4e81-8430-ead2e5e3f0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0959332-ab43-42d4-ae06-bf7420732801",
        "cursor": {
          "ref": "441a8eb1-a2a4-47c5-b5d3-bf03605fe756",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4a928bae-c91e-4da6-9fda-c17534192310"
        },
        "item": {
          "id": "f0959332-ab43-42d4-ae06-bf7420732801",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "95154595-a385-4e74-be32-b706ba809ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3136e86a-450c-4471-b138-4cdb187d1f25",
        "cursor": {
          "ref": "771e89e7-ce7f-4248-aad6-da9a373daf6e",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b46df28-4484-4268-9a52-8b27c391b538"
        },
        "item": {
          "id": "3136e86a-450c-4471-b138-4cdb187d1f25",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e7a5898d-fa79-45f2-84ac-1898b7de7256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c03007-4d22-4059-b091-cdea552693be",
        "cursor": {
          "ref": "439ea2f7-f47a-4f31-849e-df4a3cfcd386",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f32a909e-20d7-481f-95e9-a792b256ebff"
        },
        "item": {
          "id": "60c03007-4d22-4059-b091-cdea552693be",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0f0f4594-e629-4453-930b-6f47deed676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2617b73-bdc5-4c0e-981e-83b74f87c468",
        "cursor": {
          "ref": "25c20869-2fe3-40be-a158-a2ec3aa8aa4a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "36b756a7-9baa-41b1-851b-da64a039a01f"
        },
        "item": {
          "id": "d2617b73-bdc5-4c0e-981e-83b74f87c468",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dd159974-33b1-44ca-9280-db3c06ed9249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801fa2da-33d8-49dc-908a-4cdbf4f6d5e0",
        "cursor": {
          "ref": "7bc5ef7d-97be-413f-9d20-286ca77145ab",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6f440be7-2ba5-4aee-8da0-5bf8045e3d8b"
        },
        "item": {
          "id": "801fa2da-33d8-49dc-908a-4cdbf4f6d5e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62448748-d32b-43e0-8a2d-3d899384cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925440c2-5383-49ab-9640-f6fbf2fbf2ed",
        "cursor": {
          "ref": "ab01184f-c528-4a43-8b67-e87b8475d587",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1e0ffff0-2c30-4243-8979-95cdf781f654"
        },
        "item": {
          "id": "925440c2-5383-49ab-9640-f6fbf2fbf2ed",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6b73ac10-7e17-4103-80fd-fed8c0fde1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4008f-9ccb-48a0-99cc-10ae1e33b15a",
        "cursor": {
          "ref": "38215dcd-0bf6-4504-ac40-a8db065a291e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0a6b0ef-5d5a-40bd-aad7-cf30964cfb77"
        },
        "item": {
          "id": "6ad4008f-9ccb-48a0-99cc-10ae1e33b15a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3094a983-525a-4c52-b917-4b3b65a787b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a3904-1e2d-4627-bea4-18f00cad5af9",
        "cursor": {
          "ref": "83a129f9-d917-4d0b-b420-45347165f72a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ff73132d-7727-4bf4-a1d8-89360fe4dbbb"
        },
        "item": {
          "id": "898a3904-1e2d-4627-bea4-18f00cad5af9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4e7c29fc-a736-42f3-a4c1-0f388db52387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9276bf4-2c4d-46a2-982b-a38c9f1e7b5b",
        "cursor": {
          "ref": "13771f05-f84a-497a-8e43-a0fba24b63c3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "79149555-1efb-4af1-b56f-5f487eb11f13"
        },
        "item": {
          "id": "e9276bf4-2c4d-46a2-982b-a38c9f1e7b5b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40dbdd1f-7b69-44f6-acdd-0acab1aadb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797cb9ec-ebf6-431e-a7ea-b7a6852136da",
        "cursor": {
          "ref": "a2cf26cc-ceee-418f-a176-9748abe5cea8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "83c89f84-b6c1-467a-b754-ab9efc7567b4"
        },
        "item": {
          "id": "797cb9ec-ebf6-431e-a7ea-b7a6852136da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "079cdcb3-e73f-42df-80ff-e62360f024d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32bda9d-5ec2-4344-8524-fd09f6d43dbe",
        "cursor": {
          "ref": "915fa9a9-8144-41ca-83f1-10fe8d27df0a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fd14a05d-b6dc-4cc3-bb98-17f05f403215"
        },
        "item": {
          "id": "a32bda9d-5ec2-4344-8524-fd09f6d43dbe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8401eddd-7635-4a5b-b718-a4d8acfe7381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89099ec7-c463-406b-a6a3-ca402ac27254",
        "cursor": {
          "ref": "dfefafe7-04c7-4cae-89c3-672599b5a43b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ec42341-09d1-46c4-9189-8a9dee56c22a"
        },
        "item": {
          "id": "89099ec7-c463-406b-a6a3-ca402ac27254",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3bb3eaed-599a-4be3-9f27-cf77786e76aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9a0874-5236-4f86-a131-96ddc69b31a8",
        "cursor": {
          "ref": "d225f97e-6045-4254-b070-55c07f40f7ba",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e720660f-ab06-45a5-a24d-0c6afa9564cc"
        },
        "item": {
          "id": "3e9a0874-5236-4f86-a131-96ddc69b31a8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa401b5d-63a6-486b-b215-487bd27e0411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d8594a-f535-4cc5-b319-7cc096516084",
        "cursor": {
          "ref": "4c0e4ffc-2db8-4eb1-b965-df60d30e69dd",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "615a9191-2f58-4e94-9657-cc2a19d42131"
        },
        "item": {
          "id": "d7d8594a-f535-4cc5-b319-7cc096516084",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "aa0b6dc3-e23a-4a50-a5ca-1a2a4a3609a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e989f998-cfd1-44c5-bb18-e55ffb771aa6",
        "cursor": {
          "ref": "1bbd0cfd-13ae-43f7-9ebe-5ed6ce2fa0ed",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b1eded52-3d65-4328-b939-6989c6d31113"
        },
        "item": {
          "id": "e989f998-cfd1-44c5-bb18-e55ffb771aa6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f22fdf65-491d-45bd-8d7e-5cadbe2caa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ed8f38-6138-4656-a560-f66139f985dd",
        "cursor": {
          "ref": "fe9f0e90-fd7d-49ca-afd2-a63467ed5ee0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9d539e93-594f-4449-866d-12bea2789095"
        },
        "item": {
          "id": "e1ed8f38-6138-4656-a560-f66139f985dd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a0193421-fc9d-43ec-98bf-ca40835c8ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2face45-8a94-46e8-814b-569356737f75",
        "cursor": {
          "ref": "c63ba03a-f5a8-414f-a0ce-11a9a0595f15",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "20bc7c07-dbf0-4943-b31f-52360577c51b"
        },
        "item": {
          "id": "e2face45-8a94-46e8-814b-569356737f75",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f6be76bb-596a-4550-be76-b295d3f9f06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49479ff-f416-473b-82f6-c04ec18134cd",
        "cursor": {
          "ref": "c5239d13-81c8-48e5-9919-9df06ea92d69",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f9066375-f11a-411d-bc6f-13a43a9b1a11"
        },
        "item": {
          "id": "b49479ff-f416-473b-82f6-c04ec18134cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "31d89437-9fa5-481d-ba52-2655929274ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af643f71-19c7-4565-b24a-19dc519c9816",
        "cursor": {
          "ref": "e8403c18-80e8-4047-81b5-1f1a8b977f29",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "51aec633-b291-4a0c-a8cf-911cba3276a8"
        },
        "item": {
          "id": "af643f71-19c7-4565-b24a-19dc519c9816",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "28426174-8b90-4755-8ea9-addf14b904b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8766ddf-f298-46e0-933e-55f09de7400e",
        "cursor": {
          "ref": "bf8ff511-f2ba-4780-8a6a-2ccfe05ce2c1",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f7e014a4-5f81-4dd6-9fef-23f3ed2b8fa8"
        },
        "item": {
          "id": "c8766ddf-f298-46e0-933e-55f09de7400e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b82ef7d9-2bdf-4c06-ac7b-b35819e14d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe590844-4d91-4066-b4bb-d083b93e3a1f",
        "cursor": {
          "ref": "a47aee41-ceb6-40b6-855f-3d68f7e1c0ce",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "89cb86ef-ae1e-47d6-b7bb-9064fcba05c7"
        },
        "item": {
          "id": "fe590844-4d91-4066-b4bb-d083b93e3a1f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7c75d172-722f-4213-b057-0b203565106d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97251add-08b2-4bc9-9a2f-9eb68d9b407d",
        "cursor": {
          "ref": "60356de0-688b-4a08-88de-0bfc503737db",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a02c59ae-6171-4ae0-89d6-f54323f115d9"
        },
        "item": {
          "id": "97251add-08b2-4bc9-9a2f-9eb68d9b407d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7affa786-87e9-4140-8127-802ed8979a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84761dac-de7e-44c9-a0d5-7415c8e20a21",
        "cursor": {
          "ref": "f18258b1-181c-4a8e-a114-9da2627e3b79",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07252f45-6392-42c5-ab1d-189edf764a95"
        },
        "item": {
          "id": "84761dac-de7e-44c9-a0d5-7415c8e20a21",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6a005d24-40b9-44b3-b76a-165684e6454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e50549f-8a3f-44fb-be46-744b59a0e4bb",
        "cursor": {
          "ref": "2325372d-be9a-45be-ab37-ecd5a6ec0857",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5bceb221-c6cd-42bc-9833-bd72bf9623fc"
        },
        "item": {
          "id": "5e50549f-8a3f-44fb-be46-744b59a0e4bb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "28144f33-3dd7-4326-b296-0f7a43400e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c92e9e-eecc-4e14-89ae-55d4daa556ae",
        "cursor": {
          "ref": "11006b5c-9527-4d20-b50f-c8738302b22d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "072c116d-2cd4-4a3d-9809-9d8b6f8ecbc2"
        },
        "item": {
          "id": "74c92e9e-eecc-4e14-89ae-55d4daa556ae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6052e08-1510-4bfa-aaf8-c2d0e622c907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea8ff30-77e8-4d59-9e65-d2c39c8373a8",
        "cursor": {
          "ref": "82bd54bc-6d9c-460a-b191-9a4420fb50ac",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7246722d-4766-4f81-a06c-175d2b3db8a7"
        },
        "item": {
          "id": "dea8ff30-77e8-4d59-9e65-d2c39c8373a8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "59cd5517-0024-4bc6-994d-f09b1d719447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d661fe-0e44-4daf-88f1-75a302352aef",
        "cursor": {
          "ref": "adcfc0a8-be49-4465-8939-ca8fb2d77a7e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e1a19417-e84c-4002-a9a2-740279f95c5c"
        },
        "item": {
          "id": "d9d661fe-0e44-4daf-88f1-75a302352aef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4518ce22-0e74-4df4-899b-55a6e236ff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8072fd3c-fe17-45d5-ad96-b812f96c1a73",
        "cursor": {
          "ref": "03808914-478b-4d3a-b7e3-23394193fb02",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f9cea47-43be-4090-9618-5d01f8ba5160"
        },
        "item": {
          "id": "8072fd3c-fe17-45d5-ad96-b812f96c1a73",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a71bc825-c9d9-4361-8947-c9646b4cc6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5898cf0-64af-487b-b94d-5c7f1c447b01",
        "cursor": {
          "ref": "696c1e21-cbd1-47e6-bf54-c913a31bd272",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ff0074c9-3211-435c-9e2f-6b0484172c92"
        },
        "item": {
          "id": "d5898cf0-64af-487b-b94d-5c7f1c447b01",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0c4140fa-c012-411e-a3af-26d3db8b4524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911da5af-e940-4e72-a318-c5170d7ae34e",
        "cursor": {
          "ref": "4012fc42-a106-470f-bc57-7140d6ff5105",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "04274b50-cac6-4195-8d0a-02995a75ae3d"
        },
        "item": {
          "id": "911da5af-e940-4e72-a318-c5170d7ae34e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "34cabcd9-382e-4a48-b120-73be2106c9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a7454-f53d-42fa-9199-c45413016520",
        "cursor": {
          "ref": "f9c8c983-962f-4989-9452-cb03c1a87995",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6e28119b-7098-4633-81ac-ca4c198d378e"
        },
        "item": {
          "id": "0f7a7454-f53d-42fa-9199-c45413016520",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c6b40829-260f-406c-a7db-e13b1c476979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53600605-27e5-44cd-b8f3-b828254082b2",
        "cursor": {
          "ref": "109244d3-611c-4a02-b5d7-9dc44686b556",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a4623c1b-7153-4f54-948e-a3df2ce63b71"
        },
        "item": {
          "id": "53600605-27e5-44cd-b8f3-b828254082b2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2aa5afd4-f966-4c30-b8ce-7e4070419283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6887d3-6814-4221-b981-fe22e1bca563",
        "cursor": {
          "ref": "02d85de0-3a91-4c52-8870-c0012506cc57",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1243318c-1736-43f8-84f6-447d409752fd"
        },
        "item": {
          "id": "db6887d3-6814-4221-b981-fe22e1bca563",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2122b2f9-2fa9-4a9b-9a8d-f2e96e9aeb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6a9822-34ea-4b81-a401-8f5ba1e0e8f4",
        "cursor": {
          "ref": "5be62ede-69d9-499d-9fab-a0859559e6be",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "47f80569-8826-4e5b-8b33-b2864f88384c"
        },
        "item": {
          "id": "8e6a9822-34ea-4b81-a401-8f5ba1e0e8f4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "926e6ff6-03c3-462e-ba0c-31fc3ea8af2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201e2f92-9d29-4cba-96f1-1c6b37be27ec",
        "cursor": {
          "ref": "91cb1a7c-353e-4b3c-b254-ae52ec8c1bae",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "510a306a-2916-4a4f-bf03-c1f36dcb46b5"
        },
        "item": {
          "id": "201e2f92-9d29-4cba-96f1-1c6b37be27ec",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f3c6f82a-db48-4088-bb7a-ff0235cdf378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c6eef6-ea16-4995-896c-9fe6ea635924",
        "cursor": {
          "ref": "14738e96-dc44-468d-bb5a-a03c2f578425",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "36d39798-cde2-49e0-a7f1-068ea7f73bdb"
        },
        "item": {
          "id": "f0c6eef6-ea16-4995-896c-9fe6ea635924",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "997918c7-3241-4d08-900d-873b1dac57d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e14af02-525a-47db-a60c-666a7a84320a",
        "cursor": {
          "ref": "7e5c0306-6f73-4a06-a9c0-0abd76562e21",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "78cebd8d-0441-4af5-af6c-163ccaec9b2f"
        },
        "item": {
          "id": "9e14af02-525a-47db-a60c-666a7a84320a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "19758b7f-8984-48e4-856c-f8d98997981f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ef9ab0-52a9-4a98-a725-4513c41c7750",
        "cursor": {
          "ref": "74d91244-3d8b-48f3-b30e-c9aff7b16822",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6e599f75-f301-46a2-83fb-9f406dd9f713"
        },
        "item": {
          "id": "71ef9ab0-52a9-4a98-a725-4513c41c7750",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9608e813-3946-475c-9217-f22c1ffe39bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815d8539-18b9-48a2-b2d4-fad804d197c3",
        "cursor": {
          "ref": "ba720150-d83a-4251-ae8c-b2fc869fdbe0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "689ede98-0a11-4677-a851-9e5367643835"
        },
        "item": {
          "id": "815d8539-18b9-48a2-b2d4-fad804d197c3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1503ef1-20fa-401c-8f15-82a96ecbbd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae4a6a-e63f-4d10-bb1e-89fec2b0d006",
        "cursor": {
          "ref": "69a7ddeb-f5ed-4abd-a527-cc4b93f94d7b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ec163d33-585a-4a95-b148-96cf01d8745b"
        },
        "item": {
          "id": "0bae4a6a-e63f-4d10-bb1e-89fec2b0d006",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2f2604d5-6b08-4445-a1ca-f0278e5364b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a426b5b7-ee32-4100-b280-c7da9a118238",
        "cursor": {
          "ref": "4ca49167-7022-42dd-bf66-7c296171ff36",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e85ab173-3db5-4c15-84d7-6ba7d8e3f033"
        },
        "item": {
          "id": "a426b5b7-ee32-4100-b280-c7da9a118238",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13f7d1c6-40c6-443e-8e37-bb37229464ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fdfb0d-53d2-402e-8070-ddaab763b1eb",
        "cursor": {
          "ref": "b337aa04-2398-48ea-a6c9-71ea287004b0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d11d0ccf-ed65-474a-b86e-3ade1762bc98"
        },
        "item": {
          "id": "59fdfb0d-53d2-402e-8070-ddaab763b1eb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a382e01-6512-4178-bff5-f23319d28afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75471426-c876-4cb8-b72d-dc568c949195",
        "cursor": {
          "ref": "e4432063-2731-4ab2-b92f-df86f48e2a56",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "63685641-8f97-461a-8ae4-d73348a49229"
        },
        "item": {
          "id": "75471426-c876-4cb8-b72d-dc568c949195",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "675ea718-ee16-4771-ae97-a0e026b0691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b19a2a-44eb-4656-8b8f-004a358c5850",
        "cursor": {
          "ref": "6c7ae7b8-1dbd-45d2-b0de-177b32e1b833",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1fedba67-485d-4812-aee6-6abcb8fdf34e"
        },
        "item": {
          "id": "e0b19a2a-44eb-4656-8b8f-004a358c5850",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "24dc1dfd-d68b-45e5-bef7-940b7f8b8f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6cf991-a820-491b-b093-ab86943805fd",
        "cursor": {
          "ref": "8365ae3b-e4b6-423f-b366-845b71d0a2de",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6313b8ac-ffcc-4ac2-95e4-df8101a28ba8"
        },
        "item": {
          "id": "bd6cf991-a820-491b-b093-ab86943805fd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eb440026-d622-43cd-b149-84c170486f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a550018-2a73-4594-afc1-71c0990bbbf3",
        "cursor": {
          "ref": "1b687716-5a50-4a61-aa70-13d482fe6a04",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4bc52ff-800f-40d3-aca6-a194c7890505"
        },
        "item": {
          "id": "4a550018-2a73-4594-afc1-71c0990bbbf3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e2d6054-3b8a-414d-8a09-1f6ed797089d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6a622-e1b2-48d8-8b39-dfdf6844cefe",
        "cursor": {
          "ref": "4ad7aac8-4a4c-4ca9-9313-d1ad125b30c8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93cfd522-85bd-4ff2-8f0e-02030a102ac4"
        },
        "item": {
          "id": "c2b6a622-e1b2-48d8-8b39-dfdf6844cefe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3861895b-177e-4bfb-a0fe-405ec3e82d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259361f5-5cd1-4e3d-90f8-580d8110a8fa",
        "cursor": {
          "ref": "691e0503-a242-497e-ab46-c3e85b4bcd45",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dd5addef-c0a6-4d3c-9450-663d455d2b97"
        },
        "item": {
          "id": "259361f5-5cd1-4e3d-90f8-580d8110a8fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9e65a2f3-4c58-43b6-a631-85083f591f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed241e8f-afae-4c46-a435-10a16e558b8d",
        "cursor": {
          "ref": "c1091e96-0267-41d5-92f9-f747f5b735be",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6f7d472d-cde4-4be9-bd8c-410b81b1f5ee"
        },
        "item": {
          "id": "ed241e8f-afae-4c46-a435-10a16e558b8d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c27160e5-a99d-4796-8427-b1b6f434698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc4b3a-6007-4dad-a09e-dee29405cd7c",
        "cursor": {
          "ref": "be55f618-90a8-4565-a704-811740cd4ec6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "84d51385-e7a2-40a4-adeb-01ea4351b4b7"
        },
        "item": {
          "id": "0edc4b3a-6007-4dad-a09e-dee29405cd7c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "db2c3148-9c8e-42b6-9e7d-bd8628ff36fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5264f179-0ea5-48f1-9328-dbb38e7b3449",
        "cursor": {
          "ref": "876afa2d-3352-4358-acf8-c076fe27bab7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f2bf6ec4-7e11-41a9-a584-204f9d39c3a9"
        },
        "item": {
          "id": "5264f179-0ea5-48f1-9328-dbb38e7b3449",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f077c843-cbc9-4cf7-9a48-7ecf3753d2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da0b6cc-1035-43be-9e27-4340e612731f",
        "cursor": {
          "ref": "cdbc6245-4577-4211-8bb3-6833b1a7e3d0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1cf8b1df-109f-46c8-95bc-f39e2b7a1394"
        },
        "item": {
          "id": "7da0b6cc-1035-43be-9e27-4340e612731f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "324f0f1a-7e1c-4198-8eee-20690ac866e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0852c365-0302-4cb0-8fc8-6918cde9d8cd",
        "cursor": {
          "ref": "2e81e0d6-74b1-44bd-990c-a3affcbfdfbf",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4d8843a6-9691-4f6d-bf8f-1e872ff9b2bf"
        },
        "item": {
          "id": "0852c365-0302-4cb0-8fc8-6918cde9d8cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "22156988-6129-44df-a426-13bac3f7f505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36af7d2-bf3c-430d-b483-1c0e58b96013",
        "cursor": {
          "ref": "af002821-3cf8-479a-a728-ed81a99df1f8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2cf8b586-a6b0-4daa-a1d9-cd9a40c7fe91"
        },
        "item": {
          "id": "e36af7d2-bf3c-430d-b483-1c0e58b96013",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72bd8561-0c6e-4d35-9bf9-0a7923b6b1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb74196-91b2-423c-85ca-c31ef0061285",
        "cursor": {
          "ref": "b6c3cb85-d31a-422f-9e26-62544b56bd61",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f2136079-dc7e-47cc-af38-a7fd83a38af3"
        },
        "item": {
          "id": "1bb74196-91b2-423c-85ca-c31ef0061285",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0e7f0324-ad56-4bbd-ae4f-892fa1da1c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03e4157-aa8b-46dd-9e29-64a2504e328d",
        "cursor": {
          "ref": "fc956683-a908-403a-83f8-551a66a0d972",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9df6ee33-ae1c-4f99-9cf0-cdb5bbb41015"
        },
        "item": {
          "id": "f03e4157-aa8b-46dd-9e29-64a2504e328d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f31ba050-881c-46eb-8a94-bbfaee258e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c97ab35-436a-4084-825b-226e8196af9d",
        "cursor": {
          "ref": "e5c70b3e-6958-4046-b714-88871de1274d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "26f0ab07-f51a-49e8-b7e0-dc50df5afde0"
        },
        "item": {
          "id": "8c97ab35-436a-4084-825b-226e8196af9d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "331e86ef-be21-4303-a83e-21f20628d9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eb1f4c-1bc6-40db-afd1-748ed3c92c4d",
        "cursor": {
          "ref": "3dd9de06-cef5-44da-b916-a383018a4609",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5b602ad2-8ce2-4c0e-a90a-82dac87a8798"
        },
        "item": {
          "id": "44eb1f4c-1bc6-40db-afd1-748ed3c92c4d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f8594d60-73d6-4148-91bf-baebce66fbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd65fcc-3f83-4bad-8e95-50bd08b40397",
        "cursor": {
          "ref": "5d26ba0d-55b5-45a6-a425-f14194f0dbeb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e17b3d15-60ec-470c-aca7-0ce6517f9def"
        },
        "item": {
          "id": "acd65fcc-3f83-4bad-8e95-50bd08b40397",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "891235a3-83b9-48d6-b30f-d0f1a8fbf6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ab1111-d824-4448-8a10-553b7a12b39b",
        "cursor": {
          "ref": "376b67d7-5aa8-4df4-9733-83c45edefc1b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "727cd65c-b539-4d2a-b120-58dbefc5aac2"
        },
        "item": {
          "id": "96ab1111-d824-4448-8a10-553b7a12b39b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b136ee2b-9fd8-48b7-8333-d68d0f586791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d4d751-943f-4779-8e5c-974f7600a136",
        "cursor": {
          "ref": "a090b93b-d10b-47be-9c2c-83afd8ec01d4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "59b91ffb-824e-4ef3-8ade-305c31096fec"
        },
        "item": {
          "id": "28d4d751-943f-4779-8e5c-974f7600a136",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "da95d995-cd81-49d6-8628-83a0a04526ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc95b6e-e42e-44b5-a730-d5d2416bccdd",
        "cursor": {
          "ref": "e090214e-5db5-45c4-bac1-6e4a4a62fa1d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76f2b508-37ee-42f7-b78c-de560e4e8dcf"
        },
        "item": {
          "id": "5dc95b6e-e42e-44b5-a730-d5d2416bccdd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a8c5a76-d237-46e9-b972-797261a26369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c9484b-5996-42d3-8cf4-15f237b5d212",
        "cursor": {
          "ref": "ce775c2f-bf41-4449-a206-13d6fe9ac2cc",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ebc38d1d-ed1d-4e41-bb7f-d4bc0b773387"
        },
        "item": {
          "id": "b3c9484b-5996-42d3-8cf4-15f237b5d212",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d426b9a5-ba5d-4ebf-a4f1-3d116f0b250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a010ae8-88ce-430f-ba67-8fb12c7fa18c",
        "cursor": {
          "ref": "dce8ba89-eefa-4901-b698-fea09ba5241d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "36e7b40b-9fb2-44da-a215-c189213b3960"
        },
        "item": {
          "id": "4a010ae8-88ce-430f-ba67-8fb12c7fa18c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5780fc5e-a26a-4741-b8d9-d4b33c5cb765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86701a3a-7e39-42b9-bf2a-938cffe70037",
        "cursor": {
          "ref": "57bc3213-5943-4f32-8871-d63c90ef86d1",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "032ac379-ba3c-44d6-9deb-29523fa4371b"
        },
        "item": {
          "id": "86701a3a-7e39-42b9-bf2a-938cffe70037",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8def29dd-8d4d-43a3-9b0c-573bffa8cfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa4116-4d0f-49a6-88b4-c2143e357772",
        "cursor": {
          "ref": "8622b00f-4d43-41d0-aa33-8b4dc04f0be4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ddb06850-189a-4f77-805c-7837248f159a"
        },
        "item": {
          "id": "6eaa4116-4d0f-49a6-88b4-c2143e357772",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4758adc4-b552-47b8-aac7-267a34aef4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66b479e-f995-43ee-a1b4-34b34318b8b3",
        "cursor": {
          "ref": "8c0416f6-7f64-461d-946c-6b318a7346e6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "10d65a83-60cc-4409-810f-0c86296e371f"
        },
        "item": {
          "id": "a66b479e-f995-43ee-a1b4-34b34318b8b3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bf18331c-c055-4d0f-9d9f-22b0ca57c2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e2c9ea-80e2-4d1f-b9e9-195972cef7f6",
        "cursor": {
          "ref": "90776779-d1b7-4e34-a015-f13db8e2fb3c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3d5e31b9-78b0-48fc-8c2f-833f9fecadaa"
        },
        "item": {
          "id": "d8e2c9ea-80e2-4d1f-b9e9-195972cef7f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0e37b2c2-669d-438e-9b61-60c978e0e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52393e4e-3890-4b39-8fdc-e954757a197a",
        "cursor": {
          "ref": "f1bd2ca6-ac7d-4ff3-8b3e-f2835e665a4b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "24d598b6-b06c-4a28-b758-09668fe0f484"
        },
        "item": {
          "id": "52393e4e-3890-4b39-8fdc-e954757a197a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0c2820b-0404-4db6-b32a-5d7724d726e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eda3112-6ae6-472e-88cf-6d7f464dc2c4",
        "cursor": {
          "ref": "8356b2e2-95fa-4450-a26d-4343875858f8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d8480565-19cf-4739-b0c9-ab483c3ff59e"
        },
        "item": {
          "id": "0eda3112-6ae6-472e-88cf-6d7f464dc2c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7378a529-1bce-4069-9fa1-c532786d57ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba1b351-11bb-4534-91a2-e7ec02f1c3cb",
        "cursor": {
          "ref": "0cbeeab4-ef3a-4c4d-804c-e5c839a097e7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "388e0a82-64ba-4e49-914e-c0e50f22b9d3"
        },
        "item": {
          "id": "1ba1b351-11bb-4534-91a2-e7ec02f1c3cb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13d0ca98-b9d4-4a90-b90e-328118816856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6fa5aa-1804-41c7-9c92-d2f3da7f0ad3",
        "cursor": {
          "ref": "22c790bb-e242-47d4-a81a-1800362cee32",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "45297f32-7df6-42c6-8118-cc556bee1e0e"
        },
        "item": {
          "id": "2b6fa5aa-1804-41c7-9c92-d2f3da7f0ad3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "03169331-2f79-40ab-bcc5-85b8f43ddfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a121b-77dc-4eda-a5b5-25b7df0b609f",
        "cursor": {
          "ref": "fa5187b0-3594-4f17-b33c-3b0a216ad548",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e25012aa-90cd-46f3-9b96-bb825c02cbbc"
        },
        "item": {
          "id": "755a121b-77dc-4eda-a5b5-25b7df0b609f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2e36c42b-930c-460c-91a2-364389a6571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef968a9-bad2-4290-875e-76336c13464b",
        "cursor": {
          "ref": "3a725370-ea9b-485b-b03d-55728eb6e2a0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "94d665ae-908f-423f-8d43-db5410daa9c4"
        },
        "item": {
          "id": "5ef968a9-bad2-4290-875e-76336c13464b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dccc91ce-e48a-4170-b8a6-eb2190043bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b8376-824c-46dd-b79c-f9aebc26f522",
        "cursor": {
          "ref": "9e3824ef-27ad-4f4a-bb14-d56cac4ca8d2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "319566e2-c443-4eea-b6e7-5ef6130c32b2"
        },
        "item": {
          "id": "083b8376-824c-46dd-b79c-f9aebc26f522",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56bef5cd-9d75-4df3-96b3-774257585fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8b5c9a-c630-47bf-be09-531a18239f35",
        "cursor": {
          "ref": "135e0224-9ab3-4112-9163-b5d8adedd6fd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "accb3db4-3c9f-48e0-989c-6898709ad697"
        },
        "item": {
          "id": "5f8b5c9a-c630-47bf-be09-531a18239f35",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2290e3da-5be2-4264-a303-600cb885c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aefc46-1f48-423f-80df-8fe1212bc50d",
        "cursor": {
          "ref": "4dcea833-26c9-407f-a25b-d1a14092548a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "54be0f83-75b2-4d6f-9b10-a8ba0b8ca7cd"
        },
        "item": {
          "id": "50aefc46-1f48-423f-80df-8fe1212bc50d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "116e9734-4e7a-4779-aea2-346a040f2e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455d775e-bc18-42eb-b53c-321b6af8ff49",
        "cursor": {
          "ref": "8a9330e0-bc76-45e7-a3c7-be6480432cdf",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c55e620b-ab17-4b9d-9cbf-fa1ebcf2656e"
        },
        "item": {
          "id": "455d775e-bc18-42eb-b53c-321b6af8ff49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d4a10643-b170-408a-96a3-ebcccc1a8597",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ad5d89-7d86-4d44-9c49-9fd1e70d419e",
        "cursor": {
          "ref": "b47e5370-43ea-436c-98c5-998d96c9127e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "eb7b24b6-ff0f-4050-bf14-3ba853616340"
        },
        "item": {
          "id": "d3ad5d89-7d86-4d44-9c49-9fd1e70d419e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "69eb4976-f77d-4a97-9692-a4c57f11e8ca",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587378c-1ba0-481a-8111-68c18e36d2d6",
        "cursor": {
          "ref": "5275dda7-6db5-42bf-ab60-02e2398b3f7f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "61caa4cd-1294-4482-9386-38f2d49632f3"
        },
        "item": {
          "id": "4587378c-1ba0-481a-8111-68c18e36d2d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ffdaa257-8e4c-49e1-90bd-1e0a5b305950",
          "status": "OK",
          "code": 200,
          "responseTime": 2932,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a06fbf9-0a7c-4b7f-ac57-ed8932be2f8e",
        "cursor": {
          "ref": "e8241716-4288-4386-a5e6-114791107001",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "90649e83-77f9-48a5-b012-046d28aa36d7"
        },
        "item": {
          "id": "7a06fbf9-0a7c-4b7f-ac57-ed8932be2f8e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "76c7f8d5-9829-4bf4-bb81-6a9e9eeb02f9",
          "status": "OK",
          "code": 200,
          "responseTime": 2771,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff98d6-2bef-4c3d-9522-3451b76f3e3a",
        "cursor": {
          "ref": "b637047f-b656-4b95-878a-5ee94971c8fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "68f4d77f-4aee-4551-9ada-a72668f60011"
        },
        "item": {
          "id": "fdff98d6-2bef-4c3d-9522-3451b76f3e3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3901e406-1fe6-4d9a-a800-133ec78be3e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdff98d6-2bef-4c3d-9522-3451b76f3e3a",
        "cursor": {
          "ref": "b637047f-b656-4b95-878a-5ee94971c8fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "68f4d77f-4aee-4551-9ada-a72668f60011"
        },
        "item": {
          "id": "fdff98d6-2bef-4c3d-9522-3451b76f3e3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3901e406-1fe6-4d9a-a800-133ec78be3e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89d8f80-788e-4601-9d9a-36ab3e4a5888",
        "cursor": {
          "ref": "974e2ce1-6865-4e5a-a0bf-f71d52a9ce5e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eb1c5918-313e-48a7-bb79-22c8d6bfaedd"
        },
        "item": {
          "id": "f89d8f80-788e-4601-9d9a-36ab3e4a5888",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "91a4ece0-0509-448b-91df-e53a20e2c9b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7171cd-767e-48e3-923c-844ceabf9500",
        "cursor": {
          "ref": "32c4c5e4-ddac-4f78-b075-cb56241897c2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1abb7cc0-723b-4bf3-a6bc-7920fe3bd112"
        },
        "item": {
          "id": "cf7171cd-767e-48e3-923c-844ceabf9500",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9afbc7e8-26e9-44d3-a8eb-01e8b413a2c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}