{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe52db90-cd4d-426b-90cb-e2914fc9415c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70fa963f-563c-4210-a996-dd54c11c56e9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85635f09-b85a-42c4-9f91-a603db4555ad",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "835d4839-339c-44cc-b32c-a46e516a7416"
                }
              }
            ]
          },
          {
            "id": "9bcffdb6-0d1a-47a0-b859-cacd549feb7b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4586da31-0a81-4b89-8afb-1fefd8fe9c15",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67dee914-57fb-4f79-9cfb-2ca6e5914ed0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "31ce12fb-112a-4a1d-9ce0-c98470d23b02",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2099bf20-3b73-4e18-b7da-90c89aeecf6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b2b7162-c7cb-46b0-8bf2-db8a5340990d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a6a29c9-90e9-4b7d-9cbf-045ec06de8e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "189fd85d-7eaa-4431-8719-f7b4d2c987a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0eb1b1ff-8810-4404-8730-de103542ce21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffa7c695-19c9-4aa0-9bf9-c04024232731"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "196fd207-506a-4b0d-9b80-a1ee9f7e9ad2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ce0bde0-baf5-4155-9b50-04294f857249"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87636f8f-0ff2-4e15-863a-aa783a6c936f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6395b07d-5ffb-4a91-9d2d-152f5003141e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59a8a1ff-7605-4c74-8303-5908d9397168",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49dd753f-a7e9-4a24-9b4d-a2ef6cec3a20"
            }
          }
        ]
      },
      {
        "id": "85b49337-ee98-4cd4-a448-3cb95064e83e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b15ae263-bb1b-4ae2-9cb0-55dad243acbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8a60106-7082-4899-84cc-3c792feea6fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10504165-a39a-4a85-9cc1-458c3eef35ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf5d31-88e0-4688-982c-b06244bc7e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4bdb0a3-17a5-4691-ba2b-779059837776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8a5917-c67e-4a8b-806f-04580eaed3d9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2c66f1-916e-4721-8ca0-6c10a932dc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f6da7b6-0c25-4d76-9f32-784ee0b4f3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3989bafc-d69a-4bba-b73a-521dcdf58ea0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cac7e4-81f7-49af-b56a-ea3bb271bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70a4272f-0576-4dac-9867-71479ce32190"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b9c33c2-448d-48fb-a999-2a2ef1efbe68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d6c544f-4bb4-44f7-a9f0-6dc4663753e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d14496-7c7f-4bda-bf42-f4a38352197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d604507d-1320-441c-a10d-493c860b9fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac75da7f-9921-4bb5-a70e-663a865f7247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2432a8-379e-4a49-b6e1-cb960f81ccc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f718344-ed3e-4a50-9115-db6d08ae9a91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7bc64e81-f7db-4870-88c8-312c9e3fd421",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e011e8a8-1449-42c2-acf6-d9c76460cc91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a04ff9ad-c8e8-4335-a40c-f1298ec867a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc65c985-ce4e-49ae-96e2-476cc32f80d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "850e1406-b69e-4f59-9c15-ee403415c657"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e350e27-99fb-4a04-bda5-4d858792d5c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f3ddc0b-9a86-4f03-833e-743df4d47545"
            }
          }
        ]
      },
      {
        "id": "5bb75e70-38df-4dcd-aa5b-3592f2c023e2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "08a05626-b847-410e-ba36-1edbeb0ccd8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b1843b3-01b1-46b7-b937-fef3a6da1541",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f8d4a2b-525c-4876-9392-832325a8346d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da97e72-da1b-4591-97c1-29e8b285eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f245138d-39a8-4527-8879-a5f59629de3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7db5237-03d8-4b19-a01d-8806fd5f8fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13d2de1c-d65c-43e3-ba92-cf4108d6819e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db557dbc-8915-4bcf-a13b-3a71b5ac0c25",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c813f9ce-948c-4561-ba8d-6c636eada771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32075f9-878e-4769-9f83-dba1aeb905f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e4d25f-008e-4f23-951b-a7b9aafc8343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8446f62-0d20-4c49-bcd2-c1854c727d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97deef6f-b671-4f41-8ee7-f6c417433349",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f8d136-c2fa-4261-af1c-89cd108c3b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70db223a-6255-4960-bed7-ac560ce55f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c731d08-ca77-442e-b7c8-3558cc2e3e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d76489fb-c97b-40d9-a4de-7fa2c15e4fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eee56ef-0aef-4077-959d-f4e6a99a22a8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec8dc16-2697-4483-b765-7809fc514823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60c50aa-78d9-493f-8af0-1ba327270a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75af52d-9aea-4253-8030-a78bac62563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f769bd80-6073-4c97-b8b8-bbf63a7a2625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171e673b-834d-4690-be11-7e64753e3718",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbcd0e3-06de-40af-8f06-910b95ae23ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f720993-c546-4dcf-bd89-4671dd523a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ae2bdf-1708-46dd-89ec-ad9fad10f637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1c147d-02a4-489c-bede-4c887395e3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00bfb4a-fb89-4416-9d42-a76990f39360",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddd831b-1ea2-41eb-8d9f-c0770b0fd2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126ce50b-d698-402f-af42-41242966d337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569cf9bf-975b-473d-9fa8-612aa76ebcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76094b19-5f2b-4511-9b58-b82ddf6acb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d88cf2-1c98-4d2e-9b97-324f1a45081c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef98abe4-60f4-4c4e-9192-194913fbb93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bed3bf-49b2-4d24-9bbe-9bd3f5520e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c7ef11-40d6-4458-890c-6e4b249ea51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db69a4b9-9d19-45f3-aee9-7048bace76d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091c9c0e-a8c7-4858-b945-18336613c0d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466018ba-b51d-405b-8f58-180ed58ac8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77183c99-98d3-45d3-8d97-38c50c056e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79502e9f-56a9-49d6-9f2c-05037b14954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d26d218b-3e86-4004-ab85-ed393b71166a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697d0452-ed32-48b3-820b-763b5f98244b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f6a5e6-4964-485c-b822-b28550b155ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c954f6a-e72f-4f86-b3df-f56060987e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9bae4d-e06d-4a23-a825-3fd619cbb31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c592ec2c-3c94-4f18-8f82-136441faaf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893e0d57-a494-4c0d-a5cc-7114b4f364a1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ff44f7-3ff1-4f9d-a5f3-d739b1fe4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3634e373-d0f2-45c9-91b9-02bae7b8b11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d895347d-3278-40e4-8003-0f6eb3948af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fb61335-1e00-48b7-9fcf-c23acb1b631e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01a3bf6-6a90-4519-9ff5-d46312791af3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda43103-3c63-4110-b26e-9e3d2421bfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b40ef1-37f9-4d17-89ee-c2c1f14d3760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f20687-6c64-4917-a68f-5bab9a620c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c86b6ed7-bd70-4c38-a1b9-2af7463db194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968a7151-ed01-4151-8d0e-37f574f89b52",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8b519-af4c-4018-b5b6-3af80947b43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a888188-512d-46b0-92fa-91eb12fe6735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6261ae77-14cd-4b45-9788-69dbeea249fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c851f77-3bb1-4b3d-9aff-5c487f201c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c6029a-40d4-43b3-99fd-2a6add20b2a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccce18-c651-4bfe-aea1-625daa293886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e143dd1c-59fd-4d01-975b-69a610e64a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2965debe-5d2a-4eea-b705-99fd4720b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a275af3-d8a1-4252-97e0-284e073b671d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2c9592-4eb7-4f0f-8bcb-8292768418e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f70f50-587c-4b81-a580-ad23778d5f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1ecdb1-fed0-48ca-b3ea-17f04535742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91bf31-df50-4c89-8347-fd9da487f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecbb2de8-5cfc-406d-a95e-72197d9ebf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ee5513-68f8-4db7-aaa3-e68afeda8928",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a66f7f1-32c4-40e7-a8ff-f226849ed5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f063ffc-6301-4c16-bbb5-234b553b2a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49679af2-5b10-42dc-b08e-ea9c588f37e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9398a371-0d7c-45c6-94c8-31fa5beae519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbaf504-98fa-4728-9e90-3106677608dd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac8ddc5-65ef-4bc2-91dd-f6327de309ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a475db9-aa7d-4c0c-afdf-b3af0cfab0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3cdf4b-8c07-4292-b31d-b4974b669ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ee9f2e8-c5f1-4059-a809-03dfb47129b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505c7079-b0e3-45db-af79-348746804c27",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaa9638-b3b4-4e93-af07-55431bf5cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e564918-1a15-4720-9fbd-f6a021f3f56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df884ae0-337b-4f5c-9372-61d4981cff1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be06e3d-29fa-49f2-9516-27fb39bde444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2afac49-0fe0-4e7c-b55d-1d4ea346b781",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f47a8-4ad4-43d9-accd-3fe72c651de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eded80-b5c6-450c-99a5-350f52786c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c40d346-7875-4553-b80c-2afa714f7067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4027b9-594c-4b9a-85cd-3dc884f2b92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c35a7a-e8f9-4994-8d94-f2e16b83e845",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ab72ef-25e9-4bcd-890e-0dcf9c21399f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b39c07b-ab96-4e05-ac80-44fddd511c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bdcb80-8879-4968-96a2-5fe58aa0bd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ae244a-8d20-4468-9d2a-dd904002f392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b295fc8d-453c-4e52-9408-4c281d94c25c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3a15c-4c8d-45f3-a1f3-00c9c0d85cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4022c4df-a61e-4a2a-805e-895ed075a921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2fb18-7a7a-471e-afc7-141383db3672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d502ddaf-1fe7-44c5-a8b8-6e9a8b2c9fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f3bedb-ec03-4b76-9e78-41b7732b174a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472e7b2b-c743-4c33-9f02-17b5057db0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880a2294-a0fb-4737-967d-74e86314a2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d0b20f-c45d-45cf-961e-1c36ba2d81d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6452b-7640-4b3d-bf54-205c0f47e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c76d197-060d-4cda-aef9-923bc7e53911",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488c7553-806f-4c13-ae60-8aa59aa24948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5186b-29f8-4df3-9243-4fc7c164bf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667f9cca-bf81-4bbc-9f7c-d1df665e2a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3da77ecb-df4d-4f00-8cd0-af02c3387ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5428a253-8d7a-4b90-8e94-53748eeadca5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5347dcb-db50-425e-abca-20c88bae9bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6871668-e152-4a6d-a2aa-633567bed410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc628935-94b4-44e7-9a3d-0d70368d4a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e74399-11f6-4b47-b948-6ddaad8f64bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8e17d5-ef92-4fa7-bfeb-98f912a298a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6f3e14-3ad5-4089-aaf5-77260ad412d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cedfd07-93db-4bf5-98d9-27cd3726ff60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75773fab-c254-44c6-a740-66cff67895ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69b006ab-e5f6-473b-831e-420c88f693ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d76d7b-10dd-4f9a-952f-aba21c822546",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008c1a12-1203-4931-abe0-e445b0190971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3e39b8-ef54-4647-ad16-52ddd4751c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12f5f16-5818-4493-b7d7-222a4fa75576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1307a15e-e317-482e-ab81-be4ef281c902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7767bd1-03c1-4c06-bead-aad8f1ecdce8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e6f4b7-440b-4265-9941-8b41223afd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332cf48f-1226-485b-8f30-556e0ae00b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50234de7-21a5-4e4d-9da3-3bd7e519b125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0373b29f-e1b0-4e14-9019-8bfdea879956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014b491c-65b4-4d5c-912b-d829319aabc6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3c7801-a87c-48ed-ae16-a68534ac7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87baaa47-663a-42eb-a7d0-03c94af88c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2896645d-3124-41a8-a3dc-4316419b6815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "677e647e-1268-4eda-8960-fcc815b144b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f927b8-6425-4730-ac32-edbe82b66bcd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beccd26b-cba2-436f-b302-d2573f5f0e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea68ebed-1362-48b2-9b74-4a51835d2747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8723735c-c473-400a-a43f-68d518544c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5683728-e9f5-4eff-b39b-1576d380e5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00ccce9-bbc7-4d41-a375-39a595f8d6e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8f19eb-a9d0-4165-9749-9e1f43bfc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46295b8c-cdf4-4a22-a3cc-8013523c137a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13abc32e-b0dd-4eae-a9e1-21fe97167d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b205c84d-f79d-4726-b9cf-0a2a04e44f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf8091a-5ebd-41fa-90be-ba4dfa3b1841",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242f538b-e42f-4ac5-a7a1-7c75253819f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d1ffa3-8198-4866-b362-17df580c39cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc39df9c-e56c-45ca-8270-ee37a0198f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dcf6af-b9db-4b95-bcf0-f11a68d78ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9731d1fa-a147-44de-a539-9e5bc3515741",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af3ff25-3d33-4955-a24c-21ee39475044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3de6869-7935-4039-8a5e-beda6ec4d0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023c308a-7e69-4919-bc3b-9b493397e0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dedfc7a-5845-49b8-bb58-0e99aafd8472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c805c6b7-5224-4bb8-a948-15f0494bb894",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad3b13-96cc-4b8f-9faf-ccaf8df1d42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72643378-8882-4b66-a117-38140ff39e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cf4f33-bbf3-4395-8803-ddf304a0f81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96445ab-5805-48ad-b0e4-c047a3323702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d9c2ea-5fb9-4f28-aed1-5163d25aa1d2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e379c505-75e0-4e08-9301-5bcedbc6d793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a14379-82fd-49ad-992b-e26475e5aba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959bd292-131c-4cc7-937d-a37debc16df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "294e14ef-33a0-4153-8f27-38aca5748375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52c09d-18f5-44dd-9e87-d9ffef0379cb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77addda5-0fd2-4cee-b45d-e3cb09bcdfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4bac06-1f86-4ca4-997c-66747f5ff623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943920e2-daed-4074-94b9-2e55fd87d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "690d32b7-66cf-497d-984b-da94427810ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a367e8-e907-4549-aab1-1b112e7bd38d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921ca396-e4a7-4f9a-9abc-6141e22447cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d4c06-b75f-4c97-b2f8-4c3f77f58d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d90b4d-31f4-46d4-9961-d5d85abbd3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "02ef2470-5abc-47a2-845e-332c1ba395b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c642c8-b098-4afb-a67b-bde2da9356bd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a06ca1-b6de-4e6f-a5cf-8fd26c486046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e836a596-4ce3-40ea-aad9-a601fc95a01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dba1ab3-c6af-41e2-a7ae-ae9c3d1942d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a00b5024-aca1-414f-a97c-d60e39561b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406e33d-ac4b-459b-bb3e-9e3070858295",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ffbe2-e791-466e-9ca5-dc2bc208fb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dae45b-4151-4d05-8837-d5ec1762d5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079a419-b902-4c4b-815a-051a2517f759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e23b6d-c9a9-49b1-b06f-7176e559aace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9ec69b-30ef-4152-ad18-cf6f7516482c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1232611d-e9f7-4973-83d0-30c4ec147fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9767f2ac-7588-4e2b-9d49-7de456aff9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91abf41b-bfff-4849-864f-6588673c60b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "828acfa1-90ee-4d10-8cdc-6184900019c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40433c6d-262b-4501-94b5-cd2630c81fe5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e1373-4f7d-4af7-8ea1-b54cf248ae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c8a45c-ead7-44f2-8e88-128bba43feb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bd6415-2ad7-49f9-ae31-98731f336b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86939a32-dc1e-4c24-986a-6c4b330f6534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680e1005-43ff-4530-8d5f-2bcd1d05f319",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfee9da5-0da8-4846-a1ce-f74df42522b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb23bfe-49ea-41f7-affa-4c61568e6ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c688f068-58c6-42bf-bdd4-4cd057ccabd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29ab314-0705-4744-89b8-9a4ce1a29689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bea2671-5dfe-45eb-93b1-ddfa6e9417cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1774b8a4-cfa4-4d8e-aaaf-11e33deafb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a3d55c-e23c-4124-b174-b0b8ff6a8b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899b0d66-968b-4bfe-8a8c-0b73653ab022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dff636f-9d09-42c5-84b6-39a060587eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aaa5c5-015c-4cfe-a910-0a52c3492048",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3af295-3b20-4538-b490-59f2adec27c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90a6bdc-e6ca-4b78-91db-b215c5e7b531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d9a8c3-0b9f-473d-a264-71e845f5eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "21328453-286d-4f21-a3e9-426dcff4eb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd732ab-3793-4caf-a12d-41c29b517a8c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c8978e-752d-4cbe-9748-2a174c5ebc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080a4052-e379-4868-bf15-e0646b2a5830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48256c6-1cbf-40a4-a0eb-7f246dfe5367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "225a5f3c-7c3a-477c-b21f-8aba3da3164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440639d-60f1-4ccd-9b9c-3cd04cdef759",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1015ec-5d59-4fa9-ac76-1440e365cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eb22a9-316a-4fe5-b5c2-2bf9eb58f9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b8a745-2819-4e23-a5c0-8106d0f06f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "176d5457-3d98-4bf4-917a-4c37df0b4c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d38701-e9b7-4994-b92f-c69258bd7753",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e728144-bfc9-42c4-a9db-afb3a4d648e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad38a016-8555-4b27-a1bd-38bec661d185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ae9af-3fbe-4a2a-ba96-7d7eb3e659d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e00e5f-6dae-41ac-976d-6c4cacc539c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94b93d9-75d5-4c90-b1f8-5254da118ba7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9091952e-70be-4247-948f-b48a87e90b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210b5c5a-7764-4a58-82d6-c651ba29faec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b082d7e5-7f7c-43aa-9080-96e3f05b4924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67da31c-2507-4134-ba32-db287125b540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487cbb55-6e22-49de-8c4c-3da25b33adca",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293ebc13-bf95-4e3d-a814-0c5b48d66228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0bb168-3abe-4abc-a9b4-413fb65d90af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6b62e-260d-434c-b92c-f4a80f1ca970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec3d439-20e4-4e36-b1e6-9286747b4b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0356de-0d9c-477e-9f11-a726fcb6efaf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725562f1-1943-4db5-b260-d443f5095cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7f256c-6f04-4695-93f1-92e8713af708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa8209e-3e3b-40e8-9441-f98b01a89e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d814bd-2795-4bd6-b053-159fcba59053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf06b825-2ec0-4c28-a9b4-e53c7b36810c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a6f6a2-6e4a-45e0-9996-85d8dc863f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968dcbdf-cefa-414b-8399-056912b80902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a1d7a5-4b1b-4f7a-878f-9c04a1ee1de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adfd6376-815b-47c2-ae04-d1c109f82690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1380eedd-d44b-4852-b823-2c45648dd285",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27539cc-b3f2-4b6d-81aa-8f9b0c450925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfe6bf3-84e1-4c0a-a885-c64e398b575e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9fb7ff-f71a-416e-a21f-aac0a1b7c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "898344dc-89be-45db-be64-4b429d794d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87aebc7-a76b-48dd-9a25-28db11a6b8e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3777c3cc-0e48-4c8b-bbc2-f661a76a9bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ca939d-f142-4f0f-a66a-28a53f6fffde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52a99a7-ee5b-4d60-a6f9-e50185f2c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e82e03d-8454-4052-a337-084e69d87416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a604502-adaf-4980-83df-3110bd10174b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd8aa1d-6f3b-491f-92fe-82a8e6487778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7caece-9e3f-45a3-a756-3c3f6b19d71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ad88a-95be-4573-9efd-7ece3a8d8af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7a4e17-148a-42f0-bf40-d782eb4dd6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3eddf-52b2-4aba-ad08-2e35aa0ffdd6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4801abc-3907-482e-bc6b-34821db3116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa4842f-119a-4098-8251-8233d8a0ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50886153-68a9-4615-ae70-19c4f14e5de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "165de6ae-9220-4d80-afb9-d1179169df58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff355b7-21bb-4054-9f96-dad3445c310c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b093bc-9b8c-475f-84ce-8a9cdee67a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185aa55a-f5e6-40ec-b313-fedbdc2e0e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2586f4e-f226-48d1-a4f8-65137764d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb5082d-9952-480d-b11b-4d45009bc19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbc4dc2-efe3-4f20-9b81-c4b4d4e8ff9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc71666-f919-4e4f-a7d8-5637badc3640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44de4c3-422a-4cf0-931f-87d8811c270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b670b3dc-7040-40e7-8278-a6ee915e0004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8ec9fc-007c-424b-beb4-77eb7b49934f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984f3f56-75ba-46e6-bbc4-dbc462b39f51",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66edb2cb-c902-4916-a529-01f8ee33ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823141cd-6fd9-476f-ad5f-974e4f76d3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48867fe-90c9-499f-9302-158ca2e07650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "26e0c287-65d6-4b05-87d0-9c11d9876b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee2ccf-7f9e-4ec4-b235-5e0e99185c6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c11182-54d3-41de-b532-6a34f049f24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349392d4-0109-46f8-9524-ad4fb0544ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fc3907-527b-46ec-8f8f-6e83320a6531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "682486c3-607b-4774-987d-b116d3397cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245d45eb-28a5-4247-a4c2-bc4a6bcd99d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47056a9-5e1e-4176-9bc9-3191520bbbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b909809d-1dd6-43f5-963b-f0912cc36c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb60e9-737e-4e1c-b1ba-2aa413619392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb54cf0-15df-4c34-98c6-1f4c59ba8859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9f0930-3511-4ee6-9ba3-83eec3354e54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec838490-7f4d-4b17-b69f-81652eaf39a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38698d0-542b-46d8-a00c-8bb71e3dcb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6c1ff1-4bba-4cd8-a061-f29395c701df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b480fc36-5092-4ed6-bb4a-f62333d520e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a41ed60-6d63-42c4-b180-9ac342b8b86d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88420ff3-326f-428e-98cb-1fb3c6636332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242d78c8-3aea-4663-87f0-34be1fc8b431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac08aa2-e839-476e-9cc0-0b081c94496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da6ab837-7a0b-488f-8a53-3b054cb9d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c43964-1977-44dc-9f20-79889e9c43f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492709bd-2905-4a68-b265-88e45d8ef454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b98916-a6f5-4cde-b62e-252c195fa77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c836b6c-5cbb-4212-8e61-af5b10d5d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "590e7ef3-12f6-4577-8088-5a376ceaa46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd07f380-27ad-4ea3-b6b9-e015a2a87a62",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7275b85-24af-4acc-8d83-c4897e43aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89bcc09-30fc-4656-b878-a80be48f3346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3fa2c6-ffe7-4589-915d-b0242ac92dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "714acf13-f3f4-4682-b3bb-10db0cb9f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf76ecb2-2ba5-42eb-9704-150d4d6dac34",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f1443-a150-4b26-b6b4-f6c2538398e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcc0b3f-8cd6-4dae-9183-a2d2610b6e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6574f45-7009-40dd-817a-9d8f5f0f0fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4998a354-ee5a-4150-9824-84b43e1af6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde82140-1c3b-4d56-a734-6dd7040ab1e2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafc19fe-7ee2-48b5-a383-bbbd0efe57d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4a67e5-6b4d-4df4-a386-75c3f839256f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488de81f-38d6-4751-93b2-cc54ff227f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fca44b19-f416-49b9-bb46-c5a827a823d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de8e0fc-851c-4ebb-beab-769c2432e902",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3ce0c7-1217-4f93-9bb5-e4000203eebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44a86ea-b57c-4b3d-bd44-cb0373b4f08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55eabc5-2991-47da-9b7b-f5679b06e703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5475c221-8003-49ff-8ba9-19c78655c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43a3b70-cd17-4c30-805a-2b7093684536",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0f37e0-e132-455f-90bd-2340d2c72df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43c480a-553a-41fe-98a8-003a0367817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3033353-5e55-4e06-9e60-87d4bcde4828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c13dde-05ff-4f94-aba1-4bfd628f83b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef157e61-09bc-471f-b466-fe91c95b2918",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27005bac-e6c2-45ef-8696-1fadc9efa798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c149dd-8ac2-4414-80b5-86e471e853b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252c164-fd34-4ce1-b76c-3e74f38381f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bae5a62-cfff-4bee-9e43-52b9170484f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a42d47-6d9e-4810-877d-a5962138f1bc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec941f91-9611-4f86-9277-3e478716f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5904eecd-5be1-400e-8258-2a4a649af4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e0c171-e543-429e-b3e5-a41d73eb4e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "679fd71c-ab7d-4735-9397-63ac074ac2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3516a456-9bad-4c58-a843-71a7e8043bf2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7035983c-1bda-445b-af10-c0c3faaf0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73bc7bc-805a-4c48-b971-3001e0674666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae6cf8d-1a3e-41e2-a5a9-da6ffeb29ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63282e65-d3e1-4fe1-8f90-c4216323c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ac0ebe-9e6f-4a5e-8423-9b8530c2622d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2ae40-0286-4bbc-bce9-31fbf7590397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ae9d33-b144-4435-bf6b-35a1fea1858b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3752e-1a62-41e4-96b0-ef845b217401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4c5cd0-ae5e-403f-92f9-7c6566ee73bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230fb821-aac5-4ebe-8af0-bd016c2d96a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dbaba7-59c7-43dc-ac9a-f99caa721c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df20905b-b2ab-4dc6-98dc-73080a2d1a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552d3849-738f-4607-b559-cb78f4ce9375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6d7993-d503-4eb5-bdcb-204bba70dd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994132bb-076d-4e00-96c8-dbca42d9700d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aca8c6-fdef-47a1-ab37-7c34456ef29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290156a4-f813-4486-926c-185c1af899cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68cba33-c62e-4327-8ae9-56b5cee0add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5124f203-28b7-449c-a140-740443dc147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af8fa64-a26a-420d-995d-78e67b55bdf7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eafd0c0-7e31-440b-82a0-7596789c28b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738c691c-8409-42a0-9ce9-5cbdc3d8bd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e4767d-c126-4f98-aa3e-1ed81520aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e01549-8775-4890-88ad-ab7e8ca9cfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003f20d0-11e1-4da5-b42b-c078cc753c3a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af97ce48-43cf-477b-aacf-f690b2726b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecba2bc-a40d-47b3-a09c-d443d0cbb063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132b9092-a66a-4040-8ea5-8139d453f430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88904f1a-677c-434a-b769-c6bff4f9a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1721e1fe-684a-4d16-a3c2-758d5d7c255c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f08eab-6bd7-4e5e-959e-783564545a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f45bf9-c3f3-4ed9-a5d3-b7b847c9954d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775954e7-3946-4326-82a8-c0914735e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7d96d7-b704-4cba-8ef7-45a4c7cd36be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f0dadf-49e6-4589-9a3f-f78a20cbec6d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368a951d-0b16-43b2-9916-101530811515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557cd8d3-8a92-47d5-8a41-f358cda0e956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4687b26a-d10a-4c8d-b626-087625ae5dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef7ee65-c2ec-42c3-bd09-e780209dd882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d6320a-41ef-4fa2-9060-78f433145d47",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a67635-38d0-45ce-9a5b-3c4472834ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518b4bc7-62ec-4157-bbbc-5d8f291ba57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01f2d06-1003-43c5-a883-df8cdc55a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9bf81a-f376-4cfe-b3c5-2d36c57f4cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488e9ed1-7ac2-483d-b60d-86d83a9e92b2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437179a6-d409-4157-80d2-e5e0aa72189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a432b11d-9954-494b-8a9d-8c8609cd71f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64855cd-47ee-482b-b6a0-925ae00a9e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbaf392-8509-49eb-b087-31f5a109a2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec0e549-4f85-47ce-a3d1-2b0fd32ddfb1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d691b-7e05-4382-a7db-f755a292e48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a50678d-c133-484f-a8c8-2dfddbce04de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0093e2-8259-4b99-9067-e0457d6724c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c86d7a-3b3a-42e6-a5f3-ffe5e3cc44d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10171da-a624-4c78-8e04-cd0155e0b8d0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554ecd0-401d-46fc-bb7a-9dec859bfb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4679de-1d68-47b5-9951-3f52c4242307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61cc5fe-f2a8-41b1-b1ee-e865779568dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a59cc8cb-4f82-4870-b9d7-d3db633f2282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f6a782-ad6e-40a1-a57b-24b2f3a85254",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf9039b-a09c-4c79-baa8-7f44c006b0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8014fe66-d4f3-4f62-b2f4-2f03b60832b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93a9460-43b1-480c-94ae-0f1330fdd3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e3e9ec-168f-4665-b93e-213656340dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbb7d49-bd99-4050-badb-a9a9933968d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb16186-1a84-4cc5-b0a1-d8d9b19038af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34637636-809b-483b-915e-1a96a9120336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8172f-0809-43c8-ab11-b8b26e3c4989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56bdca1-20a6-4cf3-b5a2-897caccea785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4f110a-71c3-481d-ac2d-dcc240ea9a22",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aceb90-d26e-422d-87ac-fae1227b30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec4dd1a-bf84-4133-91a0-76e8a6823be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e68aa1-040b-43dc-b656-3b4210fb3f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece559e5-d91f-4be7-9fae-1453c558e5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d75286-10ee-48d3-8a19-d4a2998eed2a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea20126-d4c3-4107-b8ea-4f9f6931d469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38562ddb-d6f7-4741-b41c-03d599e39937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61651ab0-bef4-4cc2-bdef-e2df02878273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4758ff-e95c-4c5f-963f-4bb2112f9f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac9858-5621-4b0b-8ebe-0c04ba51f101",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16235f51-f391-47db-a7f1-381ecc5923b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb66e689-e598-490c-82c9-e5a94d4d3b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aac06c-9529-4d44-9ea7-109dfd77f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a240b69-0b68-404d-b216-e9c4670ac0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b3c72-1006-4fd5-8549-c5319ce1b115",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d038aaf-e6f6-4256-9fdf-88bcf1fb771c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b55caa-9f69-40ef-b114-03b3f0cf0dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4341c3d5-bc46-4afd-8c91-e4acf953474f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10681169-b19b-4926-a987-1a5feba3429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446826f0-adc6-4fde-8895-c3e57fed63f2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fe6885-038b-412e-8944-eb86362ac968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d81fc09-cf25-417b-b003-08776d9fc4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfbf61c-cda6-4e38-a8b9-df8fe8104d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd2a67-a5da-4809-9dd2-14eff1a560c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f611aa1c-42a4-4f2b-b462-348f9b30ef13",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d11ecb4-933c-4f0d-aa24-1d4c91aeb59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dcace1-26d1-446e-9eb3-4d88df3ebd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16193109-af0f-4025-bc6b-d40fbbe07661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "080c46bb-9033-46b2-a3a1-96668dd833d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394ebea4-5c6b-4fea-81ab-3e35c5856ff7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea738a0-700a-4c0f-a4c9-3a96b31074fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4030526-fa9d-4756-a53d-04e1088e4a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1aa80e-ed10-4d68-b881-f761b61a639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "577c4475-131f-4f2f-8c6c-bebceb4ca2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f17569-5168-40b0-85e0-ee6634aa03a1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb2dcb1-8893-448a-ba5a-a7653bd8125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853d5cfb-6840-459f-8a20-7303534fff6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414b9e54-0d04-442e-9c6b-70b6af87f8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85ced8a8-14cb-4889-bbbb-424bbcbcb256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0f1f7-eaae-45d4-b555-00647b62ede7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16178b8b-3f0b-42af-88f8-6ca469bafc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13845d7a-f578-4ac2-be02-c3fcbfb3703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f24253a-8147-4a8e-9ef5-a1ce7d4fa0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5b77b1-d5ce-4b32-9679-16aa4b62ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f0697-1462-41be-9707-b00caaa33cac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd4bc36-123a-47f9-8eb9-23dd004c7e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af5a9c55-1540-44b4-9a7d-a8efa465dd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ead6cc-951f-439c-9c2e-92ce35388a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4216345f-e4bd-4d6a-aa83-3c2e805c105b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1edef049-4ef4-464e-8fc6-1994c3159108",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec702a7f-9562-42c9-998a-7caa5a21672a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6653641-1c5a-4dc6-9518-432b4a8ccfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "802bc606-502b-4861-90ce-4e6050a3bf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a87d11-0462-45ce-a1cf-ed6b828fe4b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6839492-cc1e-4b8a-a501-1f2e3e76baf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "688382f5-f46a-40fc-a2c9-28469aa62e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "698c9134-60e8-449b-984c-30af0fe117bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8036484-dff0-4d21-9dfa-1f536f9319a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bea605bb-1c93-4f20-884c-007e0cf5eb29"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19a91428-3fa2-4a65-b128-92cd0d9d3460",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed2e663e-2fce-4e42-b6b9-f1822cc20a17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f664829-2dd4-44d3-a362-083be3fa682e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31d250d1-e4f2-4a51-bbb0-14923ec44676"
                }
              }
            ]
          },
          {
            "id": "c6af706b-a7ca-461a-8c32-e43c2feae197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29e7acaf-0f94-41c4-ab7a-b83122d3dadf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "91b19ee1-ddb1-4c53-a2a9-5c36157750da",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965be990-2dc9-4c72-8766-8041e7b115b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fc994efb-8205-4fb9-b73e-63920c16b909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49ebd9a-a2f1-4560-813f-9e847b1ed24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868bb95d-b468-4be1-b149-6ee0be2caa3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20d74152-9987-4743-8af9-4e89428f4da1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9698aa74-9fcf-4081-82d9-a3be24db7e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7e58233-6d41-4bd7-80f9-be249a8faff8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92ab173-d245-42be-9c5c-850de0d52d67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8026a658-1acd-459f-8b05-4aef1d005fa9"
                    }
                  }
                ]
              },
              {
                "id": "77ccfadc-1dce-48c6-b980-39c419dc7a6f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65d43ba-f061-4395-a579-3471391134e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a076a0e7-976e-4c5a-af4d-0b0f659952da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4572887e-890c-4d8d-b79e-76353ba50e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2488f1ba-bb96-4c19-8025-5b5382dad442"
                    }
                  }
                ]
              },
              {
                "id": "12f3828f-3c60-4cee-9457-f6ed515e031a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cea6bb99-6c1c-489b-ad64-cf1e005ef3cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "432f374d-61ff-468b-a975-7affa571c86f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcbe685b-f79f-476c-9c3f-ee971c794a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc27fc02-c501-4f34-82ae-13223f772898"
                    }
                  }
                ]
              },
              {
                "id": "f72b42f2-c707-4a1f-b7ac-2b2b58f207a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "487c4519-8b6e-4936-9d09-58a2effa938c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "907cbbb2-4789-48f6-aa2a-de291f273488"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffc91577-4fbb-435d-8d7e-36dd26f19299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e5a04e21-ce53-4626-99e7-6133e763fdcb"
                    }
                  }
                ]
              },
              {
                "id": "dac4cb58-b8da-4d60-99ac-1f58d0019ad6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04054e76-6f37-4f73-8203-4e1818f02130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7777ed90-11f1-4483-b10a-eeaf597ffc8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c899d91-369d-4c2a-98e9-8bfd04f70c43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4cbe2ed6-f033-4210-ad24-42c91f442201"
                    }
                  }
                ]
              },
              {
                "id": "896cac08-6379-4109-a1e7-6bd39e46577e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b241911-efa0-4c1c-b3a2-c7494e85cb53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ed2eae0-c545-4e41-85d8-01b7bbeb0e5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "809ad60f-4f99-44cd-91d5-5087a4f6c933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47c7bc34-48ea-42d5-89eb-e921b4181a16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57eef970-2f15-414d-a8c7-64f8dcb54aa6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56dd8095-0ff6-4b1d-af18-c6ce7d348981"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef52777c-193b-4d80-a8be-aa576af5a8b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4957c41-6700-47a0-b74f-122f86a220a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35c45cd2-5f68-476c-b6f9-dfa91cd763bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f65f36e0-d539-474f-80cb-fb3105429da4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a898b1c-2453-432b-8d43-7608bbb0069b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6776db08-4210-40a3-bf72-37f24a341711"
            }
          }
        ]
      },
      {
        "id": "a42f3b74-7fd7-476a-b796-755643d8528c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4f3c2422-dc8f-4eae-ad9f-d78a64685a26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ca693b7-1beb-43e3-8cac-a76fffabcaca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f0e1cb0-7f18-4378-8df4-4b00e3294dba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79b5f0e-f912-4d90-91ef-3b780230c369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef87f1d-529e-4955-8894-628d6e5ae3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57183a60-f120-4133-96de-466ed79aba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f51f17-dfc3-4f6d-8edf-17434b1c1e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1c55b3-4054-4b22-9a12-b7232afe4810",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d262f3e-af8f-4da8-bd3e-4ca2f3b5d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c22937-2bfc-453c-b260-2a9f00d025ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd65c21-b47b-46a9-b3ff-a6347a1c42f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ec174b-5df6-45d5-95c5-d4f61374c611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b447964-a212-4a2a-abfc-abe993d9e13b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1519b8-d625-40fa-a437-1d98097c03d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936828fb-0dd0-4e75-9f3e-34c6e695ea81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41c68ce-b5e8-4de1-8e22-e5c6ecd0f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42f07a9-d79a-4dc5-9904-f21b32e24c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16c790a-f2e8-4ce6-9e1f-3bee46b16f64",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f99c154-a37d-4273-a6b1-e1afe7288716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194ccabc-199c-4384-9c45-2adfd46818d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd77070-32c2-4661-ba30-9192d6be7629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89db3d9-951a-4c22-8d76-29ba2f6d78e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009b8020-a94e-4a5b-88f1-aede5ee81553",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03eb20c-b860-49c2-9833-db790ac2cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54567eed-7a78-4b56-b1ae-33bd5a83a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9c5cfe-ed0f-48ea-8f3f-6ab22d02a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7fb042-d3b8-4d04-962f-8349f16b1527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a853f921-bcf8-49af-a831-fd8c3437b40a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c31f6b-d0bd-4f9c-ba8f-4ed789e0b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc81793e-d205-4a57-945a-7fc800d6d53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a4f698-e75b-42fb-993d-ce3b4f20b582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68b930f0-0a20-4ac9-9e6d-c4ac6e752719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2751f967-810a-495b-b7c3-b17ddf6ca5ac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ea7948-e86b-4514-a593-03bd89929f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb746211-e4da-4a02-9a38-1ec69428bd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7329eac7-d773-4c16-ae0f-5b0c165d0cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccef271-8228-4014-b5bd-399a11e9f2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493afda5-65bb-4697-83f5-3d9edb5034a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036c5b49-971f-42e2-ac17-86e88720d82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59165de4-d138-4569-85b1-127c66eadaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44036f14-266e-419b-b762-eb26acf45911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4efc745-bf9a-4825-9386-8c07a755f5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb654dc-5156-4456-8a05-761f83ba8e37",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f67fd5-078f-4fe7-ae2a-707d61a44c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e36c11-3d8b-4fc5-a1c0-55354b78d0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93660834-9ac9-4769-acb9-fe3dbc50d126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a75238-7542-43fb-a089-7c57787a34ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31614490-e59b-4b2e-b927-a15061728947",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9511c6-f47c-4d37-b6c1-1fcbde9e0902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2404ac4-8b2e-4163-9315-371e114cc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fb2a8f-66c6-46b5-ae9e-8d3cf8dde70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bee079d-a881-475d-b06f-aedd186afe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00afcd8f-4665-4660-b9ba-6bdc05bc6762",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c36abf4-6650-40f9-9aef-b4ea9779e9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fa6f53-77cd-4d42-b2e0-d2599058a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66682f-0bd2-41af-ac7a-882c57669dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21ef148f-c70c-46f4-a1cf-dc90b61ba6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbd8839-1ef7-461f-ae4e-330f9c067f64",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b101f626-1c3f-4bd1-904d-06c097bd5139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3a2560-21a0-40eb-ac7d-cdad8addb9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa58b5e0-198f-4d1a-b81e-521930d292e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "def64995-81d0-4915-9265-6dd446aa1e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059725c7-e437-40a6-a905-8c66f9cc3a80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed2211-938c-4b92-b23a-01599f8c9631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bead10-d9e6-439c-a1cf-acded9eb8a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e47c5c1-edf8-4f5b-b5ed-9165a82e4a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6179e46b-fc14-41e8-96e9-ed292a9892d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f0e48-4fb6-4ba2-b923-0e28d0e002f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e56852-789d-46bb-9bbd-5ca52168e8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef75d2e-2583-467e-b2d5-0a8d97619c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c7a1bd-8ccd-40c4-99dd-3d0588429a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be87186-884f-43da-a3df-457fd3e25b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7805015-e4e2-47fa-aca9-254f6967b4b0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a43c5b8-b2e3-45dd-b404-b79663dac3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00252205-45b8-4dab-9b06-29c831dbce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8183109-204d-4a04-9721-f886055646d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b0c7d7-5855-40de-a99f-f161ac5d4d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe474f1-a82c-4fe7-9fa9-a48f7ce198a0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e82317d-8311-4af9-8ab2-6a8bc2112353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b0b519-3f57-478c-ba37-28041d4fea28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea071538-c0ce-4566-baa9-8c082267f486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a326b5-276b-4237-8e12-07a41a921a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3a4918-675d-4f2e-ba52-c95cd384c230",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e060c6-e05b-43b1-b371-8e609227c8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e03410c-26b2-434f-a862-b74e490ead6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080cad67-1007-4edd-879e-268dde266916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96da99b-83c1-4444-a4d5-58c348738f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cabd3a-9e67-4c33-8b81-6286c2688f0e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9f40a7-6d50-4786-9e10-74777b9eb92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e57c15d-480c-4098-87e4-f401e685856b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11c6ac-aa91-4a56-9353-5719cd997e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17728f2-4168-494f-9ebd-cbc6c306c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dae9f2-cf34-4854-897d-66f898eb8ebd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d26a5-fc32-4bf3-b793-e8fe85b8b466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eead4e3-39d8-4695-8e58-411c5b94c7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4688e29-2987-4286-a6a4-60dc3555ab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d0a217-9343-4615-baeb-65e6a2b10eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25034b4-05e6-49ee-8df1-03aef786165b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf338008-4b3a-4e0d-8cd2-dd0af6d3055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e00713-1c07-4e3a-881f-b4446c775e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b529fafb-07a9-4b82-9094-91d298c38b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50d1aaa-3d04-4902-b340-dadd2d69c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ebe63e-5734-442d-b13d-7926e77240ba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad7d33-ad05-45ce-8c57-5281fee62ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ae9512-968e-412a-9fe4-d76aecb2b733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7a73e0-8ba6-40bd-a1c0-36f4cb28225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6dafe8-e52d-4d90-a3ee-b98ce5aedb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431a0f0d-fa7c-4a5d-b6ca-28da22d0aceb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f5d4cc-7e41-4e63-9a24-c3c954a41f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee354f88-74ac-478a-84f3-26f52e3d042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68e6259-a22c-42d6-ab10-b1b2c54f054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420ff340-7a6f-4b2d-8a95-eaaa001cb6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc2bd1-b09a-4a74-a65f-3c0623830923",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179e376a-5790-46e5-9412-06d7634d71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6053d6f7-5514-4fa9-8f78-e3ddfdb1b990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e899f36-058b-46b7-b46e-5b94df8851b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8771aee1-79b3-4a36-99e1-3ae578a484a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7877fbd-55db-4cae-9f67-e070e36496e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa40440-5113-4ddc-ac65-ed16e3e21cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8c3c12-7539-4779-9bd3-8335ec423954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5bbade-b81f-4ff3-bbe0-3e7a81efa92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "152d9142-3cac-4f03-9ca9-c0ba4fcb2372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b360d-6eed-4b84-97a6-6e971fd71bc3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30278a9c-28ff-469e-8d28-816384b6788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a18496-96a4-4ae3-9744-9cc9e1156a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf287bb-b672-4064-94bc-dbdb65cca525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64af1701-88f1-4a4f-b9df-beb5440156cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f8cf7-9e36-4089-bb24-3015aef7efed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a048163-ff2d-4379-a248-3fd40cf24126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9ce859-3a10-4215-90b0-a2f131b16fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b54f2d-1021-49be-bf18-fcb2cf9034ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b259e55-9134-4d60-ba93-89f4e90d76a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b429600f-12d5-4ddf-a74f-75cd220585c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29333d5-c11d-4bc6-99c0-2ff5dd02c80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab95075-fbed-4509-a074-48a80df8313b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864e18f5-98c8-4922-a0ba-612622a300ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0298fb93-7bed-4c31-90bd-ecb8e3cd2410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd6a6a1-b955-416e-b792-130d17391b5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1f1543-6286-4dd4-aafa-369a2250473f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e99d8bd-b664-4725-bc67-ef46183b5eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e239af9b-7d2b-4ffc-9d6a-520cb9cffab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a028ca45-3ca2-46f2-9c40-3ca10aa9c677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9f653-dca6-4d60-8c62-ae347465d4a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ded6932-4990-409c-81fe-7c13ede45794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cddad17-cfd7-4f3f-a195-c70d717886c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7b7dcc-c378-41ce-bfbe-4f3178b00b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420c8f4d-5a40-4681-adee-e14218a25685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1454d1f-e52d-46be-891c-34d7e3ee0ebf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcefe4ab-65a4-4bf1-9efe-2d910c0ad07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76559fdc-a8ec-4268-b9a4-6d538304dcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b42bb-4f7e-479c-9e38-c706d63ea912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007ed5a8-2a88-4104-93bb-a0a1d2e3eefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ec5704-805b-4303-baeb-fbf0f61ab2ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2fa933-74c1-4012-b380-3b24ca7896dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4eaf63-637a-47bd-bf92-5a0410557d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f91f8ff-9870-43ff-9c0d-002250662812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3802f19f-e5ec-4638-9de7-d099c086993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3afd25-ffb9-4778-95c9-01a2a6ff6f99",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7269a5-209a-48d0-9410-6d4b01f9385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45a9f4e-3994-445a-b9e9-f9e9c342ab3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88e8efc-f662-4ac1-b814-0633fa577dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53da81b0-0549-4438-8bc1-100c6568eab9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca069cac-1287-406e-a840-13e6abe3967a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e2aaf71-15a9-4cf1-ad28-ffe9a7bc36cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee958ade-1c2a-4abe-8a30-22fd05e51353",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "71d1db39-2e34-4671-90c8-3f33fbaab820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b10020-d459-4971-b307-ddbd11bc4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bfb4ea9-6995-42f7-9ebb-b25a237a7be4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f528007-9267-46bc-be14-0cf6750b517f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66eebc57-5c09-414a-bbc0-b924878c1043"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ddbd6c8-84a8-428d-989b-f8091e854bda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebdbc0bd-5348-4756-9e94-719c2c250e73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4154749a-39de-448d-a639-d5fc2a6abaa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40100e2f-7035-47ba-b1bc-8a82970a0a02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66f7c313-b613-4b85-a767-fb1206fe7b60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7e5ec9c-45e3-42ef-90ad-47906e9c4588"
            }
          }
        ]
      },
      {
        "id": "5b0b5897-58be-4230-b7ff-b3d84c70a0c7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fa674ab8-9bc4-46c4-8318-4f765fb89dcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdacf075-876c-4298-a038-2a0f25d08fd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecd42183-628c-42bc-871b-2c2403113b5a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c82b2-2eb7-4ce9-bfab-e401b448f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0601c12b-f306-40e3-ac1d-5d5ce6c48020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b4913-1132-4c03-8769-7660add06dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07e0fd9-1b6c-4161-b453-62535124e36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ec976-4e12-4eff-a7be-be08dbd4285f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206ba4b3-bafc-4f85-b0d2-ac6053cced84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fe55d4-8494-4460-946a-1ec5b1eca724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a85ed7f-8acc-4418-badc-1b954959daea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "274606cd-9a2b-4912-a409-3f28b8232f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73be4ac6-b54b-4e54-a7af-e0bf42585134",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede0d7f1-7e11-4bfb-a38f-86d362be7052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba34672-6752-4818-905e-a33a884f889f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c983dbf1-065b-4f8e-8753-b3b1560b2e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdda9f0-d0c3-4f45-8a70-31e0cb5223b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc8caa2-5fde-4e2e-91bd-e2eacd700aa4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b202f-ec14-46d0-9aea-71277739fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84955263-b7fd-4263-a663-d9eeffd1503a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff168514-d70d-48df-9195-b03f27dc0596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d97eae3-9ac7-401d-ba52-0e7fc81ea257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2cec54-1c75-4487-aab9-145de59d10b4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffabd7da-c51a-4787-b3ff-516870824c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3620fb-af3b-4b2e-b29f-4ad1de219251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccd338d-fdd1-4d5c-9244-691200b04149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "168a9641-1f4f-4a1f-b34d-cde453cd0e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80af7c0-d050-4548-be13-ad0f5f05db7b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db36658-4da0-4719-af21-ec0196c8bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7e6961-8a35-4e09-8bb2-b0b017dcf230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ec903d-17bc-40c1-8264-4f68d259a05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb5dbd2-d0a6-4d1d-87c6-505199cc9703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b51b59-d46b-4ee7-87d4-811968ee229a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b703c9-9512-404c-b6b5-47a3daa87ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acd4e11-02cb-4045-ba59-c90b86dfbdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcdef04-6582-467b-b433-8e21976f57e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65214ae1-4228-4c93-bd83-c9a3127078c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e822d75-9750-42d1-a87f-10d2a1e1f4dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a356da4-4f89-4221-997a-f65c65cf7d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b86140f-7bb9-4011-b858-9e44132f562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de408c2e-02ca-42eb-af28-2ee8a9201444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0edabbab-0ae2-4c0d-a896-efed711d8210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97674a19-8e3a-4377-a5d8-aa4da1df2de2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f16cf62-e65c-46fe-8d74-7ca1a7ad1589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f97f43-a5a1-49b0-a793-1833a3fc9506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5db8957-446a-4493-ab65-de2b96eacd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "563eb02a-4289-41c6-8a9e-c33481717ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cffe850-6fde-4098-8eb0-b9b3c779005d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efce08d-202c-4027-8ee6-75b145987321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8dd1d1-e724-407d-a946-7c3bfebcb671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2962eeb5-dd59-44bc-8835-436020076802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedb7e29-d75f-4924-9b92-73123942697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3aaaa5-5dc7-4e25-95bf-8a264c80fba6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee12d3-9ec3-4023-9def-f752a1728b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd708a22-705c-4707-af43-894dd86eb74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3a8b1a-9d82-426f-b75f-44ad8578b1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42dc419e-a32f-4de7-b359-e2262cf978d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97792bc-db8b-4b7b-89b6-b51bed210686",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664fe28e-6068-43b8-92cc-576e0bfdb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f2d7bc-d230-46b0-9602-96c02d6352c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5408a-b3eb-49ea-a5cf-6ee873acd19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3ebe8d-72e2-4bb6-9bc7-5e4f96855723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38a33e5-c1e3-40fd-8265-bd796c2f9b8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca45a6ab-2d8f-4204-a95d-ac1924526903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02f5c55-7d56-4be9-9afe-8effc80ece19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7055058f-3d62-4d2a-b7fa-739e41719fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91850b8-8b53-4ff4-9689-ee0a2a458ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d3911-4f98-41ae-82c3-0d5c224fc85a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8653b28d-4bf6-4da9-a2bf-4725757c66a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c56b08-9c79-4e00-b871-8988a61d31e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9753bc26-0221-4e3d-a54c-c5fa544b9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ef0a05-83c0-4bd4-9242-443b6f0d6b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a618e6a-03ea-4d5a-b7da-e30df4fc646d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597acf76-9e2b-46e3-9e22-a423e8ceca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af48c0d6-9f84-468d-838f-9c53f6437cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc1cdce-64c2-4c68-b0d2-b5cccd7bbf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0071aa-8eff-46d6-b81e-7c0ec2f8279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0405f-9a8d-44af-95f1-7b4edf2a5c83",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1106f86-45d5-42e7-92aa-c7c6e62b3054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3518e8-3752-4c34-90f0-8f4a27dabda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d79533-3074-4c76-8826-77fdb95ef88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8857f48d-22d2-4a29-8cb2-d973bba23b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b150d4-faa8-4cc3-bb93-87dfd417aac9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa50b2db-4943-4208-af04-0c1cd00d87ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d353036-2cbe-4030-91be-8abee844f2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a165c9-7641-4aa9-961a-cfbdbb4fadb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80316b22-c3fa-4147-a3e6-6e98b4efa876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4cf434-4119-4ac8-948a-58f792f13b38",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee067e7-dbe7-4bcc-a368-79f654acccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f964d4da-c67c-4f0b-84a8-a01e8771c6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577ef9b4-ab18-4549-a581-67a1a79444f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6971e92e-aceb-4301-b93a-05c0ae382046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb07d9d-8a76-4e58-8815-acd173bf5748",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451e97d5-8c9c-435a-bca7-1cc5327b0c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208d837e-0970-4cce-8a6c-40c11650cb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe1de4c-e72a-4ba9-a80f-3405b5ea37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72011a12-4bdf-45a4-b324-5e7ff6fd884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d5f54c-a86a-4b12-a315-af49a1be1dba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2ce699-e276-4397-89d6-fa95e90f7278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65c2e08-2ace-4f3f-b6b2-c12a6c081a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d088ac-9c27-448c-b32e-ca490750ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a2c410-8ba2-4db9-9c34-8d0f732476ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9a29c-23c5-462c-8765-5c6f76a733c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f319399-397f-4365-8747-6e743ed21cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5892b53-8660-4aa6-b614-803b99b28eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70e755f-d32a-42ea-abf9-8bb6d9a1803f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac49d9c-4d60-4fd1-b4dc-4430260093f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d383d1-48a0-41cf-be0b-e8894719ca4d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c630141-4b1a-4316-bdf2-6e622a27d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785933c5-b6c5-43db-a436-edb2b94a3cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c040af8b-e624-42c4-9ace-58320e187c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b5bfb9-d84c-49aa-a871-c53874154648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f03cda3-210b-4165-81c0-4b5953acfe25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5f84e-1458-4fa3-8e34-a6e020557db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacbb6c2-8161-4f64-bf37-1e3e72933a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a46cf99-8043-4ad0-aec8-86f91cc47baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f593a0-4aaa-4738-9796-853a556d250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab73ea3e-37a1-4702-bdcf-27d91ca296f9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a721a-2a7d-4b1d-acca-f9001a840af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f027bfd-2c52-4917-959f-05eda3701d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba0b865-628d-4750-8d94-8aa740a860fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7cd640-39ca-403b-b595-d8d587f14e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcac60aa-21f2-44b4-8ae4-c7398f102b8f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39de0dd4-dde0-408d-932d-58369807be69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58188642-883a-4feb-be76-896cdcd7b1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b13495-93b0-407a-a531-6b9edd005f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d1dd4a-17c5-43a7-bced-e8aa09f13ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6086204e-816d-4c89-834f-47abd5932a9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45031ab-b30d-4c59-8ede-dd63b84c0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77422a53-4b42-46c0-ac91-4913333b21e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed82e56-c615-4430-b195-9ad6dff1115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18e5b46-081f-4c90-b793-7361cc993827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcf07c4-3f4b-4d19-8ec7-f8b898f8a1dc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9cfb67-e9b6-4d95-8f01-aa1fcccb8f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d3941e-580c-4660-b4e6-42a09deb077c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d101c2ac-9398-427d-aaa3-9a7e43fd67b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e436e5a-c410-4e9f-8ab5-9e47ea0924e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a111e0-8233-40fc-8e37-085051ad4921",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f62653-0db4-476c-8da4-99bbb1b2a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4137a85-b061-4a5e-b8af-b04750acf9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a5b32e-8ee4-4af3-bfff-4dac05a2efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7a44f0-8c65-4f5f-a22c-44a7024736c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e210eb-0634-449e-a825-876571b7c967",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b364b0d2-4ef2-44a4-a992-d3012c587f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e4d083-4d96-4bb4-aa98-d70fde9e67ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b814695-942b-4ccb-8072-2a76169de035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee67808-a0db-4cb6-b912-0678179abf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66daf010-2786-4291-9590-7ca6e35ffe41",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b3de3b-b7b9-400b-ad3b-a86d0bb8cb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0ad392-8f04-4bc6-93f4-1967b6626dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538bdeb5-25e7-4e0d-a3cb-e1cbde0559d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "995b2bd4-9867-450e-8d82-2e07438f0152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c162d969-a70d-4579-9d0c-d6f5a233f6a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7120f15f-a170-4f92-b868-8e41ccd0e723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27d5cd6-06c1-4fd3-ba5c-cfe933d2f126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b865312-c449-4fe7-8ea5-8f87ae0551ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "344feae7-d477-440e-b94a-b08295b57bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045d10a2-4d78-4058-9cd2-d204281556e3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64191086-0751-47e9-831c-b6800f58f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d95395-47d0-4cbf-85bf-e5a17d6db928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507d2892-db13-4c9b-b655-4e1e754be8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a788a7d6-c8c5-4cc7-9af9-752b96e72c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9e31d1-c205-4614-9799-7a08d9559343",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94859dd3-5639-4ba6-84dd-34ab717113e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80791094-b454-4fb1-881d-22a985a335ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b83996e-207b-4a94-b0e6-782ed4664fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daab423b-458d-4671-901f-405e4854825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba99fc-fa51-44d5-8277-266564da5a51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60197c64-3968-4601-825e-0a3ad3c61bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b21b38-167a-42de-a622-b10be60bc0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2035f385-9d0a-44e2-b3f6-b00cbc4b8e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d80c11-5efe-4414-afca-bb5e069c97fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e7c799-0186-4345-b15a-fa4ddbdf4bf3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6328b357-9e46-45c1-b5c3-2c0e493cee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef547a4-1bb9-4083-9a92-70e959dcb0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f339619-0445-4be7-bb1e-3c5062e5ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75bec608-0032-42bd-950c-c6a5276346fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165de2b3-b364-42c2-9898-2823af7d643a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e11b9f7-eac0-4de8-aeb2-8bf55ff284c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82172b6-eca9-4a9e-8504-9330b1330c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50deed11-8f3e-4075-b966-b884648f25b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab81582e-a009-4f19-98d8-5e7b2fe0a11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a51dcd6-eb33-4cf0-bf68-72b39ea60941",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458419cf-9662-43d2-ba09-debb7343abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bc63c8-22c0-4aaf-91ec-a58e57f924e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1d2d7-364a-49a8-bcfe-d103c77c04e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3a82d7-abdb-493c-8156-f3e27c8b220b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20e99ed3-b30f-48c4-b892-fcad227f76ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdb6a237-5ff7-4bb1-87cf-903e8a386654",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f2ed2d-ab64-4d48-8871-23ab2c61344a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "00dfbed7-56aa-4b6e-aee4-a657013f703a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47713c8-03b0-4dd5-9d7c-93bd498b19bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9c01a2-32f9-449f-9144-ef2220371c6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91755125-359e-4405-8308-87e1db86a845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01ee99dc-f24f-4b4d-9149-01adee169a66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95da071b-4faf-4429-a8e8-51b047c36546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a59db2-9fa2-40b6-a70f-87f2b41a303b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06598241-536b-4447-ab39-037f386c011c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f71364fb-7603-4891-a82c-1cc9112b790a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef3f6c3e-41b7-4387-9a72-cf668c8c2b7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12767ee2-eba3-4071-bb82-c20f6345c84e"
            }
          }
        ]
      },
      {
        "id": "cfc3d0fa-cc6c-4f1a-8f3b-edfcd60cd9f4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e1e141e-c902-428a-941a-56d538fbf504",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02113f82-f7da-4707-b299-3bb886ce02fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c8f96e5-f939-440f-9488-0e81d83506b3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7845433b-72b2-46ac-b3b7-e29da6145ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561f4a90-3cc2-4af3-8c58-80978c775324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad35d896-3afd-4a09-ada1-5c02f35562c4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f8d1f2-62a2-44ea-a3c4-8ea7cc1aa050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebbd32f-e122-4bba-9e91-d1337c74a0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ac0b49-3b42-41fd-934d-38aa42b20351",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a17064-6636-4d40-bbab-8a8bf7c351af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90f424d-5fb4-4cac-a125-744a6276fa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703f02db-0016-453c-a635-1595ab7880f1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef2cd1c-a367-4610-8b71-33446f89d812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1066d4-6148-44a3-a537-329b324f68c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675e0777-2145-4064-8432-c4914fd4c973",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba53831-c4d7-47df-a964-485430d1b3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59c932a-8040-4f2a-b7bc-7516a31ad748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42f2601-5a8e-4dcf-a51a-69c526eb1b27",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e750e3d-27d7-4025-9733-10738de583e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc44a551-0241-4b3d-9136-c418164641da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14367606-4c07-411f-abcb-6cb3ada29e55",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e363279c-467a-4463-8b4c-0e3c4cf8e13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e038a798-f32f-4ae4-990b-96872c50ffdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1233b893-c2e5-4660-bc61-192a9ec79348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d667db91-122d-460f-9487-075a8ee737fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d956522a-817d-4d1d-8d1f-cb1b19d19124",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4acc4a3-28b1-4f99-b847-8b33ff4e33b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0210fca2-3762-4a23-b286-227b65db4474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb67a8b-a380-499b-8071-d6beb7d5fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af038c2-ce5e-4bec-b635-c6360d647d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0290ab-ce0a-4082-ae21-52b4250b403f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5612503c-995d-492e-8cb6-c6ad2cabe671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbe2d50-98bf-4246-bc33-cc2b0ebb9b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35e27ed-603a-4c32-8651-514e59282410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2778f84-2aa4-488d-8f11-7487951a6992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6108db-9481-488c-b4b1-4398346bcd2b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5786b81-2513-47b5-8da7-91cb3583917c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f0051c-5d95-45f3-8ce8-27fe91fa4531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e392b96c-e173-403a-93b2-a9ea13e59b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d78f656-6e71-414b-8995-04025221dd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6e8b2-0e9e-4e2f-9c60-837dc642c77a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5489560-b1bd-47c4-87e0-65e24da06db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eeb25a-d3a5-4c5f-a0d0-26d9718ff50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29d2eb5-1062-4714-8303-ed93f37b4243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca712c91-85cd-4133-b56c-a53f72f854fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4bc2c2-04e8-4a32-9133-6361f6d4e5f0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8ed022-8a47-4ba3-b75b-8fb43bb8b54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12924795-4f76-43ff-9f2c-79d0e70472e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1c983c-a4dc-4ed6-8065-aa882ba5a022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff995ad7-a4a9-4e79-b70c-bb1448629c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06b3975-d043-4eb2-af47-5460102f48e7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe08a4-8b13-4545-969e-f1ad45a2a581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5b4d63-3b7a-4c8f-a112-651aaf595ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cbf7b2-1819-4ccf-95e9-143e8767490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebe0bf4-4b30-4b26-85bf-b97949e5b0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a53bd-74aa-4d86-9f0c-0671c66b864d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab63668-cb15-4556-aa49-1803b2b4434d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597fa69a-731b-4fda-af27-8fee25b6afe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb31c0c-58cc-4982-a63d-13bee58b4273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658199a9-a7e7-4d81-b070-ab599655f711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2e144-49ef-4b1e-9602-b0796b7ceefe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861c0884-b465-4d06-8cb4-ba0e6ed58c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ee4835-7eaa-435c-89a6-8e919ba56c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cab57d8-9cff-4c83-9a0a-c89fe8fab594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5126bd58-d2ce-4234-a0b1-0320f3eb31c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935b42cc-7993-47b8-b682-ae1fbea22646",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef41a17-3cf8-47af-8ec9-d66de3e32bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeda24af-691d-4b07-bb34-88528fc2f56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb72493-62a0-4e0b-99ea-917b9409e08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23a5dc5-5146-49df-ad1b-93862e69d9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc7c413-8232-469f-8aa2-a3de71dab101",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0fee3d-46b0-4f40-92a3-22a6c8216736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e34e3a-b879-4087-96e5-970819ef025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd06db4-fdc8-4e55-948e-cab298e2a135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bad1e3-c677-4b0f-8efd-ffd37adc0229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6404695f-8138-468a-b63f-d7d82ac0d8b8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6edadd-7528-45a4-8b40-07f1fcf69d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd957168-a318-4c8e-8455-6fe65b0a20ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5b9fa9-d962-4757-99b0-8acaf0284a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fa8263-556e-4011-90eb-560f93a191ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6fa25c-399b-4fa0-b078-01c547e29dfb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5203ff95-f1ac-4ea2-9187-790e6ff455ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90533d75-f0a8-46a9-a6c2-bb3cd983739d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ff4af4-7b70-45b0-8923-1a8417f38701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d01e8f3-db7b-4187-adac-18ccd40f29f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09222a9f-8070-4b75-98f6-00f653a95888",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5bac0d-aecc-4e9c-b460-21a3b6a14146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b02dcf-cb30-4d1e-9d7e-33ff8fb093fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91abb534-9f79-4513-b5c9-dd590139ce82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a083961-3c5e-4b40-9d87-a0442924e178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e89a43-27be-4ebf-96cd-e71cada0edf9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698613a2-180a-4f9c-bc36-8e45269e3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa5477e-1191-4f11-b63d-4ce94d8234a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a098f0-2055-42bf-b8da-c1fb7e617001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe0fc58-1058-490c-933a-9c530ff4ffce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad0eec5-2808-4be8-a0db-4ebb51d19bfa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2588817-0672-4ba4-a723-14805e5ec042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb60e3f-a3bc-41f5-9f1b-e3c530a9a9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786395e7-a4cf-4ec3-b93a-52062e0917b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0013afda-a2b6-4039-8dfe-6be601bb1b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca1df54-5f94-4a2f-922a-96481cbb05c1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b5de25-6402-449a-a901-c4ba04017f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e128ec-0ce1-4d5e-bf53-1e09815909f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc45ca0-100d-456f-8d85-d89a7a76172e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a8e2b5-fbf8-48dc-ab00-c73a0df39dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b6fd40-1689-4e9f-971b-7a2678f029e4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a36b11-e777-4f2d-a06a-dadaf87e6eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b804ff-3ffe-4b79-817a-9aafe51af4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5422c899-bd96-447b-8092-183e6a1c1b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fa7d8e-7fee-41ba-b729-aa613806c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26034cf1-ca1d-4bdb-b950-9cce2396fcc8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1543ec-d7e0-4765-9c94-1a0c610bb552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7a7b04-1517-437a-8b75-5bc2f72d3aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc78060d-21e9-4dcc-b39a-5a14b7b7338d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd0747-07d7-43c3-8c68-11115c90a8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ecc9d-cdd5-45d3-aaea-35893ea3c6dd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615ec252-b5b0-43cf-ad8e-6c86cd239630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbc91a43-ce2c-4ca4-a1cc-74a05418ff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758bb7d4-1c0d-4952-8393-9ad4907fe48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f185538-7d0f-4f1c-aaa3-699ad3ad4cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db9495e-8531-400a-ac1e-5f94eb410b39",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5f3f1d-c94e-493f-b26f-95422409028a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4acf80b-15fb-4768-af25-275c68a1a39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de918c96-a0d8-4a96-b5a8-d1b7cd9dd61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ae3428-7a42-41c7-bb3b-c79f4b1c1c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113ba358-d71c-4f37-b0e5-44da25c34b7a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2410f9d2-7bc1-47d8-9fd6-2ecf77e847b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520e58a6-097a-4544-ab4e-6dffe01ceb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f33393-4dd6-4523-ae4f-bb426f58cbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632324f4-d00f-4934-83b2-b2707bc94d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc51dc2-35cc-45a9-82da-1b10b6bdf3bc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f40efa-2577-49b5-a881-bc57d0977f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb179b9-50f2-450d-8d10-d81384b9cba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225292af-6b99-42fb-af74-efaca5367c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b4b59b-3383-4a71-844c-407d4d9873a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfa6203-3df0-4058-92f7-33bb7b8e6439",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af67de47-2b08-4f7f-b7ee-82ae615ce0cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f15758-4c5d-498d-ab61-bd1d0e49f894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cdbb28-52fc-4a06-99ed-62bb654cb2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1233ac-26c1-481e-8039-e8703958c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e853d6d-209e-4952-aa65-cb6445179159",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c4a76d-700b-4b4a-abe1-4d665a863507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161dc4bf-c4e9-46c6-9455-cd76dd1d9362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53174105-fd66-44c8-8373-1a208298e12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732d0e77-617f-4315-a5ce-600bf6af37f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959f5ccc-8728-45cf-849a-e7894f5138e3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afa0090-74e0-45dd-a91f-3799d5ca2536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1fd86f-b7ae-4c00-9093-79d17bc6f6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8a6df9-fa13-452e-ad81-3d591a32df85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e26043-6a11-46b5-8985-b1b1a2325209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20f73aa-2520-4de9-92db-a5e8c6cc2ed5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682a23a-121d-4613-9cf9-2c2e557166ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6958878-8070-407c-be9c-dea0d1ebce49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41863c0d-ae8d-40c2-8c0e-e6b80e443a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a021ff0b-7075-4b09-9401-fd3749a1550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa19b21-d82e-48cc-8ac9-5f1be6253a6b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f704652-43c9-4345-9eac-bfb69651601e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1892c8e5-52f0-4dbe-98d2-ba30ef94ceec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11800dac-beac-4c6a-97fa-fcde67a64bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e0a1fa-d20e-4a29-bd37-817aedb137cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1610caf9-e230-45a6-9845-ebf3148be6e7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e7904-0505-4452-bc0b-e3c7fb7721ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0c3ee2-8590-41a4-993a-9f6e57f29a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1ce173-36ef-48d3-a4d6-469deb98e630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67075726-51bc-4c6c-9ea9-e29301f131c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547e978b-660c-4b79-9d9f-a3bb5cbf62b9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b124b313-e692-43a4-a25a-6ec94b632b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e15a82-735b-4278-ba85-75465a3976e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80afd73-df09-485b-bcc9-c81cf5695910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d87a15f-bb06-4603-a61e-46a1c0d9bf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea24ab7-4ba4-4a1b-9362-07660021e216",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8627403-f137-4bd3-80b7-9e2f7a74a53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d959a47-db07-42ac-a3e5-c43a52defba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b834132-5fc6-4d8b-9b93-2fcc9576be9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6400db-05cc-4453-b377-68cafbae17b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f18817-492c-4307-bb7a-f34d402635cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99daeea5-35cb-457a-a777-91ca214b3abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6ef016-1c42-4950-934c-7d4268c43bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3d9a0b-1e9e-4d9f-a385-8705013575e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13dccc53-dfce-4970-ac9d-ecd3decc81b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4cec9b-ee4f-49fc-9cb2-2f9531723548",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a8c2f0-9818-4bff-8db5-9336f06a76a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cb4c6e-7499-420c-9aee-4ef496acf2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593ebed9-63b7-42cb-b4ec-2cbcdfc7662a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1cedd2-38e4-4c31-8dd5-cce4e28b255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc9a0c1-b299-4b57-a955-08d955b4319f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c688c74-6142-4257-bfc0-40dda53e2320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31382c20-2611-4727-9e47-ea0b10c433a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507f14bf-e2d4-42e6-ae91-3967898510e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3542af-2918-44d9-9517-60f0ff9f79c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babe58e3-4b98-4b86-94e5-c7e52e94254c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7dbcb-e286-44eb-8b68-9f06604147d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367c3eef-4c7f-407b-956a-ae7924ca5313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1639ec75-77aa-4999-86a4-2627049b5b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db20ea84-12da-424f-8ccb-3bce38c6bd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629e8053-7dea-46a8-b8cb-ccf2ec93158a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30396c9c-55a1-42c2-bd97-cc5d5f2f36b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed21dff9-7ac1-4b42-8640-17e3ff63c688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853b74fa-455e-417a-b774-41a83473e1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8b2dc2-9026-473d-ab6f-90adc2e43a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c172663-3dc8-43eb-ba90-0e2efe7e162c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158f3bc1-870b-4de3-9732-2734b6279e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d64df2b-a90d-4c43-a845-339c70a53018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe6de68-0807-4e18-a026-5a712ab681d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7227aa85-d8fb-40f1-b80c-79a1dcf82da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3012c666-5054-4335-8c34-f81d2d4fae4c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6960b58f-6fcc-4aaf-b683-5e4e17cf57ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708070cd-9e6d-47f0-9b30-fea76afa9381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f03c22-f29f-47bf-8f5a-0d8a8f6ace63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d288486-cc69-46b0-9c9c-489b0873158c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaa3b69-4c7a-4bb7-8427-1a97dd9d78f4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274bdab-f57b-4321-8fe5-59da7de644cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a128f81e-ff7e-4bd9-99c1-50061ff25913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a2797a-03da-4d82-bcdf-c9dc408ef145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c80a8e-73d5-489e-8a94-573691cbc6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5792aeb9-cf7d-4fe7-a96c-761688811069",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6193b94-6dfc-46aa-9c7f-3e199b126c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d4852e-48c0-40b1-86bd-67db6951da10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ccda60-c2a9-4351-be80-37225d25ded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a1bf59-fd1b-49cb-81d9-00064588858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422659a-4f2d-4dff-9cd4-991282c9e83e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31327c2-a188-495c-beea-4db93c29210a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a8d48d-afcd-431c-b468-017a99b40d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d013d-9192-4237-af8f-3ef157f99f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d884146d-6a3d-405b-85a4-1e56a24484d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd118f5-e753-4452-ba2c-a5692d12e32e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f697352d-74d2-4f11-933b-da61ed793280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13636020-08a9-4313-82b4-e9bfd51983fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5b4917-43eb-4c7d-ab67-b8faabeb507a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf4583e-3d7a-4004-9782-561b1393fd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c988011d-a38f-4734-a980-9f2053269427",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdeea46-d366-4e43-9d7c-1c5b80274f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfa71ef-0170-4e58-b5f3-a32ffd8c91d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6462f-1df6-4fff-8253-22d03ddc9f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60fd27b-9cd8-48d1-a367-a5f3b896f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7aba2d-5185-4b2e-a69b-3a7449623200",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cf80b7-afc8-4ed2-8434-8f1fa1c4ba93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4ed95b-43d1-41d3-9aab-a811f9381de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2e3075-4289-400f-a550-c65c662f109f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a555253c-a5d1-4284-8ec4-b1c635095d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddf9fcd-63f3-4bf1-89c7-48eaa3b73719",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd0ee75-44fc-418f-8901-2ca7ccdcee61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aaa978-ab72-4849-b964-a3aa24075473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dd9342-9fbb-46c2-8e65-6c318831da3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de355499-e0f5-4790-88cd-a474c77ca495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f236d0-fe5e-4270-a0ac-ed4d22bc6c40",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203959f9-e3be-481c-8bb0-fbc0c3a98fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcde1c4-4c23-485a-8e92-801d6140106f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2fc055-e302-423e-9bd5-881e6b980756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da43ba3-5ec9-415f-b7b6-f2f78620bec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3096a94d-c577-4f91-9ea4-6e0f369d998c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb6e73c-57f5-44bf-b3ac-c7efcb841172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec3e913-a036-4a61-83a8-00c1e9f38976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653c21d0-9b3a-4fe5-a47f-116a6dc15033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a347668-eff8-4014-8a2a-61e77ac92567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22ee6b0-2543-4116-971d-a84b7e96fc58",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbe17d4-8e6c-4d52-ad05-d0bd75183b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b93046d-6637-46e7-9609-acdca89ebadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1121d050-9cbc-4b52-abec-319dc9b35ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a931a3e2-ab2e-4f36-bcf3-6fbd463e2822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707df4d5-977f-422d-8f51-5c20c808693d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3a9ac-1049-4c45-8c10-c6979feb2b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4209dc51-25f9-4b80-87d2-e375ea285ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35475e2-1e22-49d5-990c-549dfde5fcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297e4def-ce52-4949-8421-e64f56318003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e76074-1156-4315-93f4-1b435eaffd5e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e4ee20-cb16-4ac0-bb59-7fd50bbfc7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88aa05-47b3-4b0c-87ec-2379cf96481d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c164a3dd-736a-438d-8afa-6b7b4cbf8a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8a08c0-534a-4044-bd07-cc43c2bdc3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47187a9a-5a65-4c5b-8a8b-bb2f0e34692a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b401cbc5-b849-45c3-bae5-2ca14d581873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d245d43-0aaa-42d3-b810-1f8f6baf28b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a6e8ea-bea2-46dc-9265-816087ebe496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd9ba2f-ebc3-4ff3-8aa9-98aa48a35cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab78d904-f030-4489-ba0b-3162362aa80e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d7e45d-4af7-45af-acfb-50b56561c3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f77c7b-762a-4a60-8ff5-727ffe806075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f206da-82a8-4a18-9f6f-f4974739499e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb93cf8-ee64-4773-9cf9-58ff0509bbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8239316d-9788-4497-a6bf-c4e5996a33af",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732cd22e-d928-4cff-913a-d0229864b704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d5d903-e4f7-42af-b814-8a2ede70f4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5601e52d-28c6-4df2-847a-a4b15caa48b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480c7cee-6f39-4da2-9d39-ea481a56099d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66507bc-dd25-40ad-a7e3-cf6240f6e8a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af918702-5afb-40aa-b1e8-4f9ee0455126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313dd0b4-821f-4fea-98ba-108790744fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7fdbbe-b725-443c-b34e-29ae6bbb832e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f1dbd6-1817-4ef4-9ab1-c0fd242d9676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93542d8c-f5fe-4b9a-bc77-b0b8abcf6935",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e7083f-0134-4cce-adf3-adebace628fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d072a44-8f42-4712-864b-ee70fd855eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ba257f-d3ba-4822-9d2b-e09244b9ac44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4793959-1cb4-40ef-af49-80ac923e8952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadfb25e-3ed8-4806-ba6d-7aa0f184f331",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376fde33-9fb8-4ce7-8d6d-b954f8248eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e911d98-d7a6-49c1-8d91-803677d931f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20d6bba-2d82-43d4-b86c-c4d475b9c5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3eb06d-ae85-4376-852a-3a62d85fa386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5ac45a-9ab2-40d7-95e8-689f36c8dbe8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae04b221-29e9-4e1e-b4f1-a27ae027a134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4186f0-0193-4c40-a40d-7f7e781b2c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea96b63-3f49-4b3f-bc75-59f3226dbe1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b994d279-1da9-4d9c-bad2-21286213d19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc4f4c-55b5-4fa0-879f-328bd6aaaa60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24b209-e005-4a7d-92ad-b68676251fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9aef564-7849-4f71-a018-d26ccc53eb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d89fca-1d42-4849-bdf9-2a13aed5d150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2980684-f804-4b9b-8df5-6c7a56475d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7804e6-4bb2-471b-8b2d-4b69dd7fb1eb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15f7b34-3d16-41b6-bb81-6d893c581a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b36365-9842-4c1e-97f7-e527eb99a73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8fbaa0-9da3-4b0d-adaa-6ad6f6ff25f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b652bea-4967-405f-aaa6-db77c8626eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584250ef-c834-4650-8aed-c02459ac5b2c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bfaac9-21a4-43b6-a61e-011147c15565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4627bf8a-b940-4a40-b661-429fd50ee0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6463d781-b5fa-4853-a302-686479151bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399767d0-62bb-483d-a399-5a89a86803e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e242d34e-eda8-41ab-b067-7e41450ae1cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8c565a-8a68-469c-82d4-a1df33cbfa36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6313158d-7ddd-4d7d-9822-64bb52a97c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde70299-dc97-4e84-963d-6d4f402c53ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8fd4b5-a1bf-4c55-a1f8-e1a54c1061db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ed413f-1106-46df-9687-a5f4784cc158",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ece9bb-6f63-4062-b7a0-a3493b480352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdd750f-ba72-4875-b3e8-f90a80f5ddd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8181bd97-f109-48e1-b287-021ee13b3ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4e3e7e-95f8-488f-95c5-73a03ffb621d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f38b43-f34b-4e34-9c2d-3cdfb466d550",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6522daf-adab-4ce1-8ca9-ca883b21e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f794b9c3-feae-4fea-93d3-9176be72b3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc24e6-c499-4c68-8012-ce6f3d7a3524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cffc0f-473f-4acd-9988-62e226f71811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a0b2a5-bf71-49af-9c4a-ecc74f849a0c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df256f2b-9af7-4b85-bd72-a2dd7e6f6fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2da6cdb-15f6-4646-a03b-826488e63d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef52c83f-e534-4e93-8f61-c4b2b2f48df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106b89f0-a39c-489f-ae31-72503e073f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406a3954-3d50-4031-8e4f-542c43199e58",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6f3fa1-d9a4-4895-a418-46728f5459cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33367933-f3f2-4b3e-a0e6-4ce8ae3f911b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6beefb7-e8ab-42b7-b8d7-611f9e65f8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458a7601-18ab-4dd4-a254-8c1dff2665d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d107269-6e8d-4f2e-a98e-db03ed7e363c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2de2e6f-5b5f-4705-bf39-df4cbc69281e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4a4054-866b-4ed1-9750-319a11646439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6277fa79-32a8-4abe-9f6f-3c66acd3d833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720929e1-1518-4d0d-977a-79301e60c1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682e4867-f2f2-4eb8-be2a-0439d468c374",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86598fd-effa-4295-882f-2ae8d91dd50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bd456d-578d-401c-b1c5-d15e20531f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020a9a37-af49-4e66-b982-89a08df99c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44621061-2f94-4298-b5cf-d8f1281f4558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be23e478-4d9e-41ba-8636-ddd59799c624",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3667413-5319-42a2-8743-0f85f4b8dd67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c5db6a-1e4d-4138-bd74-9cec1d9a077c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95686345-932a-4fad-a1dd-733b1fb80269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe28c263-aff7-4c4d-9e3a-8bfec833d431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4584bb8-70cf-4fe9-ad9d-eb7ca1dae78e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8789e447-adf9-417b-a968-6b6765ecc714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ed1c47-c85a-4c11-8049-b7b0bf9407a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59c3617-92aa-44a8-b3c9-0b76d9b69a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3933d946-9fd6-4871-a98b-587ae590f72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12684686-c8c9-4a78-8ad9-56c2ad094e64",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a4dd6-7186-4374-9324-d0b4919e0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11375309-d49d-4b58-95e4-c31f9c26f7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1692683-1cd1-4f77-ab55-ae125075b08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed5e1cd-7194-42bc-94f4-426a0975d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcddf7c0-9ae8-4e69-935f-ec7303e39468",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da20273-aea3-40e8-a29f-ecb43508bea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1591f409-560b-4799-bc08-82d715bccd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e8431b-406b-4688-afc9-f3f84eebfb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43533f1-d9ee-44df-a36b-a7630e392884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7046acbd-ec4d-4eed-b1a9-6b862b7a5735",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fb5c8f-918f-4ecf-9916-301c3bb7e734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0feb9ab3-f516-4429-a8ca-f7b6bbfdf771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae37722-55a6-4695-8acb-c905b06a9bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bec61f-c35f-40ca-8380-1264ad9f35ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade97f07-d94b-40e3-9a1f-5cc75e864f2d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f45940-03ae-4325-8d13-4e5a37e5bbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e71d315-716d-4b78-b422-d9fbc66a24e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdf4bd7-9298-4d65-a3a8-fe208775a285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5b7f2c-a100-4f00-b056-e4d6b91faf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aabb150-88ce-4a9d-949c-8c0a84ff9798",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729514d8-4ee5-49be-8132-cf6736735635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97fae36-a684-4fb5-a62b-14296314a21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79997de-515d-4b12-b468-6dfa69694445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7756bc-0348-4ec4-a1f8-9429eaa41c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1722eb-a30b-4b08-8220-065319f66a1f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd31e575-fb1b-43d8-a67a-eff0b0ac29c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d80a8c2-2f81-41a8-9e47-35adc78a3151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc8adaa-3686-4262-94f2-66a36f8327ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf507ba-c8a0-4139-9c27-f4cfcce650e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20154a34-55cb-43eb-b453-a4beba1d21f1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1cd5f7-4d1d-40b8-bebe-3523ba01cbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "330a4676-df09-47fc-8e66-186dfd738e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83067d1d-13de-4e8f-a0af-e317990cd9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4224760-c5f3-4495-b272-24085c2a73f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9026bd-e8e5-49e9-ae0c-aac3065d9031",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a371d9-bbc1-4d1d-a44e-2fc50664cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a661afd-bf1a-45af-8153-a8f91e8c2d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7cb8d2-0436-44ea-921d-986e8df1953c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9efe07b-9500-4394-a956-ddf68a1fba20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79b5398-30e4-40c1-b8ec-0c529b625c43",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf465129-ee64-4ec5-b453-5c0c6f126e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9049a224-4fd6-4839-91a3-cb4c2b9df9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c69b84-2c2a-4f44-8878-fd51691defd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f294af-ce81-437b-9975-db73625d501a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f2c47d-3798-42ed-baa8-009eb3aa6c3c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a643e7-9cad-4a34-b751-18300f8ce5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7daf5e-6aa0-44aa-a5fc-f649abfe71ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8968e7f0-e7a2-489f-8ecb-b86fbf4d59e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4c2db0-bbe9-4fbf-819c-2b03e0971d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d025d9-d073-4148-8a16-f51858b98869",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e7455-3b62-4492-89f6-8a448d86fc3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5e9627-3766-4484-9570-7f8fa7f5b761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bc209b-3f1f-4da3-8aa0-7ecc76261067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029d84d9-2166-4e7a-9a87-caf8745e68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0943a1-43e6-4b83-ab64-7fadff0415b9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec49b12-25f0-4282-8475-c366a55e2fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6798b1f2-2728-41bf-9769-d8cb0ed600dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe29dc8-ce80-4427-8e54-2b3e74a76b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3ec5b3-08e7-4afb-b814-87471b6e7bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e376eef-aaa4-449a-8889-8b3931764f67",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660ca20-2a72-45cb-86bb-aa14a6918e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0c843a-e284-4b63-be9a-8e7467d0f796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2002e0e9-780a-44ad-8863-37d5f147f745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281fd198-6dd0-4649-9363-c3919b122ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f64d65d-c188-4cea-9d2a-8766dff823ba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f890b6-c365-45c7-a923-8b9842c533a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3dd7ebe-cf93-48dc-8d46-4f8632612b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1314bd-3466-43cf-8a0f-0655f963113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40bf20d-79ea-4618-b1a9-9682486f1224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdc8244-0ab0-4473-9193-d69c45cc113d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d090c5-7f23-4b13-b0f9-cedb8b003ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb793b9-0c14-408c-8cc0-cbfaaf7becf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e601a1db-1fbf-4ef5-acc1-d367dac3ef66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeebe73-4b03-41fd-b995-80410122acca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f023960d-aee6-439a-9550-607c9922c568",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa20a0c9-d802-4a54-abb0-3f20c817c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763c0a07-2993-4465-8610-cac0b0843418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d8b53e-62d7-4f6d-a270-507462cd2dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecca8d1b-6312-4593-adb1-a13398b0040d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83168e0-33d4-4ee9-bc6e-4f2f9c4358b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9e3e6f-090b-4316-a272-ace330ca87e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f490823-0b10-43ed-9e72-9bc8397c0c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b555660b-4e43-4083-84b2-5f777935c1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0f0f39-659f-4ff4-9c90-f8323ec8d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f528c7f-c6a1-492a-9bac-7f9b06b49be5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df76589e-fe61-411f-9746-a3f8b8784622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217e5eb7-9bef-47ea-83a9-d18877f93dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0986f567-bda1-4bb1-80de-47dedf23c538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60139e46-1785-4127-975f-0df89a35b31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd115ecd-6f3c-46ae-80d1-9ddd8e36da6c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f1fb4-ffd3-4a63-8755-3a023c10ed33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7144da9c-8fb3-43e5-80b0-9e9fc526d71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9310b8-2968-4cee-9ce8-4634ace46e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254aeeb8-b2a9-46cf-b850-74e5889f2a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ca2383-ada5-481a-86c5-445195476822",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf39fa5e-e15f-4e1c-8ae5-7e2720782f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f5a774-d211-435e-82e7-c352eaf3c08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a9a58b-655d-4429-9826-d196e1c8a6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb165ca-b02a-4ce9-85cd-8419669ecfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abf7e3e-37c4-4491-bff9-4bcfb61dd6c8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728702ca-1f3d-41c0-afbb-a2dacb6e21d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9c2db5-5acb-4e98-9add-110a7c381e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c0fc1-2295-4a17-b264-0d576251a76e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735be1bb-2813-4e96-ae9d-601336067cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe04c07a-43af-4deb-90c0-b05e1a38dbfc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13873b5d-3fb4-4e2b-9356-631590d031f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b428726f-c873-4eeb-8bce-b78434673499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f04118-b912-425f-945b-8d335bcd98e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dbdafe-6568-42c1-bf64-f292762c744f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e3bd09a-4dd9-45a0-bae2-95875abac626",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7724865a-3137-496c-89c0-6b484fd22c6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2d22c7b-3de6-4692-9ba0-5c053b20f367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4791523-efe4-41a2-94f9-a32e50b38759"
                    }
                  }
                ]
              },
              {
                "id": "249312fd-4bd8-4761-afd0-6dedc3d1b373",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28de889d-56c8-4c50-aa53-d040ba0bd8b2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aeb9bb-223f-42c3-a367-a669420cd947",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "426e5ed4-6c9f-483e-bd80-d83fae7bec76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45016e0-210a-4744-952d-0dca01e41249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f59688-b039-4ba3-ac4e-274638a7a34f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb7dd66-0e0b-4449-ab3c-48dda8512f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76ed015e-e948-43aa-89c8-cd7f87e40be8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea34c9cc-7e80-4433-9f68-057ac558075b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26625ccf-a89f-49fc-a2c3-7954673e6905"
                    }
                  }
                ]
              },
              {
                "id": "fd172a73-6daa-492e-b21f-c3e3ffd636cc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd6d539d-ceb3-45a6-80ec-5bcebfd3e38e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228a8b2a-e5aa-407b-b22f-1fd4eda42af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ca72137a-9bf2-4d49-a4f0-15f274fe19de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972c1dd6-73e7-448d-b760-be736ae7c2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca18a84a-3ecb-401a-8269-30338caaf5a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e2e4a9e-7cb7-44dd-ae07-aba94fd670c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b173630b-4788-4f17-b04f-f8f74e2f2867",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f7be1bc-bc32-4e50-9886-fbcf6273ee22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "20cf4024-2b87-4ebd-be04-7b6cdb37cd2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0557291e-0eb2-4d11-8773-854c5cf4f5c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96dd1fbe-015d-4694-a0bf-005b71d46de9"
                    }
                  }
                ]
              },
              {
                "id": "6a8405f0-6ea0-45d5-84f8-b556aceadce5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46364806-02bc-495f-82d7-56ffb4dc3547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8be44bf7-5760-4665-b0ed-717988932e0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b0545f8-aa1d-4159-a6ce-9b25304d5fe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde8bc92-8139-434c-8b5b-f21eed818f2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8075e7c0-3b7c-4833-a9a3-e9dc311e39e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "73341602-4686-4e8c-b435-18cb23e31e0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97a26f5a-a76c-436d-ab7a-6e8cd484a966",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfd6e7ef-239f-4d27-897d-e9c888c37062"
            }
          }
        ]
      },
      {
        "id": "516e3f69-fe47-4dee-b66a-a536c0756c61",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c8b4f37-d717-4442-b3ee-9077d31a6b61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4fdcbbf-2610-4c01-a86b-e55557a592cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0240f6a5-1b3b-4b19-bf46-aaffec8ef2d7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b035fa2-d714-4a47-b95f-241d1fc87070",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b41fb9e7-978f-494a-9f68-e694fae7b089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6ebeda-e049-4674-a6b3-87e1f0d2b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ba2461a-02e0-45f3-975b-77885d69a15d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3629e6e5-ea78-4e2b-b668-16c492b21941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33a0fcbc-5b49-4981-a311-ad9500a4a702"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65c1a80-2352-423b-b4cd-1a2d6fc76f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2318a2c8-ba24-4e7a-8eb7-4258868d9d01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5efe35d-d467-4e3b-a05a-186373133e95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d2abdca-998f-4e87-9805-a8611040a185"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1084687-c66e-420c-b533-cb8933f04ea6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7fa2b78-4e89-4bef-9a84-1ab798026bc2"
            }
          }
        ]
      },
      {
        "id": "378832fd-fae7-442e-8df1-b082f3bbc5e0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c03f0134-fa2f-4196-ae4d-e4e57056ddc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59903e87-f5f5-4a32-8d01-728894800454",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "444a678d-d957-40c0-81ac-a4280b6f638d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fff87b-4056-47c3-baad-aef6e51a5a17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a81e8f71-0669-4965-9680-99b9be412d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b3ce2d-7d12-46dd-80a4-336f48eed2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "485e1ff7-fdc5-4021-8ad4-9ca8fe1bfbe8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5078bc4-ed81-4c99-bcd6-bf636d76a0b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d90e09e-5295-4d54-a112-1569e1dfc220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96204ca8-9338-41bc-9a02-d8da08fd17bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65731f9a-4e4a-41c3-bf32-6a22eceb1fc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c803a4af-afe6-4ac0-a2d5-b0455b7f4ca8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "881223f6-7183-4c72-9bd0-5fee48922aeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4309add7-7b07-436b-b1c5-759bfc8b30a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df288af1-96d5-45a2-8723-c37ea8e4afd4"
            }
          }
        ]
      },
      {
        "id": "1108dee5-530d-4fd7-833c-4f0847cc654d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21ccef28-ad73-4251-927b-cd33cfe53a18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3aacd2b-5df8-4e5b-b8cf-4108237015da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbe247de-08b1-4937-a902-96d3c742c74b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75577964-8bbb-41e0-a44c-37390f2fd0f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e68154-e7c5-4148-b3f5-0e47cffd82b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65693042-951d-4a0f-b146-ca468e5eaa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea5eb785-6a12-48bd-8c05-cdb25a96f701"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "833be4a3-8ab6-4ba8-bb60-394a88f57cee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "071c83cc-2a7d-4dfc-ad7a-1feb65205c40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76ae713a-15ba-4b81-bcff-9ce33b64c678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38d14c3a-bd2d-46a9-8452-10828c48d1fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b4be656-d11c-42b0-9880-a508f0fe8aa0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb59ecb9-5b7d-4962-9421-2b5057fb18a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3b70da2-cf89-4f4e-a892-e9742324f232",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a12f89e-ce5a-4b59-ac56-96c22de781ca"
            }
          }
        ]
      },
      {
        "id": "0bf4dc68-56c2-4eba-b9f8-a5dc7ae7c406",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2da60f3-155f-43d5-9608-d0865233dd02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da2643f1-9361-419c-8456-fca11b4ebe95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e322a691-266c-4c61-8929-e1d873ec3262",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9e85356-b156-40f7-a158-6a355ba10d97",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4100c4a1-a9de-4d8c-a029-6fec84b50d91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 159.46666666666678,
      "responseMin": 21,
      "responseMax": 11350,
      "responseSd": 750.100365058448,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709771275731,
      "completed": 1709771330704
    },
    "executions": [
      {
        "id": "70fa963f-563c-4210-a996-dd54c11c56e9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1269d6ac-e0cc-4bd8-adbc-9c52319b82d1",
          "httpRequestId": "0e162064-7578-44ff-9424-709e33bf2063"
        },
        "item": {
          "id": "70fa963f-563c-4210-a996-dd54c11c56e9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "327e4354-6118-497f-b25d-e2f82f0f2ea2",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "9bcffdb6-0d1a-47a0-b859-cacd549feb7b",
        "cursor": {
          "ref": "2d601856-15b4-4620-8f71-c947a71554ac",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "602e99e8-014e-46de-94b5-992d8e935fc1"
        },
        "item": {
          "id": "9bcffdb6-0d1a-47a0-b859-cacd549feb7b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2fbfd13d-b7de-482b-95fe-c44ff8ff6bcc",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "7b2b7162-c7cb-46b0-8bf2-db8a5340990d",
        "cursor": {
          "ref": "3b77795e-cda8-4467-8337-5860cc5e1eb9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d6b09e48-d94d-4750-a96a-07844c4b5fe9"
        },
        "item": {
          "id": "7b2b7162-c7cb-46b0-8bf2-db8a5340990d",
          "name": "did_json"
        },
        "response": {
          "id": "1997d9f2-1d87-40a3-8de6-fd690db330eb",
          "status": "OK",
          "code": 200,
          "responseTime": 363,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10504165-a39a-4a85-9cc1-458c3eef35ba",
        "cursor": {
          "ref": "096b888b-f358-4acd-be19-2682457e7bca",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6812e801-6401-4e6c-bb4a-3a78885d8807"
        },
        "item": {
          "id": "10504165-a39a-4a85-9cc1-458c3eef35ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "f13af868-8d65-46bc-933c-b1b28fe9d41f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1391,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10504165-a39a-4a85-9cc1-458c3eef35ba",
        "cursor": {
          "ref": "096b888b-f358-4acd-be19-2682457e7bca",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6812e801-6401-4e6c-bb4a-3a78885d8807"
        },
        "item": {
          "id": "10504165-a39a-4a85-9cc1-458c3eef35ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "f13af868-8d65-46bc-933c-b1b28fe9d41f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1391,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8a5917-c67e-4a8b-806f-04580eaed3d9",
        "cursor": {
          "ref": "87050d17-5758-4f00-ad57-37a629474cc3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d670874b-f9eb-4ecc-98cc-28ced3a4cc85"
        },
        "item": {
          "id": "6a8a5917-c67e-4a8b-806f-04580eaed3d9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9b0a470e-75c8-49a0-b2da-c3bacf3a6687",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3989bafc-d69a-4bba-b73a-521dcdf58ea0",
        "cursor": {
          "ref": "2fd720e1-a1bb-4459-94d1-8a5728d12988",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "767307ed-ee1b-440b-ad54-846cb5fe84f7"
        },
        "item": {
          "id": "3989bafc-d69a-4bba-b73a-521dcdf58ea0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f367888b-ed83-4e2e-bec9-63f2322faf6a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 135,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c544f-4bb4-44f7-a9f0-6dc4663753e9",
        "cursor": {
          "ref": "803b6182-232f-4940-8b0a-ac8eef9f5a67",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2fd9dd74-8ed9-4960-ab44-801de0f3d432"
        },
        "item": {
          "id": "6d6c544f-4bb4-44f7-a9f0-6dc4663753e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "349a6b99-9f5c-405a-8b3d-107fcfea01da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc64e81-f7db-4870-88c8-312c9e3fd421",
        "cursor": {
          "ref": "692c9cdb-6468-4fa8-9ef7-dc32d536faeb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "99d2d53e-4aa1-483b-8f63-e89b27c40eac"
        },
        "item": {
          "id": "7bc64e81-f7db-4870-88c8-312c9e3fd421",
          "name": "identifiers"
        },
        "response": {
          "id": "cceef458-c8b2-49f5-9894-7a96ebf84d87",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d4a2b-525c-4876-9392-832325a8346d",
        "cursor": {
          "ref": "fc64fd29-11a8-4fee-ad91-1b4719a4c167",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2e7f1ac1-7e04-4a8d-adc4-b80afe4ca4b9"
        },
        "item": {
          "id": "0f8d4a2b-525c-4876-9392-832325a8346d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6f2d0a9b-7284-4679-b0bb-4fb1ed112320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db557dbc-8915-4bcf-a13b-3a71b5ac0c25",
        "cursor": {
          "ref": "e9f316bb-81ab-4d6b-a297-f6a9f7955396",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "831baee4-46bb-42d6-9a16-81e3c1e67903"
        },
        "item": {
          "id": "db557dbc-8915-4bcf-a13b-3a71b5ac0c25",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "120ddeec-deb9-47c4-bacd-d33dfd9a8859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97deef6f-b671-4f41-8ee7-f6c417433349",
        "cursor": {
          "ref": "26271ec6-51e1-42e0-9525-de49d74da636",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc763c18-2166-4ad5-92aa-a1384c42a5f7"
        },
        "item": {
          "id": "97deef6f-b671-4f41-8ee7-f6c417433349",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8e6295bd-f2bc-43e7-83d9-d55486aa0f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eee56ef-0aef-4077-959d-f4e6a99a22a8",
        "cursor": {
          "ref": "8fe3ce2c-370c-401b-b609-416cf9654672",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "68434cc2-d86a-42cc-aadc-906302084380"
        },
        "item": {
          "id": "8eee56ef-0aef-4077-959d-f4e6a99a22a8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0818b11b-6b20-4cee-bc93-65409c463211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171e673b-834d-4690-be11-7e64753e3718",
        "cursor": {
          "ref": "2dc15dd8-ec30-4dc6-a498-13b819c3ab22",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2fc4effc-1865-4822-a926-88285dbf0435"
        },
        "item": {
          "id": "171e673b-834d-4690-be11-7e64753e3718",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "833edccd-4dc2-44e2-a272-ca79c02bf68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00bfb4a-fb89-4416-9d42-a76990f39360",
        "cursor": {
          "ref": "bc278579-3a1a-467b-9295-082827c8a602",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99746c3e-f208-4d04-ab68-5900307ac625"
        },
        "item": {
          "id": "c00bfb4a-fb89-4416-9d42-a76990f39360",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d762362e-9cc3-4695-9469-b1715f8653d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d88cf2-1c98-4d2e-9b97-324f1a45081c",
        "cursor": {
          "ref": "904c016d-6e34-4722-b270-c0f657d25f01",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c6c97279-a049-49b5-8cdc-13021c465a24"
        },
        "item": {
          "id": "27d88cf2-1c98-4d2e-9b97-324f1a45081c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b802ae9-3750-40df-9ad3-245a6de07f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091c9c0e-a8c7-4858-b945-18336613c0d1",
        "cursor": {
          "ref": "6bd08cc1-9bfc-418c-8682-08e43104eaa7",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb3527c9-c9cb-4e41-aecf-1660f50a6995"
        },
        "item": {
          "id": "091c9c0e-a8c7-4858-b945-18336613c0d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bbfe51d-e6ac-4722-a4af-43e0be78f3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697d0452-ed32-48b3-820b-763b5f98244b",
        "cursor": {
          "ref": "965cd0ed-7255-41b0-a6dd-7721c062adda",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "590c8928-dd1f-4728-b826-4ff6c280b542"
        },
        "item": {
          "id": "697d0452-ed32-48b3-820b-763b5f98244b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4434e04c-e668-448d-823e-4135f959914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893e0d57-a494-4c0d-a5cc-7114b4f364a1",
        "cursor": {
          "ref": "4adc7fd8-2d0f-4344-993f-f9133186e9b3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "abf3545e-b714-4640-93a5-f64b5b6d7866"
        },
        "item": {
          "id": "893e0d57-a494-4c0d-a5cc-7114b4f364a1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6b635bb9-5479-4a12-a2d1-3a545f29f084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01a3bf6-6a90-4519-9ff5-d46312791af3",
        "cursor": {
          "ref": "db4aacf5-3eba-4aca-91a8-7f51cb77bc2e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "57cbae0b-09db-414e-99d5-5facb0b95ae4"
        },
        "item": {
          "id": "a01a3bf6-6a90-4519-9ff5-d46312791af3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1653d25d-fefc-486d-966b-fbbbcd728b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968a7151-ed01-4151-8d0e-37f574f89b52",
        "cursor": {
          "ref": "50bb5f47-c3d6-40ee-88d3-0cf51beeab9f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "250d420f-081e-45b1-9f04-8c4635bc19d6"
        },
        "item": {
          "id": "968a7151-ed01-4151-8d0e-37f574f89b52",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16cb8524-0b33-415a-877b-5cd806339832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c6029a-40d4-43b3-99fd-2a6add20b2a0",
        "cursor": {
          "ref": "41766cc7-f594-4494-8bf3-247dae88840c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eafa34c9-c5cd-4c35-a88c-0284007cf149"
        },
        "item": {
          "id": "a1c6029a-40d4-43b3-99fd-2a6add20b2a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21824ae8-d74d-42c2-8bde-2241cbfee1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2c9592-4eb7-4f0f-8bcb-8292768418e3",
        "cursor": {
          "ref": "64c60050-b51a-41d5-bc21-d7158251efdc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55fa70f6-be8d-418b-8ca5-9b9030bdf3d2"
        },
        "item": {
          "id": "8f2c9592-4eb7-4f0f-8bcb-8292768418e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2b5f5207-00a1-44f4-a29c-43c8007e01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ee5513-68f8-4db7-aaa3-e68afeda8928",
        "cursor": {
          "ref": "a8adeb3f-92cf-48d0-b78b-8d98f81f4b7d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e2a2f7ec-fb56-4ef0-b1f5-55aad1797983"
        },
        "item": {
          "id": "93ee5513-68f8-4db7-aaa3-e68afeda8928",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f5460fc4-c6f5-4572-9c95-1855a4a8d83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbaf504-98fa-4728-9e90-3106677608dd",
        "cursor": {
          "ref": "e8a9ea3c-7645-4428-98d5-110e15cf6add",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "81a138ea-ecb2-4d30-a676-a472ff0320da"
        },
        "item": {
          "id": "7dbaf504-98fa-4728-9e90-3106677608dd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8cc5093c-1858-4da8-8bd0-4583b9265380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505c7079-b0e3-45db-af79-348746804c27",
        "cursor": {
          "ref": "3bba69dc-fc9e-438f-818d-8d10fe904637",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8d8e080c-0ab6-40a7-b8d2-af9785613563"
        },
        "item": {
          "id": "505c7079-b0e3-45db-af79-348746804c27",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eba12062-a799-41ec-8164-f3004ad8c92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2afac49-0fe0-4e7c-b55d-1d4ea346b781",
        "cursor": {
          "ref": "5d94944a-1831-415a-9a1f-62bfadeb101d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "833f6d3f-f23a-42da-97a3-7ad397641f39"
        },
        "item": {
          "id": "c2afac49-0fe0-4e7c-b55d-1d4ea346b781",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f998700a-6d97-479a-96a4-5f344b4410d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c35a7a-e8f9-4994-8d94-f2e16b83e845",
        "cursor": {
          "ref": "d6a21e88-87f1-4757-be8a-99a399cc300f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9198330b-8877-4e00-84b2-db653c511c54"
        },
        "item": {
          "id": "a5c35a7a-e8f9-4994-8d94-f2e16b83e845",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8c03b94f-2e4c-4917-b4c9-cc8bfa73898c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b295fc8d-453c-4e52-9408-4c281d94c25c",
        "cursor": {
          "ref": "19848348-395a-4dba-8e3b-c7c462a04410",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66f2675e-bebf-492e-bf44-3ad09e62aef0"
        },
        "item": {
          "id": "b295fc8d-453c-4e52-9408-4c281d94c25c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ffe8473f-46ac-4427-8bd9-cfa8a9b39e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f3bedb-ec03-4b76-9e78-41b7732b174a",
        "cursor": {
          "ref": "7ef41404-9360-4719-a2db-7758e4296f2f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d36e99ef-864e-459c-bee2-29963b8120f7"
        },
        "item": {
          "id": "98f3bedb-ec03-4b76-9e78-41b7732b174a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d67f59db-3d92-42b1-bb11-54ad4466d479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c76d197-060d-4cda-aef9-923bc7e53911",
        "cursor": {
          "ref": "67ab461d-b4e2-45e9-b5f0-1f3c58c0c64f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fee2d30e-5f82-46c5-b4c2-019f4d20e54e"
        },
        "item": {
          "id": "4c76d197-060d-4cda-aef9-923bc7e53911",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3136e77b-b0f8-44a1-b437-4d329fe116d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5428a253-8d7a-4b90-8e94-53748eeadca5",
        "cursor": {
          "ref": "32633eee-d1b7-4591-8ea4-a4ab89cb20c8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "07ea19f4-96a7-477f-bec9-b1761710559d"
        },
        "item": {
          "id": "5428a253-8d7a-4b90-8e94-53748eeadca5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ccd9c71d-9665-4203-83ac-6dec68260951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8e17d5-ef92-4fa7-bfeb-98f912a298a7",
        "cursor": {
          "ref": "59778b7e-5d08-4f75-b33a-babe0320f4c0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1dedd5b3-e8bb-433c-b7bb-cb35bc3d7d39"
        },
        "item": {
          "id": "ec8e17d5-ef92-4fa7-bfeb-98f912a298a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "83443e75-ef6d-458c-80ba-1ca5e78a9a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d76d7b-10dd-4f9a-952f-aba21c822546",
        "cursor": {
          "ref": "634f6f68-27d9-4a90-98e3-788ed51079d8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "38b65f32-5808-4ae2-a8fa-480d2500a523"
        },
        "item": {
          "id": "85d76d7b-10dd-4f9a-952f-aba21c822546",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2287eb4a-98fa-429e-a49d-1545d916caa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7767bd1-03c1-4c06-bead-aad8f1ecdce8",
        "cursor": {
          "ref": "375a7cb6-33af-4219-b46c-c8c1d82b5e17",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a50cc81f-05c8-4c6f-ad56-128c7ef1a684"
        },
        "item": {
          "id": "f7767bd1-03c1-4c06-bead-aad8f1ecdce8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da5e548d-f7b7-4db0-9282-9d275ef2f43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014b491c-65b4-4d5c-912b-d829319aabc6",
        "cursor": {
          "ref": "b3892bbd-b380-4ac2-97c9-ae61ee603108",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2a289eb9-2a64-46d3-a96d-640030357634"
        },
        "item": {
          "id": "014b491c-65b4-4d5c-912b-d829319aabc6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "56d0725b-e61f-4740-92c7-32eb4a43fa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f927b8-6425-4730-ac32-edbe82b66bcd",
        "cursor": {
          "ref": "798c097b-8ea1-4a90-ac31-0f05f47d7207",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a40b69a7-4918-4779-a78a-de7d88038bc8"
        },
        "item": {
          "id": "f5f927b8-6425-4730-ac32-edbe82b66bcd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ce2c2ad0-4f34-493c-a569-64bb92d2c072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00ccce9-bbc7-4d41-a375-39a595f8d6e7",
        "cursor": {
          "ref": "dc7044d1-d4a8-441b-b978-57a073ca5b39",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cf9e7070-d1f4-47f1-889d-7dc2c63f70ff"
        },
        "item": {
          "id": "f00ccce9-bbc7-4d41-a375-39a595f8d6e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c5cb4816-05bd-4cef-9847-66c95f6d3263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf8091a-5ebd-41fa-90be-ba4dfa3b1841",
        "cursor": {
          "ref": "0669726a-73e9-4202-815b-ee3de88fa4d8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "47e89a4d-e6cf-46f3-840d-995173308eaf"
        },
        "item": {
          "id": "8bf8091a-5ebd-41fa-90be-ba4dfa3b1841",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8a2f1a4b-d85e-4bab-aae4-d7a4f8b6e382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9731d1fa-a147-44de-a539-9e5bc3515741",
        "cursor": {
          "ref": "509d0d04-20c3-47c5-9699-09f7e4cfcd83",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a91c9912-6ead-4413-9592-40f92fccca9e"
        },
        "item": {
          "id": "9731d1fa-a147-44de-a539-9e5bc3515741",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea4fa000-9fb2-4061-abcc-458ab7318b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c805c6b7-5224-4bb8-a948-15f0494bb894",
        "cursor": {
          "ref": "a6c44a0c-9d8f-43ea-af79-da8f671d966b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13819943-925b-4f7f-95fd-2c04a1dfd794"
        },
        "item": {
          "id": "c805c6b7-5224-4bb8-a948-15f0494bb894",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eeab6158-53fa-49b5-9163-37e0f34a9d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d9c2ea-5fb9-4f28-aed1-5163d25aa1d2",
        "cursor": {
          "ref": "c7d20e92-a247-46ad-ab2b-e343cc5911b0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "26518b0b-b5c8-47d9-9824-fca429a15fb3"
        },
        "item": {
          "id": "f0d9c2ea-5fb9-4f28-aed1-5163d25aa1d2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6fe6ef1e-9c08-4dd0-ae48-81013668948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52c09d-18f5-44dd-9e87-d9ffef0379cb",
        "cursor": {
          "ref": "8a32d433-caad-4c8b-a9aa-046e4b649f9d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d7760bfa-3cce-43dd-a91e-745c39e23fe7"
        },
        "item": {
          "id": "1c52c09d-18f5-44dd-9e87-d9ffef0379cb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59589e59-145d-48ef-b660-660b6df55066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a367e8-e907-4549-aab1-1b112e7bd38d",
        "cursor": {
          "ref": "003953af-79a4-415a-bbab-76db52b1dcf8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dda49495-d39f-4384-9e4e-2a230df514a5"
        },
        "item": {
          "id": "a7a367e8-e907-4549-aab1-1b112e7bd38d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0e77e28d-8afe-4ba2-8e4a-70920dd33b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c642c8-b098-4afb-a67b-bde2da9356bd",
        "cursor": {
          "ref": "f0e8f0cd-c8dc-4f42-a82a-f0e7805d068b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ff7b0cf9-2e27-4c8e-a9ea-73a7727dc6ea"
        },
        "item": {
          "id": "e7c642c8-b098-4afb-a67b-bde2da9356bd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a7c1fb20-d722-465e-baeb-3368d3c51573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406e33d-ac4b-459b-bb3e-9e3070858295",
        "cursor": {
          "ref": "63bf5886-0535-49cc-8e9e-4d3b5c7fec6e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1c34d012-67e4-472b-99e7-e222ff25dfbe"
        },
        "item": {
          "id": "d406e33d-ac4b-459b-bb3e-9e3070858295",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "73c60354-a3d9-4b03-b7a8-a6f62650cc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9ec69b-30ef-4152-ad18-cf6f7516482c",
        "cursor": {
          "ref": "3f109540-f0c5-4130-9b82-7565059bf9ce",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "284160f2-024f-44ae-881b-6f144fee1e92"
        },
        "item": {
          "id": "3f9ec69b-30ef-4152-ad18-cf6f7516482c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6d3d006e-d2b6-498d-9ffe-31a9cc67aaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40433c6d-262b-4501-94b5-cd2630c81fe5",
        "cursor": {
          "ref": "32195da6-7336-413e-be29-bad07c0fd584",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3343ae92-b75b-4137-accd-af47833b45f9"
        },
        "item": {
          "id": "40433c6d-262b-4501-94b5-cd2630c81fe5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "926df26e-61a1-4121-bfe9-de5fc0c8ffda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680e1005-43ff-4530-8d5f-2bcd1d05f319",
        "cursor": {
          "ref": "1e36f6c1-6d74-441e-a0c8-01f2de24520e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5fa63710-e155-433e-94f7-06e913917a0b"
        },
        "item": {
          "id": "680e1005-43ff-4530-8d5f-2bcd1d05f319",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b2243305-a527-438c-81fb-73b07ffdd16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bea2671-5dfe-45eb-93b1-ddfa6e9417cc",
        "cursor": {
          "ref": "42790794-ef85-4acd-a302-9cb5c79786ed",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bdb157e0-11b8-44d0-9fba-49034a0b1719"
        },
        "item": {
          "id": "0bea2671-5dfe-45eb-93b1-ddfa6e9417cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0020d42c-3ed5-4ea0-8d5a-ef93ca79f8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aaa5c5-015c-4cfe-a910-0a52c3492048",
        "cursor": {
          "ref": "8a3e49e2-6558-400e-a946-d9e344187c7e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eb9e5ba7-b5a8-4581-a230-97ba4393fec6"
        },
        "item": {
          "id": "74aaa5c5-015c-4cfe-a910-0a52c3492048",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c2949c77-ec1c-4b0c-82c4-b31a80eba68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd732ab-3793-4caf-a12d-41c29b517a8c",
        "cursor": {
          "ref": "af46e185-6426-441c-866d-710df1beae98",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52c6404e-f8e2-42da-95a6-e6a38231af26"
        },
        "item": {
          "id": "ccd732ab-3793-4caf-a12d-41c29b517a8c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4567aeb5-5f71-490f-8b3d-8c4834bb577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440639d-60f1-4ccd-9b9c-3cd04cdef759",
        "cursor": {
          "ref": "c0b29766-3180-4473-aafe-458f531b1091",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "26d92eed-52ab-40cd-89e1-3d32f99a7429"
        },
        "item": {
          "id": "4440639d-60f1-4ccd-9b9c-3cd04cdef759",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b3df631f-b5cb-4530-8f7e-4fa01f511a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d38701-e9b7-4994-b92f-c69258bd7753",
        "cursor": {
          "ref": "6218a7b8-8a05-45f5-a949-cdd1a63d1f2e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9a2564f-ee6a-4f63-8d22-3022d580f406"
        },
        "item": {
          "id": "58d38701-e9b7-4994-b92f-c69258bd7753",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eaf39ba2-7360-4446-b82c-68b9920a0633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94b93d9-75d5-4c90-b1f8-5254da118ba7",
        "cursor": {
          "ref": "84b63957-5255-41e8-8c1f-00181ef0e642",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5a869d2-f545-4af1-831e-2fc620e4c12f"
        },
        "item": {
          "id": "e94b93d9-75d5-4c90-b1f8-5254da118ba7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "15b78b58-67d3-43dc-9974-677196e117f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487cbb55-6e22-49de-8c4c-3da25b33adca",
        "cursor": {
          "ref": "11171ca3-aa68-48de-b7ab-a020a315c165",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c32e9ca1-fcee-406f-ba32-65cfd2d22454"
        },
        "item": {
          "id": "487cbb55-6e22-49de-8c4c-3da25b33adca",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c9309f06-deda-44bc-8ca1-77edac6e408d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0356de-0d9c-477e-9f11-a726fcb6efaf",
        "cursor": {
          "ref": "aac88aa0-2dbc-41ad-b4eb-f20d6d120f5e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b1b3c14-af10-477f-bbee-c059605b2fff"
        },
        "item": {
          "id": "6e0356de-0d9c-477e-9f11-a726fcb6efaf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "39b6819c-e694-444d-8966-1eed444fc0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf06b825-2ec0-4c28-a9b4-e53c7b36810c",
        "cursor": {
          "ref": "f43b884e-8186-40e3-a1bb-73791c5d03c3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fabca293-4eb5-4819-ae38-cb5e776e7697"
        },
        "item": {
          "id": "cf06b825-2ec0-4c28-a9b4-e53c7b36810c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c550f64-e11f-4b27-b2d9-877ad475e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1380eedd-d44b-4852-b823-2c45648dd285",
        "cursor": {
          "ref": "8f29ba98-9d87-4b4b-930b-7fa4fc674d31",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cab5f17a-e3f0-4023-956c-3cba2eaa3cc2"
        },
        "item": {
          "id": "1380eedd-d44b-4852-b823-2c45648dd285",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa4e371d-afce-4752-9140-63cbc031282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87aebc7-a76b-48dd-9a25-28db11a6b8e3",
        "cursor": {
          "ref": "cab9b422-9838-4e19-b3cd-c1fd4e5a283c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "808ae2b5-2a2c-4740-98a5-15e12b365864"
        },
        "item": {
          "id": "e87aebc7-a76b-48dd-9a25-28db11a6b8e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d8aa3389-629d-4bc3-8df4-c7ab42c8d705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a604502-adaf-4980-83df-3110bd10174b",
        "cursor": {
          "ref": "ab9bd29d-1503-4e8e-9442-200e84779191",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9ed1c523-d582-4145-937b-689a26c217d0"
        },
        "item": {
          "id": "1a604502-adaf-4980-83df-3110bd10174b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb4d5977-1a2d-4a83-8857-e207a401b0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3eddf-52b2-4aba-ad08-2e35aa0ffdd6",
        "cursor": {
          "ref": "634e5c08-4147-456c-b0fe-c80deb7afca2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "62925033-d96f-42a5-8d59-707c1681bf43"
        },
        "item": {
          "id": "a7e3eddf-52b2-4aba-ad08-2e35aa0ffdd6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6199c10f-5427-48da-83bb-c12b21e41d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff355b7-21bb-4054-9f96-dad3445c310c",
        "cursor": {
          "ref": "6083d3c0-64b8-40ca-896b-4ad2a63821f7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca9a5404-371c-4f8e-9681-f632e61bd918"
        },
        "item": {
          "id": "6ff355b7-21bb-4054-9f96-dad3445c310c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a0f9c628-db60-4d74-9f36-6477f11b12af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc4dc2-efe3-4f20-9b81-c4b4d4e8ff9b",
        "cursor": {
          "ref": "3237c4ff-e284-409f-95d5-ff423eb94353",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "022c225a-693f-44a5-b53e-acbcc604429b"
        },
        "item": {
          "id": "4cbc4dc2-efe3-4f20-9b81-c4b4d4e8ff9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aee12ce3-7c11-4202-a7ef-df08c15b7ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984f3f56-75ba-46e6-bbc4-dbc462b39f51",
        "cursor": {
          "ref": "531d6bae-6cea-4d60-a762-2d22fcbb22b5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5221528a-71ad-48df-931d-184848c1a6d1"
        },
        "item": {
          "id": "984f3f56-75ba-46e6-bbc4-dbc462b39f51",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99bc67cb-7b3e-4dfd-8c16-5bda414f5310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee2ccf-7f9e-4ec4-b235-5e0e99185c6e",
        "cursor": {
          "ref": "0d211b28-fda4-460d-a741-807aea114553",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "95e35a53-b5a0-41ed-a66d-d4ff16b76e40"
        },
        "item": {
          "id": "45ee2ccf-7f9e-4ec4-b235-5e0e99185c6e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "52998e14-5a3c-4cd1-ae22-231bc72c02c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245d45eb-28a5-4247-a4c2-bc4a6bcd99d8",
        "cursor": {
          "ref": "b0446a03-c4ed-42aa-b7ee-a2031ac8d67c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "70225e8d-0e68-4ba3-9656-a846a1ff934a"
        },
        "item": {
          "id": "245d45eb-28a5-4247-a4c2-bc4a6bcd99d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5346ce62-e0be-44dc-bc30-f396271961f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9f0930-3511-4ee6-9ba3-83eec3354e54",
        "cursor": {
          "ref": "460f6a38-77b7-42dc-9e3f-cc92c0b01448",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "951a1eea-3007-4df4-bf81-2c06bab3c050"
        },
        "item": {
          "id": "ea9f0930-3511-4ee6-9ba3-83eec3354e54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0279e04e-d506-4c27-b7b0-c8a55e639439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a41ed60-6d63-42c4-b180-9ac342b8b86d",
        "cursor": {
          "ref": "19c9887a-35e7-476b-bf9e-e873fdff30b9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "af8e23c6-1c29-40c2-baa3-ac3bde99141c"
        },
        "item": {
          "id": "3a41ed60-6d63-42c4-b180-9ac342b8b86d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bb6c3a26-994f-4852-9eff-6a964b8a758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c43964-1977-44dc-9f20-79889e9c43f9",
        "cursor": {
          "ref": "0d440b4c-f01e-4289-91eb-9333ecbcbc8f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b2f56127-fb5a-4671-8991-c2c9f43e8d8d"
        },
        "item": {
          "id": "90c43964-1977-44dc-9f20-79889e9c43f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "866f005f-a5d7-437c-b5d2-b16c12e07345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd07f380-27ad-4ea3-b6b9-e015a2a87a62",
        "cursor": {
          "ref": "8ada3b6d-934b-45b7-8ff6-3e3ff34e4216",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abb60b32-86b1-44a5-bf2a-20879388f3a2"
        },
        "item": {
          "id": "bd07f380-27ad-4ea3-b6b9-e015a2a87a62",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "486cae3a-4fd1-45b0-8e09-0a24cf987ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf76ecb2-2ba5-42eb-9704-150d4d6dac34",
        "cursor": {
          "ref": "43c693ed-9bb5-4eda-8fac-85b17e6a3899",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b0ab0bc2-a6fc-4146-ab98-c670323f5ac0"
        },
        "item": {
          "id": "cf76ecb2-2ba5-42eb-9704-150d4d6dac34",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c0427947-596f-4478-87c0-1138c8f984c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde82140-1c3b-4d56-a734-6dd7040ab1e2",
        "cursor": {
          "ref": "423811ff-25d9-4a79-95f7-3d7861fa3ad3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6355cd31-b4fb-4f6f-9cd0-fb53dcdf5d2f"
        },
        "item": {
          "id": "fde82140-1c3b-4d56-a734-6dd7040ab1e2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "236bfc24-29f1-46fb-9e5f-168564c4b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de8e0fc-851c-4ebb-beab-769c2432e902",
        "cursor": {
          "ref": "0995c31c-66b2-4dbf-b9d6-c4decbdbec38",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d45eb980-8c8f-4f16-9829-ea9ea7ad1e1b"
        },
        "item": {
          "id": "1de8e0fc-851c-4ebb-beab-769c2432e902",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d7bdf3ec-3f4b-4df7-b7b1-a642a3ca46a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43a3b70-cd17-4c30-805a-2b7093684536",
        "cursor": {
          "ref": "3597e32c-01ee-45eb-a782-73b3f0ec15c2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55b4dc67-42da-4b85-8f8b-9a776f5dd725"
        },
        "item": {
          "id": "f43a3b70-cd17-4c30-805a-2b7093684536",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b7ddd286-261b-426d-bc1a-aeb41a310a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef157e61-09bc-471f-b466-fe91c95b2918",
        "cursor": {
          "ref": "1951f4cc-8c53-46bc-8cd1-e53428c440ea",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e02800e-8b76-4bd3-8238-c54c952528a2"
        },
        "item": {
          "id": "ef157e61-09bc-471f-b466-fe91c95b2918",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8039dd0c-a980-40f9-a2bd-9b25620b0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a42d47-6d9e-4810-877d-a5962138f1bc",
        "cursor": {
          "ref": "a2b3297b-b0bf-492d-9cd6-96a9e06448be",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1cff68c8-9140-414f-b434-732a033a8e82"
        },
        "item": {
          "id": "b7a42d47-6d9e-4810-877d-a5962138f1bc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2921428e-997d-46e6-bd4d-eaaaed6f51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3516a456-9bad-4c58-a843-71a7e8043bf2",
        "cursor": {
          "ref": "a0da20fc-f07d-451f-a7db-6f20aad262ad",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6abf3717-9df8-40d5-a380-1c08b9bca03a"
        },
        "item": {
          "id": "3516a456-9bad-4c58-a843-71a7e8043bf2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9a8a1bd6-f29c-4a43-a8c6-56c235c0b354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ac0ebe-9e6f-4a5e-8423-9b8530c2622d",
        "cursor": {
          "ref": "3b497cd6-b1a1-4c12-8a46-7a9bf24ec019",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "38c939af-3b5a-4a1c-b3a6-0753900982ba"
        },
        "item": {
          "id": "d4ac0ebe-9e6f-4a5e-8423-9b8530c2622d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8d1756c3-a742-49b2-8c36-f3cdf3d2f8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230fb821-aac5-4ebe-8af0-bd016c2d96a5",
        "cursor": {
          "ref": "a3dcaf38-135e-450f-a475-b47630409a82",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6e3bff9e-72ba-4ec7-8e1a-6f81f565541e"
        },
        "item": {
          "id": "230fb821-aac5-4ebe-8af0-bd016c2d96a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7a5944a1-5344-42ba-8c0d-f020f052f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994132bb-076d-4e00-96c8-dbca42d9700d",
        "cursor": {
          "ref": "f185e014-9918-4ebf-b051-caedd9a15e9f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a10b71b9-9b01-4d02-8eec-2a978010b491"
        },
        "item": {
          "id": "994132bb-076d-4e00-96c8-dbca42d9700d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "806180b3-cb05-4b1d-b98f-23a16dbfeaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8fa64-a26a-420d-995d-78e67b55bdf7",
        "cursor": {
          "ref": "2195f6cf-fe79-4655-aa09-bedbf5833f20",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e0003708-fe76-41bf-82a4-4dc64b7df17d"
        },
        "item": {
          "id": "0af8fa64-a26a-420d-995d-78e67b55bdf7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "60766b76-d4ed-46a5-916d-00da9abfe028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003f20d0-11e1-4da5-b42b-c078cc753c3a",
        "cursor": {
          "ref": "e75c68b2-4eeb-4b08-9679-90cbe0bf91e1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "670b8fad-e181-4303-95c3-f66e1b0a717e"
        },
        "item": {
          "id": "003f20d0-11e1-4da5-b42b-c078cc753c3a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d402efa6-7082-4c27-b06f-94f37c221030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1721e1fe-684a-4d16-a3c2-758d5d7c255c",
        "cursor": {
          "ref": "4382eff0-b55b-4c5f-a6ca-7a6bc09e3767",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c35d5292-1aee-4417-8a63-45af354ded39"
        },
        "item": {
          "id": "1721e1fe-684a-4d16-a3c2-758d5d7c255c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "976d4aed-f93a-491d-b981-4b0fa4085af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f0dadf-49e6-4589-9a3f-f78a20cbec6d",
        "cursor": {
          "ref": "e2f9765e-78c7-4793-9b36-d6790fb215b5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "36c5692b-c1e1-49bb-aafc-839811bc3038"
        },
        "item": {
          "id": "01f0dadf-49e6-4589-9a3f-f78a20cbec6d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fc664d5e-1086-4d49-a353-b9734b11f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d6320a-41ef-4fa2-9060-78f433145d47",
        "cursor": {
          "ref": "05b55e6b-e5c6-466c-be5b-cb5ecbae3659",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b4d2b951-a8cc-49dc-8996-ac5d87e3d226"
        },
        "item": {
          "id": "83d6320a-41ef-4fa2-9060-78f433145d47",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "552fde91-4796-4044-95b1-c8583aa8d9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488e9ed1-7ac2-483d-b60d-86d83a9e92b2",
        "cursor": {
          "ref": "7a34d22c-0472-4482-97cb-c3cadf2d6492",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "818befb9-0b0a-4b7c-be0d-52b0d94a1295"
        },
        "item": {
          "id": "488e9ed1-7ac2-483d-b60d-86d83a9e92b2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "60c2f5aa-f760-4130-abc1-11f94ea21808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec0e549-4f85-47ce-a3d1-2b0fd32ddfb1",
        "cursor": {
          "ref": "99e5069d-4f1a-4455-95bf-6a8204e3156a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4aa84f86-537d-4cb2-bb0d-3cd717a0d5c3"
        },
        "item": {
          "id": "fec0e549-4f85-47ce-a3d1-2b0fd32ddfb1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0d316888-fa01-4025-8266-ba8ea55380f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10171da-a624-4c78-8e04-cd0155e0b8d0",
        "cursor": {
          "ref": "b13ae19f-97ef-4878-98d4-5d9ca17ae233",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fda70ebb-4df4-4a9e-b2e0-427896d5eec4"
        },
        "item": {
          "id": "d10171da-a624-4c78-8e04-cd0155e0b8d0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "87db2671-062e-478c-a660-47d47447a1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f6a782-ad6e-40a1-a57b-24b2f3a85254",
        "cursor": {
          "ref": "d78cfb01-920b-49ab-bedb-bca461c512ee",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2e8e0155-2802-44cb-93b6-a9be23733172"
        },
        "item": {
          "id": "95f6a782-ad6e-40a1-a57b-24b2f3a85254",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "15105deb-1fec-4f27-9ef7-ff782b3adb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbb7d49-bd99-4050-badb-a9a9933968d7",
        "cursor": {
          "ref": "a9016b12-c3de-4671-8e1c-eec1ebedc03c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9fe971c3-bada-48b7-aa67-63be183272fd"
        },
        "item": {
          "id": "1cbb7d49-bd99-4050-badb-a9a9933968d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3fcd000-d12d-4efb-b2de-58d02bc70878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4f110a-71c3-481d-ac2d-dcc240ea9a22",
        "cursor": {
          "ref": "23b03c1c-cb44-4922-a514-892c1a9039f0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e652689-0a8b-44c6-b982-d43d942161b7"
        },
        "item": {
          "id": "af4f110a-71c3-481d-ac2d-dcc240ea9a22",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4df158f2-a8a9-4408-9ee5-ee1c43620c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d75286-10ee-48d3-8a19-d4a2998eed2a",
        "cursor": {
          "ref": "76e30d43-3531-4d17-871e-6e500c262848",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "85ac45dc-a371-4808-8f27-c2d488d2399e"
        },
        "item": {
          "id": "97d75286-10ee-48d3-8a19-d4a2998eed2a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d14df77e-b375-43f3-a845-d3c4e09e6dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac9858-5621-4b0b-8ebe-0c04ba51f101",
        "cursor": {
          "ref": "e680b0cc-3961-460f-8981-6a945b9f8785",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5612a95d-8b72-46dd-8fd5-2d25ead86295"
        },
        "item": {
          "id": "e8ac9858-5621-4b0b-8ebe-0c04ba51f101",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "954a7a7a-3caa-4bc6-a725-fb9dd946f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b3c72-1006-4fd5-8549-c5319ce1b115",
        "cursor": {
          "ref": "d5b1a25e-d53f-471c-98aa-26ff671db1f1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e317d1b1-3b56-49ab-80cd-8d13d8d0f1e5"
        },
        "item": {
          "id": "957b3c72-1006-4fd5-8549-c5319ce1b115",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "af96e1f2-64b2-4352-8447-8e72b13da817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446826f0-adc6-4fde-8895-c3e57fed63f2",
        "cursor": {
          "ref": "5f776f38-2cb1-4476-b83c-a97edc418418",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4f2e9d75-924f-4295-955e-bca9d79bce78"
        },
        "item": {
          "id": "446826f0-adc6-4fde-8895-c3e57fed63f2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3d083c6f-5636-4f2c-9895-810c4dd6d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f611aa1c-42a4-4f2b-b462-348f9b30ef13",
        "cursor": {
          "ref": "83d983c8-69a6-4fdc-bcc9-995eaa084136",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3114c905-f924-409a-a907-008ac3e59028"
        },
        "item": {
          "id": "f611aa1c-42a4-4f2b-b462-348f9b30ef13",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a2cf1e92-f140-4997-a2a3-325de37b6ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ebea4-5c6b-4fea-81ab-3e35c5856ff7",
        "cursor": {
          "ref": "48efb954-9ea4-4b4b-a35b-176e36217426",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07fbf3c2-3b49-4cbb-94b9-89cce1f771c7"
        },
        "item": {
          "id": "394ebea4-5c6b-4fea-81ab-3e35c5856ff7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41bf20dd-2f10-42e4-a8ac-1f4bd5f7de90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f17569-5168-40b0-85e0-ee6634aa03a1",
        "cursor": {
          "ref": "84201cae-129b-4f42-be5c-7347aa7ff381",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea38ccc3-8058-4f3c-a4b9-6176038fa260"
        },
        "item": {
          "id": "09f17569-5168-40b0-85e0-ee6634aa03a1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8ab04200-ca0a-426f-836c-c5ea418e6d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0f1f7-eaae-45d4-b555-00647b62ede7",
        "cursor": {
          "ref": "bd5d8ecb-0ab5-4e37-98f6-fe5306e54390",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b5cc227e-953d-4c1a-bcdd-e46fed69d8ee"
        },
        "item": {
          "id": "92c0f1f7-eaae-45d4-b555-00647b62ede7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7a9ef974-6604-4888-8ff0-fc3a77c07e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f0697-1462-41be-9707-b00caaa33cac",
        "cursor": {
          "ref": "b209bb15-f6c3-440a-be31-11c3c2931af4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "35a3da14-b3a3-4cd7-9425-81d1fa89a3a8"
        },
        "item": {
          "id": "640f0697-1462-41be-9707-b00caaa33cac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d546c04-d7e0-4c04-b4f8-478040814017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec702a7f-9562-42c9-998a-7caa5a21672a",
        "cursor": {
          "ref": "ac2099e3-fbfa-4386-98f3-d491c6d49dc8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25b9b1e8-63da-4a46-936a-f67c94c98494"
        },
        "item": {
          "id": "ec702a7f-9562-42c9-998a-7caa5a21672a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "19909a0e-8cbf-4a3c-b46f-ab3ac63d01fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 92,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b19ee1-ddb1-4c53-a2a9-5c36157750da",
        "cursor": {
          "ref": "822a501f-aa3e-4599-9350-542cf323318d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4bf6be1a-d4a6-44b2-a3d9-a884eddf1e50"
        },
        "item": {
          "id": "91b19ee1-ddb1-4c53-a2a9-5c36157750da",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "67b5029b-3501-43ec-a651-c9ecc06ee285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "20d74152-9987-4743-8af9-4e89428f4da1",
        "cursor": {
          "ref": "b90b961b-c6c7-4e57-8d3b-79aa5cbabb85",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b6368b1f-5b1f-4d69-9d55-b857b000a84e"
        },
        "item": {
          "id": "20d74152-9987-4743-8af9-4e89428f4da1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "15651970-4dc2-40db-aa28-bd16cf7b39d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "77ccfadc-1dce-48c6-b980-39c419dc7a6f",
        "cursor": {
          "ref": "afaeae36-238a-4b8c-91dd-e970632a11d8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "61d80cfd-87b2-4779-96d8-ebcff9f2a88f"
        },
        "item": {
          "id": "77ccfadc-1dce-48c6-b980-39c419dc7a6f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3082efb6-2788-4e35-8947-931390da8460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12f3828f-3c60-4cee-9457-f6ed515e031a",
        "cursor": {
          "ref": "33ca3a6a-6704-430a-8532-4be6c5c88c7d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3748c360-649d-4f1b-83ca-131a36dc6b02"
        },
        "item": {
          "id": "12f3828f-3c60-4cee-9457-f6ed515e031a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4eae1ada-53e4-47f8-9f5d-4635e7d4363a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f72b42f2-c707-4a1f-b7ac-2b2b58f207a3",
        "cursor": {
          "ref": "453e924f-c146-42a1-846f-97409f3e29c1",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7c97d0a9-0c09-4cf5-9399-98edf7b6c498"
        },
        "item": {
          "id": "f72b42f2-c707-4a1f-b7ac-2b2b58f207a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5416e54e-fc4d-4aab-8104-d5a12e5ec245",
          "status": "Created",
          "code": 201,
          "responseTime": 11350,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac4cb58-b8da-4d60-99ac-1f58d0019ad6",
        "cursor": {
          "ref": "536b8d8a-df9f-4188-84ab-596f4c33278a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0902018c-2472-42e3-bdd0-dc65684bd6ff"
        },
        "item": {
          "id": "dac4cb58-b8da-4d60-99ac-1f58d0019ad6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ced6ad0f-b61f-4d53-8f0e-b978f1292f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "896cac08-6379-4109-a1e7-6bd39e46577e",
        "cursor": {
          "ref": "ee1f6529-68f5-4385-aa44-9c90f6b17ed9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9310a268-fd9d-4a3c-a672-614be75b6a0e"
        },
        "item": {
          "id": "896cac08-6379-4109-a1e7-6bd39e46577e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1899f687-b0b2-44cf-b5d0-1b99ff2aacbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0f0e1cb0-7f18-4378-8df4-4b00e3294dba",
        "cursor": {
          "ref": "62ae50ca-ca10-49d0-92fd-52ebbf684df7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ac67a07-32b2-4351-bff5-cb9ac83828ca"
        },
        "item": {
          "id": "0f0e1cb0-7f18-4378-8df4-4b00e3294dba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c2f4e16e-3e92-42e8-8b9c-9ecde323c395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1c55b3-4054-4b22-9a12-b7232afe4810",
        "cursor": {
          "ref": "18bb02e3-d3a7-4fbc-a092-8bf69e289a2d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "adce2411-2ead-4c80-bdaa-16e7b613941d"
        },
        "item": {
          "id": "3b1c55b3-4054-4b22-9a12-b7232afe4810",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cdbd1eea-d969-46a7-b9d0-7320add76975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b447964-a212-4a2a-abfc-abe993d9e13b",
        "cursor": {
          "ref": "30a43542-2e45-4a34-9b7a-5dd981f98f46",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8aa8b0e0-f59b-4e0b-874c-aa99ca409499"
        },
        "item": {
          "id": "9b447964-a212-4a2a-abfc-abe993d9e13b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "99553f82-d0d3-4d08-b215-1120fdbc307f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16c790a-f2e8-4ce6-9e1f-3bee46b16f64",
        "cursor": {
          "ref": "07d2bcca-4a8a-4fd9-8e07-017709a81391",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "862b6cb4-0639-412a-b398-7b3966198edb"
        },
        "item": {
          "id": "e16c790a-f2e8-4ce6-9e1f-3bee46b16f64",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e75affaf-5603-4b08-a044-766ce3edb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b8020-a94e-4a5b-88f1-aede5ee81553",
        "cursor": {
          "ref": "c34df3f6-743d-4a35-b8f3-7ded75dfb642",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e76c67eb-3503-433d-ae94-c1cfc01c366e"
        },
        "item": {
          "id": "009b8020-a94e-4a5b-88f1-aede5ee81553",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63ba43d6-b0f7-4ea3-8c2e-2484f800be7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a853f921-bcf8-49af-a831-fd8c3437b40a",
        "cursor": {
          "ref": "0c6c324b-4d9a-4ba7-8a13-d2715a36f755",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b0226ad9-312d-4037-85e5-fd32cc6ef2a7"
        },
        "item": {
          "id": "a853f921-bcf8-49af-a831-fd8c3437b40a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "29749e3c-a023-4c18-9f0d-b4313a8791e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2751f967-810a-495b-b7c3-b17ddf6ca5ac",
        "cursor": {
          "ref": "e7ceb3b6-62e8-4a14-9dd7-d4f21f44a522",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f37675a3-f769-4f98-879c-1e07bc4f4686"
        },
        "item": {
          "id": "2751f967-810a-495b-b7c3-b17ddf6ca5ac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "922fedb9-9724-447e-851b-1b2d861044e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493afda5-65bb-4697-83f5-3d9edb5034a6",
        "cursor": {
          "ref": "cf72012d-2e79-44be-b836-74ddf9e9d2ce",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e4703a2f-bccc-4072-9c4c-6c06a847a02c"
        },
        "item": {
          "id": "493afda5-65bb-4697-83f5-3d9edb5034a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c0ef8fa5-b47e-4024-a74b-2b32690e12bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb654dc-5156-4456-8a05-761f83ba8e37",
        "cursor": {
          "ref": "e82316ad-5ee8-45cc-865e-02fa05154e99",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c16fa3ca-491a-495d-ba97-83afe1df76a8"
        },
        "item": {
          "id": "dbb654dc-5156-4456-8a05-761f83ba8e37",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88e15fd9-e607-4d27-8e22-cd308be4b55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31614490-e59b-4b2e-b927-a15061728947",
        "cursor": {
          "ref": "c9171236-819f-44b1-8d23-380ec27b4949",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c56df8cf-9e94-4d8f-88ef-6cc38f8b2ed6"
        },
        "item": {
          "id": "31614490-e59b-4b2e-b927-a15061728947",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6bcecc98-4a4b-45b4-8eb6-c33898df931b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00afcd8f-4665-4660-b9ba-6bdc05bc6762",
        "cursor": {
          "ref": "fe928efc-c3c9-4ec0-8bac-77ba1146ac54",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7318ac33-52b7-4eac-9f86-6571af2eca8a"
        },
        "item": {
          "id": "00afcd8f-4665-4660-b9ba-6bdc05bc6762",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7201092c-92d6-4278-a2a1-4dc0d3361062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbd8839-1ef7-461f-ae4e-330f9c067f64",
        "cursor": {
          "ref": "2049c783-be74-4f19-9f3c-7b3c5fadacfe",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a079eac2-1a1e-4b0c-a895-ec1e000d2e04"
        },
        "item": {
          "id": "6fbd8839-1ef7-461f-ae4e-330f9c067f64",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f330727e-407b-4ff4-8824-a86bbe6476f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059725c7-e437-40a6-a905-8c66f9cc3a80",
        "cursor": {
          "ref": "528c6c62-d687-4159-8765-b36501c15d6e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f52ad3d-141f-4ba9-8fb2-9a6d5702f6d6"
        },
        "item": {
          "id": "059725c7-e437-40a6-a905-8c66f9cc3a80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "45260f15-fc9d-4ceb-b710-71253f8673a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f0e48-4fb6-4ba2-b923-0e28d0e002f8",
        "cursor": {
          "ref": "accb8027-6954-451f-8226-fbdaf5f3146f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aa5f06e1-8760-4311-8915-309199678df4"
        },
        "item": {
          "id": "f96f0e48-4fb6-4ba2-b923-0e28d0e002f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f5a2cbf8-5914-4c1d-a036-87a535c799e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7805015-e4e2-47fa-aca9-254f6967b4b0",
        "cursor": {
          "ref": "00bb586e-a825-439b-b681-7f1b2d340b18",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "93c10bd4-26b9-4b2b-9c7e-3c220197f317"
        },
        "item": {
          "id": "b7805015-e4e2-47fa-aca9-254f6967b4b0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f706d296-e1e9-411e-ab4b-a17cc8283ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe474f1-a82c-4fe7-9fa9-a48f7ce198a0",
        "cursor": {
          "ref": "17390964-e7f2-4653-90e5-6d4d96bd5508",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7736c21a-3d40-425d-aae4-43cd2a952b62"
        },
        "item": {
          "id": "dbe474f1-a82c-4fe7-9fa9-a48f7ce198a0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "de51c8c3-2349-46cf-bd7e-7760ee617cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3a4918-675d-4f2e-ba52-c95cd384c230",
        "cursor": {
          "ref": "c0800c2e-c654-4666-b770-f2a59742e608",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "296e3f41-5411-43e7-ae75-520f9d59f55f"
        },
        "item": {
          "id": "ff3a4918-675d-4f2e-ba52-c95cd384c230",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1155448c-153c-47db-88f3-2e90d40d6e99",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "83cabd3a-9e67-4c33-8b81-6286c2688f0e",
        "cursor": {
          "ref": "84a379f8-f0ac-4ba5-bfc2-9f35ffa21980",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c48f9dce-f8cf-434e-97be-8e86c5957f40"
        },
        "item": {
          "id": "83cabd3a-9e67-4c33-8b81-6286c2688f0e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1c2729a-2207-4e30-8453-f3c85235f204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dae9f2-cf34-4854-897d-66f898eb8ebd",
        "cursor": {
          "ref": "605dd005-a892-496b-9edb-04769195d658",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "95db2e00-b026-431e-9103-d0a2cc212680"
        },
        "item": {
          "id": "91dae9f2-cf34-4854-897d-66f898eb8ebd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "737031aa-e496-4a7f-a36c-4482315114ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25034b4-05e6-49ee-8df1-03aef786165b",
        "cursor": {
          "ref": "03d19b89-9cfa-43e6-8c79-244621d59ba9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a7ede8e7-54b1-4129-8274-33dc2355b395"
        },
        "item": {
          "id": "b25034b4-05e6-49ee-8df1-03aef786165b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "58064938-e67b-46a9-8813-2525db0288cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ebe63e-5734-442d-b13d-7926e77240ba",
        "cursor": {
          "ref": "393291b5-7f86-4e62-8b2b-12107fa12f44",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ab39a894-e00e-4f7b-9953-33d2143d761a"
        },
        "item": {
          "id": "97ebe63e-5734-442d-b13d-7926e77240ba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6fb4e977-0f22-467f-accd-bc3e6b25ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431a0f0d-fa7c-4a5d-b6ca-28da22d0aceb",
        "cursor": {
          "ref": "a40a2252-a3c2-4d18-8b0e-9871ac9bc9ee",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abd6cef8-085a-4eb6-9d3a-85b9da4ceecc"
        },
        "item": {
          "id": "431a0f0d-fa7c-4a5d-b6ca-28da22d0aceb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ab6a462-a896-4381-85be-025e17865064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc2bd1-b09a-4a74-a65f-3c0623830923",
        "cursor": {
          "ref": "89d7bd08-97b6-4868-9c28-97b00fbdab9c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "969fb158-4ab3-42d1-8683-d78426856834"
        },
        "item": {
          "id": "3acc2bd1-b09a-4a74-a65f-3c0623830923",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22360651-f92b-4b52-a43a-329aa4cf62f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7877fbd-55db-4cae-9f67-e070e36496e2",
        "cursor": {
          "ref": "82df7c11-1a8d-4175-a5bc-14bd45410ee1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c89178d2-59d1-4db1-be00-f88e69a21082"
        },
        "item": {
          "id": "b7877fbd-55db-4cae-9f67-e070e36496e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d83abfb4-d647-4e36-9a35-e0e83281cef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b360d-6eed-4b84-97a6-6e971fd71bc3",
        "cursor": {
          "ref": "3b76b410-4e79-4066-8f7b-eb23da946a2c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b04232a9-f1e2-45b1-98b4-2e323d97626b"
        },
        "item": {
          "id": "4a7b360d-6eed-4b84-97a6-6e971fd71bc3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0d0446ea-e077-4f3a-989c-5a54d70c992e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "106f8cf7-9e36-4089-bb24-3015aef7efed",
        "cursor": {
          "ref": "fb9f4c68-2737-4f32-8997-e99a52af5a5f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2414e555-0713-4911-8fbb-517f451cca3c"
        },
        "item": {
          "id": "106f8cf7-9e36-4089-bb24-3015aef7efed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0bdc9027-1a3a-4e59-863d-1d7a095cb352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b429600f-12d5-4ddf-a74f-75cd220585c7",
        "cursor": {
          "ref": "d8ac81a4-9121-40cb-bd78-a040771d7c37",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c28a144c-1766-457e-ba60-51d6b6a44b43"
        },
        "item": {
          "id": "b429600f-12d5-4ddf-a74f-75cd220585c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6ecb1551-caed-4483-ae88-764e0c049b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd6a6a1-b955-416e-b792-130d17391b5a",
        "cursor": {
          "ref": "336f21d2-9871-4fef-b26c-185f6dfec36b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1ab4d5c3-c513-40ff-8b87-05687d98ee28"
        },
        "item": {
          "id": "2dd6a6a1-b955-416e-b792-130d17391b5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d0c34e7-78f8-4f01-bbd7-ca4d9dfb294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9f653-dca6-4d60-8c62-ae347465d4a1",
        "cursor": {
          "ref": "4492e41a-36a3-4dc7-a4f9-89688a890f84",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "31190668-6432-48ab-bd6c-2061e9c4de68"
        },
        "item": {
          "id": "85e9f653-dca6-4d60-8c62-ae347465d4a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a8c519a0-50b3-468b-b570-8d949fcceb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1454d1f-e52d-46be-891c-34d7e3ee0ebf",
        "cursor": {
          "ref": "5445022a-eed1-4321-ba30-f3b4c6f6d63e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b833b2d7-7697-4ef2-b508-8afedf4657cc"
        },
        "item": {
          "id": "b1454d1f-e52d-46be-891c-34d7e3ee0ebf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3bb20556-dc63-420b-a4c2-fc37a954b1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ec5704-805b-4303-baeb-fbf0f61ab2ff",
        "cursor": {
          "ref": "cf50371b-a2be-4a0f-84aa-06f77af8dd52",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d5f27d34-013b-41b7-97d7-56f29f4dcf0f"
        },
        "item": {
          "id": "a8ec5704-805b-4303-baeb-fbf0f61ab2ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6153b499-4b28-455f-9267-7e90c465cd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3afd25-ffb9-4778-95c9-01a2a6ff6f99",
        "cursor": {
          "ref": "9c2adb26-2d4f-4f42-9800-5518369af2c4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a75a5e90-605e-4b1e-879b-f511183ccd12"
        },
        "item": {
          "id": "5a3afd25-ffb9-4778-95c9-01a2a6ff6f99",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13a20cfe-9383-4618-bf3e-888de9f2abd6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 113,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2e2aaf71-15a9-4cf1-ad28-ffe9a7bc36cd",
        "cursor": {
          "ref": "11f03034-7237-4ae7-a5fb-5c134cdaf727",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9923f5b7-415b-4a9f-8825-f670937c4328"
        },
        "item": {
          "id": "2e2aaf71-15a9-4cf1-ad28-ffe9a7bc36cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "470a5aef-2538-44f0-adcc-246a8370f7db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd42183-628c-42bc-871b-2c2403113b5a",
        "cursor": {
          "ref": "5a7b7e4f-c93e-4559-85b3-684e17f84e02",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a8a969ce-0bf5-43ad-80b0-734b4aa71016"
        },
        "item": {
          "id": "ecd42183-628c-42bc-871b-2c2403113b5a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ac7a8201-7a85-472f-9b0a-156bc0babfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ec976-4e12-4eff-a7be-be08dbd4285f",
        "cursor": {
          "ref": "b6440159-521e-4de5-8172-cf38e8923f0e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e73c3a8c-b9e6-46d6-a198-dd363f0067a2"
        },
        "item": {
          "id": "723ec976-4e12-4eff-a7be-be08dbd4285f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "54b6341d-ef4d-4049-869b-fbd187f8adf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73be4ac6-b54b-4e54-a7af-e0bf42585134",
        "cursor": {
          "ref": "00177ae3-bbb9-4c6b-927f-3b13c802151b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4bc0c3ff-0822-4275-8300-51a711547665"
        },
        "item": {
          "id": "73be4ac6-b54b-4e54-a7af-e0bf42585134",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b77f529f-8385-41d0-a7dc-e69f48fa95df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc8caa2-5fde-4e2e-91bd-e2eacd700aa4",
        "cursor": {
          "ref": "8976cf04-309f-499c-ae14-7b3fce1550df",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "edf5b492-3a45-48e0-910e-9e95eb014efe"
        },
        "item": {
          "id": "bcc8caa2-5fde-4e2e-91bd-e2eacd700aa4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3d2f9313-f0f8-4bc5-9420-7f33c4d26751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2cec54-1c75-4487-aab9-145de59d10b4",
        "cursor": {
          "ref": "b44270af-319a-4bf6-a3bb-e7916dde0e35",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ed065df-d1d7-487d-8714-15ca58dc36d3"
        },
        "item": {
          "id": "ff2cec54-1c75-4487-aab9-145de59d10b4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34f75b40-bd6d-4ae3-9786-d66a9e8c8630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80af7c0-d050-4548-be13-ad0f5f05db7b",
        "cursor": {
          "ref": "941aaf04-f9e4-4443-8d5b-b1e1c034908a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d396a6af-d4c5-429c-9412-04938fb6e942"
        },
        "item": {
          "id": "f80af7c0-d050-4548-be13-ad0f5f05db7b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6e2d69e-7868-42a1-9795-7fe48dd231b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b51b59-d46b-4ee7-87d4-811968ee229a",
        "cursor": {
          "ref": "bc8c490e-ad5a-49d9-9680-5586d34e5284",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "29de1737-1987-4ae0-bb31-1ddf250e4aee"
        },
        "item": {
          "id": "27b51b59-d46b-4ee7-87d4-811968ee229a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "050613c0-285f-4825-84dd-da1ad4c88129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e822d75-9750-42d1-a87f-10d2a1e1f4dc",
        "cursor": {
          "ref": "748e6338-7ab8-42ce-ba00-88d904a89430",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9b7f349a-a2e2-4ff6-bffe-4b06cf764e0c"
        },
        "item": {
          "id": "8e822d75-9750-42d1-a87f-10d2a1e1f4dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5bb57cc5-d4aa-4c9e-b87c-a7d2bacc0ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97674a19-8e3a-4377-a5d8-aa4da1df2de2",
        "cursor": {
          "ref": "4a2f2dc8-b6e6-4cb6-8e41-ecc530a67998",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "84fa11f9-ef6a-4994-b4b1-582cad99329c"
        },
        "item": {
          "id": "97674a19-8e3a-4377-a5d8-aa4da1df2de2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf77c0ab-a9b6-422a-98a5-3db0b89c77c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cffe850-6fde-4098-8eb0-b9b3c779005d",
        "cursor": {
          "ref": "2aa62390-4064-4d61-9a0b-5ef7b9f29741",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8f067360-6ea1-4094-ae30-a7bb285c2445"
        },
        "item": {
          "id": "5cffe850-6fde-4098-8eb0-b9b3c779005d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0a27db84-6509-4acb-bc2f-eee0314df6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3aaaa5-5dc7-4e25-95bf-8a264c80fba6",
        "cursor": {
          "ref": "cf4a3f4d-d8b7-4e3d-a82c-61c57021fd79",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "46b85e98-e1c5-4ff9-a74e-9fca5359c555"
        },
        "item": {
          "id": "ff3aaaa5-5dc7-4e25-95bf-8a264c80fba6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "486d1c80-7af4-473e-8ddb-28ef1617e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97792bc-db8b-4b7b-89b6-b51bed210686",
        "cursor": {
          "ref": "d2ebb5fd-ce49-41dc-af48-0ac8d548fa6d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "59e0b287-b001-468f-8df5-c6534fb8b7f0"
        },
        "item": {
          "id": "b97792bc-db8b-4b7b-89b6-b51bed210686",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cff23f63-c9d7-4aa7-8a16-e763cc5816e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38a33e5-c1e3-40fd-8265-bd796c2f9b8a",
        "cursor": {
          "ref": "b5c459a3-14e5-474e-95fb-e797f2b117ae",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ebebaa4b-a661-4e53-842f-20d2138d9086"
        },
        "item": {
          "id": "b38a33e5-c1e3-40fd-8265-bd796c2f9b8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "005a22d3-ceef-49dc-b6f7-f55a91ba7201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d3911-4f98-41ae-82c3-0d5c224fc85a",
        "cursor": {
          "ref": "bddf7666-d921-4cf7-94fe-a04f85e9e029",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d53de6dd-0067-4552-8bb2-b2ad3a07c4ce"
        },
        "item": {
          "id": "725d3911-4f98-41ae-82c3-0d5c224fc85a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14210bba-57eb-4e57-ba10-1c3b4eb65d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a618e6a-03ea-4d5a-b7da-e30df4fc646d",
        "cursor": {
          "ref": "57d88aee-2450-44ab-a01b-781a9cf74b5a",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0812668a-271c-4790-9dbe-2b56d0de11d3"
        },
        "item": {
          "id": "7a618e6a-03ea-4d5a-b7da-e30df4fc646d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45764e33-7754-4b6c-a027-32bef6bfd15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0405f-9a8d-44af-95f1-7b4edf2a5c83",
        "cursor": {
          "ref": "21b320f8-6814-42ed-a02c-d310e833de56",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4b1964c0-4b64-4ca1-91a7-160aa61e4c89"
        },
        "item": {
          "id": "bca0405f-9a8d-44af-95f1-7b4edf2a5c83",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "16e2bc8a-4ef1-4a2b-bed6-cb1a989151a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b150d4-faa8-4cc3-bb93-87dfd417aac9",
        "cursor": {
          "ref": "1a78f6b5-ee43-484d-a532-5f7cdc316642",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3dfea0b7-fd72-4b7c-a26e-482658a7f9fc"
        },
        "item": {
          "id": "b7b150d4-faa8-4cc3-bb93-87dfd417aac9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d07d918e-4ffe-4ad4-8ed4-df2978512b82",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "bf4cf434-4119-4ac8-948a-58f792f13b38",
        "cursor": {
          "ref": "bb194f4c-a764-4c3e-87c4-087da64c57b5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04832919-899c-4658-9c32-48a6b8ad112a"
        },
        "item": {
          "id": "bf4cf434-4119-4ac8-948a-58f792f13b38",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f728466-dd07-490c-b71c-a74603489e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb07d9d-8a76-4e58-8815-acd173bf5748",
        "cursor": {
          "ref": "290fa77f-da08-4e68-aa8e-1eb841e2a850",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9868af98-0cc2-497e-a5dc-8fe9ec221d7b"
        },
        "item": {
          "id": "ddb07d9d-8a76-4e58-8815-acd173bf5748",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a80e61b4-a30a-4fa3-90e5-ab4b29bf32b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d5f54c-a86a-4b12-a315-af49a1be1dba",
        "cursor": {
          "ref": "2b67aeb4-3c85-4cbd-9c6c-8c84559cc137",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d60bea86-a6c2-42df-a2a9-27884dd34a3c"
        },
        "item": {
          "id": "74d5f54c-a86a-4b12-a315-af49a1be1dba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb19c258-4d84-47a4-be02-f923cd5d125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9a29c-23c5-462c-8765-5c6f76a733c2",
        "cursor": {
          "ref": "afe1c7d9-6fea-4080-961d-fa2e48279c9c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "804199d2-2f38-4512-b28f-7519c147b1f3"
        },
        "item": {
          "id": "6af9a29c-23c5-462c-8765-5c6f76a733c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfc35364-449e-4f26-9653-7e1b4d0cfc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d383d1-48a0-41cf-be0b-e8894719ca4d",
        "cursor": {
          "ref": "0966f331-c8f4-4a9e-b3fd-c20d2c75bbcb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0165c9c2-944d-44fe-87da-a9ddcdbc36ea"
        },
        "item": {
          "id": "93d383d1-48a0-41cf-be0b-e8894719ca4d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "adb01ddb-74cc-4ac4-8cdd-a00cdc7565b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f03cda3-210b-4165-81c0-4b5953acfe25",
        "cursor": {
          "ref": "c87b356c-07ce-473c-ae08-6248a1e4bddb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a902ee23-7083-4ebc-8da7-eb13ef8a0882"
        },
        "item": {
          "id": "6f03cda3-210b-4165-81c0-4b5953acfe25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99217c33-b331-470a-b40c-d0cf2ab67619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab73ea3e-37a1-4702-bdcf-27d91ca296f9",
        "cursor": {
          "ref": "b667cbab-5352-444d-83d0-b255cbc70b00",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0791e280-aae8-46f4-a260-d3af613e1672"
        },
        "item": {
          "id": "ab73ea3e-37a1-4702-bdcf-27d91ca296f9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4eeaaee9-bd74-4436-b296-9fee5c2c8bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcac60aa-21f2-44b4-8ae4-c7398f102b8f",
        "cursor": {
          "ref": "ac5844b8-a7bd-4ee1-98b6-a278a5e7e7e4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ad59544f-b7b2-4895-aa23-b0c105357537"
        },
        "item": {
          "id": "dcac60aa-21f2-44b4-8ae4-c7398f102b8f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4e51164a-1a44-40fb-aaf3-f5afdde1d8c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "6086204e-816d-4c89-834f-47abd5932a9d",
        "cursor": {
          "ref": "3c29b2f5-2302-47da-9949-7f19aea2580e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1fc3fed6-a714-4b6a-bf84-160ae6d1235e"
        },
        "item": {
          "id": "6086204e-816d-4c89-834f-47abd5932a9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6e2bbb71-e6e9-41cc-9ba1-d73a311dd855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcf07c4-3f4b-4d19-8ec7-f8b898f8a1dc",
        "cursor": {
          "ref": "e4c90ad7-a773-4233-a8da-15ab5a5d7484",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2a13d227-2d68-4a23-82f8-b4dd59390dd4"
        },
        "item": {
          "id": "cfcf07c4-3f4b-4d19-8ec7-f8b898f8a1dc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85056b66-29e9-428b-b566-dd12a5e3a7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a111e0-8233-40fc-8e37-085051ad4921",
        "cursor": {
          "ref": "98f79991-49f2-4050-ba0a-f63b4a533709",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "36fa0cfb-3e0f-485b-b3c1-4806cc222bc7"
        },
        "item": {
          "id": "65a111e0-8233-40fc-8e37-085051ad4921",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5bbf23fe-10ec-425e-9a3f-82ef3196f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e210eb-0634-449e-a825-876571b7c967",
        "cursor": {
          "ref": "13bbb387-ad10-4a33-9a1c-bdbc4a2f41cb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4a2ae574-ebd4-4ae0-96d9-dd0775896ba0"
        },
        "item": {
          "id": "79e210eb-0634-449e-a825-876571b7c967",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "718a04dc-cffb-48f4-90df-34915729a2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66daf010-2786-4291-9590-7ca6e35ffe41",
        "cursor": {
          "ref": "48d95c0e-fe38-46f8-867c-68a8d806a9ee",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ee9bce44-5595-491c-9777-37d09c760ea4"
        },
        "item": {
          "id": "66daf010-2786-4291-9590-7ca6e35ffe41",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8f97b65-5d28-4b80-ae2d-ba1d9a63553b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c162d969-a70d-4579-9d0c-d6f5a233f6a9",
        "cursor": {
          "ref": "8df2d816-e5b6-4b8f-8ae1-cf811d9b4e14",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bdf42ef7-b45e-4c15-ae21-913bf5b23269"
        },
        "item": {
          "id": "c162d969-a70d-4579-9d0c-d6f5a233f6a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bfcae8d6-2fb2-4cb2-88e8-0481096df40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045d10a2-4d78-4058-9cd2-d204281556e3",
        "cursor": {
          "ref": "4bed95ed-68b2-4cd7-8bcd-002db2b42b25",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dffa0eb4-3181-4c61-909f-a0d8abacb0f6"
        },
        "item": {
          "id": "045d10a2-4d78-4058-9cd2-d204281556e3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a324d265-ab7a-42a6-a999-8fe97984e7ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "3f9e31d1-c205-4614-9799-7a08d9559343",
        "cursor": {
          "ref": "7bfa30c4-bc6f-43c3-a193-7693abd97873",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d8df5456-adb5-423f-8164-09f142c0983a"
        },
        "item": {
          "id": "3f9e31d1-c205-4614-9799-7a08d9559343",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ff2e8967-07a7-4544-b258-c279d226aa74",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "79ba99fc-fa51-44d5-8277-266564da5a51",
        "cursor": {
          "ref": "95024781-b493-4446-96fd-fb843f3e968a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7d3c83c0-6e4d-43ad-a9b0-cb673fe354a1"
        },
        "item": {
          "id": "79ba99fc-fa51-44d5-8277-266564da5a51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a3afb09a-8987-480c-a247-b82d8fa88f0c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "f7e7c799-0186-4345-b15a-fa4ddbdf4bf3",
        "cursor": {
          "ref": "76d6e1fb-b521-4ee4-aeea-0e4fb5f389a1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "43a13929-4e8c-436c-aec1-7abd1e0d5ac1"
        },
        "item": {
          "id": "f7e7c799-0186-4345-b15a-fa4ddbdf4bf3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a4a375bb-62d2-4f4c-ae0e-655bed348ec4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "165de2b3-b364-42c2-9898-2823af7d643a",
        "cursor": {
          "ref": "4771c042-61e7-4882-ac5b-d80fe3c54e23",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3bb3d3dc-b7dc-4a7b-84e7-5131d860c2b2"
        },
        "item": {
          "id": "165de2b3-b364-42c2-9898-2823af7d643a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d087644-00d5-40f4-a885-17629ca6917a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "1a51dcd6-eb33-4cf0-bf68-72b39ea60941",
        "cursor": {
          "ref": "db590fd3-314c-4d92-b233-9d9e152fb595",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "454fbc60-00b8-4ca4-8f86-70ab2e4a5f72"
        },
        "item": {
          "id": "1a51dcd6-eb33-4cf0-bf68-72b39ea60941",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aa9aea11-ee9e-4172-ae35-8a94ed4899b1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "cdb6a237-5ff7-4bb1-87cf-903e8a386654",
        "cursor": {
          "ref": "f173a224-2061-4b2b-aac8-82a76b23d5f3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2c96558c-17ae-425e-befb-c6cc16a91653"
        },
        "item": {
          "id": "cdb6a237-5ff7-4bb1-87cf-903e8a386654",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0bf45432-ea81-4ef0-9a0b-0c6c3a920b3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8f96e5-f939-440f-9488-0e81d83506b3",
        "cursor": {
          "ref": "a86e8038-ba4b-46d2-a1a7-426f80a2b384",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "290d6739-b3b7-41ce-aa84-f91703738afc"
        },
        "item": {
          "id": "2c8f96e5-f939-440f-9488-0e81d83506b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f5bb991c-de2f-4c93-b097-050cd24f470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad35d896-3afd-4a09-ada1-5c02f35562c4",
        "cursor": {
          "ref": "36f2203e-ac2e-4846-bcb6-28acbc819ebc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e91b34d5-601d-4189-8d84-77f3402035e3"
        },
        "item": {
          "id": "ad35d896-3afd-4a09-ada1-5c02f35562c4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b4d65071-67f8-4520-86dd-40bf01eb1658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ac0b49-3b42-41fd-934d-38aa42b20351",
        "cursor": {
          "ref": "8eed7b79-03f0-4c12-aa1f-3cca56704407",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46a44cb0-a0ac-4b93-a2af-a8078c34c7ab"
        },
        "item": {
          "id": "20ac0b49-3b42-41fd-934d-38aa42b20351",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "65cbac13-e14f-4699-9970-cb36dc03667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703f02db-0016-453c-a635-1595ab7880f1",
        "cursor": {
          "ref": "adf162d3-76a6-4257-b6c0-b760ab3bdd18",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a487b434-4b4c-4993-8fa7-f623eb379e38"
        },
        "item": {
          "id": "703f02db-0016-453c-a635-1595ab7880f1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cd054f5f-c0f1-4b7f-8321-60048a1a43e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675e0777-2145-4064-8432-c4914fd4c973",
        "cursor": {
          "ref": "bcb73b69-219f-4e78-8dc0-5eb461031239",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15390792-0e35-4f95-98d8-3375f8c6cb97"
        },
        "item": {
          "id": "675e0777-2145-4064-8432-c4914fd4c973",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6ffd8c1d-db7c-4f31-b591-f24552ac03ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42f2601-5a8e-4dcf-a51a-69c526eb1b27",
        "cursor": {
          "ref": "08e78e3b-ae48-42e2-bbdc-9d06806539c3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fed5e2f8-fcfb-4e69-8fdc-6a9b23170d36"
        },
        "item": {
          "id": "f42f2601-5a8e-4dcf-a51a-69c526eb1b27",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a2de8c62-e37f-4f77-ae9a-8260ccff747f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14367606-4c07-411f-abcb-6cb3ada29e55",
        "cursor": {
          "ref": "34edbe56-a113-4276-b5ed-9de3c5f05aeb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d2c13b1c-e6ea-47eb-b9a6-8476224e01ad"
        },
        "item": {
          "id": "14367606-4c07-411f-abcb-6cb3ada29e55",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9260a74e-3edc-4561-94aa-6d323f0b8bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d956522a-817d-4d1d-8d1f-cb1b19d19124",
        "cursor": {
          "ref": "38515918-4fae-4bbb-bcd1-eb8ecaeee491",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "66b50bdd-4ebb-4fbc-9ea8-98405ca3de94"
        },
        "item": {
          "id": "d956522a-817d-4d1d-8d1f-cb1b19d19124",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b2d950a1-6534-4dc6-9c31-05b2f205000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0290ab-ce0a-4082-ae21-52b4250b403f",
        "cursor": {
          "ref": "316ac6bf-acde-43b6-9eaf-f96f1a998ed2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4817c811-e71e-48d2-a548-36e20433f0de"
        },
        "item": {
          "id": "0d0290ab-ce0a-4082-ae21-52b4250b403f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1d2e41fa-28ae-403e-8b55-aa07b5205172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6108db-9481-488c-b4b1-4398346bcd2b",
        "cursor": {
          "ref": "cf1cad6d-8332-4081-b778-2edc438ce10d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7f8d0ca0-9df4-4a4b-bcc3-c976f351f58b"
        },
        "item": {
          "id": "dc6108db-9481-488c-b4b1-4398346bcd2b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "183176c7-0eb8-4c81-8535-ac43fdca75f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6e8b2-0e9e-4e2f-9c60-837dc642c77a",
        "cursor": {
          "ref": "6a0ae826-cd87-45b4-9382-1bb6c5ec1575",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "da46f4b1-1fb7-4530-bdb4-06934c3b0f8e"
        },
        "item": {
          "id": "19a6e8b2-0e9e-4e2f-9c60-837dc642c77a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "86307411-bd8a-4529-97e6-a16465c02b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4bc2c2-04e8-4a32-9133-6361f6d4e5f0",
        "cursor": {
          "ref": "28b5e1ec-5ff7-4791-8997-336d8de8b21f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "66b202e0-6c2f-40b4-8cfe-f11c415fd7a4"
        },
        "item": {
          "id": "da4bc2c2-04e8-4a32-9133-6361f6d4e5f0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4ccfeeca-3073-44e6-adb0-d815f2e646b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06b3975-d043-4eb2-af47-5460102f48e7",
        "cursor": {
          "ref": "ecdbc8cb-3a15-42b9-a99e-7e228d8bacc4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e6bb4118-680d-46db-945d-7c53606b5d39"
        },
        "item": {
          "id": "c06b3975-d043-4eb2-af47-5460102f48e7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "92d5ea0f-86d9-4d00-9de4-5ec5b50cabf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a53bd-74aa-4d86-9f0c-0671c66b864d",
        "cursor": {
          "ref": "c231ff79-2e6d-4f8d-a238-613a24d55d2c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ebefaeff-c367-431d-81b2-95ac091a1477"
        },
        "item": {
          "id": "f66a53bd-74aa-4d86-9f0c-0671c66b864d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4d162661-aecb-4988-94ee-750a564803da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c2e144-49ef-4b1e-9602-b0796b7ceefe",
        "cursor": {
          "ref": "87b4e978-8b70-4917-818a-b73b3206fe8e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "35bfb792-7810-4975-b626-3ff122928dce"
        },
        "item": {
          "id": "75c2e144-49ef-4b1e-9602-b0796b7ceefe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "748c1d9e-34d2-4a18-b4b6-23af8b99a04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935b42cc-7993-47b8-b682-ae1fbea22646",
        "cursor": {
          "ref": "3f503da4-9f09-4d74-a25e-91bee40310c3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "204781f6-8162-4206-935c-b11616d1fab4"
        },
        "item": {
          "id": "935b42cc-7993-47b8-b682-ae1fbea22646",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1610059b-b1ff-48d7-b823-effef15913ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc7c413-8232-469f-8aa2-a3de71dab101",
        "cursor": {
          "ref": "b35a65b5-e6a9-417c-8f8a-f4069f5fd3d2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c1feeae8-4f8e-4eb1-ade9-167d3a91f46e"
        },
        "item": {
          "id": "6fc7c413-8232-469f-8aa2-a3de71dab101",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b19b593a-2c0c-4a25-be96-00f937010435",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6404695f-8138-468a-b63f-d7d82ac0d8b8",
        "cursor": {
          "ref": "c6ebb3b7-3c5f-4673-953f-8ebb718ec4c1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2780f021-4522-4ed2-b2f9-7f25321e32d9"
        },
        "item": {
          "id": "6404695f-8138-468a-b63f-d7d82ac0d8b8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d10a9ece-0826-4f8a-9c42-d2c35f9ffc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6fa25c-399b-4fa0-b078-01c547e29dfb",
        "cursor": {
          "ref": "09d5368b-bdf1-4c68-9e0e-5608f5446275",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f3387ae-81dd-4456-a26c-99d3d671725b"
        },
        "item": {
          "id": "4f6fa25c-399b-4fa0-b078-01c547e29dfb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d75f739d-2813-4a99-9589-6c5f9481a0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09222a9f-8070-4b75-98f6-00f653a95888",
        "cursor": {
          "ref": "3ecc06cd-ec5f-47b8-bd3c-83dcf0c4e599",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ea3cd4b-cc4c-432d-ad72-92415b2a0deb"
        },
        "item": {
          "id": "09222a9f-8070-4b75-98f6-00f653a95888",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "052dc364-f301-4626-9034-4bd93f739422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e89a43-27be-4ebf-96cd-e71cada0edf9",
        "cursor": {
          "ref": "2301411e-83d8-4c62-b448-dc64c225fae8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7bb508d6-2889-4f48-aff7-ba1ff5d48755"
        },
        "item": {
          "id": "d0e89a43-27be-4ebf-96cd-e71cada0edf9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d35ee1dc-ba47-4015-8b54-e461614de090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad0eec5-2808-4be8-a0db-4ebb51d19bfa",
        "cursor": {
          "ref": "9bd03643-5645-4fcb-b97f-5ac5c2cd94da",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e851621e-d7df-4ab2-8387-a127b548c06f"
        },
        "item": {
          "id": "7ad0eec5-2808-4be8-a0db-4ebb51d19bfa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2e737fdf-cfb3-457d-b143-3362fedd709c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca1df54-5f94-4a2f-922a-96481cbb05c1",
        "cursor": {
          "ref": "c6143e01-7cba-43d7-9b6a-7a5f96f11c82",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "67d9e8a5-0480-4305-b242-1a48144bbac5"
        },
        "item": {
          "id": "4ca1df54-5f94-4a2f-922a-96481cbb05c1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4bc33bd9-8cab-4f4c-a9b2-e9988b9479de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b6fd40-1689-4e9f-971b-7a2678f029e4",
        "cursor": {
          "ref": "b3d1e58c-4e9d-4ba9-bd62-b832a4da9c7f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "42effe9a-60ab-4db3-9f67-bddb1d24f047"
        },
        "item": {
          "id": "66b6fd40-1689-4e9f-971b-7a2678f029e4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1d9c2a44-8cdf-4336-9bab-f966456bc2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26034cf1-ca1d-4bdb-b950-9cce2396fcc8",
        "cursor": {
          "ref": "83650988-4467-4cc7-bde6-d095e73b457f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6cf4921e-940f-48ea-b022-aeac5653adad"
        },
        "item": {
          "id": "26034cf1-ca1d-4bdb-b950-9cce2396fcc8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "23fdc401-e212-4c98-a3c6-7de7c44749c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ecc9d-cdd5-45d3-aaea-35893ea3c6dd",
        "cursor": {
          "ref": "78e0c85c-b4f0-4ad4-a2b2-c9b07ae255c7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "08b49fed-a573-46cc-86a7-c528b6a9e7c0"
        },
        "item": {
          "id": "ad7ecc9d-cdd5-45d3-aaea-35893ea3c6dd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "54239481-0f90-48a3-ab68-62f451659250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db9495e-8531-400a-ac1e-5f94eb410b39",
        "cursor": {
          "ref": "1e9dc07d-aad2-41e9-b0cd-22449339f2d1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "641c70ff-76ac-4af3-a3a6-c11fd2ac424c"
        },
        "item": {
          "id": "7db9495e-8531-400a-ac1e-5f94eb410b39",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "064ac1e7-c355-4ac6-a0fe-e5a09c99f9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113ba358-d71c-4f37-b0e5-44da25c34b7a",
        "cursor": {
          "ref": "0e55b649-33d7-4360-91c9-8e9e4338c7d7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5e04de83-5cf6-496a-86ec-7e4ad5cb7f28"
        },
        "item": {
          "id": "113ba358-d71c-4f37-b0e5-44da25c34b7a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc368188-9e19-4836-be89-69ad9b2913af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc51dc2-35cc-45a9-82da-1b10b6bdf3bc",
        "cursor": {
          "ref": "03ab251d-18c7-48a0-bd0c-456ba38bda12",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a0512499-9908-43f9-9e5b-d25988a3d896"
        },
        "item": {
          "id": "ebc51dc2-35cc-45a9-82da-1b10b6bdf3bc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65a1345f-2c53-4e57-b2d1-578ea5b36663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfa6203-3df0-4058-92f7-33bb7b8e6439",
        "cursor": {
          "ref": "cae1bf03-45d7-48ce-bdc5-b58f314f8a16",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "48a90a78-916e-4441-816d-620d4170e3c1"
        },
        "item": {
          "id": "ebfa6203-3df0-4058-92f7-33bb7b8e6439",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25cb1b58-5749-4203-b4b2-39ad147bc6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e853d6d-209e-4952-aa65-cb6445179159",
        "cursor": {
          "ref": "2d02bd55-28a3-40ab-8661-e246c5be1215",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "79413dc6-3ccd-4255-b386-302454c28ed7"
        },
        "item": {
          "id": "9e853d6d-209e-4952-aa65-cb6445179159",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f94afdb4-d1c7-4bb9-b0d7-76c2de130dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959f5ccc-8728-45cf-849a-e7894f5138e3",
        "cursor": {
          "ref": "11cbb3a5-547f-4720-a675-06b4ed747409",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e62fa093-7acc-4529-b32c-406aa0ee8008"
        },
        "item": {
          "id": "959f5ccc-8728-45cf-849a-e7894f5138e3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d452b0cc-890d-44b0-9d80-8e831bf7b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20f73aa-2520-4de9-92db-a5e8c6cc2ed5",
        "cursor": {
          "ref": "6c93b0c3-6120-4237-9662-6d52af96c713",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d52d7856-3abb-4295-a616-a78b0031c882"
        },
        "item": {
          "id": "d20f73aa-2520-4de9-92db-a5e8c6cc2ed5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cb02cf19-119f-48a5-b948-df1142da08ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa19b21-d82e-48cc-8ac9-5f1be6253a6b",
        "cursor": {
          "ref": "bb00baef-52ce-4cb0-9097-ac033fa3011e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "516fa7dd-9ec5-4598-9ec0-9fc97c2537cd"
        },
        "item": {
          "id": "cfa19b21-d82e-48cc-8ac9-5f1be6253a6b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e71710dd-8809-4057-b86b-73cd1dfb0087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1610caf9-e230-45a6-9845-ebf3148be6e7",
        "cursor": {
          "ref": "3345e061-9a40-4d63-b3f0-754983191510",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cf67c9ed-43ad-4bcd-b42f-32d91e847b89"
        },
        "item": {
          "id": "1610caf9-e230-45a6-9845-ebf3148be6e7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d568a3e3-c14d-4d51-aed6-767bab021008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547e978b-660c-4b79-9d9f-a3bb5cbf62b9",
        "cursor": {
          "ref": "048e485a-bf77-41bc-897d-d65f35c90656",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5093f50-ff19-46b2-a25f-40126c0d25e5"
        },
        "item": {
          "id": "547e978b-660c-4b79-9d9f-a3bb5cbf62b9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2f38f241-ee6d-403b-a006-5a0b5d4f9d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea24ab7-4ba4-4a1b-9362-07660021e216",
        "cursor": {
          "ref": "7a4a46f7-2190-4bff-a4b8-e1d4f2dd0ce6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "25d23914-d14f-42e2-92b4-bc7de43feedf"
        },
        "item": {
          "id": "1ea24ab7-4ba4-4a1b-9362-07660021e216",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "90afd3d7-0e0d-4ff3-81a4-b78d83294e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f18817-492c-4307-bb7a-f34d402635cf",
        "cursor": {
          "ref": "7f34d61a-f81d-43a3-b03e-3361f7cbeca2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2bccf177-ccc1-4a04-a64a-de58f9216b2a"
        },
        "item": {
          "id": "98f18817-492c-4307-bb7a-f34d402635cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "42a166fd-172a-43ad-b0aa-e65b829a0fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4cec9b-ee4f-49fc-9cb2-2f9531723548",
        "cursor": {
          "ref": "ea9db19e-230a-4a59-b6fb-65eb327323c4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c95e9ce3-cbcc-4cce-b30f-c33ba05c7b54"
        },
        "item": {
          "id": "8e4cec9b-ee4f-49fc-9cb2-2f9531723548",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9ccfd04f-1d56-441d-8caf-ba4d921de433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc9a0c1-b299-4b57-a955-08d955b4319f",
        "cursor": {
          "ref": "6f7400d4-d765-43b7-9ddd-93babdd2f95c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "340747d0-c0c7-4f96-aadf-569dafefe8cc"
        },
        "item": {
          "id": "3dc9a0c1-b299-4b57-a955-08d955b4319f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "06fab7b6-dd45-4ae8-940e-b6b0d5261426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babe58e3-4b98-4b86-94e5-c7e52e94254c",
        "cursor": {
          "ref": "357cca1e-60b0-4ddf-b259-78e57ff98955",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c1f01db2-cc5c-4f0a-9c79-a6f1cae87c9a"
        },
        "item": {
          "id": "babe58e3-4b98-4b86-94e5-c7e52e94254c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fd8fc115-12e3-4039-8334-803e531c2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629e8053-7dea-46a8-b8cb-ccf2ec93158a",
        "cursor": {
          "ref": "a92b9ca2-6781-4c9b-98b2-d4d1bb2dd086",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c4039cf6-f979-4ae7-a15e-780ffad530c9"
        },
        "item": {
          "id": "629e8053-7dea-46a8-b8cb-ccf2ec93158a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ac956f9f-c87c-4915-9c05-6410dc528ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c172663-3dc8-43eb-ba90-0e2efe7e162c",
        "cursor": {
          "ref": "5eb8e3fb-77c6-4c15-9c6b-7fd087bebf9c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e17b9d81-e7f7-4b5b-83cc-a81a40be6671"
        },
        "item": {
          "id": "6c172663-3dc8-43eb-ba90-0e2efe7e162c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2c44153-d919-4eee-bec6-5ab90a25c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3012c666-5054-4335-8c34-f81d2d4fae4c",
        "cursor": {
          "ref": "2450cec2-7418-4648-ad61-6e86d38c32f4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd77bb56-c3ac-4cf9-8863-fa81dc7da552"
        },
        "item": {
          "id": "3012c666-5054-4335-8c34-f81d2d4fae4c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "be6881b8-a453-4e14-a9dd-2d14c130ab03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaa3b69-4c7a-4bb7-8427-1a97dd9d78f4",
        "cursor": {
          "ref": "be527769-fdd0-4f6d-a448-f8c3b556567a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ea99388-dc7b-4863-9815-7791e435a6af"
        },
        "item": {
          "id": "ecaa3b69-4c7a-4bb7-8427-1a97dd9d78f4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "63647581-db8e-40f2-9ed7-f1750f33bb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5792aeb9-cf7d-4fe7-a96c-761688811069",
        "cursor": {
          "ref": "f8b91794-baed-49a1-ac53-f718e0d3cb3c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "698dd79f-7e82-4f40-a25e-05ebb88db258"
        },
        "item": {
          "id": "5792aeb9-cf7d-4fe7-a96c-761688811069",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3f2b7e8c-a037-4081-8444-3a6fb5a3d1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422659a-4f2d-4dff-9cd4-991282c9e83e",
        "cursor": {
          "ref": "e1a0676f-37ad-4f52-8b3e-708d012f9822",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "403778e5-0de1-4627-a5f2-585cc73748dc"
        },
        "item": {
          "id": "4422659a-4f2d-4dff-9cd4-991282c9e83e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e4b150ff-f6ae-4edf-aa48-1ca7af54f108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd118f5-e753-4452-ba2c-a5692d12e32e",
        "cursor": {
          "ref": "351b1654-aba5-41d5-ae68-c3a6044aaed1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4f740b06-4a3e-47c8-b9c0-95ad6510c02f"
        },
        "item": {
          "id": "5dd118f5-e753-4452-ba2c-a5692d12e32e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "54ab6ea4-10af-40b1-96d6-9f20c5ad9449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c988011d-a38f-4734-a980-9f2053269427",
        "cursor": {
          "ref": "49770228-b42a-4f39-a1f5-885ee814dbfc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "183c0011-9432-4bf4-8d9c-65ffaafc94c6"
        },
        "item": {
          "id": "c988011d-a38f-4734-a980-9f2053269427",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6d159171-b543-415a-b599-78422a0f1e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7aba2d-5185-4b2e-a69b-3a7449623200",
        "cursor": {
          "ref": "f8400342-2474-486e-afa0-a13ee480ffd2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5f8a1d9a-4ce5-4c1f-bbac-75c4853a1b20"
        },
        "item": {
          "id": "2c7aba2d-5185-4b2e-a69b-3a7449623200",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f8e95aea-df7a-4ea1-850b-e3be334eb09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddf9fcd-63f3-4bf1-89c7-48eaa3b73719",
        "cursor": {
          "ref": "324c882d-ee92-4369-9b4e-799f4a3385a7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5ce0c1c-4e11-4ccb-b31b-8f4f5be840d6"
        },
        "item": {
          "id": "7ddf9fcd-63f3-4bf1-89c7-48eaa3b73719",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9aeed4e6-b032-4b6e-bd4a-34929d698975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f236d0-fe5e-4270-a0ac-ed4d22bc6c40",
        "cursor": {
          "ref": "51f6c71f-9b4d-4050-95b1-fef0a845f39d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4cbad5da-bf92-480a-a503-2ccc6999764c"
        },
        "item": {
          "id": "d1f236d0-fe5e-4270-a0ac-ed4d22bc6c40",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eebbc3ce-c371-4131-a9b6-8b76bab80269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3096a94d-c577-4f91-9ea4-6e0f369d998c",
        "cursor": {
          "ref": "bbb7de04-cc0e-4be7-a97e-dd07b3976637",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "53018884-41a5-4e9c-8592-c8801dc7597a"
        },
        "item": {
          "id": "3096a94d-c577-4f91-9ea4-6e0f369d998c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2f12cf96-f131-4df7-8edd-04e214288b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22ee6b0-2543-4116-971d-a84b7e96fc58",
        "cursor": {
          "ref": "98a812cb-a3e8-4974-80e1-ed098e60baa7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ee7d8ccf-b568-49b2-b5d8-e16864a52112"
        },
        "item": {
          "id": "e22ee6b0-2543-4116-971d-a84b7e96fc58",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "324889ce-1f42-47e5-8938-5030d16b2baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707df4d5-977f-422d-8f51-5c20c808693d",
        "cursor": {
          "ref": "7c147db0-601f-488d-a356-f963cb6c4e48",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8e28b070-7af0-42d7-8a56-2c872283ccc0"
        },
        "item": {
          "id": "707df4d5-977f-422d-8f51-5c20c808693d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c12df1dd-7b40-44cf-a1ac-ebdf6fec11a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e76074-1156-4315-93f4-1b435eaffd5e",
        "cursor": {
          "ref": "3e99ece6-3501-494e-829c-9835302552f0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0e771db7-841a-498c-8573-232c1253b823"
        },
        "item": {
          "id": "58e76074-1156-4315-93f4-1b435eaffd5e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b74bf7b0-a4fd-4238-b82c-00e40462ea0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47187a9a-5a65-4c5b-8a8b-bb2f0e34692a",
        "cursor": {
          "ref": "65bde85d-1b81-4ff1-97b8-b3016817ea77",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3ace6c4c-93f7-47de-8e78-f9d14717d5a8"
        },
        "item": {
          "id": "47187a9a-5a65-4c5b-8a8b-bb2f0e34692a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45bae27b-892b-49d5-afb3-56c4c247613a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab78d904-f030-4489-ba0b-3162362aa80e",
        "cursor": {
          "ref": "2c335bc4-8cec-4449-8b28-ea7a7281c230",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f431ff69-75d5-42bf-a5d0-8489d6fc7053"
        },
        "item": {
          "id": "ab78d904-f030-4489-ba0b-3162362aa80e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "83335157-8cd9-49c1-a192-d6099dd85e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8239316d-9788-4497-a6bf-c4e5996a33af",
        "cursor": {
          "ref": "7e13f76f-2987-4b7d-9cc5-f44f099fd4a7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "541b9470-6876-462d-9790-549e0acda945"
        },
        "item": {
          "id": "8239316d-9788-4497-a6bf-c4e5996a33af",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5836928e-119b-4229-b28d-08c03ba9bc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66507bc-dd25-40ad-a7e3-cf6240f6e8a4",
        "cursor": {
          "ref": "6c52c33e-c52f-4f88-a731-62848907a6f1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "25b1cdb2-edff-48b4-b4ae-384228057341"
        },
        "item": {
          "id": "b66507bc-dd25-40ad-a7e3-cf6240f6e8a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eee8b947-1693-4645-b8c1-5656d791ccb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93542d8c-f5fe-4b9a-bc77-b0b8abcf6935",
        "cursor": {
          "ref": "f484d2a5-acda-4562-944d-774890357a00",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c8eabec-a6fd-477c-b977-23606b686fc7"
        },
        "item": {
          "id": "93542d8c-f5fe-4b9a-bc77-b0b8abcf6935",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ffb17a61-0209-40e7-aa88-74015df39c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadfb25e-3ed8-4806-ba6d-7aa0f184f331",
        "cursor": {
          "ref": "c2eb5bf8-ee98-4328-8f2d-d94450fa61b2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "44f05ad0-d5f6-458f-ac9a-9de397f02117"
        },
        "item": {
          "id": "dadfb25e-3ed8-4806-ba6d-7aa0f184f331",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8f2e3af-f7a6-4747-aa2f-f7fd1439f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5ac45a-9ab2-40d7-95e8-689f36c8dbe8",
        "cursor": {
          "ref": "6512807b-db75-4ae4-8414-9f68447970ab",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8efab601-4242-42fc-a1cc-ac00eeaff516"
        },
        "item": {
          "id": "4e5ac45a-9ab2-40d7-95e8-689f36c8dbe8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e3ba7cb5-7d67-48e5-ac52-9e31afb8386e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc4f4c-55b5-4fa0-879f-328bd6aaaa60",
        "cursor": {
          "ref": "c8b78446-3013-4c9e-a505-310c879beebc",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ceefe9da-0999-483f-9d99-1937330cf64c"
        },
        "item": {
          "id": "e5fc4f4c-55b5-4fa0-879f-328bd6aaaa60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ed2e3def-abf4-42a8-b2f5-b74994991025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7804e6-4bb2-471b-8b2d-4b69dd7fb1eb",
        "cursor": {
          "ref": "ba855610-b2b8-4fb9-93f3-67e7eb98e3d6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8701e7ca-7b5a-46b4-8c53-f9599d43fa86"
        },
        "item": {
          "id": "5c7804e6-4bb2-471b-8b2d-4b69dd7fb1eb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f259a8d7-bdfc-4048-b243-792d5b74bdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584250ef-c834-4650-8aed-c02459ac5b2c",
        "cursor": {
          "ref": "33245af4-e0d1-438b-877e-0ce9bbd64953",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d57f5b99-a80d-4e3e-9e0e-dc641a3d6b80"
        },
        "item": {
          "id": "584250ef-c834-4650-8aed-c02459ac5b2c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "54f9992b-28a0-4ca4-b53a-59702f65eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e242d34e-eda8-41ab-b067-7e41450ae1cd",
        "cursor": {
          "ref": "47ddafd2-608f-4db2-9c3f-f4eaddaa2c5f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d83bf4a-3b7e-428f-b156-c043693c6acf"
        },
        "item": {
          "id": "e242d34e-eda8-41ab-b067-7e41450ae1cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cd9efb61-f44d-46fd-90b0-4f2822e4578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ed413f-1106-46df-9687-a5f4784cc158",
        "cursor": {
          "ref": "2de0f9aa-ff8c-407a-a6c1-a9554922fa04",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "644f535f-ad06-4e72-ae4f-de9f20b11d83"
        },
        "item": {
          "id": "e6ed413f-1106-46df-9687-a5f4784cc158",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "74114316-0ee5-499a-a331-7bbcd2163398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f38b43-f34b-4e34-9c2d-3cdfb466d550",
        "cursor": {
          "ref": "55842359-8552-43dd-bdbe-7eca2057ae55",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e6d6b6c-6d31-4089-8d82-8ba41fb4439e"
        },
        "item": {
          "id": "00f38b43-f34b-4e34-9c2d-3cdfb466d550",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "166a4476-6c51-4bbe-b2d2-1a3ec1459f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a0b2a5-bf71-49af-9c4a-ecc74f849a0c",
        "cursor": {
          "ref": "38c1e167-df5e-43e1-bf7f-97de2ea0f8ba",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6d949773-67b6-4c2b-b645-3b9985543cb7"
        },
        "item": {
          "id": "86a0b2a5-bf71-49af-9c4a-ecc74f849a0c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6b5f1b27-f58e-480c-88f0-56b72eeea521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406a3954-3d50-4031-8e4f-542c43199e58",
        "cursor": {
          "ref": "e1f716e3-340c-4482-abcc-897599194b5a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "47c6a4ec-d397-4001-ae4a-317adf3bca1e"
        },
        "item": {
          "id": "406a3954-3d50-4031-8e4f-542c43199e58",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "874fa4ee-c602-4485-bdb4-b315b91c6695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d107269-6e8d-4f2e-a98e-db03ed7e363c",
        "cursor": {
          "ref": "aba60ca9-9fca-4a47-b3e4-378a39a510e0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "989669bc-8d55-42f4-ac59-c2645dde7a8c"
        },
        "item": {
          "id": "5d107269-6e8d-4f2e-a98e-db03ed7e363c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c55d67ef-5b90-4801-82a0-fb240e1e083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682e4867-f2f2-4eb8-be2a-0439d468c374",
        "cursor": {
          "ref": "4a6723ad-e988-4bd8-bada-022cc4633a74",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3e711008-484f-4c95-970f-53c2a8a448e1"
        },
        "item": {
          "id": "682e4867-f2f2-4eb8-be2a-0439d468c374",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "93ff450a-80c5-4cb3-834a-a0fbc8ac4525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be23e478-4d9e-41ba-8636-ddd59799c624",
        "cursor": {
          "ref": "aa024e13-3d0b-491c-b204-c822503b3d3f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9d16c79f-ce7c-46ae-b210-71291aa9b93e"
        },
        "item": {
          "id": "be23e478-4d9e-41ba-8636-ddd59799c624",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3d7e19da-2ba0-42b7-b23d-272e6c18642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4584bb8-70cf-4fe9-ad9d-eb7ca1dae78e",
        "cursor": {
          "ref": "9426322a-850c-49b4-bb23-13ace07f808c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5d9265f2-4510-427e-8823-f2e4f23bf75e"
        },
        "item": {
          "id": "a4584bb8-70cf-4fe9-ad9d-eb7ca1dae78e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "be4636b6-f204-45b9-ad1a-cdc0e2f61909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12684686-c8c9-4a78-8ad9-56c2ad094e64",
        "cursor": {
          "ref": "efb83a4b-c1a6-4420-bd78-3edccc9ae67b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "eb1dc7c1-2985-4a89-9fea-823924c02f60"
        },
        "item": {
          "id": "12684686-c8c9-4a78-8ad9-56c2ad094e64",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "56086ff5-8e84-403b-a45e-bbfd320fa380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcddf7c0-9ae8-4e69-935f-ec7303e39468",
        "cursor": {
          "ref": "7eae0c45-94f5-4921-ab33-ac6e26363528",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c9234fd4-4e92-4c51-8b39-c9f273559ed0"
        },
        "item": {
          "id": "fcddf7c0-9ae8-4e69-935f-ec7303e39468",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "77a543d7-b4c9-41e1-9e37-d48255934d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7046acbd-ec4d-4eed-b1a9-6b862b7a5735",
        "cursor": {
          "ref": "79f3b8a2-7df5-4f9e-93ed-057bf684ad24",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "351db01f-f7fd-40ff-817c-2dedff67b18e"
        },
        "item": {
          "id": "7046acbd-ec4d-4eed-b1a9-6b862b7a5735",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "354a1313-695a-4857-b67f-a550ee39b451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade97f07-d94b-40e3-9a1f-5cc75e864f2d",
        "cursor": {
          "ref": "999910a8-9ec7-4582-a9a7-59881f176cc1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0270a540-a93f-4be3-930c-4005eea38575"
        },
        "item": {
          "id": "ade97f07-d94b-40e3-9a1f-5cc75e864f2d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "139e6135-62e5-4258-9abe-200c9d5735c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aabb150-88ce-4a9d-949c-8c0a84ff9798",
        "cursor": {
          "ref": "a6e79a52-b5f6-47a9-b4b5-ea043a9117a7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "dddca1fe-6adb-4f6c-9c70-31746ccafcbe"
        },
        "item": {
          "id": "3aabb150-88ce-4a9d-949c-8c0a84ff9798",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5380feeb-3ba0-4458-a3ff-fe8d33a4cdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1722eb-a30b-4b08-8220-065319f66a1f",
        "cursor": {
          "ref": "67f40b28-ee47-479d-82ad-8a3d32845a42",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "972ae2e2-afce-4d2c-b04b-c0d44f130d5b"
        },
        "item": {
          "id": "cf1722eb-a30b-4b08-8220-065319f66a1f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "11f70569-18eb-4613-887b-2e1a9df5ef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20154a34-55cb-43eb-b453-a4beba1d21f1",
        "cursor": {
          "ref": "7bfe0241-2b2e-4975-a387-c6b391be7863",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dcb15edf-ddbf-4313-8c48-d3ce86164d05"
        },
        "item": {
          "id": "20154a34-55cb-43eb-b453-a4beba1d21f1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0d30db2a-e754-4f9e-b4b5-1b3e1937b472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9026bd-e8e5-49e9-ae0c-aac3065d9031",
        "cursor": {
          "ref": "808b03e4-edf5-4fd1-a39c-688993907c3a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eb9e4cae-888f-4a31-adeb-70152bb2aecb"
        },
        "item": {
          "id": "ef9026bd-e8e5-49e9-ae0c-aac3065d9031",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cd7cf2cc-fc6d-4209-aac3-5d9b28425f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b5398-30e4-40c1-b8ec-0c529b625c43",
        "cursor": {
          "ref": "8ae752ec-046a-4bd6-929f-302cf405e5f3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5adcf5c3-18bd-48c2-b213-90cf5e54bfbc"
        },
        "item": {
          "id": "d79b5398-30e4-40c1-b8ec-0c529b625c43",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ded33e5-eb74-4593-8769-539aac22f0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f2c47d-3798-42ed-baa8-009eb3aa6c3c",
        "cursor": {
          "ref": "dbb58573-f3f9-4508-8f49-8bae19f1a3a2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7f280a51-ef1d-4960-b82b-8a3893c8237c"
        },
        "item": {
          "id": "21f2c47d-3798-42ed-baa8-009eb3aa6c3c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1489ae6b-cdc4-48e6-a2ce-1ecf25818bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d025d9-d073-4148-8a16-f51858b98869",
        "cursor": {
          "ref": "bc60abfd-f75f-4561-80e5-14d31c682fb8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6c435efc-2589-4bf7-abd5-1e0ee1616974"
        },
        "item": {
          "id": "18d025d9-d073-4148-8a16-f51858b98869",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5830dc0b-4bd7-4d43-b2b1-807644812fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0943a1-43e6-4b83-ab64-7fadff0415b9",
        "cursor": {
          "ref": "a59c4ae0-03f3-4809-9edb-62a85032cf55",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dc1285a0-ccdb-4557-84b7-783bd7c95dbc"
        },
        "item": {
          "id": "7e0943a1-43e6-4b83-ab64-7fadff0415b9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b9192a2f-eec6-414b-bca5-8fecd595667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e376eef-aaa4-449a-8889-8b3931764f67",
        "cursor": {
          "ref": "cdf9d4f0-0287-40f1-a562-ea84cf125de9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c5002807-7a82-4ef4-afe6-41b8fe405be0"
        },
        "item": {
          "id": "6e376eef-aaa4-449a-8889-8b3931764f67",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "854fac12-fb75-4c13-96d7-77557511a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f64d65d-c188-4cea-9d2a-8766dff823ba",
        "cursor": {
          "ref": "afcff3f8-7c90-4715-9110-55c9eb193d02",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3d7444a6-b63c-480f-aaa4-b5d1f4a5f1f5"
        },
        "item": {
          "id": "2f64d65d-c188-4cea-9d2a-8766dff823ba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9a9f020e-1a8f-4049-8f68-7b47227a13e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdc8244-0ab0-4473-9193-d69c45cc113d",
        "cursor": {
          "ref": "fb9195f8-0364-4137-adfa-f2dbb7b58d98",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d586c87b-01aa-4d1b-8ba6-d029259384be"
        },
        "item": {
          "id": "acdc8244-0ab0-4473-9193-d69c45cc113d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cadd3b3e-92ec-43a4-9a9a-9b3e12a6d57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f023960d-aee6-439a-9550-607c9922c568",
        "cursor": {
          "ref": "d4f6da18-9850-43d2-9804-ef8d335d77f5",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "36d2db2d-e737-4b89-affd-eb73ede2f646"
        },
        "item": {
          "id": "f023960d-aee6-439a-9550-607c9922c568",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a2d1853-777a-412e-b62a-2558626eb3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83168e0-33d4-4ee9-bc6e-4f2f9c4358b2",
        "cursor": {
          "ref": "7bf7caed-c10a-4acd-9173-27938c20dade",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5d29fcb9-1f3e-491f-b169-b12750e8ddfe"
        },
        "item": {
          "id": "a83168e0-33d4-4ee9-bc6e-4f2f9c4358b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "70475954-4258-40d7-9d5f-88dd85229598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f528c7f-c6a1-492a-9bac-7f9b06b49be5",
        "cursor": {
          "ref": "8daa0478-f718-4acd-9c80-a22266f7bccd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "65d33121-453e-4c71-8579-e2efbb0c2d60"
        },
        "item": {
          "id": "1f528c7f-c6a1-492a-9bac-7f9b06b49be5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ead0e3b5-76c7-44d4-a917-cb9379c29f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd115ecd-6f3c-46ae-80d1-9ddd8e36da6c",
        "cursor": {
          "ref": "22da38f0-5911-4ec2-a391-b60471eb62df",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ccd28784-408b-4d21-9d83-65c215e2d34f"
        },
        "item": {
          "id": "fd115ecd-6f3c-46ae-80d1-9ddd8e36da6c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0b1ee98b-75cf-40d8-a79e-06b7fd490879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ca2383-ada5-481a-86c5-445195476822",
        "cursor": {
          "ref": "498522c0-ed0f-4aab-bf18-d470eb3958dc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "988f8823-08e1-46f3-8fa6-b6ac917cc520"
        },
        "item": {
          "id": "68ca2383-ada5-481a-86c5-445195476822",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9090eaad-b2d2-41c0-a40b-abd803e6b46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf7e3e-37c4-4491-bff9-4bcfb61dd6c8",
        "cursor": {
          "ref": "1da6234c-64fe-41c6-adda-156ec2dc03a3",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "08c21fe0-0029-4519-8e02-4acb53293c84"
        },
        "item": {
          "id": "6abf7e3e-37c4-4491-bff9-4bcfb61dd6c8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ce9f9f5b-79cd-48be-b579-ea08c0bd2ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe04c07a-43af-4deb-90c0-b05e1a38dbfc",
        "cursor": {
          "ref": "f50a17b4-9aef-4b35-8d2a-42701030dcfb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c5295817-cebb-43f7-8517-f37a042115f4"
        },
        "item": {
          "id": "fe04c07a-43af-4deb-90c0-b05e1a38dbfc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "514415b6-326a-4965-8628-9e1ddcf3939a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28de889d-56c8-4c50-aa53-d040ba0bd8b2",
        "cursor": {
          "ref": "889eeb7c-c9b8-4d05-9aad-7f7fac8d6570",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "671f5d35-4576-49f1-a2e6-868929464e45"
        },
        "item": {
          "id": "28de889d-56c8-4c50-aa53-d040ba0bd8b2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "06368c4e-d3d8-44ad-a49c-bee300b2f915",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6d539d-ceb3-45a6-80ec-5bcebfd3e38e",
        "cursor": {
          "ref": "6142decb-e11d-4f08-88ed-0f09ff677543",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3b85e4c4-d823-4e1f-bba6-5f1fd5b580b6"
        },
        "item": {
          "id": "fd6d539d-ceb3-45a6-80ec-5bcebfd3e38e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fcc543e6-0984-4e27-ae60-cff342f83e03",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b173630b-4788-4f17-b04f-f8f74e2f2867",
        "cursor": {
          "ref": "479ae84b-2590-4a8d-bda4-4eadb8c481f1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "159f2bca-4c8a-44b8-810f-5ed4f4a6938a"
        },
        "item": {
          "id": "b173630b-4788-4f17-b04f-f8f74e2f2867",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ce61cc96-9ced-43b6-bb88-4564c67c2c04",
          "status": "OK",
          "code": 200,
          "responseTime": 4623,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8405f0-6ea0-45d5-84f8-b556aceadce5",
        "cursor": {
          "ref": "80ece232-aef8-4325-b6af-115cea920b2e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9288e615-779e-4254-9556-4a8c59422d5f"
        },
        "item": {
          "id": "6a8405f0-6ea0-45d5-84f8-b556aceadce5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82545ee8-7379-4f25-89c9-2a201c6a728c",
          "status": "OK",
          "code": 200,
          "responseTime": 3010,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0240f6a5-1b3b-4b19-bf46-aaffec8ef2d7",
        "cursor": {
          "ref": "1127ecfe-80b0-4b4c-8e64-8d8544767119",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa5c947e-9fa5-4310-918b-95d04ba66a02"
        },
        "item": {
          "id": "0240f6a5-1b3b-4b19-bf46-aaffec8ef2d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1852e852-8e01-423a-aa87-02a0821b4ae5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0240f6a5-1b3b-4b19-bf46-aaffec8ef2d7",
        "cursor": {
          "ref": "1127ecfe-80b0-4b4c-8e64-8d8544767119",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa5c947e-9fa5-4310-918b-95d04ba66a02"
        },
        "item": {
          "id": "0240f6a5-1b3b-4b19-bf46-aaffec8ef2d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1852e852-8e01-423a-aa87-02a0821b4ae5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444a678d-d957-40c0-81ac-a4280b6f638d",
        "cursor": {
          "ref": "f311751b-06e3-41e8-b9f6-3a34ef837f28",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "015eadd6-7037-4d8f-a630-09884855e67b"
        },
        "item": {
          "id": "444a678d-d957-40c0-81ac-a4280b6f638d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3f75953c-0433-4069-b625-8d215cd00ec9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe247de-08b1-4937-a902-96d3c742c74b",
        "cursor": {
          "ref": "72d1dfe2-e383-460e-b1d7-559d4843c4a5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ccec5aa0-e9f2-45e6-8cb6-605467e608c2"
        },
        "item": {
          "id": "dbe247de-08b1-4937-a902-96d3c742c74b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a6cc91f4-aa26-488f-8f0e-a9c3c3099cbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}