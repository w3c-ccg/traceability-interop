{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b898bd4d-cbc4-4136-ab87-19310925e50d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ea575dde-2d59-4503-9fe0-c8dd729e773c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56abdea9-c5e8-4dbc-aee2-2e64015bb32b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f7fd936-139c-43dc-b5ee-17172111cb11"
                }
              }
            ]
          },
          {
            "id": "69b8ca27-433b-4238-99dc-d06ef59845ed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70a6d884-d29d-4e75-9eec-fa435ca1a098",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ab2313a-1c73-417a-96a3-b63c0c62e187"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0913c356-16a6-45e8-a9a1-26c32fea89f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1f12302e-86e0-4857-a61c-58b3a4cd7eca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e4d6e11-71ce-47a5-8b57-2210edc0b804",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33bb826c-09d1-4712-9746-7daaa8efcb41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f705c68b-250e-4b0c-bebf-5c10e08f4d77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38f7e070-c5c5-49f0-823f-053e89bc609e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a204f90-90e6-4fd5-9a3b-c6e165f67a11"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea69fcba-2cc8-4f18-81d1-719627d26e5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64842827-b515-420f-a660-2298fa22adf1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53d893e1-3e55-4118-9390-2a53023ba69e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dcfc1aab-7301-4370-9fda-659aa7cc3dad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79952a5b-f7a9-40eb-8d6f-50d787fc78b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5b73863-1d20-4336-ab7d-9bf76f69666f"
            }
          }
        ]
      },
      {
        "id": "b71c443b-5827-444d-960f-6e94857a1207",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cbb622b5-8dfe-4587-8c1c-71dfa2880c8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ac21de1-b35c-49e2-ab5e-0e6de5c08d5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9371c14a-abb1-433d-a55e-7d74b117ae70",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e512217-feb3-409b-8678-b14cce451226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74cbb01f-4bbd-43e1-bfdc-73050782c4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475fd821-0eae-4cd3-9626-83f6fa6e899e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f229939-619a-4c20-9c06-53802b0fc200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3ceca7d-f1bb-43cc-b7a4-ad46b3bcae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a2af0c-cc80-4534-bc1b-1653ef5cc7cf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7a429-a812-449f-996a-9acb939a63ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "883751f5-943e-4f12-ad8f-acc283f4675e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23140985-3a49-438c-8707-912638768614",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48998933-44ba-43b5-86ad-dcab3c2aabbf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bffdb8-0853-4f8a-9961-7fa1c49cc3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b584fa1b-32ae-4cf5-8aa9-50eae2fc45d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a31fc4-2b9c-482d-92ef-59182f05a112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9416bd-13e8-4126-824d-ea941ef0944f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12dbd074-1e52-4994-9d1d-34dafcd0fec6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87dd7332-f9a9-4948-8502-4a07905b742b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b6d9529-dbf2-42dc-9a9e-84bb7bbf9714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "90f6a082-f573-483b-9d6e-4501da5e0b31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c3f5c3a-b4bc-4e0e-8d8d-cd5f5bed2831",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6ae0ce5a-a606-4303-96f5-d32aa7d34386"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4b85798-2d84-4ed8-ac2e-3a4ab3620d54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86203c15-a804-4bf1-b56c-ad50aad9b38d"
            }
          }
        ]
      },
      {
        "id": "b653ec75-b378-44bb-b9d3-a4543598be34",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "71dccc4e-ae94-445b-81de-cca1faeaee40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "defd2797-9458-4c4f-a5c7-3ff8e96e13e9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bf376f31-2e2a-4f97-8b12-f56481be6bca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a7513e-17ca-47d9-bafb-52f12eeaec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846a4908-4e81-4607-8ad1-6c2b980d3158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de7cf58-785c-4c3f-80f0-6ce3d5f2bbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac20167-f670-4a80-8f5a-47ccc51d642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af201f78-044d-4282-8e8c-1ce98173f7a7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe51182-5cce-4687-968d-ed00f46fd1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611e7e0d-6317-4892-bce6-eec82f6d24d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39e04f1-09c3-4f95-bad0-490f00648a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b49173-3ad3-4282-863e-69d7d6bfec81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc955057-4e41-46ed-96d5-6b5c42905235",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fcaac1-ac64-467b-a5b2-cb9b53c9235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffdb5f4-e18e-48de-b08f-592515bd7f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab077b4-c690-4235-a322-1d9176d2ec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6ef393-f51f-4650-a155-6df37f9803a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544a8d5d-59ff-4446-9c62-381e07c8f9df",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc891411-7308-4ae5-8510-2964e2e80ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225b37f8-58f5-4c26-89b8-33dcc2076826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db17194-a59d-4bb6-832a-f17334ccc22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4e0d8d7-7bac-4bac-99ab-e913c720db25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca928b7-5102-45a2-a920-aee2e236046e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e302e7a-303f-4c95-b280-2de14a7d6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cec1c8a-933c-4560-a516-0a12f131b49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef775d4-4fb0-4efa-869f-68cb83092707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "861ff13c-5d7f-4c01-ba76-7b560d4b0c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a89135-4468-483b-8215-5228ce4e0353",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf392c-4fe8-4faf-9c03-a2a065e68401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a1162f-f08a-4ef0-8835-b29849be3263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aacf84-e5b9-472c-84aa-13fe8bb9b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66f800d5-0519-4550-b775-a51054f76f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54db69c8-ebe2-42ce-bd4a-a00ca45634f5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cce62a-ab78-4c85-a4e7-beba80577489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb97f34-567b-4118-8235-bb2b12a1a6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b607407-2705-4e49-b191-51119567afa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a75fe27-8455-4917-b2d7-c09e9e8204d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1682c584-39d1-4d25-9ddb-16939dee349c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280703e1-500e-48c1-b685-ae0431d14aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c45bcf-d210-48d0-ac8d-dc5fd7b4ad04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac84ab78-0f2d-4e5f-9c7b-3223a0be7aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6604947e-e861-4532-be51-a860ff56102b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dbc9e2-e0a6-44d5-9311-20ddfc0b7b6e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d84fef-29e7-4ffc-9845-7e2c72b1d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d88b518-2786-4874-9d09-8a5b214d520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc395d16-ebf8-410f-a33e-4042f625199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d64652a-f755-4843-9273-df6d32e20762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b842a8-ada2-4b42-93b1-8378d6c0be1e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420dd29-a0ca-4013-8c84-d91fcae80be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecd211e-0807-4c9d-bd4f-c83f4e17c7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac103634-cdc9-4898-822a-3a0400a4447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e43eaf-51c4-4a58-bad7-e1257b170fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add5c4a3-751d-4837-bccc-aee84f781617",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea21fb47-c94d-47a9-8c0c-68e64841832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81653852-0a6e-4fbe-91b8-1354d927c4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73dda58-7089-4e06-b5d8-e5049e3632c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee4c73c3-0ede-4908-b68b-520df90f3a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513a9fce-01f0-411c-93d3-c0f0fd9ecbf5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed759e9c-b004-4c84-8b0e-1b42191049a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35aeeccf-0383-46b0-9aa8-b9b19965338b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bcea01-49f7-4d87-9226-78ecc7afb1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728e83d4-7bc7-4346-a0ed-0f51d8132c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20e18cf-f9e8-46dd-a093-5eb172ac71ab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430e763d-ffd3-4483-8b2d-4844fee19a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c14e13c-8b0b-4bdd-b6fb-c33764a68b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b1c5a7-ec26-4830-b049-f9ab6e051cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7de1948-1c3a-4d56-9a0f-c712f4cf03b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2bd5d2-f809-4f1a-b1fa-63a38cc68fd9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c425ab-a555-4215-8680-16a58fe726d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e571e4-2971-4b99-bc08-50916b95ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59ddded-16b3-4521-a42c-15527c780b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4df279-1f7c-4700-a145-4307583941df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b214a63-3b81-4a84-be6b-2c22e0e15172",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02508ded-3f26-4953-8594-b25f465f17f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159e13c5-3508-409b-9de9-9d1588b33bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e5bf8-e43f-437c-a036-9e81247fb1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b1232c-5374-47e7-8810-e9bcee54a051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd26b80-ab21-41f2-b36d-756851a35903",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d95fc50-44a5-4a5a-be5c-6e3e29c3ec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efec385-826d-4717-80b8-d9e9f59e836f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e889be-ceaa-4c8e-83b5-e5278dddaf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb5dd38-e9bb-4e6c-be46-45edda86719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1793ac7-ae9f-48d1-9a34-2ed14aa96dfe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cde1be4-543b-438e-8e32-2dc545ed1f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dba87e-5eb3-48a6-b0a3-09519a62a972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a328430-3580-42ee-8c8b-94dfc66d65a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6dd21b2-f14c-447a-a078-a56dfa6a5764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26d3e8-d839-40dc-bebf-afd654676a2d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e66732-f680-44e9-a587-c3a08bff2daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec04c29-8c4d-4223-ab5c-388f509d24a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df02558f-1d77-4327-b932-f739e9b6a754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf157d6-a209-4176-881e-d59c0d8c1f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ed7a91-73a3-4d51-a4f2-1033abc86c37",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f7810a-a01f-4edc-ac88-70cda1fae302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398fbb4a-f4c4-4d1c-b53b-6a271a990482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bc3c88-9d4f-47d7-a3a6-e85b3eaf6629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2807db4f-ead7-43bc-b9f9-36287f7f0cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e06b7c4-ddd0-4881-a2d2-89925cb0a9b7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3430129-191a-4221-b361-d690d7dfcafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b759c2bf-51c8-45fa-804c-e14788a6bd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42427dbc-0a11-49df-9ad1-0980bd82ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa92a4cb-8947-4f21-aead-62cb280a3b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0695f720-ce22-4753-8c66-0e6a11d5098b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38693ec3-d003-409e-a79c-2f3d5bc0ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ec049a-240b-4794-8ef4-8563693c9382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f97c87c-84fa-43a9-8527-263b2371ea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b789bf5-703a-4576-aa99-083d296f2b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca088bf-94d1-4bb3-b55a-3dbb0234e194",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c0092c-0690-4189-8256-9c18da916497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5200c4-4366-442a-a6cb-38d2597f2788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1674afc2-a103-4da7-b88e-1d6b379fe620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ed789f-f874-40cb-840e-9d907e51f894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce732f-ad27-4f54-adfb-ca056088805f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906e73bd-d36d-4b07-9bf3-c4378e9d8b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cda60f-57fc-4c54-b334-3b2b9f9e29a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb4e4cd-1663-48cb-9155-e194dda3d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f15a69a8-b8ac-43f7-9e14-04d1249a7f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3913a398-93cd-4345-89a4-fb9a1b3562cd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c70929-e564-442c-ae26-8168e11a8a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca73a7-7a22-442a-893a-9a0980f07552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4574d2c3-274d-4376-91c4-aa911d9cc5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "972fcdc2-f330-474f-83ce-58867a185143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a77ec1-f758-492d-8bc9-7819c45bd985",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38aca9a-f909-48d0-bc23-46297eb40f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7800f0e-683c-4337-a962-4009c6a6d50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2db0d0-a005-43c2-b962-133482e43d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a757b55-0cd0-447a-af59-e3a5648d5eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a7e094-fb1c-47c7-814b-ef446521f0f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b01467b-9a35-4330-865d-1cd9c19419bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d756fd-27ac-4516-bc52-0052142aea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3571f0f-f0cb-4b81-9c64-bc71b6369980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4616d974-66c7-4b16-8f7a-eee687df486c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88813b51-53e4-4278-a522-058a584f8ddb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565dbd0d-9dd9-4b78-9d85-cd82808f6104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b6ccb7-afc8-4c3c-a5fc-da56eca9b31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2724b1-62ca-4470-957c-a1acb2acd69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb34764-53bb-449a-a638-4611125cadd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db98cea7-9b4a-4ba5-9cfa-eabdfa4ff5fa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d313388f-d85b-4019-a185-796d0812504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6301374-ea69-4c17-b582-18e78a07492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b41085-40fb-43e6-9164-146df232ac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40de353f-29a1-467c-8551-6afe510964a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfd0329-de56-48c6-868f-3e5ac72fc846",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb7c03-f96d-4df5-b543-96818449735e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f84f66-6c8e-4bf0-87e0-cca2ac3325eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811cc3e7-d7d2-467c-af9a-fbc2dd5db744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "505886db-2bb9-434e-af25-ff057ce602dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac945ef-ee3b-4cc4-931a-ccfa7a52a5db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cad4b25-2c12-4b49-9016-ee4aa629b35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcd300f-6b6d-41bc-9174-14a4e2243670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5a0987-4e15-4160-9649-a9ddd60e392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6382fa5-a785-455b-afff-bfffe5efb632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e4e792-0cdc-4426-ab54-105dda1c5917",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7196e9-e369-4ca9-b2c2-3d5ed4c49d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae6dfbf-fdbf-4408-bef2-b39ec4c085ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3ea526-f8ed-4457-a035-ff82acbe4c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2a5d0-9738-4afa-87aa-a783b8870c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d113fd-8ec5-40f2-8c44-88c14bd2a130",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9594ca3c-af40-4e9c-bdcd-cbb5003d0b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4171bbd-922f-4c00-97bd-70e97db2e6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc78ad58-6f84-4120-841d-7729c29d568f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c91094-5fa2-4545-a5b9-d26464887f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b69dc4-f614-4e5f-93e6-3c8ef8c32cb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00ba998-5788-47de-84e8-3a5b80556697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf11f31b-f12c-404c-8e40-b7c75674da45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fd1b0b-08d6-44fb-bdbd-3ccf264b4f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1515cb4-a995-4089-bd43-f41398d0172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af641d8-67a6-4d59-b722-cfae4d229ec1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd8667a-3738-4a89-b81f-c9f45ed0a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec4e9ba-a66c-41b7-973e-003802acd7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb3aa23-b498-4293-b0f7-e354a6ceda86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1754b390-744f-4dc5-ac52-1505d89086fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fe8e3c-e4ab-47a3-9082-e366629cbb44",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a033fb-5f7b-4743-922c-8bee138338ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4532ba56-bbca-4fe2-9386-4822ad700c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054f756-7033-40d9-adbc-49a055ce3ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fd247f42-e286-4a76-a779-c177f8d596fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10a0e1c-2ada-44ce-b637-7c241d59bc57",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc48abbd-65c0-4889-b18c-2973b330c4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc935d85-55d5-43cb-82eb-b57715ceafcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15483cd9-89ed-4d0b-af42-017e7709e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "642b5e79-2edc-4612-94a0-df958354934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91f3f33-e796-4ae5-a1be-3a2e9b3a1a31",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7792fb-3a6f-4ca6-8d95-51d72d9164ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b50666-2852-477f-8c81-af46b4255529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1259a8a3-1db6-4a19-8300-72452d6e70d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db2e7d71-474e-464c-9e01-6a0733b5b26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429e3b67-22b1-4be4-9cfd-37303c673b32",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d113a251-a09b-447f-8271-53c42d967f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e71184-a2cf-42dd-b71d-ffc64269aa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ee6b6-3d3a-44a5-b5c6-834f5172acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae75b641-8cf9-48e0-bcd8-1d9fc4a59f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5435b3-df8e-4edc-8240-5c26f4725c8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2cfeae-9398-46f4-a2af-cd47b1ebd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d6283d-8e0b-4c98-a4bb-ba556c53fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd61a614-f22f-48c5-82da-c26a0504a17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1efc70-c85e-4a6f-94c7-be5f0cd85eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf97e04-f8ad-4a15-a44b-92722de6cb2a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29546d5a-2325-4f2e-960a-4547058b7ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f62630-35e0-41b0-91b0-ed996c275cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84740bea-0c0c-4a06-92d6-0eb5d0d563e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0925999f-1b6a-467c-87eb-ad47e559e61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5031bc-2134-449c-a97f-bca3eb001ae2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85075b75-5bfa-4138-8989-96f2e2a2b76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a1f3a5-3863-4eb7-afd4-2e1bd297be7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa0067-7c3e-41d9-9fab-cda354967bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05419d5f-0de7-4139-b7dc-49005ecfd93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb67cf88-5802-4749-924b-e7d216649e43",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a9a27c-9326-4193-a94c-8e8c2d146844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47f0bd5-7dd1-4075-90c3-e0142c9635b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2241cf28-2747-40dd-98f8-06c9d734d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5113caf9-620b-4813-92a2-3969657e8b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bdfc82-cf27-4985-9d9b-a7016debc8b6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f569a18-d4e7-4543-a6d8-ba05d0bde20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e20bab0-aba9-40f5-a50a-177ec903f889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3493711-e82c-4795-bf52-7ec2200fdced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a25d383-384b-4bfd-92aa-4137ce30d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561cfe0e-551f-45a3-8b1b-f31e02d9fdf8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953b5a82-e4df-4b7c-af63-2933041f476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb34b11-fe47-4f99-99da-7b03ca604ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7407785-c4d5-4d79-8a54-217b8819d677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddbdaba-2022-49f4-acff-7053ad15c518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df67a18b-16fd-42f7-aaac-200504772260",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cecf5bc-d729-42f7-b176-c9db176cc912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaf269b-5ede-4430-946c-5a4866d5711c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a03528d-b923-41fe-88b1-b30cf00c192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6710190a-cc28-4a7e-908a-1685a9a344d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5f11c3-6dab-4642-97f9-01c9e90fa24f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb48cae7-59ec-45c2-8fd5-15c1d323d226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b48ceec-028b-474e-9d11-92a29514887e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b015f7c-611e-4450-9ed2-7c6b4ad2392c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42fb371d-1082-43c4-bd9d-b6a80bd18547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca33bc63-4de0-4fb6-832d-950722fccac9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fbb1eb-1c4f-4fb5-b7d3-6e89b6d67026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59356329-8498-4333-89bf-729551781e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2842878-b220-4809-96a1-39a66709cda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdc4acb-9327-4e1e-898f-feaeb3b534e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b351d35-3159-4572-b06b-0962024f6194",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1e46a9-a23f-4859-be19-df016d9b3311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a0867d-d957-401a-aa62-532017a6767e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96030ac-6821-4237-a43d-60d8429b47d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af5f8a6-0f54-45c1-86c3-8cb89e9db750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1805fc-af3a-4524-a085-0e64c3c0fadb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e39582-0885-4a03-8d7c-350125e3ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7de971b-8cc6-4623-a8ab-a79fdd3117bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1ac3e2-ec65-4878-9ded-a078b6cb071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "128cc443-d9b2-4a8b-8528-08b16c09ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54df2e-274a-46a0-816b-16cd52bad03d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd2662-88bf-4317-b1c3-f4138d9c710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8a9387-2218-4c75-877c-562809f0cbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83a98b-8d7c-4956-8c8c-2922ef860dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af2ef888-04d0-46a2-b335-90f0ecee876a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca5524-d092-44a8-8a2c-af2725c45a49",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4c8cbb-701f-40cb-9f93-1865c3b6ee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f99baf9-7df5-4b67-ae8b-07f94771155c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c218fe43-0e7e-45d5-8a7d-76af081a107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "041ae5fa-30ed-45bf-8506-02e3ffd8294d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fb228e-ac3c-441a-9fbf-f54713923d5d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddf0030-9561-481f-a174-93d8cc65c85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd4fd01-4f2f-4e11-8065-7bcf14bea794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edb7185-651b-4773-a7b8-c5c83ad9e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02df5765-8c29-4c7f-a974-bb070dd95de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f64d19f-b5cc-40d9-9371-21a9dbb84228",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e545f8b-6854-444b-8bad-f342a5d193cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd73057-1191-4ce0-9598-63e5af2a6607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd871eb7-3f04-4146-9831-71a995346d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "687b190a-4ffb-4aae-a193-72b8c6fbaf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce9effa-96cb-411a-81e2-08af82243a48",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f6e729-9472-490b-908f-9d44eef183dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a2a8ec-10ec-422b-bfc0-a082cb6ab53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601510c7-472b-450f-be28-fddee9040fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a97aae-ce00-4606-9796-1a382201f7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ac3677-f3bc-4f90-b689-eb3e65f2a0b8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a1b106-db8d-4d66-9b3a-f7b4e07a0cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363e66fc-f8bc-4736-9e13-3e08302d26f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb21db9-dbe1-47d8-807d-d4888aa0e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "046c82c5-a926-4756-952b-e83eed41690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4db1e4-07a8-4551-aed3-0c0fe7b2e64e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904c0ea9-4f56-41ad-b32e-dc161a080400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628fc447-bc3a-4635-bc25-ffc436ff564a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c646df-b0de-41fc-b84a-9c09986f0b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0f6f8e-c378-4b76-a1c6-f122782fc7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b573854e-6967-41f7-b3e3-ce6adcaca05c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a96c08a-5a87-42e6-b718-65ed55980c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88826549-8205-4c1d-9378-032250baed79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3588413c-a8b7-44af-8513-71156c28a8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e08dda1-1b4d-4da8-a974-6214d00d5056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5829c2-cce5-4a62-8662-3c38d38ff22c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdecdf8-cf23-46fc-88e0-fce6d61aa9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc9b396-56e8-4c1a-b469-509653b69a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df17ed-168e-4e2d-931f-1f237da83e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "90eca725-bc89-4c0c-ba11-82e80b319a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e7468c-0b48-47be-84ce-b2e48ab89972",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f368ba5-994f-4381-844b-20ca08188df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9579809-de2f-45d1-aac0-bc0237aacc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ba459-c84c-470a-b2ba-d1252a1ab591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dedbe974-f2ae-4b23-ad1a-f187211b5561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbbe4cf-199b-48ec-ae18-88d4bc74b4a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080ec94b-6343-4beb-8f1e-2a6048b85d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff3af14-fc7b-4b3c-b6ef-f93661ddeafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df70f4-840d-4e92-ad52-378f1eff26f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6631b7eb-40fa-4438-a36c-c3d3d188bcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089150a6-6a97-4c57-892c-a20f5715dc8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484e9130-c447-4b0b-afff-8ff8afe6368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992c4b49-01c2-447c-b92b-5d6464037b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc337f-6dbd-4246-843c-cd92b822a6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0cb664-8970-47e1-8cb5-da46d096f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0383601-6eca-4757-af77-fafab5b6c5c2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd73cec-7399-4e38-a50d-cf7df0d7bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a805afed-9c00-4662-a67a-b46b5a6e765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcede2f1-82a3-4d51-8e78-115a1c78508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "255ff2b2-f75e-4116-b339-d91f1a5ccd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123148c8-c66e-43d8-b26c-3c87d883111d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bf8697-f102-4264-8b3a-4b5a36758058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f434e8-8d5c-4f6d-93b3-62fee459a264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e434e41-6685-4f94-aa12-eee6010e9c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c1341c-3051-4932-a6b6-dec0d8ca671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9112c8ac-6e7d-47ab-abe7-7d4761f37377",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc547e-196b-4986-832b-a27908aa9f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ca6f89-b24f-4c0d-b271-0be0701570b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a9ef8b-70ec-459a-a146-5a94105f2033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7961cb-f5ba-4ec5-ae53-b58bab254ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae2ace3-02bf-44bc-920f-bbe5563b4441",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2e5198-3766-41d7-9df9-4149845a78d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9639aa7-d107-47ad-97dc-8803c0a3d4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df62558c-bda3-4843-8e36-399d9790a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07009a0c-5efe-4f44-a1dd-370ec64b01f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dabe65-33fc-4183-a37c-68bfc7babd53",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7892f74c-5475-4c1f-bb12-5a1aca47a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdedd1a-58bf-4bbe-a3fd-fbd14ad8ff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc127b7-1447-43a5-adca-9f7e989c64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f21e592f-892f-4a21-9a3e-680f18e471e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9d5432-d357-4e1e-be8c-6e0cb585412b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf5bcca-b974-4c53-918d-53ad1ba6b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bd9b6b-b096-4fa6-b234-9c21c54726a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d417ce-8b1d-40a3-8947-4535e989b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6915d2-60b3-4c3d-b725-7f7ab9e5e4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8dcd35-a532-4fbf-8bb8-b950438eff5e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc0647-78cf-48ad-b912-ad59be39cdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6942b379-5af5-45d5-932c-026e65c53932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fe3419-667b-4ffb-9cc3-ca9788db8392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "291f636b-5288-4222-a2f1-63557a063dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50f159b-5f1d-400e-8751-985e55c221b1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3e87f-fbf7-40d6-bd04-81fbb7c5969e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dac19e-d30b-48f7-8764-cdea48dddcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64728076-5682-429a-8f2a-33d50bf16b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "446b1098-6c91-42d6-81b8-665cfc87c087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5c0b1e-263d-4c3c-b0a8-bc1d7774fcf0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b2c7f-15c9-4a71-ac51-917f0697437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b66243a-e42d-49ea-a94c-6f20819c4085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e34b2e-ff3f-43f7-9cbe-bd2c1fcfe681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3579b179-91ef-4adb-a336-230e53d8603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9b694a-caec-4d19-86a0-2333ce652b35",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87a59f3-2193-476a-8bad-d6dc67f11293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a85d6f-5be8-4459-88bf-8dc15472cae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b7fdd-9ec6-4e0e-ad0a-98b13305bc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee619ea-f19a-43d5-a382-aeb2d894d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a7533-a6ca-485d-a248-dbfd10a80c26",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d251bfe9-8e23-4f2d-b6e7-6818969bebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b95fa18-5c13-4a1c-b8ef-f9ba1415b977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2812b9-de17-4efd-81bc-bfec5068e372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19985e7-ad10-4e3f-989d-1100c11d782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546d11b1-aa32-437d-a99e-5957b8d9e3bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1de58cb-e68a-4ec4-a49f-e7653e4a3fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320f995b-97ba-4f14-b4cd-6e5c460522c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa0a7b-41c9-43c1-9707-d66f5739fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2d1824-c451-4956-99ea-45eaf4c592f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36082f0d-d00c-42f9-bd45-95b29f5eebfe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e027ada-ebe8-408c-a405-bfdc1aeb84d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab19a551-6ed7-4f62-8867-840c4401ba26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89364b94-7d25-458d-b056-9805a31daa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64b1b03a-6fc5-4629-8d5e-8c9b1d38109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ab4de-d6d8-433c-b0b6-af43d03d1513",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dec6300-638f-4942-bd85-57aeead5f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897bfdc5-6d79-47fa-a3c3-0801994b4ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63429c8b-83eb-4ef6-85e3-ed088ab90067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b51cf4c4-cb1d-4d63-b782-51675b0f0981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623be50f-c669-4c93-b4d3-96846045ff61",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ef6739-c244-49a2-9d2c-ae6edfe6a075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d598233-456b-4bc1-9a11-014d29c3b104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55a1644-f6fa-4209-8918-1fb313d0fdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a4ba1c-3fd7-4722-9431-42b422c1a270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9eb4dd-00e0-4d4b-8a6c-688dd2a05b2c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb78c800-f0b1-491e-ada4-ea21e2fac5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f4481f-561a-41c9-acdb-5eed0a5ae785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b43634-fdc0-4bfc-aef7-89fbd6095e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6544a9b-9295-4364-8311-ec79750aa31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85097483-edb6-450c-8fcc-4f62a19c6fc5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05658462-62c7-45db-b3da-6a232a263fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cca827-6ac6-44fa-b653-9325035c774d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ce6b7-eb85-490a-a4b9-2a99c429e528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eebfb7f-021d-472f-8e1e-f078bad0b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae90437-548d-4137-ba34-fb83fad57b6d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453254e-2067-458f-8271-2f60e89c2634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c660d2-92d4-4dd1-9b9a-b9024dac6815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffb12cd-e946-4bbe-a1c8-217d6dbc0fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d77154df-cc99-472b-9dad-2e7b6123a040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bad1ac-c2d6-4921-b289-92f6b37bea87",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417f91d0-c5eb-4718-9e44-f0965fa7967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da5821-d689-470d-a519-8bab35014a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8f0238-cf72-4177-9225-e138d19e7a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35afa85b-701c-45b6-b94a-3cb7cc497563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b760f2f9-e2aa-46a4-ab3d-f19e671d0ba9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fccb255-5ee6-4fb9-ae6f-914db45df340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01e77a7-929c-4ce0-8db8-c432c1a2b1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90cf9c6-54c3-4d75-a9a7-cda16186f989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d12a228f-9b63-44f4-b32e-38700e0b7eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8b8a50-4d0c-4f36-83e3-08a399dd8bd1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28628b26-145f-48f9-bd8b-6f99ce20f3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe990375-be28-4a81-abcc-8bf745a5eae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf1d773-74e9-4c7b-87af-2d3563440562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f90759-1b24-45ab-9883-17ddf4d29907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d5cd56-b09b-4f14-b72c-5954bd3ead7e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19ad478-f1b9-40fb-9323-c4ddb15d5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0920d5-8c01-4da4-abe7-3a533a60416a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede0ac9c-5722-48ca-b7f2-59d5a4beebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed93eb03-76f0-46a5-a260-d191ef6539ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d9fb0-96fc-4acb-8bec-9794bc313077",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ef488-c6b6-410f-8504-7ddab9c2abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c095d1-1d2a-4e17-be7f-19cd033298a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b3ea7e-f620-425e-847c-6a8d416c44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa5fb6c-d979-40a4-b138-cd48f504b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83ad3e3-311b-4b14-a29d-06ca8b4b01d7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f77db4-0a13-46e2-9ab9-1a70cd9b171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0f942c-03e6-4583-ab0f-ede7d97fee7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965b2c49-9852-4cd4-a68d-5dec150da036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc4d871-cd0b-4959-b2cc-066389de626f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2de3bf-a9a8-449f-a94e-5e6dbc1d5144",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c0bab3-6b61-46da-9b3d-b97064fc4baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1b2871-b252-41d2-94a7-691e23380b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d7cc91-e879-4e5e-98bb-401436e7ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1804f20e-67d3-402d-8f29-5172d2acf1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40060765-3af4-45dd-b029-9af3b4a8b427",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68d21d8-ba75-422e-a875-f50ef431cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710311df-3070-4523-81da-b20083b8673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8705f362-a1e6-43e5-92c4-23f59f9955d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "035deac4-8364-4927-8b7f-4032e7b7608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bcc6bc-1265-4900-b5a2-42e6e35e30d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ae3d8-dc68-4a1e-b652-ea291f300ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b3e676-1d69-454f-aa3c-215f89dcec49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91491722-94da-414c-a57d-af8ba57d0275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc32f94-7989-44de-be2c-6c7a9a391626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d7b9a7-774e-48ea-9586-9b048f5d6d95",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b850f4d-a17f-4087-957e-1d500a7697f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3814a9-aed6-4d6c-bd62-2b0a6274e05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b72c3d-18d1-43d9-b1da-eb8519c46a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f443aa7-c32d-4df4-878e-8ef82a37b3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41691be3-82c6-4fd0-93fd-b35ad5ac1af6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb25798-9cdb-4996-ade1-b7a34d459b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616d7561-887f-4c91-8a80-3e49a9362aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29afeef5-dece-4eff-bacd-f591227202b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a325c8-dd12-421b-adff-a7d80261da1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dbf0c8-7893-434c-9a8a-394881be5fed",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3694ff-7d42-466f-a96b-5a46f2eef293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882abf2f-5809-47f3-9040-16aff3551e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5b5df6-9c3b-470b-8a6a-3b94c1f89286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e77418a-ac9b-43cc-b13a-6f9b2390220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa0d310-d355-4a0d-8b0c-97b8d63aa52e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84acef4-dbe7-40af-99cd-537e56bdf4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7954dff9-cf5b-4779-bcf4-945acb950e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca793cf-a6c3-4827-ba16-2f6b5f6bd813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "927d642d-5d98-4e3f-970c-32df9ec14798"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4bab53f5-4613-400e-8feb-f55bc1035617",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1510ac0b-1a9c-45ac-b86f-2de2b54a2c56",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7be6c18-b33c-4957-babe-a482f70bc73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae97bc6-5b0d-4d42-afdf-9f85f4f49ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b01e82a-49f1-4a7f-9a45-c66aa627a011",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1de3626-aa00-4cba-ade9-8543cf1b99f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02f730bd-6373-4f85-88cb-a9f277e07499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92b84a72-b594-4bce-b86a-17acd517aa3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3b869fe-065b-4691-8f54-37b160eaf346",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62760997-5887-4ad6-ad25-8f05cb96f70a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8e07290-84c2-40e0-94b2-6c4fa81dc549",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cfc4762-4eb3-4420-99f9-101b02ddde1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "549d1ef7-cac0-4b9d-8d2e-d413d6908d9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "348bbd26-6a7f-4d64-bf4c-b27351f300e4"
                }
              }
            ]
          },
          {
            "id": "03a9600e-1087-4bf4-9c56-5fa9e0c11c17",
            "name": "Positive Testing",
            "item": [
              {
                "id": "606f5726-3ae0-446d-b8fb-cdd813864af1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "96e0f570-35bd-49d0-8da0-5eee4d208c3a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b1204e-40d8-4d11-8cdd-43d7cf56747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e86f69a-1941-4c6d-bd35-d065a0a641c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9edaa7-c4ae-4dcc-82a4-9e2c990b9a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1cf601-00d4-43b4-bfdc-f77232dd2d0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3c112e9-44bd-4696-8999-be79380e5387",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf38c06e-3471-45a4-b7ea-5c75aa456a78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3214f4f1-54b0-402f-9b33-7f6b2661c33d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1e7c9ea-a673-4337-85da-24c78753cad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "572c8456-7352-4dca-b665-284df82f9078"
                    }
                  }
                ]
              },
              {
                "id": "597306ca-917c-49ff-8938-8d56719e4342",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cbaa412-8858-422f-b402-c629aeaca7bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c65c0943-a804-4c9a-b1e7-b2f3b1ce0ada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98a202a1-4d81-4814-b8fe-8586fb508d05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31720639-0474-446f-b9de-53bbf1b97a39"
                    }
                  }
                ]
              },
              {
                "id": "8d03aa17-a919-43bd-8dad-16ddd424ea3c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dd538d5-3ec1-4694-92de-4897f8a45a8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1715786-d93d-4d25-af49-fef905fd8acc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bbc6d1b-393f-470e-9f27-9de34babeccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9efca499-1e85-4424-bc9c-3d3c2f0f1dd7"
                    }
                  }
                ]
              },
              {
                "id": "e345ada8-ea9c-44d9-b9e3-f8b6ea277581",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ad6342d-f22c-4564-b048-18a0da7693d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07c9a6cc-4699-4d39-9cca-bbd8f4a1a81c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d356bf7c-2564-4f59-b304-2c18ea0a29ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2fd478c-833f-41ec-917c-0e81c5b82d90"
                    }
                  }
                ]
              },
              {
                "id": "375ae45f-1f9c-4204-aa1f-b53f3675c45a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3711295d-0c16-45b2-8885-d2da9e8f091c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5dee5b82-e085-43be-9975-8d9e39541e13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fc62e19-815a-431a-953f-8c8b99482b22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24c29938-2294-4aae-b14a-00df433c09a9"
                    }
                  }
                ]
              },
              {
                "id": "9ab9f5bf-647c-456b-ad2f-d7d1a1616765",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1711b9f5-8924-421f-b73b-ac66920336dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec51f7b-9475-4c43-9bba-feeb4ae61701"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28bc9d0f-0094-4873-93ea-1d4832b00f95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54941f3d-e94d-46c6-847b-4771efafb972"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5e08492-dfe5-417a-90e4-378d2bad4e20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3491e21-dad9-408f-8e66-5e05e15b4cf5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66523d19-dae2-49f3-bba4-d9730b66c995",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e35c7e9f-1e84-41eb-86b7-aaf254f7b761"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca0eef11-fdcf-4bfa-a608-d142f36aaa08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2a1076e-f7c1-4d92-aaa8-d43778f569cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40790fc1-0bcf-4142-b893-895bb3083f08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9905281e-dfdd-4136-9dd9-0bd12f77eb38"
            }
          }
        ]
      },
      {
        "id": "648d8014-7587-4f84-867a-e48b66b95642",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2ba194fb-8a03-45dc-8bc6-7b4631327c4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5a1b50c-8ce3-4d6d-8152-96774b0ad2dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a5c5dc8-5da2-463c-ac8a-ffb55ebbfc33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faab0d5-c6ef-41b5-ab48-e422726f15d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcfe2d0-547d-4746-aa77-de1ed6c481c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935d2552-35ee-42b8-ad8c-09eaf25c9a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33afbcf-860e-455d-b320-93b79c14e463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221a6f23-8751-435e-a90b-f557f1d98e0f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8935e3c-319f-460c-a70b-3cb9ade5de66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0892c7b-8aeb-42d3-aa2d-ca95a5a467a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825ee01-9151-4dc2-93ee-74918a793eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce53a1c-5101-45bf-a50c-c4e21577e809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9b589a-de8f-4ee5-96b8-892258a63acc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218bf4ef-1d51-4404-bcf2-3a16b4acd255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707a49af-9d9b-4723-bba2-f8c7cb3950f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a5e0a-93ed-46ad-a3df-99ca98c6ec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "734edaa8-c944-49ea-9c0e-fff434cc1ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd0a566-7f41-4908-ac6b-70c9a70ec74b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5275050f-e670-4c65-a2df-d72d62919496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaedb80-1b59-43ac-a228-64868629dec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46808d19-7fe8-4f08-acfe-697f7a2d8a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fde423-5233-416e-a36e-aa6413f74589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343977e8-9ad0-4454-a42a-1a254071ce06",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5682c1-ffe2-41a1-b1f8-4064521fabd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77faac78-ddc8-4e8e-a1aa-4fcf4f053b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c6ddb-af7f-44ee-ac2b-b5cb1aef2a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8447243-2813-4bb8-9f3b-5818ef78a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6def94b3-a461-473f-afa4-84dfed22d2fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8541382c-d1db-43e9-8fc1-fa06fdb8ca6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686a860e-ee06-42e5-9744-f271d96fa8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2cc5e9-650a-4b5f-a8f1-efe9f7a7cea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "342dce2e-0725-4d23-b5c0-d9db210ce415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f69b1-ddf5-424d-94fa-0a337c1a097c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22326fc0-d4bc-4048-9486-65ce379aac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80fbbb3-904e-460e-8ff6-2f934e80572c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55f87e7-3b23-498a-9bda-107a83773641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60ec72b-082b-4754-84b2-898b91b37216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340bb78e-3435-4a4b-ac39-1b70bb9d2325",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd8803d-8726-4223-879e-f8f444fd1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b785fdc8-76bb-48c6-82fb-26711e843788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63cd51a-de5d-43c3-a7b2-86bdfd21e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ce8e1f-3689-412e-991f-7766de23d480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c25126-e802-4725-aea3-e0d1cec2b8ac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc5792-109a-452d-a680-680c39fbd03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5784116-f1a0-444d-940e-481c8758e2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d443cecc-28a3-4d64-8be6-de8b90c6bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebef13c-bce5-49b0-9690-c5c1adaf301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bb9cf4-bf3c-4967-8261-1e1d2fafbc02",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077d78ad-7d71-4411-bd0d-cad88d444f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01544bab-e147-48e5-b1e6-61ca8dc6b422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b919f793-c02d-4e3c-9352-7adcb589969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3d7da2-4bd1-4104-b7a3-0fe6c25fbc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e9258-2418-4554-9e8d-090b3bdbb096",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ab625-6d1e-4899-be01-81b59cb3ad32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96be5007-ba4f-40cc-8929-a5bc1cd9faa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88555788-bf1c-46cd-8f63-b9ff209e483a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "de2c6f7d-e526-4a4e-a34b-81128f527e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319e9ec0-3ac2-4563-9b34-04aa87bda22d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1815ee8f-7bcd-4a45-9fb0-baf9fa2943e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6bab3c-efee-4fd1-8cad-dfaad86c3ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec84ce92-72e5-461d-85cc-c2986d744371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c3d502-a47d-4138-b5f6-e737f97f3739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851cf568-54a1-41cb-a708-5b695c5bb2e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e008c36-5930-4ddf-b681-ad6c5e0bd37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57d172b-1dd7-4128-900f-98b2119cfceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f40f2e3-6e99-4062-bd5a-ff9c83bff799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05df7776-2a25-414b-a84c-86ce1fa2311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16977ae8-d2ec-4486-abc0-3da7be700da9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea38c326-1592-4b9c-9443-635ad6edd6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df09b29-4da6-4066-86e6-a752ad20dfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a237a6-2ff2-45d8-9972-758ca7e7ddd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2ef269-6474-47e1-860a-ffe8a011ff2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3eeabc-5cb2-4fba-9fc2-6e978cb5e8f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8c9f82-668d-4658-8c84-0e2a066486b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede842e-8d3e-48b1-acf7-44bcc4f11ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee240fd3-734c-499f-859e-ece953d34ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a0252b-4160-4fa3-99c6-5fb39af32a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f532071-e20b-490d-ad70-18f7283f7bd6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0cad45-daa0-45cf-887c-b4b8b24ea28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7fbab1-045d-4fd8-bd92-15c8330414bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2696b7cf-367c-4944-bbd9-3e185263b664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84590e-c162-404a-8d76-acbbcd2e9d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d94042-4414-4ec9-ad5b-c2b8b234fbd9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726149a6-0bec-43e9-acc0-72b07e7ee30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92541346-e684-4c5b-9dfa-a50f6eb2b562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df354f3-6a7c-4059-ac3b-7bcb7b8e60f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc90f96-3a0b-461a-b7a6-bef1e5625a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef29040-2c12-44ff-ad1b-1adeac66a03f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f843278-07d0-42a6-a3fd-dbca60368aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd9fa89-bcca-430f-8fba-6d1bc0890894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2968ce5-2125-42f5-b84a-b2c354a34735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9f0589-7b8c-476d-a337-711715f6dd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a01a12-aba0-4259-83c6-52b49f0e6479",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81298bc-f461-47e1-a713-2cf81d61a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d228f7c5-9838-43f4-8c4e-f7483149f881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31715167-1ce0-4dd2-977e-5b895eaded8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "666ca8db-ad8b-4844-9fdc-fc6034ffee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16613505-fc22-400a-8f11-dfd7daf0f22a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dce935-96f5-4c80-a380-27a75a9534ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82aca0c-9a3c-410c-a46e-995941bd482f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d543c6-9bac-450f-a216-789442238126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab12998-4e17-4722-b9f3-e3fcf59893c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8122505-a6a1-4510-8268-830de02067db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b0f6c1-30ec-4859-bb71-63237d55ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96896d8f-e2bd-4383-b5b6-728a63bda630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80ea144-9bb7-403a-b47c-b23d9390dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d519f253-686d-4070-a915-728c06dd3eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cc0efd-3625-46ae-a406-2696c13c179e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e35ece-40a7-484e-afc4-2f96e8ce2bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a994b61d-1c39-44b7-9a5a-41128b3b1509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d46850-2f1b-416d-8bcf-ebb352fb56e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49622fd-e020-41cf-ba72-6f39a0fd8808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e00e1d-2304-465f-8d43-9ace06951d63",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fda48e5-d0f0-451e-86ca-d89231d69edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2d15fa-e926-46cd-9d6f-3992788209d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c682178-7128-48d1-9631-362d92018540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb51b0f-8426-4303-b6e7-ec29adbd5250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e240c06e-6ac0-48fc-8f8f-00273cebe850",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa27e07f-9bfa-4a83-91cc-a49cc2012192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b84461-214d-49f1-8972-18dd4dd1cb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710ca7aa-c26f-4fde-957d-0c5a6288dbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f1d1b3-9ed9-425e-87bb-241ba6716cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef2e0c8-12c5-431c-844d-cccc85b2846b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eef7121-545a-453a-81f3-b4e2fd69e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbf7190-9eb9-4f02-aab1-4437b1d3565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d05eb6-dbcd-446f-b720-a4e1051893ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfd1cc8-980b-4aa4-af20-77cf3a0aec64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aaf418-12a9-4a7b-83bb-da0cedba41e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77131ba-7647-40f3-8e0d-6d5a7f43f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263e1edd-133c-4df4-ae33-9ac317004729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae34393-6c61-4b3e-989d-1263a6d752d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169f77de-ad99-4c03-ae70-05d5baf54ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0f0748-96b2-4dd5-aaf2-6a338b625b63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb911965-dd2d-4964-966f-daa5942fd228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921a3750-08ca-436e-ac62-6fe5931a5ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532060ff-abd5-4435-b1ee-364b00d4645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e9e5cf-c618-42ef-a6ab-0e95ae576178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413a75c8-ab16-417b-9d40-24c2e7b36a92",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7b0683-9bcf-4b75-862a-529935fb8477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b4a42b-96f3-4d9a-ab4a-62a926c097be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a8f578-ab3c-45a1-b651-8a15547d4418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43766de-f039-4ec4-b4d8-ff5bd3c125a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e12cb5-a03f-4b33-bfd0-0a53b5d1bc35",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8ddf8d-3239-4da0-b7be-be7123f9d426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd3fc2d-9b25-4c92-a030-d821c66ce061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a7999-401b-449e-be4d-d5565befb973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878963ad-ef53-4803-8ea7-eec4efde36d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eb209f-02b1-44d6-add3-4f118ebca967",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71393aec-c4b3-46e5-b4e3-ec4e942dbd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928708d1-3ffa-499f-a970-31a926049262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487b18e-b243-4e4d-bc3c-446e25bb831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe9e71b-0b56-40eb-b88c-5e9f1038a9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b07dab3-07f5-4157-beb8-2dfc4178e8d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e726722-f0c4-4cc5-9cf7-1dcc199232d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce184aba-5389-45a8-8764-8d781fcbd665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672811e3-e5bf-4ed7-8ab7-b5d2a96231f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22533829-2c2e-47c3-ae12-b2065a6e949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c2bcd7-5449-4c60-b79b-1dd5b1c23653",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f291a58a-24b9-4b71-a7d1-62f518b2c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52e5dc7-74ac-49e0-8181-faafb4960bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161a6c94-2ede-46e0-9291-858271c4c4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2a8a8d-6fde-4298-948e-74e2de361158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547acf72-addb-4aec-ace5-0602b845880e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215b7e86-c45c-4664-b44c-f0868f9f15ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d002f2d-04db-411d-877c-40bb39207507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d34921e-f8d9-4b4a-a5e2-98c6783352f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c39f406-b151-49f8-ad84-a0e76a89e47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c0b6e5-5e5d-4cd2-901e-d24329f96400",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036d2375-e3eb-4bc5-856a-b2ddfeec881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15c1729-a7f3-4969-b76b-a2e4c1c02c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee61dd6-d181-4ba6-b298-2f08f684e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e364b4d7-c538-4876-b5d5-336683ae57db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5d078b-9dfe-49e8-ae02-66f15025a8c0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a4111a-67e1-4e4c-8806-2bb80666e91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fea0dbf-04f4-4f49-a740-7641e92eefe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07418476-f121-4efb-8ae2-5230f8e8bd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685b2248-22a7-4ccb-a6d5-10036c5fa0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef48c4bc-11ac-4296-9311-6cc24397c631",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad19a99e-a3cc-45b0-9c3d-56b3fb39adb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47b09f5-9034-48e2-9853-20d04b1b4779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93f1d60-179c-4397-837f-26169ffb9033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9932e9-fa2e-44fb-a876-c0dc58520b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bed8d1-f2bc-477c-9daf-dfe787b71497",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557adcb9-cdb0-46e5-9ae3-05927711742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5222bbc4-3a05-4ae3-9ed9-eeca8e54b091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc2e19-c74b-4c14-b4ce-f02fa90d4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4514312-1730-4009-baac-8c4308494903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0daa8e84-4b69-44ba-af24-676dcca95020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17eb7821-1853-420b-951a-18d97873e205",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73ace02-5de2-40b5-81d8-c0bfa0175f89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53314e1c-e233-4e4d-80ee-03ed461cb21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2beeace-dff3-4a4a-9ab3-7bf32fa14f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10c6f60f-e5b6-49e4-9a1f-b73cf8324fc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a19309f-aeca-4b95-a59c-b283bd31fd46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6fb18dd-08b0-42bd-9be8-9ddbdb993278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa7eaf54-a835-4dbd-8eb1-3f37f2c606d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d688bac-6e51-403d-8ce7-11b079e895a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47c947ce-5d5e-4ff1-aca7-63cf99d763d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a69dc7bf-e9b4-41d2-bced-780e11d9a18d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d6e3f17-ec3c-49ae-8361-5645cb850103",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6a10829-9499-493e-897a-635da6508339"
            }
          }
        ]
      },
      {
        "id": "9c445d0b-7f2a-419e-b773-dfb19cc70b96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a6cb271-04d3-4922-bf7c-c0ab98315df2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aae439d9-7e6e-4dce-a63c-631b2591249a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c6c1c43-078e-4879-abc5-e7749899d5d8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba5ee8-7bcd-4acd-835b-ac37a5cd2b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797d70b9-c7e2-4eb2-bf91-2a24c350dc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5389cd-4bea-43df-817b-ea3a968b7461",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c7d36e-3098-4d3a-ade5-e9b114cd6d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44a945a-5fa4-4bac-bbdb-970a9fce6e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa1707a-e00a-49e9-9a58-423a0b650644",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69765259-5e64-48a8-8191-16e653f060c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a56d88-bff4-4896-b9b4-5808aa74ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e6f210-f4dc-4b88-a5ec-773fad5445d9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15861d6-bc8f-4123-8c14-dab587fc861c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6005c93c-37ae-4813-892f-2cd539c0f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa95ed3-5ef6-4eda-bf95-dbba11486049",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207c2fc-d36a-4a43-aa71-6de47f376dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e00efd-c641-4f23-bb55-eb0255d92e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9eb1c0-5318-4ba8-b353-c22768460f84",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfd61f2-a77b-4c79-8cbf-af1a260f465a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4d8e20-6cab-492c-baa5-f36525396a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bdadb1-9784-4e2d-a1b1-6c2f3d4db7ef",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f417e9-75b1-451a-82ac-f69330dd366e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9504daf7-a4df-4078-80d9-edd4c2f6ab99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0b6e6-2715-474f-a144-a093472a5f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56333eb-80fe-4654-b631-421b25eb8327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17826b-a11c-4d3e-850e-92f1f84db6b5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0582bd8-8619-4633-b21c-2ae8c805c4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddc4fee-f401-452b-b5d9-4a767b776233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e7eba7-293a-42ca-9bcf-87e4017a95e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b3eec1-02b9-4d68-a0bd-d5f5fcb71320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441d2042-8744-451c-96e1-803fa84a6c65",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6a3c29-27d5-48c4-9a7f-6eceef89c4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b949b809-854a-49f9-a7cf-35c2002a6c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba0ea91-797d-4ce2-ac79-37b7c92ce5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836c5b32-3ecd-421b-83fc-c888ce623839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625b3937-08c4-4df9-9d87-abdbb2a20905",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd96ea3-70a8-42d8-962e-fce4f8d34092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0257089e-fd31-4405-8d09-da7101a0bf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65835d23-cad6-4ecb-8ca2-8614a9698e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1144b534-0187-4380-9916-9659ef3ce69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d268ef00-743d-47f6-a86e-ab2618bdc15c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f541d-5392-4af9-afdd-6a3f221a75fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3746f7c-d384-4320-87a1-6333732437e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799c50db-b88d-47d4-9378-915d0428273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df33309-3953-4e01-878c-9e2e1cb0942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41e8f7-036f-490d-8368-32435352a1c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a754563a-bcb6-4a2d-beb4-d9753d13de52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1bb241-fff5-4db1-8683-f4580a28ed36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a25883-ffc0-4ac1-80a4-b6c423e4e0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350d7406-4a46-4b3f-94a4-ef5bf88bdc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55ed9ba-2bb9-4e21-8a79-b6f0b0102686",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2629b-109a-477a-8fe0-fbcad855bb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f990fb6c-2613-48f4-b6c5-46a531668d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837a9214-b5e8-4af3-a987-923215b8139f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4717af1-7875-4e41-97e4-283987963e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1a75b6-745d-4192-9c34-0ee5d0a663dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46062d9d-8c68-4728-9969-bb776422b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1caf2f39-ecb9-4926-9002-473c8d594e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325b029c-44b2-4d04-809d-e2bc82fd1ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96618cb9-bdea-4604-a1a9-ab5d68511a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666a63b1-3a58-4d1a-8f83-e416bc440124",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4506f7-6cae-48c0-9fbf-0c189ee0262a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e77613-8dcf-41b0-9269-99e4a48e0c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de57bb0-719a-4d94-869c-cca3bd4148fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382df118-a753-4b7b-adbb-2b908690b50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1dffea-6fc6-4a08-bc27-0b2c5c6a4bca",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52117666-4bd9-44ea-bc54-4f605024ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e524d111-633a-40db-ba32-2d74419f863e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429cd8a0-cf66-4939-8464-8d0b7e1fd411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e3ed7c-95c4-44b2-aa24-176181619963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832d35f4-7143-4221-99ad-7d9c6bce9e65",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb37401-4f1b-4859-afc1-b8ed0d70f160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43268d-092c-421f-811b-b7785bc01287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0e28d5-3648-415e-9931-17b76d813ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b430047e-2bc8-40b4-9f88-ddb9c3869c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ac5e6a-0290-4d9b-8e27-b0f598428ec4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a760bc2-96d2-4962-90b0-a3adc3b07e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a10a73e-cc53-4c1d-b604-dbf8640f789f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02058916-a880-4391-8395-7d9623df03f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f232eb2-61a8-4988-89c5-f700a2b9aba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f980ee9d-52cc-4afa-a280-6311fadbd72e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f06070-1c49-4c93-be9b-8c0178327e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b3ab0b-0bcc-4eb5-9947-f461399b57ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4c10eb-e352-4b9a-bafe-2a03898ce878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd293f29-21b5-4c6c-acd6-71f1990c7ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc4b9e6-0d65-48d6-86e7-c7bb4792b8e8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096d0eda-d345-40de-825e-a289e9548e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de2bf24-ec47-4edd-997c-1b52a38bad27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48547a93-2fac-4c5f-aabd-ed21e3542caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5853a840-cbd9-45a1-82ba-bd0212a8081d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a85101-af46-4df0-99ed-2a606a1bdba0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41cf717-2498-4705-bc1f-7135a3527a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fbe7be-e7e2-461c-9dee-6c1d3cc3192e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e23c94-ab2d-4d4a-969d-628ba1b64115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998a2123-f2c5-4c94-b1ea-271f8a3fab6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2034230-2c01-4ac1-ab53-d3a45a2a7fc8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e41f37-fc95-471b-8f9e-12ec5c67f485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe3d94d-f0f7-47d2-9b3e-ee33c9ebf933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028e18ae-c72c-4180-8067-a7b3fd4a7c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cad649-1927-489d-8c59-90c26e855942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8cc375-1479-4061-a214-e4e57e3f9c51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efec8db6-8276-4f14-8480-a166d04bdcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a152c6fd-4154-43f4-9d4c-2ee457ace8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48967472-4d61-42a1-a3f2-2295fbdf3b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d702b1-669c-4626-bd3a-10c43cfbd39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae02eab-64d2-41e4-9bc0-06ba864c954d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c005695c-33cc-45a0-86af-3d93633754ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16160566-ee12-4229-89d1-45f4741f0394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f5f11e-f9c9-4af1-967e-1a8471686290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e75569-15d1-4741-905c-7335f044793d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049dcff0-ed50-40f7-b6bc-f747351d6a9e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44960052-ec37-41ae-b88e-55f9b4240a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6756df07-c4b2-46ab-bc7a-9265d45ecec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b9033-499c-4ae1-84bd-fe374a69a3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d88a30c-1670-46bd-892a-8d8ee7c22e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd69d1a-8341-482f-86d2-9ce7e3ba807c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ce365-d057-4bc8-a35c-11b4b0c879e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a6848e-a354-4d0c-af70-bc562800293c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d265f-1f72-422b-8955-865ce9b59f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adbc034-6073-4d40-9a67-1788aa407339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5bb627-4446-4a75-91cb-bcab99ce6de9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f80b16-51ab-4216-b545-5c9a73ec2ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf16317-5836-4003-bdbb-f1ab6d3faa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f972e968-abe1-4e10-b826-8a00b6611243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4eab72-f49e-4df8-a97f-9341ce37ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c6eea-3954-41e7-8ef2-a823f9eaa280",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa555c-0896-4adb-b8d0-0d3f771fdd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa269d0-8b1f-4c77-bbb1-b2b72c2287ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2691e-fc95-42f8-aa7a-c973cfadf6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53c3707-9138-40c4-b9ce-2b7c761a07ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aba1626-6b26-40b9-83de-4694019a1fca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737413e3-146b-490f-85da-67eafc9f540e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de309db7-7577-46ba-8e6c-4411c73a8243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dcefc0-d01b-4dd0-b7b6-71525bf0243c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f596d5e-ec6d-469a-9c9b-3dbb11812995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27414b2-2866-4ce0-a571-3faaebc1013f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd23001-4d65-43ac-880d-4ecccf99daea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57aa92a1-3c79-4351-90b2-2eef24d0c265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d195b4-d32f-4780-a779-39afd1941a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdd1e63-cece-4d86-b29f-86184bb2c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f420f779-acb5-401f-951f-201cde574f55",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f81a6b0-f539-4277-ac46-9481dc293884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471433d2-01dd-48dd-94e0-577a1560be73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7ef6f-d41b-4b19-bec6-4a59f793f8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b3a615-192d-4522-9a34-a75066059e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d919b36e-45d2-466a-a17b-9117a7715c69",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718cdfcd-ec29-4cfe-b38e-b06073b6ce36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673337ba-a7ed-44ca-9679-be235f0c04d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ac873e-8756-4220-9d9a-536e488e0181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f155233a-7341-452b-86be-360706296c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca4175e-3385-4dfe-a324-4c8c316db772",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77651a5a-c67a-4173-b2c9-78aa3357ac52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f05651c-d947-4a24-8d90-f850ee118002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cc661-c304-41ae-b4cc-aa537769d825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee601e1-c2b9-4a0f-85d6-806ee4695532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28bd61f-53d5-4c2b-b915-9eba666a56a5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3904d2e3-69fb-412c-9fd4-9054671ecf38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6feadef-584d-490c-9b47-4350e085537a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b02fd4-c2c3-4ae9-9510-0f9931fb2e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c78953-c829-4b16-a5cd-65c53846dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfcbc69-0bb2-4346-aeda-56213b01eb51",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f57ea-340c-4dee-b166-e2140472ba6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21915766-dd2a-4949-bbd6-90da4fc3b93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad66d1c-8d96-4f65-8c3c-db89cc6dead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972f8d75-13b4-4ca6-8aa6-68d4b97c7803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7604d6cc-4c17-430f-879a-aa0d4dd8b7f7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec44d8e-d1de-488c-96e2-ff8cbd31e9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef2c6c2-a6b4-4eb8-a1dc-fe0587c4130f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cf9978-36de-4d76-9c6d-a6f70eef0dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3814a427-f19f-492c-be62-05defeec18f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6175d283-52ca-44f0-b33a-7a4eb3d0a805",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be83782-bc57-49e0-b1ad-09e860c4e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a166047-e775-4986-9758-855406bf7377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db7efdf-f227-4ae5-ad6a-e6ec390d32de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b339c-7a6d-4ad5-958a-26c12527270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8959c4c4-ff20-4efc-85a9-0673653e45cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1e8705-b69e-4dbd-8f0a-9817116bed12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a7e6ae-e012-4d85-9a25-77791d020d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81da11-2733-4ade-ade5-3be81b0e32af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2e18c7-b980-43c0-ac01-6a8777dca290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947ded4f-fdb6-4005-85f9-e85661a7f465",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc438ab9-26f5-4827-a2ec-907f854e2cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a311f040-5c00-4bff-bbd8-1115ab2a09d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a3cd35-2502-4b6a-84c4-eaf8be4e9df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703df2be-7b4a-44a9-859c-eaa596510a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51d3c7f-bdc1-43e1-9308-6907a6ec60ca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a600370d-9248-4a7b-b2bb-2c46bd588b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657adab7-56bc-4db0-9627-a00e0971866d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907983a-e3b3-48c2-8bfe-c235d78c1e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3453b3-a1dd-43ff-a9ad-cfaf7ac7e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f062f8b-5f23-4ce9-9728-225bd17bfbe6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87efc240-033d-47c7-bb87-76cf58f85829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52ce3a2-d3b8-4ec1-84d3-befac1b8312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09a7671-1e54-4150-9fed-00f74ffbfc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9861848-5122-4ad8-8000-7fc7f4c8c686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d8bed6-1d38-48b5-82ba-8e6814fb8adb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1696f7e-18bd-4bc8-997b-a3a8ccff0862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf570da-12aa-4020-91ca-27fb57d712c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cf6d0d-cb3f-4891-945c-ca552420d4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf0e234-b99c-4bb9-ad45-34b8d5ee8a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed1e931-74e0-49a8-bbd1-6b0092f7f2d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aed348f-a480-47c3-ac1c-c7bf2ccd05fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9856e8-93df-4e80-acee-55eb445704f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf3448e-a15a-4d1e-93ae-340393848462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55703db-0f14-45bd-a7d0-0a6622f03448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4660b0ba-92ba-4c02-8a19-f35bc51a512d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56760034-0e1d-42ca-8001-9d02c72b609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151dd42d-35b3-46ed-9031-190c85d94148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48492f6e-eb75-4af0-8297-4d051adbf9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb08e70-c23e-4a7e-86de-e0b08e7f01da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5d963c-5f64-4a31-b82d-83851fce1345",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180575cb-0b2d-4d09-8aba-a11b1c598700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9f5786-7de4-4324-9cb4-fa0537cc11f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1269640-c465-4c98-84ea-4014bda2430d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509615e9-d7a2-4f33-b36a-8ff20f892b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f7571f-3a85-4f5e-b879-5d66005cd728",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d919bda6-2042-4865-ba4b-12afc1feabf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca36ea79-a98e-4c8a-ae91-1dec0774f115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6110e3-ff58-42dd-8ec8-14906fbcb09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eb3f41-75a2-494d-8c4c-89ba77c64e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617e1729-561b-4747-a823-f88c72561806",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e88090-eada-43a0-8e43-fe71910a4557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af64be0b-2d6a-4f92-9a78-fa1074a9e96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83ae78-5220-4ba6-92e7-2742ed1614d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f88e7e4-1739-4e36-8937-78b4dc9e16f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e51ac5-67a2-459b-82e6-7572559e0f47",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0921008a-4498-4c44-be74-3de4b8db0336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454a4d4d-cb87-4f44-a33e-2eab4c2d0e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601cc552-1701-4281-8d14-c15f30200877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebd50cf-b818-4e3f-802b-8826f19e7f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd318b-e393-4ce3-9c9a-bd17a2f0fc52",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3474f9-f60c-4155-98ad-97a1115d9d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcf1c84-97e0-445b-bb05-3d4ad4e8325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bb18a-9741-44ad-8222-b53dab431d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b93825-e9f7-48ce-8630-1ff198650b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96125b3-2a85-47f5-af45-b891f77b20a2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a844f0-e712-4ae8-9e82-0503c419925f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2c7f4f-c645-43f5-8de4-865f3889f9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea00f62a-a703-4352-a90c-ed883b608bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6900b0b-b653-4b3a-81df-1a298d6c6a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5acf85-9a02-4015-8bc2-3dc2341cbad7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f992e1fd-ae5f-4603-a9ea-1c60acd8201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc32405-ee2c-4935-b3c6-1c9bbe12bf49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd76646f-f7a6-45cb-93eb-470b141d94e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6378c1-ba11-46d8-9a16-8f6764325a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35581934-34c9-4f50-9294-bfc50d51e55c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238abce7-5c24-4d84-93fa-f9210e7472ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0c460c-6302-4755-9856-c3d00d024dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b42e58-578a-47ce-8264-571258849eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5c2e4c-b2d1-41c0-9332-7aa502aca68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7820d066-8a2e-4a22-9891-329eeb00d696",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb30087-fac9-4dea-b9ee-2c10395b56ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96416d9a-9be0-4c46-8aae-e8d3a92b41a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd6b41-f37e-452b-9f3b-29206108e9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13ee951-a3b6-4f6c-b175-5cb5d6de50ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e811a2-a006-49df-b962-035c295b5e7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eafd950-5d4b-4f93-8bec-e89eb231202f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034ef2de-aae4-44df-9cba-24ad25bbd02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71dbe4-b6b1-4c8a-9564-35e628753239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3aae3b1-3835-4cb0-88b0-d3208fc89f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16aad5e-85f2-4c54-b09b-69f7aaa5d8ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b1aff9-7206-42f5-be68-06692175c302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57225aff-71cf-4259-ba25-c111fc87c189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31030562-406e-4566-8057-84fe847602ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71840855-bb93-415e-ad45-83a86bd037ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe8177c-4bd2-4d4a-9d95-96c76fcfc3f2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c043f-61a1-4e23-bf80-802c03879210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d0b97f-c3c3-4b9d-86d5-397d1ddd696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f35eb0a-30cd-46ef-8cd1-f0036a9e0a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1366ec4b-21fa-424c-9399-5b75b081019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b7829c-ef3d-48bb-961f-54aff2b598e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a994f1-30ad-49c2-bcbf-6d11f1fd1637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c336db-bb83-4849-ada4-c80f499f7ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b733b7-6f5e-4f4d-81c4-5fd579c9b2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d03cf4-2952-443c-8578-b3bd79eac54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ab0057-b2b0-425b-8e5e-95e4253d24d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec5accb-dc0d-4758-9b49-294eba72dd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac36e73-55b3-43b2-9c91-453617cee64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c582b10d-189c-458d-aaac-31e850465844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b6b40c-f7e1-42b7-aa88-9d797ad17605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a64c5-2427-4f8e-b630-c98533160e8f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31eb476-d341-4ab6-94a3-a951e7828b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ab325f-6a03-4a63-ab93-1f14c270ebe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445a5130-3f11-4081-a242-c7a902983c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ff9c1f-c7f5-4545-b7f1-020b76b9f4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe778d8-cca6-499a-82ce-322c9589727a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d817acda-f41e-48c6-b77c-bffdd6b5f54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9580ef9b-7e8b-4c0d-a2f8-dab0c862dd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31528e67-2eb3-4497-ae18-ede79228e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc49fd1b-2c91-4885-9550-a39145908064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f707f80-f232-4515-8142-7a03f3d5d948",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeba061a-8b3a-4628-8465-f1747a622a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3701d32-1b19-422d-93fc-145714960ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0873fe4a-5fc1-4590-82f8-44d35bdac27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afa6762-f438-447d-bfeb-2ffa80e87b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd8b08-b0ce-44d1-a80e-09e3305f82dd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f4b990-3baa-4abe-9510-ccdcd41f79f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7cb448-d20b-4412-becf-f1eb40c8e34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc92c8-d918-4156-98d6-79d08837383e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc6493-9e04-48fe-8009-2b3be34e00b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa71c8-0fbb-429c-a02f-262bc91d72a3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8c2b97-0ce4-4fcb-8d36-4a6ad9af260d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1148026-c82b-45e1-a9c7-06c7376b458b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738ff4ec-0a22-4b6d-9811-0be31bc4e616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4d0621-0a8b-4c83-9a8d-7c0ba665e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b4c24f-9487-410a-90bc-1b8696c15bb4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe971140-e378-4059-ba34-2fb8f31a84c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf07db35-7005-44bc-8f28-872b5499af7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2cd710-e408-4aa5-be42-192a8a5cda65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8d81f0-6b9a-4738-a875-f6ba43e4e268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eda9fa-69a6-465a-a5d1-0ac2b0a9bfdb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ed0710-01b2-4b50-a009-aaf9d510d421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ce3fcf-c2b5-49a6-b643-9c39f459442c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b18a9e-1870-4ee8-81a2-16086b9c469a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5bc98a-2c44-4217-9f52-519b0361df7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec9248-39a6-44a5-b8b8-ebdd46b52871",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6cd81e-ae5c-4c47-bb42-93d5e2f757a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9f3d24-f5b0-4da5-8b98-0184e5306807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d174a44-04df-44c0-b5af-3cac62f539bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9493eee-0a1c-40b1-9e4b-f848b566d2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e9b427-fd5e-4f1a-952b-f5bf486b47db",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d048f848-10d0-48ab-a0bf-bc063525e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b7ef7f-5d3a-4170-9bc3-bfaa7574a174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccfce0f-014a-49c6-8f0c-4a8cbaa5a6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88d48e3-fa33-49c9-a850-8a83d1f0244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde44ec0-4a45-4938-97ec-83bde9b0a60b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3d1424-9e53-47cf-956b-4cc8117b7871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ab043e-99ab-40a6-b3d2-d0009c4f3f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b5f9a1-157b-4b11-98d9-82f0eccecfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd03cac-a6d1-40f2-89f2-8b4191237a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761db427-78dd-448a-94b6-67b57c312b8b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d215c0b-7a7c-47ee-8b79-5c7542fef463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599daa1b-ed5d-4fbf-b69c-89c0e5996f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0b036-d74f-45c6-a56b-16cb6d568049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec846d41-f537-4dc0-914b-ef70485d0fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ba3e34-78a7-48fd-9f9f-08e94636054e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2efb8f-cc1e-44bd-a419-c694ed1ba36c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4ec740-7671-44ff-907d-c4088221b22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c290714-f116-4143-a39b-9d0e84200b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2b6d46-21fb-4cae-a3ae-fee5a50a9e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13723cc-60aa-4877-96ba-e5aacbd63b64",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba503043-ca9c-4511-9e2f-f7d31198c277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7dde9f-d4ec-42bd-b1eb-41a89f045e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcc36ee-bac9-45d1-8157-1a5439f1e845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520df16b-6804-4903-8d90-0109974168a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59676667-865f-4b21-be12-74f33bdea27c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d6f80b-2ff8-4c34-9999-53ed8da8116d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6172b570-7d8e-49e5-85c5-42c52b43b0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a097b78d-e19d-4d27-b44f-7df61fcc538b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccfedd7-24e5-4499-9b9a-97c51f6717f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28113871-5b94-4a4d-9254-6bf725a27688",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5c39ca-ef89-42ed-8457-d41029415dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd787bf-47ba-47d4-8fb2-73fb6ed15a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea857c78-3cf6-4136-a2c1-5e72a572261f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887e5af4-29ae-4688-b185-523540bde0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d625417-2f05-422d-9972-d0a56eec5b60",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b7032f-8ebd-4a8d-93c0-4f3685c2d3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96dab141-d93f-4654-bb03-0ee1b1b5bf49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67696df4-a238-4271-b6bc-f0f6c417bf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23a5368-33b8-4b4d-a268-c700b9ac0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd306a-1abb-4932-b377-597e2079bb95",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d7b7d-7882-48d8-b9f1-e27141801e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da34ec0-4be2-45bb-9494-f57147411988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a5a3fb-0053-493f-8291-052108bf5b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc3ee4-1396-48f8-8def-9c5f5855f114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1723a84a-d905-4b3f-b84d-48fcce83cca8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93607449-9eea-4d99-9594-39851ae30bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e4fc8c-a3ae-47f1-9463-654b073ea783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81abcb70-538d-4538-ac60-9ed01f7b47f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5db044-3287-461c-b613-f1d291ee96b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aeb86f8-a5f1-484b-8cfc-8c62686818e7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4104e8-8096-496d-973d-086495a6db06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bbd72d-cf7d-4356-90bd-0dac85bb74b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52490ddb-e245-496e-836c-726355c81aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579dccf8-751c-4513-bf93-2b56a3f8ce61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6306deb-d0b9-4b4a-8023-212c85d27664",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c68ba9-37eb-44de-bfb4-4d0c1c1757ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bc9b76-07ad-4705-b952-a7f2efd58b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf0cbb2-5825-4e70-a0c0-6e05ec72550c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ae22c9-9ad9-4178-956c-23157ac85d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c6325-654f-4b8f-9615-df2ade5c2e5d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a7a238-7886-49c4-adfc-299da4402645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390f3fc1-31e3-4b6f-a538-13960249df19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c53880-8d43-4dba-887a-3d2e5d3346e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9199db9d-56de-402d-b50e-b58ff12cc7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55439993-c3b5-4006-aa27-12724a4fab60",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3e9c7c-8602-4004-a912-292f73fa386e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74767d95-35b0-410e-bb2e-467005021898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4f2ea-f1e5-4de5-bd4a-b7122d4ae1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b608300-febb-441a-af69-1a54c1bc97e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1c5a11-d9ad-4c2e-a1d7-0d2b22ac379c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd0809-d8f4-48c3-ab00-5bbacacd9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc3f63e-4401-4087-93c2-b5d207f2e47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3254692a-eab4-40f0-bc44-c9997b5e7d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac963d2-6b31-4423-a726-e6bb9d6ea7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a67f672-3f2a-4631-b548-ff5f99dbca1c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67d1459-ff05-4f78-a004-8d98f916aa41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4e9b11-92cd-4310-be8f-b42299f649a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330d4b1d-2afe-4eb0-b2a6-438199ee17a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc039672-447e-446c-911f-d67acf3fbedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477125cc-9556-4a04-99e4-753eb5e12090",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a662ee-35f8-492f-9780-76f526095c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f223cd82-eeab-4afa-8afb-8773036df2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c014b-14f1-4e04-b988-8c1a03137215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231a07ae-0024-4a3a-aae7-df25e784b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54373543-44e3-4669-9207-936689fbfe09",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1530ca0-dbc1-4e8a-82a2-59eed791fd73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1680f58-9a82-4143-b688-18ea88dda352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43668ed-857d-4887-9d26-85345e51ba65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac07621-a653-4945-8862-87b2dfdbbdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0167da-b299-4e97-a7f2-b38472173b04",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1dcb06-6604-4d44-892d-efbd851d9cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddffa53-78b8-4d60-9e2b-8020118fc550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c30e7f-9eaf-431d-9839-5889bb49cee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3811cc62-2fd3-4850-b2e9-d29af8ef0f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d700f9-647b-4dde-9225-a2ad899eec88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b7466-6554-4a4e-9fd8-766eac94ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c830916-4e0b-46ec-a134-3986bea687b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87983b1f-212f-4cbb-9805-98dddf9e9af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74b86cc-6c37-4dbb-a64c-dd68372a54e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361b6c76-fa4f-4bd9-97b7-dbc78233c545",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c135090-57e6-4b44-867a-6842ec5844f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5e3afe-1a7d-4181-bad9-e37f2559be18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e0d8c7-e1c7-4200-a9b9-0a89af5703a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60caa04-c30a-42bf-92c0-b900802588cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12343860-0194-4376-93c8-ca43076ed171",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549dd2a-b461-4d1b-9a78-be3b5107e39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cbd191-8cd0-4c8d-b3cb-b73bb4ea36f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ccd80c-a36b-4b9f-835d-1d87779dbcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98af9f5-dc4e-4ad7-b20d-16d92fcb463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88529d87-efc2-4d73-a5ac-2c896c1f4368",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbdd792-a760-47ff-be15-2fb10330b037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d552bc24-ff83-47be-a55a-48b28f26a2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f34758-65fb-42ae-a5ca-d38d5922aee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946bb32d-5b24-43fd-9085-f44edf9df863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe3464-0b79-4720-945e-095dfb384774",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b1729b-2a9e-4fdf-a8e5-7349894a068b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb8ebdb-e423-4772-bc90-ab38f40a681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2ce38-7b4b-4911-8361-f0de353cb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dae7ea-d4c4-49c5-aac6-f6e594c8073f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715838a2-e45e-4fdb-bc26-7f15588b7739",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31656350-757d-4854-9113-d52af63a9a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2bd9952-3135-41da-927d-d3b77fc66b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b066273a-3efe-4df9-8f96-67f12c50a606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234e540d-fde5-4851-b820-31fcd4147f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f73339-3fce-455a-b47a-6458f7830f21",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af21b7e-af13-49c7-ad14-ef13babe5a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f77fff-2aa0-41ff-be1d-df1a69e0192f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4399320e-63b3-41a2-853a-3ea360c7b5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6cffd-d84e-4513-9f3d-860264379d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ced970-0ab9-4f7f-8ad7-143dc12b7cc2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065cdd0a-b007-45c1-a7da-3d599d41b42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1ce9c5-5fd1-4ae4-9a12-6222da48fecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e54174-f470-4efb-b075-fec4aa742fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe29f40-6612-4e96-9e79-588737aad349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fc104b-a1ee-4e56-914f-543f15a5303a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1add52-6be3-4964-aeb7-d8ee22e9e526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbf1ef7-26fe-443d-b771-6cfae95d9880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5c2968-d48d-4516-87ee-d876a29c69db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f5ddd9-2ff0-4978-b2f7-6a15db248866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aebba81-6446-4638-ae88-b4dbe1a4a767",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7db927-49a4-49b0-bc6e-6dcf16f11fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e852e90-e1e0-4949-9a79-26640821afe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea48b68-7d36-4465-b7ee-9b30b21c3a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86f33af-1c4c-49a9-8a30-5b769ecfb861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e499d0fa-6e6d-4abb-b398-14bfce37675a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772b13e6-46bf-43c4-9034-4746e5f17afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a806a5d1-918a-48c4-9eef-66dbdbea91f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ba525-6561-4013-936c-479c5b336058",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9dd674-056b-4b5f-900d-afd65d7b3668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf85373-dfca-4f91-b925-f189d2c8dc78",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc1b7a2-9ab1-45a5-a12b-4fd6d1bd4d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92129372-f51d-4ecc-8a1c-cd6ebe348d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ce4ae-33e8-4e98-8a72-f0155bd9490e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d03ed2-5128-402d-b552-ceb3ddd1ad31"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45a0b681-c87d-4a6b-8f5c-a4120c651c3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "425e5aa9-22f8-434e-b873-0bdc7bc75d04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "472b3225-5f77-4d21-af4b-5c581809aa67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d4ab1d2-04a1-4091-b973-784a272bf20e"
                    }
                  }
                ]
              },
              {
                "id": "1b036b26-2bec-4e7c-bd68-204129415912",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "523e4f71-04c2-42fd-8e58-28428be3993f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4b062d-3e94-4548-afef-1cd23d977817",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "09510f8b-84f9-4607-9c72-6fbca11ef801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f317b3-def4-43f1-a6f8-999a313b4bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6e54dbe-f779-493f-8c03-7489ec7260a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f8b3ef9-1f27-4748-a629-8320898267db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f4460c5-758f-44d7-a3f3-5b9e47bb6698"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3278cff1-ec0f-4ddd-aa82-d2848bfec305",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21468d3b-1245-4884-a380-3f831b47a809"
                    }
                  }
                ]
              },
              {
                "id": "d03e2a8e-f872-4fb4-af8e-964c6838183a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2260427c-3bcc-47b6-957f-73411be47519",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bacbbcf-f7bb-4e70-b3e5-e81e428c2e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f852bcf9-bbaa-49a9-9d9a-dabfc79e72c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2a346f-fd45-4bf8-85c2-abaf00cf61f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112a1ad8-1579-43cc-ba2f-756f3bfb939a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2bf4f04d-a9c9-4a3a-a363-7c2875dbf90c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "def30451-3a8e-46c1-ae52-4054452559be",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f72e1838-9bb9-466e-a06a-8579ab4b569c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1cb21347-241c-4935-807b-43a074fc54e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "675b531e-3bbb-479d-af30-de8ee94a7abb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22c3094f-ee1a-426c-8132-9fb6aa18df21"
                    }
                  }
                ]
              },
              {
                "id": "bdb43b97-9efa-4e63-b375-8f50d1767bf2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7549681e-9edc-413a-b7ff-94d6ef68db3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c166ea77-3b0c-4476-a015-93316285ffa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d143b655-f254-47de-8432-641dbd3c71c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4cfef4-7748-4886-be4f-b66567087f7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd091bb0-9cee-48ed-9621-14ec68f17781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "934b92c8-8075-47d6-bfea-5ed3f4ba2f2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1112c9cb-1bcb-46ed-8fca-9fd555ac6785",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd208b99-3c66-47c5-8746-5b4e13ce3d6b"
            }
          }
        ]
      },
      {
        "id": "3d39d910-513e-4632-888f-947649b732c3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "08f0723b-d5a6-4a4a-b705-97b831d3ca4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "789d498f-f22c-43ef-be9c-d0f5659eb393",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0014df78-effd-4c0d-abff-be7f65e7d8a3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b965b-ecc2-4784-bff6-38dd2f0c5971",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8b804fc9-cbee-4524-8fb8-362c0e93d611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfa4863-17ba-4583-ae12-e5fd4bf99e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7500a11-0815-4cb7-a42d-6ebf296498a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcc076ac-ec40-478c-81c1-5af6c8d6c6e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb1243d4-99bf-4bfb-8ebc-993957831095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0efa41ce-ada3-4c86-9a7b-a07d21c98980",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f65eaee-c12e-4bb5-9911-fea476c01927"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91d77738-0723-4d15-8be9-14c55d649010",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5085c51b-c30f-4774-941f-73349af4eabc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc903dee-b91b-40f8-8016-12dbee372405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51e648dd-a034-4cc8-8823-a7b0cef9246e"
            }
          }
        ]
      },
      {
        "id": "6b998350-8674-4412-b919-224a2c4e5585",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bad30a64-ada6-4981-ba0b-207fa9c4fced",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8371e56-82c2-4c27-a1b4-651f409a3837",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1c8bfc4-b58b-413c-a840-2022047bea64",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab04c44-f8a1-4b0d-807c-d613fb023a93",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "618479be-3aec-4aa6-be02-291e43a6ec15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8da15f3-e5de-4449-906a-909d55824545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de2af277-0307-4301-8bd5-d95bb0cc89b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36f1a514-ab71-49dc-9106-1639e678add4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "098c17be-9c99-49e6-b779-2bbb7df43f53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb11e122-00d2-42e7-ac6c-11e390aca498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3223aaa-8e87-493f-94c9-b7b477c218d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e008d9a4-ff47-4a77-a331-ebf604fb5596",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a745c4b-8329-41c4-a0d1-5f40701d833c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed6b93f8-881b-4c2c-a671-7376b5ecd0a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "864d12a2-5930-4470-9df3-1a228375a6aa"
            }
          }
        ]
      },
      {
        "id": "566d24f6-16ab-4863-86e9-34c1ce45647f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "38e3596c-aed6-499e-bcbf-3949198f603d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac838f09-dabc-407b-b6a0-25e2341ae5db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a61543a-f4e7-468f-b188-569dc1b11ce7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c015a579-d6c3-4301-b12b-a002daf2b6aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6013ab32-3cca-434f-8c3a-eee58c674ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c72382-d06f-4958-9da1-59cd66e9a482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ad47196-e45a-426e-9adc-e37ccaecf70d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72f317ab-53ec-44aa-91aa-a521f31729af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d3204ca-b745-4813-9319-fe547355608f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7de899d-27d3-47d6-8d23-cf097b0a9720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d1b4f3-6ea3-4fef-ae6a-105580b3a017"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dec700a2-f246-4e1b-add4-f40942340234",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53225c35-1d12-4a95-bb54-b1b459237625"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda50f24-74f2-479d-a1ab-34ef5713b2f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc614824-00aa-42b5-8ae3-8d49bcd22edb"
            }
          }
        ]
      },
      {
        "id": "36c2f0ab-3b7c-4686-9a48-48a9336caa86",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e98ccd0-9896-459e-b8ec-ccf830580df9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f38b09c-2c6d-4994-a6f2-17e19492016e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "be7300cf-dd0e-4832-b1af-beca413c5c60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c469b5-c7e5-40b6-861e-fe912e383e9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c978b68-88c8-4737-a2df-9f85362381a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 150.65476190476198,
      "responseMin": 12,
      "responseMax": 12272,
      "responseSd": 868.0785179638651,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716338200858,
      "completed": 1716338247099
    },
    "executions": [
      {
        "id": "ea575dde-2d59-4503-9fe0-c8dd729e773c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ffe13ffc-a7a6-4283-a2b5-7a8dec143351",
          "httpRequestId": "3abb8df0-2aaf-4fb8-b0e5-8776fa58e9c4"
        },
        "item": {
          "id": "ea575dde-2d59-4503-9fe0-c8dd729e773c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c08a3d80-fefb-490b-b525-efd8ca48271c",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "69b8ca27-433b-4238-99dc-d06ef59845ed",
        "cursor": {
          "ref": "67edc5ab-fe58-48c5-8cd4-727dfa85aac8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e40e20ce-e2b6-42c5-81b7-6d116ff7c792"
        },
        "item": {
          "id": "69b8ca27-433b-4238-99dc-d06ef59845ed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3ff1d6cb-9649-4158-a460-dcada49d2d80",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "2e4d6e11-71ce-47a5-8b57-2210edc0b804",
        "cursor": {
          "ref": "d09c6f75-72fc-45a9-aed8-2344c6fcf520",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f6a65fa8-f141-4a20-8ac6-38fd550295f3"
        },
        "item": {
          "id": "2e4d6e11-71ce-47a5-8b57-2210edc0b804",
          "name": "did_json"
        },
        "response": {
          "id": "162f2f52-952e-4ff5-8ebd-0603ef8e22f1",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9371c14a-abb1-433d-a55e-7d74b117ae70",
        "cursor": {
          "ref": "3fff4a91-f65e-485b-906b-07e82379fd91",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5657ebbf-3c02-4425-9c25-a2984d4bacdc"
        },
        "item": {
          "id": "9371c14a-abb1-433d-a55e-7d74b117ae70",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2a8e53c-3e65-4435-bcaa-4b42447e65f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1641,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9371c14a-abb1-433d-a55e-7d74b117ae70",
        "cursor": {
          "ref": "3fff4a91-f65e-485b-906b-07e82379fd91",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5657ebbf-3c02-4425-9c25-a2984d4bacdc"
        },
        "item": {
          "id": "9371c14a-abb1-433d-a55e-7d74b117ae70",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2a8e53c-3e65-4435-bcaa-4b42447e65f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1641,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475fd821-0eae-4cd3-9626-83f6fa6e899e",
        "cursor": {
          "ref": "f9461017-2cc7-455e-9cf5-f81663b1c05d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e3ccf860-a700-4e20-b05b-3eac26de319e"
        },
        "item": {
          "id": "475fd821-0eae-4cd3-9626-83f6fa6e899e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "50eef757-7431-4300-bbdd-1caa1c0c8816",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a2af0c-cc80-4534-bc1b-1653ef5cc7cf",
        "cursor": {
          "ref": "a9518393-c5b4-48aa-be61-977171a4b57e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c43d45d1-6f72-420b-bef0-854cd9d263be"
        },
        "item": {
          "id": "88a2af0c-cc80-4534-bc1b-1653ef5cc7cf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fcc4c9bd-6e44-4609-92a5-a6b3243a8e27",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48998933-44ba-43b5-86ad-dcab3c2aabbf",
        "cursor": {
          "ref": "ef970478-2c31-4fb7-a919-97e8991bc6c3",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74df325f-8f77-4998-bf02-37d631c26235"
        },
        "item": {
          "id": "48998933-44ba-43b5-86ad-dcab3c2aabbf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c7cc804a-a405-4b01-84e1-1e9c305fc364",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd7332-f9a9-4948-8502-4a07905b742b",
        "cursor": {
          "ref": "dd9aec2a-3477-4d2c-9749-91e11996c4e9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ee89ff1-b57e-42b6-b91d-6ca469625157"
        },
        "item": {
          "id": "87dd7332-f9a9-4948-8502-4a07905b742b",
          "name": "identifiers"
        },
        "response": {
          "id": "76cc37f7-aee7-4adc-8a68-f1814ebdc076",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf376f31-2e2a-4f97-8b12-f56481be6bca",
        "cursor": {
          "ref": "bede9e31-e160-43d9-a767-37c707c30c97",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9b67692-883d-4b0f-b201-d7f80e37a279"
        },
        "item": {
          "id": "bf376f31-2e2a-4f97-8b12-f56481be6bca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "feeba09a-b73d-4bdf-99fb-7e374fc8fdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af201f78-044d-4282-8e8c-1ce98173f7a7",
        "cursor": {
          "ref": "99c40504-746a-44cc-b73b-39ea9e65c166",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ef2fae2a-0e34-4f97-b03d-ee63f6e7e098"
        },
        "item": {
          "id": "af201f78-044d-4282-8e8c-1ce98173f7a7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e988d919-2bfb-4123-b367-383c8a82c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc955057-4e41-46ed-96d5-6b5c42905235",
        "cursor": {
          "ref": "ab8a5168-e4d3-486f-8951-d358b600d302",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64627375-2555-4093-abea-b989142d7b7c"
        },
        "item": {
          "id": "bc955057-4e41-46ed-96d5-6b5c42905235",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "521944d4-79d3-416f-8c04-34952dcb7b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544a8d5d-59ff-4446-9c62-381e07c8f9df",
        "cursor": {
          "ref": "c4d47190-6eb7-4ea0-bf37-a9857c22cc6b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ce09ee58-546e-401f-bdde-156eb317b94e"
        },
        "item": {
          "id": "544a8d5d-59ff-4446-9c62-381e07c8f9df",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6f7024a1-3a8a-41ea-aeb0-45cf72efc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca928b7-5102-45a2-a920-aee2e236046e",
        "cursor": {
          "ref": "5251ef85-87b9-460b-91c0-dbbbba515040",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "696777ab-3437-4d2b-8628-ab0c88fd9f34"
        },
        "item": {
          "id": "8ca928b7-5102-45a2-a920-aee2e236046e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1825a125-7d1a-42fe-b065-a7dd1b81ca7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a89135-4468-483b-8215-5228ce4e0353",
        "cursor": {
          "ref": "b09ae63f-ff28-4be6-b5f9-53de7584930c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "89b5726d-f500-4322-b0ca-991f5c19b8fd"
        },
        "item": {
          "id": "57a89135-4468-483b-8215-5228ce4e0353",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1039cf67-77c8-4029-9492-4023c5f4aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54db69c8-ebe2-42ce-bd4a-a00ca45634f5",
        "cursor": {
          "ref": "fcc6a8e8-6c89-42fc-959a-789796cca2e4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "44b24aa2-3713-4e67-97d5-60b086f8f90e"
        },
        "item": {
          "id": "54db69c8-ebe2-42ce-bd4a-a00ca45634f5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "db8ace0b-1d9f-4c95-b0b7-540e3f8739cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1682c584-39d1-4d25-9ddb-16939dee349c",
        "cursor": {
          "ref": "0622e355-a6fe-4bd8-a857-14fb2b740a3a",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8dfe346a-401f-4264-a261-b73c57faf174"
        },
        "item": {
          "id": "1682c584-39d1-4d25-9ddb-16939dee349c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b61a2a4-21c1-4475-9294-4db35803068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dbc9e2-e0a6-44d5-9311-20ddfc0b7b6e",
        "cursor": {
          "ref": "d0655c30-5864-4540-b75f-71d453914282",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0b14a9f4-e331-493a-b849-68d2eba0b090"
        },
        "item": {
          "id": "96dbc9e2-e0a6-44d5-9311-20ddfc0b7b6e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6832c00f-f5e0-42ea-9a34-4b8082fe7279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b842a8-ada2-4b42-93b1-8378d6c0be1e",
        "cursor": {
          "ref": "b8cae5f0-579d-4579-9ed5-09924b742fe2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc2d9a00-39ab-4f56-8777-2b5d93fef2cb"
        },
        "item": {
          "id": "05b842a8-ada2-4b42-93b1-8378d6c0be1e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9b0ed49d-3033-4d89-8d81-082b12c3111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add5c4a3-751d-4837-bccc-aee84f781617",
        "cursor": {
          "ref": "12a41840-8519-484b-89e9-b193cc83524a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0b42997-2276-49c0-9837-a63f54f81ead"
        },
        "item": {
          "id": "add5c4a3-751d-4837-bccc-aee84f781617",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b8f7255f-8ad8-4a2d-8cd4-279669fba4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513a9fce-01f0-411c-93d3-c0f0fd9ecbf5",
        "cursor": {
          "ref": "e33ab9a5-35aa-4612-be53-c387055103b9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8656b8ab-31b6-4f91-8a60-0c6881682ad6"
        },
        "item": {
          "id": "513a9fce-01f0-411c-93d3-c0f0fd9ecbf5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b79e014-b0bc-4608-b33e-ea0b810585c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20e18cf-f9e8-46dd-a093-5eb172ac71ab",
        "cursor": {
          "ref": "23b79465-3c4a-4090-8015-03ea2044f007",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cf7ea4c3-2018-4f42-a6f7-c8a92998bbfe"
        },
        "item": {
          "id": "a20e18cf-f9e8-46dd-a093-5eb172ac71ab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9bada566-4c76-4410-8e32-b75bcf53b3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2bd5d2-f809-4f1a-b1fa-63a38cc68fd9",
        "cursor": {
          "ref": "c53dbbc3-828e-4fe4-9f19-d349127fa9b6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c6f19a2-8750-4e2a-8433-f2544621c153"
        },
        "item": {
          "id": "dc2bd5d2-f809-4f1a-b1fa-63a38cc68fd9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cddb3372-49dc-426a-9e9c-ea184391d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b214a63-3b81-4a84-be6b-2c22e0e15172",
        "cursor": {
          "ref": "7daa3654-e3b0-424c-8dd2-edc4c8c447fa",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfceb12c-48a6-4301-9c43-75d1488cdfee"
        },
        "item": {
          "id": "4b214a63-3b81-4a84-be6b-2c22e0e15172",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f87a90ea-a869-4d44-83ff-620b5496d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd26b80-ab21-41f2-b36d-756851a35903",
        "cursor": {
          "ref": "cd286b5b-b923-4ee8-9d71-67da0cf68c69",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e3cc1c14-5898-41cb-a242-2fabf0b51828"
        },
        "item": {
          "id": "bfd26b80-ab21-41f2-b36d-756851a35903",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f3ad033e-deae-4da5-b46d-2d38e01da200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1793ac7-ae9f-48d1-9a34-2ed14aa96dfe",
        "cursor": {
          "ref": "c26df62b-cc24-4b12-9afe-dbdf45b72184",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5cfaab42-fd66-43ff-8796-6afaedbd6a42"
        },
        "item": {
          "id": "d1793ac7-ae9f-48d1-9a34-2ed14aa96dfe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "27a7946c-efec-48f4-af21-b795dfa2a0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26d3e8-d839-40dc-bebf-afd654676a2d",
        "cursor": {
          "ref": "51247390-cba8-41cf-b10f-5567c672632c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7f466acb-87dc-4788-8094-2102aadda337"
        },
        "item": {
          "id": "3a26d3e8-d839-40dc-bebf-afd654676a2d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cefe0ac8-621b-4796-8ba4-03f64e8548d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed7a91-73a3-4d51-a4f2-1033abc86c37",
        "cursor": {
          "ref": "f66de316-69f0-4eb3-89f3-92fc88641f47",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a348ee1b-95e2-407b-8cfc-427d25abf502"
        },
        "item": {
          "id": "60ed7a91-73a3-4d51-a4f2-1033abc86c37",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "31ded82e-7bd3-47b7-99fa-871bc9430098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e06b7c4-ddd0-4881-a2d2-89925cb0a9b7",
        "cursor": {
          "ref": "da8f8446-515f-43bc-80a4-1cbbc5d02397",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5f47490a-625d-4876-88e9-b2fd276ac16b"
        },
        "item": {
          "id": "0e06b7c4-ddd0-4881-a2d2-89925cb0a9b7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "779756e8-4371-4391-b2c9-6c0cebe9c681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0695f720-ce22-4753-8c66-0e6a11d5098b",
        "cursor": {
          "ref": "7295601a-9855-4259-9da8-f646814a8b2f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9eb18f38-79ab-4bea-b9f7-3b366a0fb99f"
        },
        "item": {
          "id": "0695f720-ce22-4753-8c66-0e6a11d5098b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5103f5eb-658f-40ee-acf3-145dc3f2d5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca088bf-94d1-4bb3-b55a-3dbb0234e194",
        "cursor": {
          "ref": "eaa8ef04-ce70-4984-8865-a105da9572b8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5761c5ed-2d28-40d6-8fe9-e9ea33efccbf"
        },
        "item": {
          "id": "dca088bf-94d1-4bb3-b55a-3dbb0234e194",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "45f0e666-9e96-483b-bd5b-423246b462e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce732f-ad27-4f54-adfb-ca056088805f",
        "cursor": {
          "ref": "898de5f4-d933-4a92-ad69-abd3806f6a3c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba9eb7dc-4fd7-4b97-9499-5e1f293139be"
        },
        "item": {
          "id": "f2ce732f-ad27-4f54-adfb-ca056088805f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "407c8ae2-48be-4638-a0aa-c7330992e00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3913a398-93cd-4345-89a4-fb9a1b3562cd",
        "cursor": {
          "ref": "43b726d1-afdd-42f0-aa69-e57c8aa6badc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a733b31-5ea5-4557-9e75-0eff61c8a2ea"
        },
        "item": {
          "id": "3913a398-93cd-4345-89a4-fb9a1b3562cd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c47a7a4-f2ef-40e1-ae78-931c2be25800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a77ec1-f758-492d-8bc9-7819c45bd985",
        "cursor": {
          "ref": "13994b5a-e674-4cf5-bb75-e06d13443eb1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3a7b7ff3-c018-41cb-b036-6173b0a08a76"
        },
        "item": {
          "id": "42a77ec1-f758-492d-8bc9-7819c45bd985",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa50aa5a-409f-4bfd-a6df-cd892149cb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a7e094-fb1c-47c7-814b-ef446521f0f5",
        "cursor": {
          "ref": "707f2483-0058-4e9a-81b5-cab163da3f2f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1e40cd5e-0f03-4499-87cf-6a741c742461"
        },
        "item": {
          "id": "93a7e094-fb1c-47c7-814b-ef446521f0f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bba66932-e5b0-4892-81c5-aa912b567e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88813b51-53e4-4278-a522-058a584f8ddb",
        "cursor": {
          "ref": "c4329415-b39a-46c0-a9e1-5e882443b913",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b37c2086-fbe2-4a33-b9eb-41b814165eff"
        },
        "item": {
          "id": "88813b51-53e4-4278-a522-058a584f8ddb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c1fec031-854c-42e8-9dbb-c25c032adcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98cea7-9b4a-4ba5-9cfa-eabdfa4ff5fa",
        "cursor": {
          "ref": "a2e4fb33-b676-4aed-8711-704afa40c91f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "040ea6db-941f-4b0c-993b-85ec75309146"
        },
        "item": {
          "id": "db98cea7-9b4a-4ba5-9cfa-eabdfa4ff5fa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad63a7ca-aa09-4dd4-ad5d-558c70197bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfd0329-de56-48c6-868f-3e5ac72fc846",
        "cursor": {
          "ref": "47afb95c-57af-4983-9350-40aee94e115d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0cf83854-8718-4efd-b487-b91499847c1c"
        },
        "item": {
          "id": "0dfd0329-de56-48c6-868f-3e5ac72fc846",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f90c3c04-41f1-482b-b2f2-126f561b6659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac945ef-ee3b-4cc4-931a-ccfa7a52a5db",
        "cursor": {
          "ref": "3fbd5064-84d5-4855-bf8c-7c458a747535",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "94b5e5d4-8b34-48cc-8f36-8870ff7659f2"
        },
        "item": {
          "id": "bac945ef-ee3b-4cc4-931a-ccfa7a52a5db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bf804f26-6b6a-4a38-9b9a-b3bf9695dedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e4e792-0cdc-4426-ab54-105dda1c5917",
        "cursor": {
          "ref": "a0b67ae3-eb9b-40f7-810b-0358bc6a8f2d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c54cb925-ab17-417e-af5f-2b4482002caf"
        },
        "item": {
          "id": "54e4e792-0cdc-4426-ab54-105dda1c5917",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2e28cd86-88db-4830-85c1-14ffe307a4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d113fd-8ec5-40f2-8c44-88c14bd2a130",
        "cursor": {
          "ref": "9eceefa4-a229-486e-a179-6b9d66284952",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "63c3cafd-2104-4942-a98f-da0b8197e847"
        },
        "item": {
          "id": "22d113fd-8ec5-40f2-8c44-88c14bd2a130",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3ea793a1-8f4e-444a-ace0-7e5682d90b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b69dc4-f614-4e5f-93e6-3c8ef8c32cb7",
        "cursor": {
          "ref": "46e3d11d-00e9-4408-8ba9-ded0584b32a8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0c27ef0-35e2-42df-a861-8a3fc4c2e0f2"
        },
        "item": {
          "id": "97b69dc4-f614-4e5f-93e6-3c8ef8c32cb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "766f2cfa-75c1-4688-9958-f30517d0c335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af641d8-67a6-4d59-b722-cfae4d229ec1",
        "cursor": {
          "ref": "8dec873c-21e4-4d11-a200-b9ac53f807f8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "715210f0-22cb-4f2a-93e4-826ced23c3c7"
        },
        "item": {
          "id": "7af641d8-67a6-4d59-b722-cfae4d229ec1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "996d474a-348e-4d86-b20e-1a78799555e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fe8e3c-e4ab-47a3-9082-e366629cbb44",
        "cursor": {
          "ref": "76a8b08f-3b14-45d3-b035-3bc4d44aad2b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1deeefa7-c762-4212-85ea-b071eeb53714"
        },
        "item": {
          "id": "a9fe8e3c-e4ab-47a3-9082-e366629cbb44",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ad4a25c-012c-4fc5-bec7-7d9422029266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10a0e1c-2ada-44ce-b637-7c241d59bc57",
        "cursor": {
          "ref": "011fea4f-0e89-4a66-b36a-e5d2ea3f2c15",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0f67aa8-935f-4633-a070-122a9c0a496d"
        },
        "item": {
          "id": "e10a0e1c-2ada-44ce-b637-7c241d59bc57",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21d60172-0001-4f31-8b3a-03c750282124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91f3f33-e796-4ae5-a1be-3a2e9b3a1a31",
        "cursor": {
          "ref": "c3e74956-ee7c-4f30-b4b7-1fabae32c63b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7026e3b-3d9c-4cf1-9592-e2d816ff7479"
        },
        "item": {
          "id": "b91f3f33-e796-4ae5-a1be-3a2e9b3a1a31",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "774bba82-6d52-4866-a788-af91a6cce727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429e3b67-22b1-4be4-9cfd-37303c673b32",
        "cursor": {
          "ref": "12ea3d54-4ec5-4846-8d60-01f152fc054a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1ef48689-fd47-4884-a0fc-c35c67e901d1"
        },
        "item": {
          "id": "429e3b67-22b1-4be4-9cfd-37303c673b32",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0cbdfb07-b07c-4bb7-935c-f34bb8d25228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5435b3-df8e-4edc-8240-5c26f4725c8c",
        "cursor": {
          "ref": "f97d45c7-f1cb-49de-ac80-75d2bf30f565",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "62cb9f95-ae8f-49fb-92b0-99ee34b124ef"
        },
        "item": {
          "id": "5f5435b3-df8e-4edc-8240-5c26f4725c8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6bc7b63b-ee6d-470d-8049-d0613a51b3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf97e04-f8ad-4a15-a44b-92722de6cb2a",
        "cursor": {
          "ref": "53494be0-fa4a-4c29-b2bf-912200d5a0e7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62dca0b0-28d8-451f-830d-7473e6998bf1"
        },
        "item": {
          "id": "adf97e04-f8ad-4a15-a44b-92722de6cb2a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a5b5d587-1ab0-42ed-ba28-7c9a6492a389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5031bc-2134-449c-a97f-bca3eb001ae2",
        "cursor": {
          "ref": "b57d6cbf-e58a-4541-9c2c-a1563c8ddf84",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ba9a302b-8546-43da-9721-09a0d30e632d"
        },
        "item": {
          "id": "0b5031bc-2134-449c-a97f-bca3eb001ae2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c9dde56b-5386-4959-8ba3-5523182d6e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb67cf88-5802-4749-924b-e7d216649e43",
        "cursor": {
          "ref": "6eab2b53-4279-4cd2-a59e-a2a50579454e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1735e524-289f-4955-9354-8e3fc5c1ba47"
        },
        "item": {
          "id": "bb67cf88-5802-4749-924b-e7d216649e43",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9ba70916-d030-4e6c-a1d2-de7d1cf940e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bdfc82-cf27-4985-9d9b-a7016debc8b6",
        "cursor": {
          "ref": "94d4d718-85c2-4d78-9432-e21f24d8edd0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "640f1bac-701f-410c-9005-143ec87976ac"
        },
        "item": {
          "id": "f2bdfc82-cf27-4985-9d9b-a7016debc8b6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "57bc6a2f-e8b2-465a-a561-63294d207cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561cfe0e-551f-45a3-8b1b-f31e02d9fdf8",
        "cursor": {
          "ref": "49fe4d89-4cfd-4e37-b000-e398c43785cd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b1563e43-ce0a-48f4-abb6-2de3694e4b39"
        },
        "item": {
          "id": "561cfe0e-551f-45a3-8b1b-f31e02d9fdf8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "be32f449-699c-4fec-b45c-03c8c10e6739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df67a18b-16fd-42f7-aaac-200504772260",
        "cursor": {
          "ref": "ca52fc3e-6e7a-4bd1-a9ba-cab35c2a2bbd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0e1ceec7-f672-4a11-8513-f0d77a065432"
        },
        "item": {
          "id": "df67a18b-16fd-42f7-aaac-200504772260",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78fdad85-6dc5-47a4-a9fb-2d49031124ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5f11c3-6dab-4642-97f9-01c9e90fa24f",
        "cursor": {
          "ref": "b7af4de7-636c-49af-9c5e-fb37d3a5f27c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c69e137a-be54-487c-924c-7c00303ea6a0"
        },
        "item": {
          "id": "4c5f11c3-6dab-4642-97f9-01c9e90fa24f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0a3d055a-f5d5-4db7-a564-f6609c45499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca33bc63-4de0-4fb6-832d-950722fccac9",
        "cursor": {
          "ref": "b86f4c17-60c1-424b-ac5f-b27c3550016a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e04459a5-9b87-4251-8657-6d43ed2a57c6"
        },
        "item": {
          "id": "ca33bc63-4de0-4fb6-832d-950722fccac9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dda5e08c-76cf-4c9b-b5f2-dd70008710de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b351d35-3159-4572-b06b-0962024f6194",
        "cursor": {
          "ref": "1489a47b-4aac-40b7-8eb5-3f85328a3d9f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "78d16a97-79be-419d-8e24-83e0a1a6da98"
        },
        "item": {
          "id": "4b351d35-3159-4572-b06b-0962024f6194",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4c06802-a402-4da6-8dc0-601e08e2cce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1805fc-af3a-4524-a085-0e64c3c0fadb",
        "cursor": {
          "ref": "8e58f036-1c57-479d-a929-8269e900e7d9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b85d8084-cc3c-45f8-9da9-c3cdb690963a"
        },
        "item": {
          "id": "ac1805fc-af3a-4524-a085-0e64c3c0fadb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b9d19b2b-aa8c-48b9-8d50-ef0a52c24930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54df2e-274a-46a0-816b-16cd52bad03d",
        "cursor": {
          "ref": "4f426734-7222-46ef-a20d-ccb8e7d2a6f5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a55404cf-b08d-4415-b001-93f658f0b954"
        },
        "item": {
          "id": "ca54df2e-274a-46a0-816b-16cd52bad03d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "de95b0b0-05db-40d2-a4c1-09366cd59b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca5524-d092-44a8-8a2c-af2725c45a49",
        "cursor": {
          "ref": "44ae3dc4-383d-44bd-bf50-b06f3cbb20f8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "883ea174-4019-4510-8b40-73a284cd57c4"
        },
        "item": {
          "id": "d9ca5524-d092-44a8-8a2c-af2725c45a49",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f52e0a58-20b1-4702-8be0-eb6322754b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fb228e-ac3c-441a-9fbf-f54713923d5d",
        "cursor": {
          "ref": "189c8602-ebd4-4f4f-8a68-5cc3dad672c7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3e79d487-fa57-47ea-b1db-5a5116472157"
        },
        "item": {
          "id": "35fb228e-ac3c-441a-9fbf-f54713923d5d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf5c8cf4-797e-4655-8e73-55891b3befc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f64d19f-b5cc-40d9-9371-21a9dbb84228",
        "cursor": {
          "ref": "3888cf4e-518f-4cb2-a8f7-14911d3d10b2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "14008866-74d8-47a5-a029-45a711e5abf7"
        },
        "item": {
          "id": "3f64d19f-b5cc-40d9-9371-21a9dbb84228",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7fdf27a7-d61b-4092-9019-c50fa92e0a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce9effa-96cb-411a-81e2-08af82243a48",
        "cursor": {
          "ref": "574fa6e3-dce9-4ba0-a394-476835f1726c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "56266e98-4fd0-4b4f-a402-7ed0d24177f8"
        },
        "item": {
          "id": "5ce9effa-96cb-411a-81e2-08af82243a48",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66bc1db3-1e5d-45a0-99db-a21883121c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ac3677-f3bc-4f90-b689-eb3e65f2a0b8",
        "cursor": {
          "ref": "8e8d619e-9897-4f2a-9858-cc46d457ade2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9140f6c7-271f-45f7-a17d-db732b495880"
        },
        "item": {
          "id": "19ac3677-f3bc-4f90-b689-eb3e65f2a0b8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "801da31a-4307-46ad-8024-8451642b4fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4db1e4-07a8-4551-aed3-0c0fe7b2e64e",
        "cursor": {
          "ref": "1999bd0b-f7ce-4379-b94f-cb5fcd84bd75",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a290de25-8174-40dd-a2b9-f7f321410897"
        },
        "item": {
          "id": "2b4db1e4-07a8-4551-aed3-0c0fe7b2e64e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0faec5cd-c30b-4dbf-b2b2-3d29d19bc11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b573854e-6967-41f7-b3e3-ce6adcaca05c",
        "cursor": {
          "ref": "712a4da4-740a-42b2-abef-e8f3c821f934",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "570741a7-e029-4dfb-967a-80e057dfd241"
        },
        "item": {
          "id": "b573854e-6967-41f7-b3e3-ce6adcaca05c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f88f587f-30e3-4ccc-bbaa-030501b3835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5829c2-cce5-4a62-8662-3c38d38ff22c",
        "cursor": {
          "ref": "90903816-ae83-4397-a72e-f56e5d078b7a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1685720a-aa5b-4cf3-9691-1a8b219a1510"
        },
        "item": {
          "id": "5a5829c2-cce5-4a62-8662-3c38d38ff22c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b49eebfb-9385-478e-b4e5-a4dc68555001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e7468c-0b48-47be-84ce-b2e48ab89972",
        "cursor": {
          "ref": "bdc9d49c-ff30-45c6-9104-149a1c243e37",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d19f8fd-64b2-44d4-88ac-a3693f0d589a"
        },
        "item": {
          "id": "42e7468c-0b48-47be-84ce-b2e48ab89972",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec8fdb8e-9b64-4f13-a197-4ed2dec7d8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbbe4cf-199b-48ec-ae18-88d4bc74b4a9",
        "cursor": {
          "ref": "0eb15109-f05f-4d31-b947-133e66dd8591",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "700448a8-af00-47cd-bbc0-abde8e622865"
        },
        "item": {
          "id": "9cbbe4cf-199b-48ec-ae18-88d4bc74b4a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aec0b3c6-c8a8-4f02-b4c0-8f987b63121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089150a6-6a97-4c57-892c-a20f5715dc8a",
        "cursor": {
          "ref": "8fdb98fe-cded-4682-bc1c-444a08bfc3c4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fd10d9d5-e97c-4de7-b610-04fbe758cb79"
        },
        "item": {
          "id": "089150a6-6a97-4c57-892c-a20f5715dc8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "048c3eb6-66a9-4375-8818-0ef181da929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0383601-6eca-4757-af77-fafab5b6c5c2",
        "cursor": {
          "ref": "ddfb75ba-e064-41e3-87da-a06ab1278469",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9e60bc06-8f41-43b1-83cf-8d7bb7aafc22"
        },
        "item": {
          "id": "e0383601-6eca-4757-af77-fafab5b6c5c2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0a506dd-b2f1-42bd-a85e-d7184ec24be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123148c8-c66e-43d8-b26c-3c87d883111d",
        "cursor": {
          "ref": "a119657a-a017-4edd-8353-0005d58a5e40",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6e111a6e-f5a6-43df-914f-a607b51c9931"
        },
        "item": {
          "id": "123148c8-c66e-43d8-b26c-3c87d883111d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "11f285d4-e0e9-4b63-8ed5-8747909eb1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9112c8ac-6e7d-47ab-abe7-7d4761f37377",
        "cursor": {
          "ref": "6f4d7729-552a-481a-bdf4-d55ed675fbe8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3135b7ad-664e-4ca8-9e4f-a5c525c30a05"
        },
        "item": {
          "id": "9112c8ac-6e7d-47ab-abe7-7d4761f37377",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "87414fed-0979-4f13-a1dd-6d4ac3d61667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae2ace3-02bf-44bc-920f-bbe5563b4441",
        "cursor": {
          "ref": "48fdf1dc-5f8b-45eb-929c-5c906533deee",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "41e00092-9e8b-4f19-baed-1d768e4a105a"
        },
        "item": {
          "id": "6ae2ace3-02bf-44bc-920f-bbe5563b4441",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3f97b0bf-edff-45ac-a932-dacf3b55d672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dabe65-33fc-4183-a37c-68bfc7babd53",
        "cursor": {
          "ref": "791ab01a-d59a-43ab-a048-36bc7b5eea08",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d91025b-51ca-400a-86c4-235ba3bef5e3"
        },
        "item": {
          "id": "e7dabe65-33fc-4183-a37c-68bfc7babd53",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0f21895c-2c0b-4caf-a835-9d6b832f0bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9d5432-d357-4e1e-be8c-6e0cb585412b",
        "cursor": {
          "ref": "6ef68325-ba31-433d-b145-e420b7989cb6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8e5ca542-2203-44f5-864b-2ab7f606aed3"
        },
        "item": {
          "id": "ae9d5432-d357-4e1e-be8c-6e0cb585412b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "df68afb7-f4db-4386-8015-5bf1b2a88b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8dcd35-a532-4fbf-8bb8-b950438eff5e",
        "cursor": {
          "ref": "d3952168-1665-417f-aa3e-d881b8e9c36c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f78723a8-e943-4ed3-823b-14863e8f82f1"
        },
        "item": {
          "id": "1f8dcd35-a532-4fbf-8bb8-b950438eff5e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1e2a7610-1c13-4116-844e-cabf5d1c417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50f159b-5f1d-400e-8751-985e55c221b1",
        "cursor": {
          "ref": "6ac5605c-8b11-404e-96cb-bb82db13e4e1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a90ff688-5af8-4a82-bf3b-79ab606e5cff"
        },
        "item": {
          "id": "e50f159b-5f1d-400e-8751-985e55c221b1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f2401b03-fc90-4654-9021-edbe84ed8653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5c0b1e-263d-4c3c-b0a8-bc1d7774fcf0",
        "cursor": {
          "ref": "aff79431-c83b-4c40-ae82-881b650d9350",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26635dac-1b0b-484d-8900-6377d95150d7"
        },
        "item": {
          "id": "ac5c0b1e-263d-4c3c-b0a8-bc1d7774fcf0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b0df7a21-9e3e-4deb-8b68-81d9c1f5becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9b694a-caec-4d19-86a0-2333ce652b35",
        "cursor": {
          "ref": "cccf1ace-28a9-4ec4-b0d1-9b0fc5e6653e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa7188ce-e3f9-419a-bd09-ea8a800653ba"
        },
        "item": {
          "id": "6c9b694a-caec-4d19-86a0-2333ce652b35",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "75440160-29eb-436e-bdc7-9ce43aabe553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a7533-a6ca-485d-a248-dbfd10a80c26",
        "cursor": {
          "ref": "523d933d-9296-4f86-977e-2970c480777b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b48c7646-ed87-4781-9f27-95efe2d5b90c"
        },
        "item": {
          "id": "f98a7533-a6ca-485d-a248-dbfd10a80c26",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dbf9fdd0-caa7-4eb1-80b5-a89b0b9b081f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d11b1-aa32-437d-a99e-5957b8d9e3bd",
        "cursor": {
          "ref": "c175d4ca-75fb-4002-99aa-6ece91e805b2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3fa57866-3bd4-4597-863d-43317e9f0905"
        },
        "item": {
          "id": "546d11b1-aa32-437d-a99e-5957b8d9e3bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6a964ff-717b-47be-a5e3-8bd050f4b231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36082f0d-d00c-42f9-bd45-95b29f5eebfe",
        "cursor": {
          "ref": "707790ac-3a24-4d96-9dc4-4eacdbe6c3f0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42760f07-1a55-4390-a8c2-340a91e11c3f"
        },
        "item": {
          "id": "36082f0d-d00c-42f9-bd45-95b29f5eebfe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6869dbd8-891b-4343-83a6-4833464c4ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ab4de-d6d8-433c-b0b6-af43d03d1513",
        "cursor": {
          "ref": "5b0ee64c-8532-49e7-bb6f-e74abef3ddeb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e5e99f9-7200-4810-b61f-9a8d97cb108b"
        },
        "item": {
          "id": "351ab4de-d6d8-433c-b0b6-af43d03d1513",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "701c9ddb-7ecd-4ec5-8397-a9a45167aaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623be50f-c669-4c93-b4d3-96846045ff61",
        "cursor": {
          "ref": "927080e3-1009-4a8d-bbb5-13d024c8e600",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0a9f344a-54c2-4264-a9f2-9dc7a0c1d2b2"
        },
        "item": {
          "id": "623be50f-c669-4c93-b4d3-96846045ff61",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "adf9e08e-d370-49eb-9f96-45dde07406e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9eb4dd-00e0-4d4b-8a6c-688dd2a05b2c",
        "cursor": {
          "ref": "1f043f4c-0523-404f-b8d3-14ca18f43f6d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f9ab819b-2439-4d4f-967e-dc260f2fbe0c"
        },
        "item": {
          "id": "3f9eb4dd-00e0-4d4b-8a6c-688dd2a05b2c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e4633018-495d-443d-9012-0a6a27b49699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85097483-edb6-450c-8fcc-4f62a19c6fc5",
        "cursor": {
          "ref": "ed843c9b-22ad-447a-aae6-0ef2ed0145f6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "afcdfeed-ec87-44a9-959f-cccef0e7fe3a"
        },
        "item": {
          "id": "85097483-edb6-450c-8fcc-4f62a19c6fc5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8e6011ac-456f-4258-acf9-c93aec5d3523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae90437-548d-4137-ba34-fb83fad57b6d",
        "cursor": {
          "ref": "c56bb8f5-5c83-433b-b96a-9196980a7674",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f27fdf3f-1779-416e-8b39-78bb65da8687"
        },
        "item": {
          "id": "5ae90437-548d-4137-ba34-fb83fad57b6d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7bce3ae5-84e2-4a22-a96a-fb562e51ec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bad1ac-c2d6-4921-b289-92f6b37bea87",
        "cursor": {
          "ref": "7ece321f-5190-4589-8b04-268473b4e68c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a017342f-1542-493e-b0f8-ac5ff588327d"
        },
        "item": {
          "id": "b5bad1ac-c2d6-4921-b289-92f6b37bea87",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d8506ee5-2a8c-4624-bf7d-03bf23a77f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b760f2f9-e2aa-46a4-ab3d-f19e671d0ba9",
        "cursor": {
          "ref": "29076d5c-1e37-4f82-86ce-70cfff1b4e96",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "37d7414c-f181-4500-8562-d93c56e845c7"
        },
        "item": {
          "id": "b760f2f9-e2aa-46a4-ab3d-f19e671d0ba9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7535f2ac-b711-4c0f-a896-b168063098a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8b8a50-4d0c-4f36-83e3-08a399dd8bd1",
        "cursor": {
          "ref": "f2ede747-fc02-4117-b6dc-def27d2d171b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "613e0037-9381-4ad5-a8ed-862a5c97b767"
        },
        "item": {
          "id": "8a8b8a50-4d0c-4f36-83e3-08a399dd8bd1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "964f82fc-e47c-484e-adb7-95376e1f9697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d5cd56-b09b-4f14-b72c-5954bd3ead7e",
        "cursor": {
          "ref": "b7bf2f49-7453-4b08-97bb-c466e551a1a1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "09135ebb-11af-4720-9a3c-759b1b340e61"
        },
        "item": {
          "id": "25d5cd56-b09b-4f14-b72c-5954bd3ead7e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7933301d-4fd7-47d1-8530-e0d5448c63e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d9fb0-96fc-4acb-8bec-9794bc313077",
        "cursor": {
          "ref": "c1dd3871-83fa-4723-8723-fb2d0520af8a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "edaa4290-a5c2-4d71-a8b6-b8cc5288eda2"
        },
        "item": {
          "id": "ce9d9fb0-96fc-4acb-8bec-9794bc313077",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "35b11691-ce22-4381-bbae-6dcc82ebc1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83ad3e3-311b-4b14-a29d-06ca8b4b01d7",
        "cursor": {
          "ref": "291ff035-c2ca-4298-8320-765124a54cb2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "055c58bb-0fe1-422a-a925-21d13faa9e06"
        },
        "item": {
          "id": "d83ad3e3-311b-4b14-a29d-06ca8b4b01d7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "58547c9b-d3e0-4114-a486-9471f0b60efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2de3bf-a9a8-449f-a94e-5e6dbc1d5144",
        "cursor": {
          "ref": "c54d9b47-667a-48b6-84cb-6d95a1f1a059",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca978c3f-c513-4fb5-8e51-3980ed8854fd"
        },
        "item": {
          "id": "df2de3bf-a9a8-449f-a94e-5e6dbc1d5144",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "39bd0319-2c4a-4629-afb1-0d8d4a692e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40060765-3af4-45dd-b029-9af3b4a8b427",
        "cursor": {
          "ref": "68951088-6208-4020-9c3f-7f2c51fdefa1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e7466084-446e-4533-96fe-30c775758bd4"
        },
        "item": {
          "id": "40060765-3af4-45dd-b029-9af3b4a8b427",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a700a49f-7af4-43fd-a86d-02d18e35411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bcc6bc-1265-4900-b5a2-42e6e35e30d8",
        "cursor": {
          "ref": "994147f6-6e2b-46ec-9fa3-894daad26add",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "68b860e1-bb9e-4ab8-85c2-144bdc0c33f5"
        },
        "item": {
          "id": "c5bcc6bc-1265-4900-b5a2-42e6e35e30d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d9ea84b6-9115-41d0-99f5-cd7ac4d849c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d7b9a7-774e-48ea-9586-9b048f5d6d95",
        "cursor": {
          "ref": "d1417baa-e90a-40a6-9b36-73c9de1bf376",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8a1976cd-6d00-4d78-9ec0-b48db1a4ece0"
        },
        "item": {
          "id": "f0d7b9a7-774e-48ea-9586-9b048f5d6d95",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e1544a37-10df-4e38-b2af-986e553ec114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41691be3-82c6-4fd0-93fd-b35ad5ac1af6",
        "cursor": {
          "ref": "191aac8e-73f1-4118-aeda-8f9da6a7b690",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5b243e5-19ea-43c3-97df-882209c84f2d"
        },
        "item": {
          "id": "41691be3-82c6-4fd0-93fd-b35ad5ac1af6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "93390313-3d5e-4d32-85d7-b18d36b8e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dbf0c8-7893-434c-9a8a-394881be5fed",
        "cursor": {
          "ref": "fad55c63-3897-4896-9f5f-85d2583f46aa",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3220007-ecfb-4889-b943-9234922b6ca2"
        },
        "item": {
          "id": "55dbf0c8-7893-434c-9a8a-394881be5fed",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1bf0baf0-b618-463c-9513-0a9efae77381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa0d310-d355-4a0d-8b0c-97b8d63aa52e",
        "cursor": {
          "ref": "7cfe471c-887a-4d56-809f-e0558f0b82ed",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d2d0c133-b76b-4248-bcc9-99fd340c2421"
        },
        "item": {
          "id": "3fa0d310-d355-4a0d-8b0c-97b8d63aa52e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f69333e4-b11f-4d02-9331-0cef0c9c5279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1510ac0b-1a9c-45ac-b86f-2de2b54a2c56",
        "cursor": {
          "ref": "2ae30331-ad1e-4ac7-92d1-08ec9b9a9aa5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "40b0a4d0-9489-4c09-bc79-475917dd061a"
        },
        "item": {
          "id": "1510ac0b-1a9c-45ac-b86f-2de2b54a2c56",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2360332f-dc93-4362-8dd2-bd7fd14c97c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 121,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0f570-35bd-49d0-8da0-5eee4d208c3a",
        "cursor": {
          "ref": "9e797662-ea5c-4a53-abb1-04125ad931b4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "57d64b1f-f1f6-47f0-8380-678e1094aa0e"
        },
        "item": {
          "id": "96e0f570-35bd-49d0-8da0-5eee4d208c3a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c6565ed6-f4d3-4065-9ae3-e7d531c2f1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c3c112e9-44bd-4696-8999-be79380e5387",
        "cursor": {
          "ref": "f36f8464-5a2f-4b06-90fc-9bb94fc78a0f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "08ab74f8-664e-414a-96e7-326866f772c5"
        },
        "item": {
          "id": "c3c112e9-44bd-4696-8999-be79380e5387",
          "name": "credentials_issue"
        },
        "response": {
          "id": "62110350-4fb1-46dd-94c0-21a5b0451359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "597306ca-917c-49ff-8938-8d56719e4342",
        "cursor": {
          "ref": "2edc104e-0aaa-4aac-a9f5-6d974dc4b56b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "862bffc0-12c5-43da-9004-b766c84b2bdc"
        },
        "item": {
          "id": "597306ca-917c-49ff-8938-8d56719e4342",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7a7dd38a-a27b-473f-86fa-d98c690e1de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8d03aa17-a919-43bd-8dad-16ddd424ea3c",
        "cursor": {
          "ref": "188474d0-444e-4b35-9e4e-e6ce116dbeb9",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5aecdf2d-74a6-4eef-9aa8-0a8f1d42a7ab"
        },
        "item": {
          "id": "8d03aa17-a919-43bd-8dad-16ddd424ea3c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a7fdc755-4f71-4008-9cd0-f4372f83d821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e345ada8-ea9c-44d9-b9e3-f8b6ea277581",
        "cursor": {
          "ref": "41ace3a9-9a66-4c7e-949c-bff2c3bb23b2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3f142359-164b-400e-8c73-b42b5c5e2c1a"
        },
        "item": {
          "id": "e345ada8-ea9c-44d9-b9e3-f8b6ea277581",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cef21a78-e053-446d-b69b-58bc6bff63a9",
          "status": "Created",
          "code": 201,
          "responseTime": 12272,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "375ae45f-1f9c-4204-aa1f-b53f3675c45a",
        "cursor": {
          "ref": "9bcc60ea-f5d5-4d52-9748-7f151d90b83e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6674b881-6753-497e-bc5e-7b97ef1fcccc"
        },
        "item": {
          "id": "375ae45f-1f9c-4204-aa1f-b53f3675c45a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "35710b27-a2e4-4f36-aa71-23327659856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9ab9f5bf-647c-456b-ad2f-d7d1a1616765",
        "cursor": {
          "ref": "044a396e-9c55-49bb-8242-dbe18fe64b83",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ce77b83-e642-47c8-908a-e173f2d2eaf0"
        },
        "item": {
          "id": "9ab9f5bf-647c-456b-ad2f-d7d1a1616765",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f3b07833-6b61-4f58-ae07-8af0a22a79e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6a5c5dc8-5da2-463c-ac8a-ffb55ebbfc33",
        "cursor": {
          "ref": "28b42042-89ab-4575-aaec-e0d7c69e55e2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b6de684d-4d15-4ea9-a57d-a4538b65d494"
        },
        "item": {
          "id": "6a5c5dc8-5da2-463c-ac8a-ffb55ebbfc33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b2f7b94-ba3d-49fb-b706-f4790d63f56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221a6f23-8751-435e-a90b-f557f1d98e0f",
        "cursor": {
          "ref": "db8421cb-1030-427d-9eff-5127e3e047c4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0f09b436-92ad-456a-9d3f-951fd5e14866"
        },
        "item": {
          "id": "221a6f23-8751-435e-a90b-f557f1d98e0f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0917cb6-8d26-4032-b769-ffd070973f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9b589a-de8f-4ee5-96b8-892258a63acc",
        "cursor": {
          "ref": "7c84aca2-1b65-4407-8b47-2acf2f7c881e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "52ebfcac-9235-42fd-a0e8-0d4bb5df0c3b"
        },
        "item": {
          "id": "0b9b589a-de8f-4ee5-96b8-892258a63acc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87997ff3-9abc-4b2a-99cf-daf6e8ac01aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0a566-7f41-4908-ac6b-70c9a70ec74b",
        "cursor": {
          "ref": "666b1dc1-0a4f-4932-a94b-c921b55603f8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5dcb8ddc-011d-4bcb-8139-6679a4837ea7"
        },
        "item": {
          "id": "1bd0a566-7f41-4908-ac6b-70c9a70ec74b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "badfb7c7-12a3-4cc8-a264-10824bba1d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343977e8-9ad0-4454-a42a-1a254071ce06",
        "cursor": {
          "ref": "ceed10e2-5efc-487e-a5a5-c1f1a7fa7d68",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2b00137c-cf1f-4a6e-ac2f-66d97e96513b"
        },
        "item": {
          "id": "343977e8-9ad0-4454-a42a-1a254071ce06",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "96bb351c-57c6-4cb4-8295-dffa634005d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6def94b3-a461-473f-afa4-84dfed22d2fd",
        "cursor": {
          "ref": "014cdc5d-f4ad-4913-b8bd-f060b7ace432",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bae36bd3-c131-4324-80cc-9686a2186552"
        },
        "item": {
          "id": "6def94b3-a461-473f-afa4-84dfed22d2fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "82296243-6271-4e6e-9d67-7358eed8e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f69b1-ddf5-424d-94fa-0a337c1a097c",
        "cursor": {
          "ref": "cd78cccb-de98-4c1f-842a-58a6e1999cfb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cae92489-fd4c-42f1-8e34-abc488b646a7"
        },
        "item": {
          "id": "5f4f69b1-ddf5-424d-94fa-0a337c1a097c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5b27c77d-1057-47ae-b3e9-18e6cd0c97ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340bb78e-3435-4a4b-ac39-1b70bb9d2325",
        "cursor": {
          "ref": "81177136-f01a-46a1-8d64-88831989cee5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c911c4ae-7a62-48d6-b855-1f6abeb2f6a7"
        },
        "item": {
          "id": "340bb78e-3435-4a4b-ac39-1b70bb9d2325",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de939741-d1b2-490d-8e1f-a3a48d3d8281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c25126-e802-4725-aea3-e0d1cec2b8ac",
        "cursor": {
          "ref": "30eb7e48-da25-4db9-b719-0bcd51df1503",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0ce6ab40-261c-487e-b8fe-43d9466e5cc5"
        },
        "item": {
          "id": "d3c25126-e802-4725-aea3-e0d1cec2b8ac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3252d014-4edf-46ff-a91f-efa77452af3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bb9cf4-bf3c-4967-8261-1e1d2fafbc02",
        "cursor": {
          "ref": "e0286b95-6665-49af-a787-48372a5a4c05",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bbfe44ca-382d-4bda-aa6c-b14d0d37c3f9"
        },
        "item": {
          "id": "79bb9cf4-bf3c-4967-8261-1e1d2fafbc02",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "16869bae-b611-4a18-928b-43d7d7d1c384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e9258-2418-4554-9e8d-090b3bdbb096",
        "cursor": {
          "ref": "deba526f-b3df-42fe-b75f-82496815e2ed",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a49912a8-6139-4a94-ba7b-e5273a3db2c1"
        },
        "item": {
          "id": "e04e9258-2418-4554-9e8d-090b3bdbb096",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fcf18722-8e81-4a3c-8e86-323780d92307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319e9ec0-3ac2-4563-9b34-04aa87bda22d",
        "cursor": {
          "ref": "56f2b91f-e733-4b8f-ba8c-56f39133cd66",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3ef52b59-8f30-440c-b988-52d843f65df1"
        },
        "item": {
          "id": "319e9ec0-3ac2-4563-9b34-04aa87bda22d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39866f28-9b63-403a-89f4-1ca525033f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851cf568-54a1-41cb-a708-5b695c5bb2e7",
        "cursor": {
          "ref": "1a2b201f-962e-4698-9f5a-34246c350d75",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2ccbcf04-3f3e-4c1d-a9d7-73daea532801"
        },
        "item": {
          "id": "851cf568-54a1-41cb-a708-5b695c5bb2e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81fa2d68-46a0-409c-9f3e-720c2a80896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16977ae8-d2ec-4486-abc0-3da7be700da9",
        "cursor": {
          "ref": "9edba9aa-5581-44a2-8f5c-2ea0ec56006d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "87ab11cc-0303-4a4a-83e2-6013692a3a35"
        },
        "item": {
          "id": "16977ae8-d2ec-4486-abc0-3da7be700da9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "840070cb-3247-4555-a5f6-4f24f5611e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3eeabc-5cb2-4fba-9fc2-6e978cb5e8f4",
        "cursor": {
          "ref": "7e27bd4a-ec6c-40b0-8efd-d23b19d470ba",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f0ac09e6-1b19-48f0-8a1c-00f5cbfd3220"
        },
        "item": {
          "id": "2f3eeabc-5cb2-4fba-9fc2-6e978cb5e8f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "13389f92-32af-424e-9240-0c6e135ef0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f532071-e20b-490d-ad70-18f7283f7bd6",
        "cursor": {
          "ref": "b83093c1-eb20-4fbf-89da-305e6ed5c392",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8514aa5d-456d-4201-99ec-a447a99b7478"
        },
        "item": {
          "id": "8f532071-e20b-490d-ad70-18f7283f7bd6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8b15bf8-d38a-4e89-9185-83091f701964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d94042-4414-4ec9-ad5b-c2b8b234fbd9",
        "cursor": {
          "ref": "c9be1704-fd37-416e-923d-715a0b29db2c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "075ace25-880f-43b3-9bf8-9f3d0f85ae22"
        },
        "item": {
          "id": "e9d94042-4414-4ec9-ad5b-c2b8b234fbd9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3f3570dc-1bba-4b60-8bc8-f51eed770d34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4ef29040-2c12-44ff-ad1b-1adeac66a03f",
        "cursor": {
          "ref": "0accaf19-fd97-4c72-aa69-98512fc8f259",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e6d1e499-2b21-4cd1-927c-b803ed316c27"
        },
        "item": {
          "id": "4ef29040-2c12-44ff-ad1b-1adeac66a03f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed2b871d-0290-4cc2-88ed-fdfd7d8e580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a01a12-aba0-4259-83c6-52b49f0e6479",
        "cursor": {
          "ref": "e1d56743-28d6-40cb-82fd-162ca2d44eab",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3f220714-22f1-4735-b9b2-9cda0045f69c"
        },
        "item": {
          "id": "89a01a12-aba0-4259-83c6-52b49f0e6479",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "989ac225-68fe-4863-a2f9-22cb250c52ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16613505-fc22-400a-8f11-dfd7daf0f22a",
        "cursor": {
          "ref": "4e606bcf-b531-4d14-972b-9189274e4824",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b6e2ebe6-fe55-4bd6-b202-b4d6d1f14130"
        },
        "item": {
          "id": "16613505-fc22-400a-8f11-dfd7daf0f22a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "254a266f-0412-4b76-9933-47dea36e0cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8122505-a6a1-4510-8268-830de02067db",
        "cursor": {
          "ref": "5b9d8e63-7c18-410c-9ade-b8d06299818d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4cd6c3a8-5fb7-45f1-8d93-fe3bd6350bb9"
        },
        "item": {
          "id": "d8122505-a6a1-4510-8268-830de02067db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "88762203-2b53-4047-a1bf-10d047401dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cc0efd-3625-46ae-a406-2696c13c179e",
        "cursor": {
          "ref": "2a66a4af-0c34-402b-a70a-21bbc38a2432",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d0651a69-8bc2-4dc6-ad9f-615dd476172c"
        },
        "item": {
          "id": "92cc0efd-3625-46ae-a406-2696c13c179e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c140e4e-089f-43a7-be9c-530259159421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e00e1d-2304-465f-8d43-9ace06951d63",
        "cursor": {
          "ref": "cc343bff-4b0e-4333-b5dc-0dc48a4939c8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fd57440d-94c5-4bad-911a-d8d5193f6a8f"
        },
        "item": {
          "id": "b6e00e1d-2304-465f-8d43-9ace06951d63",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "06bafb99-7f28-4f8e-8317-71f09c5b9a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e240c06e-6ac0-48fc-8f8f-00273cebe850",
        "cursor": {
          "ref": "b5280931-7337-47cf-8dcd-36093c66d0bc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a833b33b-eb2e-464e-9e05-9d4224a2ad02"
        },
        "item": {
          "id": "e240c06e-6ac0-48fc-8f8f-00273cebe850",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5f06377f-100f-4b20-a2ac-5c55f1f97980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef2e0c8-12c5-431c-844d-cccc85b2846b",
        "cursor": {
          "ref": "253e4e2e-f1cb-46cd-bc40-b35777d6622f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9ca33e56-ca56-44c0-b369-dc1fe8b3657d"
        },
        "item": {
          "id": "5ef2e0c8-12c5-431c-844d-cccc85b2846b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d6ea8e64-59e3-41f5-ac55-488cfc0144f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e7aaf418-12a9-4a7b-83bb-da0cedba41e9",
        "cursor": {
          "ref": "52435859-6e08-4138-896d-4da579b9e180",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4db6d98-d120-4745-b42a-63bdf53f09e3"
        },
        "item": {
          "id": "e7aaf418-12a9-4a7b-83bb-da0cedba41e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d19ef30d-f5b6-441d-b981-85af50dea26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0f0748-96b2-4dd5-aaf2-6a338b625b63",
        "cursor": {
          "ref": "a5155009-2131-4e0b-8475-120c6a6be501",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c42d916d-f6d8-4e5e-997f-f95b0a2d8c18"
        },
        "item": {
          "id": "bc0f0748-96b2-4dd5-aaf2-6a338b625b63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b588e81-839e-4015-9559-4c87faa8d491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a75c8-ab16-417b-9d40-24c2e7b36a92",
        "cursor": {
          "ref": "c641d396-bab0-4524-9c7c-0c13461cb704",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d4d22e5c-8d41-4495-bf14-0bb1f62f6c98"
        },
        "item": {
          "id": "413a75c8-ab16-417b-9d40-24c2e7b36a92",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9df191d2-bb99-4801-8fd4-269f57c164f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e12cb5-a03f-4b33-bfd0-0a53b5d1bc35",
        "cursor": {
          "ref": "d04023b8-8368-4f1f-a004-253d406b518c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "eb71bd79-beae-41d0-92f7-32ff644a7d80"
        },
        "item": {
          "id": "67e12cb5-a03f-4b33-bfd0-0a53b5d1bc35",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b56d241e-3308-4719-87b2-6f5c84b65f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eb209f-02b1-44d6-add3-4f118ebca967",
        "cursor": {
          "ref": "660321a7-0f8c-483a-a8f2-8fdd39ec7c13",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "55112629-b852-4811-b68e-2c1b21d236b4"
        },
        "item": {
          "id": "c1eb209f-02b1-44d6-add3-4f118ebca967",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8704c1ee-2895-49d0-8fbf-9ecdbf462931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b07dab3-07f5-4157-beb8-2dfc4178e8d1",
        "cursor": {
          "ref": "ea5be57d-830b-441b-b2b2-1d3118bc24a9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ef2b519-092b-4cee-878a-3b4908d8419d"
        },
        "item": {
          "id": "7b07dab3-07f5-4157-beb8-2dfc4178e8d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "150028d2-3f47-4dad-89a8-5bcc6aeddf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c2bcd7-5449-4c60-b79b-1dd5b1c23653",
        "cursor": {
          "ref": "d7c519bb-6623-460b-8108-1f99f4c319a5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d257c487-dd32-496c-8964-9cb894517bea"
        },
        "item": {
          "id": "95c2bcd7-5449-4c60-b79b-1dd5b1c23653",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "339f8607-8cb4-4e38-a623-1c848ead9c23",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "547acf72-addb-4aec-ace5-0602b845880e",
        "cursor": {
          "ref": "47e10bef-50d3-4ceb-918e-9ad2155b582a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26c46d23-8a8d-4b02-9b44-390edca9cd9d"
        },
        "item": {
          "id": "547acf72-addb-4aec-ace5-0602b845880e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d570ac23-00b9-49e2-b364-b6024ceb9aa1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "13c0b6e5-5e5d-4cd2-901e-d24329f96400",
        "cursor": {
          "ref": "b4009704-0aa2-4b9b-ac49-fa7d849da26b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d2f41cf7-5c21-4f8c-b708-653c293fe3c0"
        },
        "item": {
          "id": "13c0b6e5-5e5d-4cd2-901e-d24329f96400",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f5b122fd-3af5-4ab5-a04b-e92ec1dd0f56",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0b5d078b-9dfe-49e8-ae02-66f15025a8c0",
        "cursor": {
          "ref": "2d2f6371-1926-4ac7-bdc4-6593b52a253f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20e31adc-440b-4d87-a881-65aa4df09083"
        },
        "item": {
          "id": "0b5d078b-9dfe-49e8-ae02-66f15025a8c0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fee39da3-7545-49dc-8fe0-95197abbbe48",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ef48c4bc-11ac-4296-9311-6cc24397c631",
        "cursor": {
          "ref": "3aca63d5-5d01-42db-b16c-e69d2c241e55",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9dc46f5-117e-4ed5-87ff-0a66c1dd83cd"
        },
        "item": {
          "id": "ef48c4bc-11ac-4296-9311-6cc24397c631",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ee8bf4ee-1e8d-4c65-a0d6-e18d5dab391b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c2bed8d1-f2bc-477c-9daf-dfe787b71497",
        "cursor": {
          "ref": "15b89234-77fa-4836-9aad-f9572bee94f9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4e684e80-30ee-438d-8df0-2addeb4f6aa0"
        },
        "item": {
          "id": "c2bed8d1-f2bc-477c-9daf-dfe787b71497",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0fb4fc10-51b3-4080-813e-6f7a7c1d17cb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "17eb7821-1853-420b-951a-18d97873e205",
        "cursor": {
          "ref": "3fea8e37-ee6d-4af3-a3d6-254d9dfb5435",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "73d0de83-c47d-464b-b05f-96969fa01fc8"
        },
        "item": {
          "id": "17eb7821-1853-420b-951a-18d97873e205",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4e0dd34b-fe41-4a9a-82ab-0a9b1afe5304",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6c1c43-078e-4879-abc5-e7749899d5d8",
        "cursor": {
          "ref": "550b9fa5-6c62-42b9-973b-dc224e2c398a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5ce78dae-14dc-43e3-b66f-9717599dac16"
        },
        "item": {
          "id": "9c6c1c43-078e-4879-abc5-e7749899d5d8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41f6188d-a478-4c50-a89b-c179c5bf0d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5389cd-4bea-43df-817b-ea3a968b7461",
        "cursor": {
          "ref": "56252d6a-d022-4a5d-b70d-cca9f59cbf55",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d28efdef-e208-486e-8483-b079da4145bf"
        },
        "item": {
          "id": "4e5389cd-4bea-43df-817b-ea3a968b7461",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "37ad43a3-c874-4500-8ebe-6d59c2931fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa1707a-e00a-49e9-9a58-423a0b650644",
        "cursor": {
          "ref": "114855b0-c207-45a9-805d-722ed40d85c4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fb37563b-794e-4df2-ba96-9554968bbf7c"
        },
        "item": {
          "id": "1aa1707a-e00a-49e9-9a58-423a0b650644",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "69554323-5490-4fe2-8f31-c8f34ed94926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e6f210-f4dc-4b88-a5ec-773fad5445d9",
        "cursor": {
          "ref": "dd48a3a8-d458-4b31-af2a-8c135437be66",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ad6f24cd-2742-4907-bf88-6215da48c074"
        },
        "item": {
          "id": "c4e6f210-f4dc-4b88-a5ec-773fad5445d9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5edd8fd1-b543-4599-9fdb-8eaca354cb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa95ed3-5ef6-4eda-bf95-dbba11486049",
        "cursor": {
          "ref": "dce1c180-b0a1-4150-bc9d-6bf3f780e721",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c393cd1b-4a73-4480-b07f-b960978cd66b"
        },
        "item": {
          "id": "2aa95ed3-5ef6-4eda-bf95-dbba11486049",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6dedbd9e-90ee-4af8-adf6-6e879dd4d4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9eb1c0-5318-4ba8-b353-c22768460f84",
        "cursor": {
          "ref": "4ea7ca37-1714-45f9-bb8a-ca28a0e75b45",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fea17f75-1228-4b4e-9163-e9f7291677d1"
        },
        "item": {
          "id": "8a9eb1c0-5318-4ba8-b353-c22768460f84",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b998d9a2-8052-44dd-abfe-af94b0088c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bdadb1-9784-4e2d-a1b1-6c2f3d4db7ef",
        "cursor": {
          "ref": "17a6ab5b-1403-49f1-98d8-558a61afde2d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a7874b7-b19a-42ec-b382-79a386bf435e"
        },
        "item": {
          "id": "78bdadb1-9784-4e2d-a1b1-6c2f3d4db7ef",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1249b5eb-4231-4b59-90d5-8a50f436d678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17826b-a11c-4d3e-850e-92f1f84db6b5",
        "cursor": {
          "ref": "0dc477c6-2ea3-46ef-9d1d-7d5fc6dd0780",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "61e75884-3f74-4533-8917-41fd87bc7b3f"
        },
        "item": {
          "id": "0f17826b-a11c-4d3e-850e-92f1f84db6b5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05f94bdc-775f-49da-a81e-88bb2528ae03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441d2042-8744-451c-96e1-803fa84a6c65",
        "cursor": {
          "ref": "7bf21d40-1ff0-4216-b08e-1fb95dad1eba",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "392d8324-8ee7-4167-a512-4e9fc9162dfe"
        },
        "item": {
          "id": "441d2042-8744-451c-96e1-803fa84a6c65",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ff3088f8-07f0-4e03-b49d-a3ad80884242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625b3937-08c4-4df9-9d87-abdbb2a20905",
        "cursor": {
          "ref": "02961502-9352-41d0-bb75-132b9ccf8816",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7dfc995-4487-4fad-ba84-cb10997be7d3"
        },
        "item": {
          "id": "625b3937-08c4-4df9-9d87-abdbb2a20905",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ad6cb5f6-7607-45ee-8550-aec84ddc5bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d268ef00-743d-47f6-a86e-ab2618bdc15c",
        "cursor": {
          "ref": "4762f4cc-ac98-460e-be76-1d6bb4bfd505",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f99748e1-340f-473f-ab52-f4b686d4b802"
        },
        "item": {
          "id": "d268ef00-743d-47f6-a86e-ab2618bdc15c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c01b143b-c283-4fbe-bc6a-000dacaaddc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41e8f7-036f-490d-8368-32435352a1c6",
        "cursor": {
          "ref": "17915f18-7f66-401f-8373-37c9b3b8180e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fd67b47e-7da8-494d-ba9f-97675d72a3e7"
        },
        "item": {
          "id": "2c41e8f7-036f-490d-8368-32435352a1c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "88ca4fc9-6426-4529-ae33-923042e8db18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55ed9ba-2bb9-4e21-8a79-b6f0b0102686",
        "cursor": {
          "ref": "37138ed2-5358-4413-b16c-5a2dc1a42b67",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aded785f-eaff-4535-8349-a3841787db67"
        },
        "item": {
          "id": "c55ed9ba-2bb9-4e21-8a79-b6f0b0102686",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2556d510-f3db-4868-81c9-34d4926cae4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a75b6-745d-4192-9c34-0ee5d0a663dd",
        "cursor": {
          "ref": "0f6d4eba-d2cf-4904-9c65-09a30b66c84b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b3727eb7-111f-455d-965c-6fc67f109a23"
        },
        "item": {
          "id": "8a1a75b6-745d-4192-9c34-0ee5d0a663dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69458cb0-9765-4f6b-a273-917d7ce11849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666a63b1-3a58-4d1a-8f83-e416bc440124",
        "cursor": {
          "ref": "4c0648bf-1eb3-4b9e-8cc0-bb05259eed79",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b904e8db-4322-4393-bfc1-e6a7dcdf54c1"
        },
        "item": {
          "id": "666a63b1-3a58-4d1a-8f83-e416bc440124",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b65728c5-10fd-4659-b672-6d53e6950248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1dffea-6fc6-4a08-bc27-0b2c5c6a4bca",
        "cursor": {
          "ref": "43bf01ad-0286-4823-84d9-d05203e0f832",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8cd34654-fc17-4dff-a03b-ed4b8bf9905c"
        },
        "item": {
          "id": "de1dffea-6fc6-4a08-bc27-0b2c5c6a4bca",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b52c2b05-df71-4d6c-a10a-614fa1ce3ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832d35f4-7143-4221-99ad-7d9c6bce9e65",
        "cursor": {
          "ref": "b4b97832-b670-4215-9a61-4485e806b3ab",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a34397e2-dfdb-4418-9433-873b8032f575"
        },
        "item": {
          "id": "832d35f4-7143-4221-99ad-7d9c6bce9e65",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "12e112e3-a581-41bf-af94-190e856440b9",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "33ac5e6a-0290-4d9b-8e27-b0f598428ec4",
        "cursor": {
          "ref": "fa230913-ecaf-410d-9243-3efd351d6a74",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5c18b477-f97d-40d3-9ca1-917e9627bfb9"
        },
        "item": {
          "id": "33ac5e6a-0290-4d9b-8e27-b0f598428ec4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "27d56f51-c8df-4c06-a86e-dfb3085c3d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f980ee9d-52cc-4afa-a280-6311fadbd72e",
        "cursor": {
          "ref": "d6f118d6-ddd5-40fd-998b-66e8302ad978",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e3d44bef-afbf-464e-b4f0-76ea1328bff3"
        },
        "item": {
          "id": "f980ee9d-52cc-4afa-a280-6311fadbd72e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3044f59-edb6-494c-9b0b-aba20cffdd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc4b9e6-0d65-48d6-86e7-c7bb4792b8e8",
        "cursor": {
          "ref": "40ab2b3e-5b97-40fe-98b5-7c1e206dd694",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6c0da381-9349-47e2-921d-64c9d905f4fd"
        },
        "item": {
          "id": "cfc4b9e6-0d65-48d6-86e7-c7bb4792b8e8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3c5568cb-9989-46f6-8d56-145c82e14341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a85101-af46-4df0-99ed-2a606a1bdba0",
        "cursor": {
          "ref": "86774f07-6ac6-4aac-8308-3d9010c4e4a4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2401ef3a-a0aa-4561-9eb9-899a754f85c6"
        },
        "item": {
          "id": "89a85101-af46-4df0-99ed-2a606a1bdba0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a970a6d4-1577-4aae-aa2d-1757603d34ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2034230-2c01-4ac1-ab53-d3a45a2a7fc8",
        "cursor": {
          "ref": "b227cfd5-acb5-44dd-ad21-fdac4028142a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9e044987-9a6e-43e5-a962-dbf916f7afe1"
        },
        "item": {
          "id": "d2034230-2c01-4ac1-ab53-d3a45a2a7fc8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b8592c7a-eab7-4a09-b724-021b7ce09e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8cc375-1479-4061-a214-e4e57e3f9c51",
        "cursor": {
          "ref": "e8d5e7e6-5066-4cbd-a31a-cdef32899702",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3edd441-ae05-4bd9-9ca2-32d152572bae"
        },
        "item": {
          "id": "3a8cc375-1479-4061-a214-e4e57e3f9c51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f46ea375-8f33-453d-94c6-e6cc6de00bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae02eab-64d2-41e4-9bc0-06ba864c954d",
        "cursor": {
          "ref": "5555597a-a9eb-40f2-b97f-b03d04769b46",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2a20d67b-1d18-4b25-b922-bbd636b73c7c"
        },
        "item": {
          "id": "1ae02eab-64d2-41e4-9bc0-06ba864c954d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0279ba96-5955-47de-acac-59bd700bd3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049dcff0-ed50-40f7-b6bc-f747351d6a9e",
        "cursor": {
          "ref": "487c5a11-7fa7-4901-a1bc-4fe7f37cb3ce",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "872463c2-1da3-4085-a319-01a04fa055c9"
        },
        "item": {
          "id": "049dcff0-ed50-40f7-b6bc-f747351d6a9e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1cc5bf14-2e7b-4930-8587-c1bd7a0edcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd69d1a-8341-482f-86d2-9ce7e3ba807c",
        "cursor": {
          "ref": "f7f71226-0a2f-4e1a-b216-e45df1e26678",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5cc37ad2-bbd5-4490-b335-157aca62c305"
        },
        "item": {
          "id": "2fd69d1a-8341-482f-86d2-9ce7e3ba807c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ffc66e9-fe1f-4d2f-92cc-a58dac9c199f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5bb627-4446-4a75-91cb-bcab99ce6de9",
        "cursor": {
          "ref": "b73439ac-9844-461a-9762-0d367db7445d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bfb5a7fb-6a73-4304-a71e-f2c7b4ee2b1e"
        },
        "item": {
          "id": "cb5bb627-4446-4a75-91cb-bcab99ce6de9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "53cf2222-5444-454b-b890-fe06a9d4c0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c6eea-3954-41e7-8ef2-a823f9eaa280",
        "cursor": {
          "ref": "7afcd7e7-56d9-44fb-9a4d-8b5906612ef7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6461ead2-fca9-49fa-b5f7-056594010210"
        },
        "item": {
          "id": "ed2c6eea-3954-41e7-8ef2-a823f9eaa280",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "391d459d-2201-4428-8e23-a3190af802de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba1626-6b26-40b9-83de-4694019a1fca",
        "cursor": {
          "ref": "dbd67631-f78b-4cb6-8bad-6658e46d076d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3719e36d-31c1-4aaa-925f-ad59799d6f2a"
        },
        "item": {
          "id": "3aba1626-6b26-40b9-83de-4694019a1fca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a2d163f3-b22f-4d9b-8d47-24b58a59d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27414b2-2866-4ce0-a571-3faaebc1013f",
        "cursor": {
          "ref": "d8d0d593-f332-40e0-9baa-f24afd29f5a8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d230b23c-5d88-46d2-b9e9-f2dbb857ecee"
        },
        "item": {
          "id": "a27414b2-2866-4ce0-a571-3faaebc1013f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "949489d9-65eb-47b4-9229-608773b70814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f420f779-acb5-401f-951f-201cde574f55",
        "cursor": {
          "ref": "25f43277-d6e1-47a5-b2cc-d626f1e6e2ec",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1c04fd74-cbf0-425c-add4-f5cdf39e7f1a"
        },
        "item": {
          "id": "f420f779-acb5-401f-951f-201cde574f55",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9468005e-d185-420d-9105-71791478d14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d919b36e-45d2-466a-a17b-9117a7715c69",
        "cursor": {
          "ref": "6a80effe-0bb1-4a0c-aded-f6765f50599e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2139be7d-12f1-4ab7-9181-2ed9a03065e3"
        },
        "item": {
          "id": "d919b36e-45d2-466a-a17b-9117a7715c69",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47118cf0-eefc-44d2-8482-b914c9e6698e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca4175e-3385-4dfe-a324-4c8c316db772",
        "cursor": {
          "ref": "fe878c15-d955-49ee-af49-f2f2ebbcf02a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "59c89fd9-18f6-42ae-a700-c969e52595cc"
        },
        "item": {
          "id": "bca4175e-3385-4dfe-a324-4c8c316db772",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e5dd1b04-54cd-4e96-a8e5-5384bcf8ecec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28bd61f-53d5-4c2b-b915-9eba666a56a5",
        "cursor": {
          "ref": "50a8fa76-c536-41f6-8edb-eab15f9d5ce7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6ebadf61-9b87-4fe7-af96-6c3e90338ece"
        },
        "item": {
          "id": "b28bd61f-53d5-4c2b-b915-9eba666a56a5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "824179fd-da3f-4d90-92d8-88d97bd57fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfcbc69-0bb2-4346-aeda-56213b01eb51",
        "cursor": {
          "ref": "ac882b6a-ecd8-4efa-86ab-9a0be99face5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "26c2a743-2235-4b1f-8152-7f80f08548d7"
        },
        "item": {
          "id": "9cfcbc69-0bb2-4346-aeda-56213b01eb51",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a1cfa36a-127d-4441-9413-9470c71171f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7604d6cc-4c17-430f-879a-aa0d4dd8b7f7",
        "cursor": {
          "ref": "933ece08-d94c-4577-a427-2c7cfdee4c5e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "773efe02-e50f-486d-8521-27035c516938"
        },
        "item": {
          "id": "7604d6cc-4c17-430f-879a-aa0d4dd8b7f7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3884f1e6-50e8-4e23-810a-e54d0100ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6175d283-52ca-44f0-b33a-7a4eb3d0a805",
        "cursor": {
          "ref": "2d6f1ef3-3f39-429e-9aee-1b708f08d33d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1338ad04-815b-4922-a35e-7ee892045379"
        },
        "item": {
          "id": "6175d283-52ca-44f0-b33a-7a4eb3d0a805",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "575e10fd-e21a-4843-a0c3-960a3d620c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8959c4c4-ff20-4efc-85a9-0673653e45cc",
        "cursor": {
          "ref": "c94c8d77-a2e4-45d6-9f55-d20a44bd6350",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "da2d93e7-2564-427f-a67a-bad8e692870b"
        },
        "item": {
          "id": "8959c4c4-ff20-4efc-85a9-0673653e45cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8fdb0f4b-b1e7-4152-bf80-ffd26d9f96d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947ded4f-fdb6-4005-85f9-e85661a7f465",
        "cursor": {
          "ref": "f08fd587-168f-450a-a8b6-b446b6a19019",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6b34c8aa-c117-4fb9-b851-f14ef6bf4d58"
        },
        "item": {
          "id": "947ded4f-fdb6-4005-85f9-e85661a7f465",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b97d30a9-c151-4a73-86db-24f52dcdf0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51d3c7f-bdc1-43e1-9308-6907a6ec60ca",
        "cursor": {
          "ref": "7a3a0785-b559-4a97-b460-db4403312f36",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fc9fafa-1380-45b6-bf40-7d5c19b34794"
        },
        "item": {
          "id": "e51d3c7f-bdc1-43e1-9308-6907a6ec60ca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9eb032b2-12e9-47f3-bb1b-fc5cd3af2e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f062f8b-5f23-4ce9-9728-225bd17bfbe6",
        "cursor": {
          "ref": "08b45aaf-6d5d-4e52-8775-b4822d6f9474",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "de05c6d2-e86b-40db-ac0a-c269397ee936"
        },
        "item": {
          "id": "3f062f8b-5f23-4ce9-9728-225bd17bfbe6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "43c8ca42-2b3c-42b6-af01-005289f7550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d8bed6-1d38-48b5-82ba-8e6814fb8adb",
        "cursor": {
          "ref": "a0d7ccda-f0a6-499c-b9b1-0fe74f05e4dd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "949ac73b-5e09-40b3-afc1-1bec9a14464a"
        },
        "item": {
          "id": "55d8bed6-1d38-48b5-82ba-8e6814fb8adb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "85baf5e4-9b27-4805-a045-de4544e00f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed1e931-74e0-49a8-bbd1-6b0092f7f2d3",
        "cursor": {
          "ref": "01f64014-2425-4b1a-8c58-91ea526f5551",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90d94876-f8c0-491a-b08c-2844a0d1daa3"
        },
        "item": {
          "id": "0ed1e931-74e0-49a8-bbd1-6b0092f7f2d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f61fadb-5cbc-42a2-a948-e0723849be07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4660b0ba-92ba-4c02-8a19-f35bc51a512d",
        "cursor": {
          "ref": "e72a2336-8a06-4563-8659-aacfd39c13cf",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dcfc6696-2fd2-4015-b0fa-7f295b924dd4"
        },
        "item": {
          "id": "4660b0ba-92ba-4c02-8a19-f35bc51a512d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eedc43c1-a98b-4187-88ed-fe14cfd46525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5d963c-5f64-4a31-b82d-83851fce1345",
        "cursor": {
          "ref": "30857cb0-9fb0-4273-b420-51c6d1b9eb8b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "35b65654-a757-4294-aa5d-1785f2365d5e"
        },
        "item": {
          "id": "4a5d963c-5f64-4a31-b82d-83851fce1345",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "844b15ed-05db-4293-a2da-e2d912e54e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f7571f-3a85-4f5e-b879-5d66005cd728",
        "cursor": {
          "ref": "c611d142-6f87-4ccc-a7c4-284ecc7e7224",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4776ae1b-df14-45c4-a064-d5977ca61254"
        },
        "item": {
          "id": "d9f7571f-3a85-4f5e-b879-5d66005cd728",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40c268df-05f2-43ae-923f-709389991c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617e1729-561b-4747-a823-f88c72561806",
        "cursor": {
          "ref": "fbadeabf-5c1f-4b5d-b873-5fec06761c77",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "64f8c5c1-942b-4170-9e39-f3c7f0bf64aa"
        },
        "item": {
          "id": "617e1729-561b-4747-a823-f88c72561806",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8ae71b58-3b46-45ac-a6bd-ad8b55c724e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e51ac5-67a2-459b-82e6-7572559e0f47",
        "cursor": {
          "ref": "5b23d801-9a32-4f69-a770-6f0b1eaa415e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "445240b4-a884-4bee-8c30-c1fdacb44322"
        },
        "item": {
          "id": "11e51ac5-67a2-459b-82e6-7572559e0f47",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b337a16b-dfdc-4a76-9076-0ad8b22a5996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd318b-e393-4ce3-9c9a-bd17a2f0fc52",
        "cursor": {
          "ref": "7575574d-b4ca-4e6e-b507-a3c7f9eb7dfb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8623d647-8f7b-4d10-b33e-ecbe48c34fc8"
        },
        "item": {
          "id": "74bd318b-e393-4ce3-9c9a-bd17a2f0fc52",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f2d30e77-a23c-46c2-b6c5-38d43d171876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96125b3-2a85-47f5-af45-b891f77b20a2",
        "cursor": {
          "ref": "e009b5d6-c718-4db4-a9ae-e81fbec46e93",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c39326cf-44b3-42fe-9e68-702365bb7ca8"
        },
        "item": {
          "id": "e96125b3-2a85-47f5-af45-b891f77b20a2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "992d3e46-22fc-4ffc-8df8-5f89776a5985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5acf85-9a02-4015-8bc2-3dc2341cbad7",
        "cursor": {
          "ref": "20ba8e78-f6ad-4616-adda-bb4fa6f5d454",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd7247ad-8eb2-459a-9771-825e8dfeaeb0"
        },
        "item": {
          "id": "2e5acf85-9a02-4015-8bc2-3dc2341cbad7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "68b54a31-fb57-402e-9b31-f46b5ab1a509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35581934-34c9-4f50-9294-bfc50d51e55c",
        "cursor": {
          "ref": "431951c9-6bbb-437a-8678-47002db95fcd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "372f060e-a167-4bb0-8cab-5b18f0db303d"
        },
        "item": {
          "id": "35581934-34c9-4f50-9294-bfc50d51e55c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a8c01586-0aad-4ec9-8f33-ca1fa1f00f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7820d066-8a2e-4a22-9891-329eeb00d696",
        "cursor": {
          "ref": "71df66ed-082a-401f-92e7-6d78633564d4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71a18b62-34c9-4437-8cf5-78a910e06ba9"
        },
        "item": {
          "id": "7820d066-8a2e-4a22-9891-329eeb00d696",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d0da866a-1085-4a9d-8d2e-010808c83a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e811a2-a006-49df-b962-035c295b5e7d",
        "cursor": {
          "ref": "ebf6f96e-cc76-484b-83f4-db586f770083",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "40c5003b-e214-4d23-b43d-388aa0c8310f"
        },
        "item": {
          "id": "a0e811a2-a006-49df-b962-035c295b5e7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a646304-f842-4ef1-8129-996e938f7aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16aad5e-85f2-4c54-b09b-69f7aaa5d8ae",
        "cursor": {
          "ref": "81be5439-e0b2-4f7e-8c81-ca3ad109befe",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9fae88ff-b08e-4d8a-82cd-0385cfff9b7a"
        },
        "item": {
          "id": "b16aad5e-85f2-4c54-b09b-69f7aaa5d8ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f7ffd258-0b97-4b07-973e-babf60b3dd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe8177c-4bd2-4d4a-9d95-96c76fcfc3f2",
        "cursor": {
          "ref": "3f727a02-9fdf-4d13-81a6-d35131634409",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "95cae9b2-24e0-433d-9665-da991a879f5a"
        },
        "item": {
          "id": "2fe8177c-4bd2-4d4a-9d95-96c76fcfc3f2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9e6ee587-bed9-471d-ae3d-d1d256f7f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b7829c-ef3d-48bb-961f-54aff2b598e0",
        "cursor": {
          "ref": "75f06eaf-b557-4e82-b4e7-7b9b2204553b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5311c80f-7348-49dc-9182-34be0d8b3291"
        },
        "item": {
          "id": "64b7829c-ef3d-48bb-961f-54aff2b598e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72b96f51-e2ca-4dd1-904f-67d7a74e4d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab0057-b2b0-425b-8e5e-95e4253d24d6",
        "cursor": {
          "ref": "a89ae878-f3a4-4d8c-b109-6eaf1aa00327",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1351fdb0-0593-4c8b-b622-fe40f9fad88a"
        },
        "item": {
          "id": "69ab0057-b2b0-425b-8e5e-95e4253d24d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "35339185-690e-4c05-b8a8-bae4fb4b95fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a64c5-2427-4f8e-b630-c98533160e8f",
        "cursor": {
          "ref": "79d4ab37-2e58-485c-b3cf-b7a1a909484a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c4636aad-7052-4f22-80dc-9c9ce8ee0714"
        },
        "item": {
          "id": "385a64c5-2427-4f8e-b630-c98533160e8f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5754ecf-14ab-4255-bd93-995144e500f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe778d8-cca6-499a-82ce-322c9589727a",
        "cursor": {
          "ref": "dfbbbebf-71d5-47a3-ab62-021ac1f8a4d9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8be41613-56f0-4bfa-9554-f4b0ba6f29ba"
        },
        "item": {
          "id": "0fe778d8-cca6-499a-82ce-322c9589727a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0d7aee7f-6d5d-4677-8030-8b6c3fa6a189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f707f80-f232-4515-8142-7a03f3d5d948",
        "cursor": {
          "ref": "9828094d-74c8-4ee7-a923-2f34c7d5ae6f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b930a4fb-56b3-44d2-a1ae-c81b705f9376"
        },
        "item": {
          "id": "4f707f80-f232-4515-8142-7a03f3d5d948",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b23b03bf-8646-46e5-89e9-5e0ca4b9032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd8b08-b0ce-44d1-a80e-09e3305f82dd",
        "cursor": {
          "ref": "fad095ed-3102-4a6c-ab39-0470efc2a3a6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5edab8a0-08a2-4c8b-be3d-ac5d67675f69"
        },
        "item": {
          "id": "0bbd8b08-b0ce-44d1-a80e-09e3305f82dd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e02789c5-6998-4d94-b011-3f494b4aa6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa71c8-0fbb-429c-a02f-262bc91d72a3",
        "cursor": {
          "ref": "42da4cd2-9b56-4052-966a-bada2dbdae15",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2f247681-95b8-4ff4-a260-232161192b14"
        },
        "item": {
          "id": "33fa71c8-0fbb-429c-a02f-262bc91d72a3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "82a8c417-a660-4e09-9ba8-889cb7671b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b4c24f-9487-410a-90bc-1b8696c15bb4",
        "cursor": {
          "ref": "9c5c7794-5cfd-4070-b635-51ac70e1ac3d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cf6f18d8-a82c-4bc5-aaad-89805ecdf42d"
        },
        "item": {
          "id": "14b4c24f-9487-410a-90bc-1b8696c15bb4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "458eb367-1bc2-4d00-a076-0c92113443b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eda9fa-69a6-465a-a5d1-0ac2b0a9bfdb",
        "cursor": {
          "ref": "b6d63704-7919-4848-9b92-522783970888",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2bed1f0e-3346-4a9a-83a2-057aaf49440c"
        },
        "item": {
          "id": "80eda9fa-69a6-465a-a5d1-0ac2b0a9bfdb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5e86c968-41b8-4fa5-8003-da812a6a2f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec9248-39a6-44a5-b8b8-ebdd46b52871",
        "cursor": {
          "ref": "1f03f268-2f35-485a-8392-58ab2a89e4c0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "95a50071-b287-4160-a9d0-4bfc59557fb4"
        },
        "item": {
          "id": "6dec9248-39a6-44a5-b8b8-ebdd46b52871",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "14ef7489-f5a0-4165-942a-337c9a823a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e9b427-fd5e-4f1a-952b-f5bf486b47db",
        "cursor": {
          "ref": "20b6ca15-304b-4e4c-94af-0c791228e41e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b78f529d-13b1-4ac7-970a-e5c8d5f5178c"
        },
        "item": {
          "id": "56e9b427-fd5e-4f1a-952b-f5bf486b47db",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c519aac-0a54-4424-b407-7dc1bb30e330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde44ec0-4a45-4938-97ec-83bde9b0a60b",
        "cursor": {
          "ref": "e5e47cac-6bf5-4e8d-bb68-bc33828f4c29",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5d1f0262-f917-44a7-8b5d-23fbeac78f25"
        },
        "item": {
          "id": "fde44ec0-4a45-4938-97ec-83bde9b0a60b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "78798005-19c7-4f93-b145-73ed95bfac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761db427-78dd-448a-94b6-67b57c312b8b",
        "cursor": {
          "ref": "e86bdf8a-4a50-4856-a4fc-708c2f4c0c88",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f606e38c-8c44-4db6-ac5d-ad8a3975241a"
        },
        "item": {
          "id": "761db427-78dd-448a-94b6-67b57c312b8b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e4727bab-6799-4a37-8345-ee8e56f8631f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ba3e34-78a7-48fd-9f9f-08e94636054e",
        "cursor": {
          "ref": "b5bda973-4b19-45a3-b8aa-da7c8c3b862e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "21fbb676-6d74-4bd3-8e0a-0ffde88a31d4"
        },
        "item": {
          "id": "f3ba3e34-78a7-48fd-9f9f-08e94636054e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b76d807d-76fe-4a61-8e3f-6e692d075e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13723cc-60aa-4877-96ba-e5aacbd63b64",
        "cursor": {
          "ref": "1bcf2a88-fc2e-4ef3-9c7c-0e3b70aeb244",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9b1f690-55f8-418e-bd41-dcae1788c9e6"
        },
        "item": {
          "id": "c13723cc-60aa-4877-96ba-e5aacbd63b64",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c189ab97-5b4a-4925-a1f1-602f82e21d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59676667-865f-4b21-be12-74f33bdea27c",
        "cursor": {
          "ref": "c34545df-7900-4310-afe6-42c555f17255",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "356415ee-4122-4f85-b215-156eef36bf27"
        },
        "item": {
          "id": "59676667-865f-4b21-be12-74f33bdea27c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d9843a67-a32b-4875-bfd5-f6c5fcaa5c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28113871-5b94-4a4d-9254-6bf725a27688",
        "cursor": {
          "ref": "34d8ed43-dc63-4995-b0ab-8bc014fbd7cf",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "484e5fbc-fbf3-4b8f-bec4-d38d2cc852a6"
        },
        "item": {
          "id": "28113871-5b94-4a4d-9254-6bf725a27688",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0ea31052-f8ad-4f55-b4a9-eee6592a9e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d625417-2f05-422d-9972-d0a56eec5b60",
        "cursor": {
          "ref": "7d257e63-0a82-4d10-81f4-b5194493e4dc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7167fc5a-5324-49df-9ea0-3d983e27fae6"
        },
        "item": {
          "id": "6d625417-2f05-422d-9972-d0a56eec5b60",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7da6ff56-5aa2-4bae-890a-1659301c2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd306a-1abb-4932-b377-597e2079bb95",
        "cursor": {
          "ref": "beb79bfa-4da3-4544-8e10-94bbf9c07e0d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a3bd8697-9aa7-4fc6-9015-97a6ad06a08a"
        },
        "item": {
          "id": "50fd306a-1abb-4932-b377-597e2079bb95",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "907c9b55-c384-4dd1-81ea-f4cd85b10380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1723a84a-d905-4b3f-b84d-48fcce83cca8",
        "cursor": {
          "ref": "bc87282a-725d-4fed-a9b9-4be7529a655d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4a27fd5d-0343-4343-b35e-457d2ef87329"
        },
        "item": {
          "id": "1723a84a-d905-4b3f-b84d-48fcce83cca8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8ed401c-0a29-4c22-a609-b480e333140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aeb86f8-a5f1-484b-8cfc-8c62686818e7",
        "cursor": {
          "ref": "f178ace8-0d4c-4b89-9212-90a98355e1c0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d1c2e8a3-5a7a-4153-93f4-93ea3b08d20e"
        },
        "item": {
          "id": "9aeb86f8-a5f1-484b-8cfc-8c62686818e7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "43ebed04-a77e-48a4-b01c-1069da94e0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6306deb-d0b9-4b4a-8023-212c85d27664",
        "cursor": {
          "ref": "bb3105d4-0b3e-4fe7-a94e-2dce7604ebc9",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "57aff9fd-2c3a-4e28-ab76-79ee229025a2"
        },
        "item": {
          "id": "e6306deb-d0b9-4b4a-8023-212c85d27664",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "26cfbe2b-bba7-4098-b919-e5f37d8a1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c6325-654f-4b8f-9615-df2ade5c2e5d",
        "cursor": {
          "ref": "649882f7-a024-4745-911d-62c9d10d4a9d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4688ae87-7efe-4515-b065-e47789164716"
        },
        "item": {
          "id": "d01c6325-654f-4b8f-9615-df2ade5c2e5d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb65352d-3744-405e-889d-dbf253270d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55439993-c3b5-4006-aa27-12724a4fab60",
        "cursor": {
          "ref": "fd928d2c-9afc-4d4f-8f2f-552a045761c8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d053f8ec-abce-4f0e-84a1-e606bf0f7a65"
        },
        "item": {
          "id": "55439993-c3b5-4006-aa27-12724a4fab60",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5ecfc04-2891-407c-85e7-47928dcd314e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1c5a11-d9ad-4c2e-a1d7-0d2b22ac379c",
        "cursor": {
          "ref": "8fc1f0f7-8973-469c-bd0a-3ab934e98c88",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "67e3ab42-df50-485a-a6e1-f1d6ad58416f"
        },
        "item": {
          "id": "1b1c5a11-d9ad-4c2e-a1d7-0d2b22ac379c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72841ac9-0c11-455a-943e-d21b2dfa2220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a67f672-3f2a-4631-b548-ff5f99dbca1c",
        "cursor": {
          "ref": "ddc109bf-6556-4072-b914-973d3c7feb18",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4fad0acc-590a-4d15-9ac3-de080b9ffa3d"
        },
        "item": {
          "id": "5a67f672-3f2a-4631-b548-ff5f99dbca1c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c4446a5-42f3-4f65-b55b-5a4dec7d0453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477125cc-9556-4a04-99e4-753eb5e12090",
        "cursor": {
          "ref": "9947486c-ac05-44d6-981e-faa9ae52974b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1096a06c-0f5b-4f3c-a821-07abf54df29e"
        },
        "item": {
          "id": "477125cc-9556-4a04-99e4-753eb5e12090",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "99afe0fa-3d91-4141-95cc-44fef64f7ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54373543-44e3-4669-9207-936689fbfe09",
        "cursor": {
          "ref": "6dcafc5d-4d81-44bb-bec0-8b7367d0c90a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bd6c72c4-3024-4d9d-a79f-8c266da3327b"
        },
        "item": {
          "id": "54373543-44e3-4669-9207-936689fbfe09",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "df58edda-fc0f-4740-b144-a82f5e65995c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0167da-b299-4e97-a7f2-b38472173b04",
        "cursor": {
          "ref": "b40e7c08-5503-452f-bd06-b709f0f58b58",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "178ef8b2-cc08-4967-92a6-cb4aa8b0f503"
        },
        "item": {
          "id": "7c0167da-b299-4e97-a7f2-b38472173b04",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "db63c776-3bb5-42aa-8988-f55bde337387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d700f9-647b-4dde-9225-a2ad899eec88",
        "cursor": {
          "ref": "30088b25-6d6a-42d0-8c80-7336c155e051",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "917eb9d6-4be8-4741-a644-d234b927c197"
        },
        "item": {
          "id": "e8d700f9-647b-4dde-9225-a2ad899eec88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "416d8cec-83f8-413a-bd3e-f095e2695bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b6c76-fa4f-4bd9-97b7-dbc78233c545",
        "cursor": {
          "ref": "6ad03b8f-567d-4b00-9f9d-6be442de0897",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d797c10c-646a-4c55-a95c-6edf8ec99d82"
        },
        "item": {
          "id": "361b6c76-fa4f-4bd9-97b7-dbc78233c545",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fd8b6519-a229-4177-9e5f-71c76b634eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12343860-0194-4376-93c8-ca43076ed171",
        "cursor": {
          "ref": "68211f7d-ca5c-470f-a903-e0898dc1fab8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "14e407be-eef8-4a51-89b9-9881eabe8a70"
        },
        "item": {
          "id": "12343860-0194-4376-93c8-ca43076ed171",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "74e26d61-e058-49c1-824b-cb6f91064895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88529d87-efc2-4d73-a5ac-2c896c1f4368",
        "cursor": {
          "ref": "a2a39f21-6172-45d9-a12b-3ceb1bc487f5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e45a595-253e-497e-a0d2-092f8f9958ad"
        },
        "item": {
          "id": "88529d87-efc2-4d73-a5ac-2c896c1f4368",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e8165a00-60ce-418f-afa2-801d7bfc389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe3464-0b79-4720-945e-095dfb384774",
        "cursor": {
          "ref": "de8367cc-0a4a-447f-bf4e-bd2aafec02a3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a729c4bd-548d-42dd-a31d-42c892fd5cbe"
        },
        "item": {
          "id": "fafe3464-0b79-4720-945e-095dfb384774",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "26ffbeb0-6129-400b-b651-8c676e3107ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715838a2-e45e-4fdb-bc26-7f15588b7739",
        "cursor": {
          "ref": "988e4b69-2882-4759-bb5f-b8d190f33293",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "87e8b912-080a-48e3-bb78-3df0f2b106de"
        },
        "item": {
          "id": "715838a2-e45e-4fdb-bc26-7f15588b7739",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7865052-6004-4b50-a427-4603f1440fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f73339-3fce-455a-b47a-6458f7830f21",
        "cursor": {
          "ref": "21ba2f71-a66c-466f-a924-5e1eda281c82",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69c889cf-d8de-42e8-9877-f358d19ac55b"
        },
        "item": {
          "id": "68f73339-3fce-455a-b47a-6458f7830f21",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92ca7b56-abb8-4965-9aa2-11e45d72173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ced970-0ab9-4f7f-8ad7-143dc12b7cc2",
        "cursor": {
          "ref": "e834ba3c-ddd0-4094-95ce-8c46edc0a287",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b757a15d-7ae1-4801-aa9c-48dfa7339030"
        },
        "item": {
          "id": "78ced970-0ab9-4f7f-8ad7-143dc12b7cc2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2fd071a7-a601-48cd-890c-8d65660485b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc104b-a1ee-4e56-914f-543f15a5303a",
        "cursor": {
          "ref": "103e3d25-364c-431d-a962-7578ece27a5e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d5cc69ec-774b-4504-9cc6-a870e147f300"
        },
        "item": {
          "id": "c5fc104b-a1ee-4e56-914f-543f15a5303a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c3bf9d08-e6d1-4020-aedf-7c00908a7299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aebba81-6446-4638-ae88-b4dbe1a4a767",
        "cursor": {
          "ref": "d2763851-c9ed-472d-abee-3fe796a681f3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30e1dd19-c1a0-4574-950d-828f2a7b58a6"
        },
        "item": {
          "id": "6aebba81-6446-4638-ae88-b4dbe1a4a767",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8df2c07f-40d7-44f7-89d4-f5e5e1f56748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e499d0fa-6e6d-4abb-b398-14bfce37675a",
        "cursor": {
          "ref": "843e4b46-2f7a-4db1-b763-4f96e69707f2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9269e415-2046-41af-a0b1-cabbb9a98751"
        },
        "item": {
          "id": "e499d0fa-6e6d-4abb-b398-14bfce37675a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0d4eebf5-0732-46cc-8876-9b3fb687598c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf85373-dfca-4f91-b925-f189d2c8dc78",
        "cursor": {
          "ref": "8f87fc9e-336e-4497-bcf2-6dee3ca7d658",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c13b333a-a6e9-4ab6-a528-fe5fa8739e45"
        },
        "item": {
          "id": "daf85373-dfca-4f91-b925-f189d2c8dc78",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10a4f601-db3c-4da9-958d-585a76be9dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523e4f71-04c2-42fd-8e58-28428be3993f",
        "cursor": {
          "ref": "3312f097-a907-4194-9c39-1afc9e1ab1e0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ae359502-027e-4079-a79f-f6c9f53aa759"
        },
        "item": {
          "id": "523e4f71-04c2-42fd-8e58-28428be3993f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "74662f8b-4cc6-4b5e-bc2f-8d675e366b07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2260427c-3bcc-47b6-957f-73411be47519",
        "cursor": {
          "ref": "0ee93ed0-37ee-47d2-b41c-d9caad998b62",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cbcbb52a-37c6-4d8d-bcfc-2e9cf66ead00"
        },
        "item": {
          "id": "2260427c-3bcc-47b6-957f-73411be47519",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "043c4bf7-cdee-4380-a962-e5b4c3aec7ee",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "def30451-3a8e-46c1-ae52-4054452559be",
        "cursor": {
          "ref": "a9d64de4-8133-4525-809a-43f13d0e37fd",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b38b07e7-22a4-4eed-b74d-bf4b403c3c10"
        },
        "item": {
          "id": "def30451-3a8e-46c1-ae52-4054452559be",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a40e7145-bfcc-47bb-97c8-45e8ef250d8d",
          "status": "OK",
          "code": 200,
          "responseTime": 5227,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb43b97-9efa-4e63-b375-8f50d1767bf2",
        "cursor": {
          "ref": "a4f565c0-7b50-4dd8-a101-33a10a50863c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "babd8caa-0579-44db-b57c-cc1e551e8254"
        },
        "item": {
          "id": "bdb43b97-9efa-4e63-b375-8f50d1767bf2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "17f9de2d-60d1-4e74-bd62-d3e4b8f7bfdc",
          "status": "OK",
          "code": 200,
          "responseTime": 2618,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0014df78-effd-4c0d-abff-be7f65e7d8a3",
        "cursor": {
          "ref": "9cbcca24-07e9-4a4e-ae23-c39542d4252e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d825126a-ed03-4eed-b24c-bda1554d574a"
        },
        "item": {
          "id": "0014df78-effd-4c0d-abff-be7f65e7d8a3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f630618b-cde0-45e8-b44d-661a4c98c67f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0014df78-effd-4c0d-abff-be7f65e7d8a3",
        "cursor": {
          "ref": "9cbcca24-07e9-4a4e-ae23-c39542d4252e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d825126a-ed03-4eed-b24c-bda1554d574a"
        },
        "item": {
          "id": "0014df78-effd-4c0d-abff-be7f65e7d8a3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f630618b-cde0-45e8-b44d-661a4c98c67f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c8bfc4-b58b-413c-a840-2022047bea64",
        "cursor": {
          "ref": "3bbf6c64-490f-42e0-b4a0-dd01351cd5ee",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "86478297-5ba8-4ef0-a46c-5bdef625c562"
        },
        "item": {
          "id": "b1c8bfc4-b58b-413c-a840-2022047bea64",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2844ab16-51fd-4a43-b18d-2b6d705078ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a61543a-f4e7-468f-b188-569dc1b11ce7",
        "cursor": {
          "ref": "73a388af-ef5a-4481-9d05-49f33c7bda9d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5838e72b-2964-4b3c-83fe-02c4326f885e"
        },
        "item": {
          "id": "0a61543a-f4e7-468f-b188-569dc1b11ce7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "37a56813-3415-437c-90dd-464cc8d41570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}