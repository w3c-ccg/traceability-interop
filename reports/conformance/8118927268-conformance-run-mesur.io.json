{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e42886c1-5443-477f-ae3d-2dc03b5de17e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6afc4c2c-98f8-46d7-abfc-fc793dcfc72d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d23248db-900e-4dcb-bb9a-5f14649105bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bbc9ab1-3bcb-41f8-ab90-6b67d5efd4e3"
                }
              }
            ]
          },
          {
            "id": "4985d3b9-abde-4fb6-94db-077caf005b72",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a94627e9-47af-4594-bf6a-4bc6cdb21151",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cba26443-eca1-466f-96ce-e556a237b165"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "37ab0f3e-5a86-4384-a57d-b11499068610",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "131ce4ed-0a0e-411a-8e3a-740cb274d947",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd310143-f69c-4875-9177-b08007be0c71",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05f64057-5d81-4eeb-b09f-492e58b94b9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f39cb0c-1126-4a70-9f02-f36c103cabe0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1061657-722a-4a25-9d82-d4d1f4ffdc3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "731c39cf-5bf8-4d8d-b6af-cba31b200820"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9592f75a-f65b-4a51-829a-6f5a287acb56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c30888f-c8c8-4e4d-a8b7-3e9998085226"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2a9c29e-a428-41a4-9327-cda182de392b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5c8e4dfc-5808-482b-91a1-660cf0c2093f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b55bbac-5516-4e05-9717-4e0f1bf6ab5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05f76363-32f9-494a-b248-f96c6bb68135"
            }
          }
        ]
      },
      {
        "id": "3e2980e4-f723-44aa-ae7b-367f7d956f94",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "272b7014-be64-4fcb-8844-b23825634439",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc2960b6-cd92-4d07-a2a7-39d1346d937a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d4f01cc-bd4e-446f-a0bb-e03435ba1a2c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c345f6ce-5694-4ccb-b069-1111e3f8e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a23727ad-bcc2-4738-8ba6-c6ec807da24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a59aae6-bd31-4faf-ad1f-0e06ddfac1a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b65d1ac-f94a-410d-8e97-ffe931e5cd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47d743f5-58ef-4861-98fa-947211968c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c0b38-fa82-4583-a7b3-480e5b79a0b4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24114e4d-c2d6-4592-9f11-f75ec423d00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0985b9c6-1a37-4d49-90a2-66f3fcdc3a63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a20deee-df2c-4570-8983-301b14d80fd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d6a2732-61fd-4abc-a9c2-38f36a86edb9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703b06b0-39f9-46c2-a365-007484486589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26560a09-a214-41ad-a74b-39b63d5d9648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de2a86d-e5de-46ca-a2e9-30672f2e9294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373a0b37-9162-4325-a26c-3424c4dfde52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b56289d3-0760-495a-baab-1b507de5061e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b50540e-4305-4053-b8d6-a5e437432b6c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "794c15b2-e1df-4d90-8ff1-b47cb3a877cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "08c06c05-8a3c-443f-b636-507c62fdbd31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3247c7c6-a4a0-403e-8b16-7b05c0abf213",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "48c9f74f-bc1e-4008-b065-f78dce291520"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1857fbd6-47dc-4963-a97d-af7492911108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2f06d13-a632-4bf7-b476-40fc6ac7ee67"
            }
          }
        ]
      },
      {
        "id": "ddfa8306-a364-42a2-bfb9-c4bd8e120579",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bbdda148-c79f-4f6f-baee-8ccc3e24396f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "480cb1cf-9853-4148-9955-4407143f14b0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0cca2b59-fb02-46a6-b529-0d3d70d883e8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8a9057-ea2b-4b76-b52f-2a274aadae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3351148e-c927-4e4b-89c4-3a60ad54d37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047719ad-c24b-43d7-81c7-a839d9da5ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230b6c8e-5b50-493b-a5a7-5a2a62588df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8468068-28b6-4062-a6fc-a8b557a62569",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568b533e-2c10-4fac-84e2-9ac741b55402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924db94-9a08-4c7b-ae85-5b3938a6422a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a19b9f6-6207-475c-b579-f21bcb1e3994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08517834-6925-4fb5-8d5c-ed0c827f2765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3b3974-28d0-493d-bb32-9b275f395053",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6433d23-3fb8-4d1b-aff3-cdcca2126089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2aed99-e365-48a5-9aff-4f4d5c902558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39486a16-1dd1-4e2e-9902-e313c9b77000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2a0420-8956-47fb-9d6e-87a7890cc799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a538f93-6e52-401d-8588-09bd61a2e29e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ad88cf-e73f-44c8-b52c-742d5dfcf7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48bf669-87e8-47e3-bbb4-4e797d0df3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc07773e-e05a-4535-b465-ceb41e5e3cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553b2041-cedf-476e-bbc5-300fbfcd9c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac59a9dc-3dd5-498d-9149-17759615f0a7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a4a518-2d62-46a6-a981-558560de7dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d05fa8-e9fc-4d85-a59c-f50d41ef6ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2971b470-1334-48ad-b25c-2c1cb4cd414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25899e4e-5850-46d0-a273-55e60761c2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5d5c19-efc7-42aa-9e71-eb577ab35e34",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149702af-e458-4316-801a-51c17162f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb6c07e-5813-4dbc-9a2c-0a4552e44b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b2fc85-9998-4faf-9860-c933347cbd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f69c89e-fe01-4262-9eec-96410bb38848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07442575-c505-4bad-a822-be588a4507af",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab40506a-b1cf-4a20-b4a0-e69f5aed6ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22675284-8b07-4c1c-a204-d6d9e5653af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d5a2a7-bef4-4e55-924a-6e704841734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c47a15d-9770-4e55-bd32-55d9db1daf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf17ee2-8c51-4ee8-83e8-606731dddf1b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d051b89-7a2e-4305-8bf0-923d1e534dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde7306f-1669-4f31-bce7-8cb1526b47b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e043bd6c-4d68-4797-925c-2fa44bcedd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930a12d8-f9ce-4f09-87f0-13f32b14d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0a4ae9-5ee7-403d-91ee-3fc76ac3035d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f1aab6-3c5a-404d-8c3d-d8cd0a85d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22059916-59ac-4e12-a9b8-ef9eaf518f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f864047c-3bd9-461d-b3fb-c1a08c94be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5b9fbed-bf71-4943-8078-0a8953ab9845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62187aa-1280-4826-9bd0-6e87213b13dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d21d02a-af3a-4947-9e2c-644162ac57ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3fb309-07ae-4430-b25c-d7ffc781facb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02cf29d-e475-4afa-8025-24401c0e05cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b759a5-5c8d-4a8d-b7f3-c65978c323a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af65cde-dabb-44e3-9f54-59107e1fa292",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571425af-8c48-4866-8cad-b05e0b5b3c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feb7d03-251a-4f95-9c86-ed35a1b815ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa664ad7-7149-46d0-ae80-af0c04bb9d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "092100ba-3118-4ab7-b321-e5625ead06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86147c43-b381-4c01-9d77-2eb542f208dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7fc2a0-12d7-4626-a2fe-0d1f4a52e638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcc5005-fa47-479b-ab8d-b244fa224e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b0011b-bed8-4298-940b-4ba33427b3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c234f853-87d9-4c9f-b12e-78a0502f0a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d935de0-7ce0-4f30-9fb0-29e5289acce5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868fb787-eb42-4203-b47e-96aa20e82078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a39224-bac9-42e5-b34b-a46f785aae9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5ee61-e3ac-4256-aa2d-57d8562a69d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1430a37b-0beb-4643-926d-cf9683127d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27b62c3-1c79-4941-a126-331ca5b26755",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8418960a-30d2-455d-a46d-367b181c3187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7ef577-bd91-42d4-aae8-7665d115b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933e5322-c5df-4c60-822e-24264d24019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cede2038-8bb8-4f7d-98bb-14a168519b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc554a1a-00c9-43ba-a4d7-d7046b18762b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca74403-29e2-469e-8781-7985a91fb0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5da2a0-0340-4ff1-a734-fd78349026b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fee96dd-9893-4ef7-92b1-d9d9287ec5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcfd2d35-e45f-4e6b-9652-4547a1df09f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa25517e-fd59-42ef-817c-d4af15a53391",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf679da-1e65-4333-accd-f63f60dc2acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f946e4ae-5c31-4f67-b4da-357550e519c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90e8c59-9757-45fd-b2dd-ea05fd61e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c57c754-9f54-4de6-8005-f77e3a9f3086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4dad35-5dc7-4570-80a8-1d3f89d7d112",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6289201a-7b2c-4170-b684-1542fa6d228b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b2fa47-350d-4e57-9c51-93c7bec873d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece9d5a-f168-4bd5-ae42-da970836c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a38f68bf-b494-47bb-bd9a-ea3e08ba2821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9985321-a73e-4d5a-8264-b86ae9ce7374",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63bb224-5869-4608-bb85-6e300b8dc789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99a672f-c740-41ed-b254-90fa160501b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc58bba0-eb02-44c9-b6de-fa14174bb12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c7e5cb-8cc1-4a53-ba4f-11c093804acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd52d24-1b50-44af-aabc-9c11a5e1a5f4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e391be4a-80dc-4eb2-b6c7-b5f8caa4c6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097cf518-8ee2-492c-99c2-9a51137a68c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa35e87-ecd4-47ab-89cb-21e25f50a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d95dcfc-7b53-4dfb-be64-bbb87d90bd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20598338-2093-43e0-a512-2790260adf61",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee86addf-1962-457c-a5cb-10689946cadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2b33bb-a9b6-4d95-8f73-3b02f5994000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fe3dce-fa6f-4601-a389-770f02f202a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1913574c-a35c-4ebb-8e19-74e68ea27ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed86f2c1-1994-45e9-a6d1-e906d23acc3f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f3f040-7aea-4a67-bd8b-2eef9c0282bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eaba56-5082-45ac-aff6-cd6d0f81f5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0004dd2-fcec-43bc-9eb8-252fe475ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "237cdaf8-25ed-4c8f-995d-14fa501e1633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e89125-ac66-4e8d-8d67-8b2d43f03399",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b15b534-d409-4ad4-a49b-396888e24b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b1a17d-d804-4050-9273-287eaa800a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b862bc34-f54b-46f1-b91a-3838a466ac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bf6bb2-1e4e-4be2-9189-f4a0cc332c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2675f6d-63cd-49ab-b23a-6f71d8c4cc1a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f806eb83-a684-4352-9dd9-9b7ac824bda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce74bc65-3a35-43a9-947e-45217d3656bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf7fb95-3c68-4b14-9112-87eeb23bc787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7c7a85-a31e-44d5-9f10-b33073811e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ff710d-ae06-4ef3-8438-cb0532e082a5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb94802a-1268-4b93-a4a4-3b288faf8b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815a983f-4958-4ea8-b0f5-abc8da4809dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aff7bb-76af-4a17-842f-d5e443cb4e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eed2ab5-7a52-4422-a0e3-8667c4e7b565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95017e09-450a-4ffe-95b3-c71cf1af2ddf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698bdd00-c184-4a7c-b41a-a06a7ff55fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2815f939-5d46-4f72-bc82-dc7076473cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71601aa-5fc1-4761-867f-c967731c3e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36329007-b280-4849-93c4-27e5dfe56c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe68c13-0f33-4253-b810-408e3b794211",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc1a22d-df1d-42a1-a8ad-190b5e7868df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43dc084-a593-45dc-983f-13a18379fe15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77466b59-72e7-4f7e-8eda-65ac10d92d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc954d2-b829-4c8a-9175-2b1d0808abb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7777524-84c0-4221-80b8-039c725f9645",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44dc028-2860-4508-b7a4-e29f3b6d07cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9d019f-b2fa-41e9-863e-08fd97130e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b740f7-177e-4536-a264-59aa5b71c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6433ad71-2d29-498f-8e13-5f84c38a77c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3892c68-21ee-4fa9-b87d-67b3eebaa24e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55563a93-96f4-4764-81b9-7b53f24baf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f360e96c-3159-41c5-83a1-38a96a4e694a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921f3e81-2f8d-476a-8fde-d0c96bf8e46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6e4c7d-7ba4-4b0d-96c2-bbb52099c7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5a81a3-08b6-48e2-ab52-b6db1f81b79a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a20fa7-a18e-43bb-bcd2-90ac036f07a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4b8365-534d-4c84-8b97-35464d6b32ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b471698-6fd4-4326-a54d-b2fa26c57b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca5c492-ffd6-457b-be00-98bd739f018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7612c922-46e2-497b-bb8b-491f41244ae6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf65713-576a-46d3-8d99-aa1f3e8e03b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9163ae9-f6f1-47ab-83e7-7d8b327a15eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f56052-1e42-488b-8fd3-57a0bf8001b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "463e4a76-1244-4f3f-8b28-40da58183704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb447d9c-2499-45b4-bae7-b8c4490ecf4e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93fc9d9-f96b-4bc9-9c79-98d1f8d70cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c11338-8641-44a1-9947-94a163ea8979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd15b0-e243-4bf1-864c-4a567e520941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b053c3-1a42-4fe7-b8c6-4597f94397c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a652f7-a711-4b21-b758-6cf16eb024f9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f42b42-7b2b-42a5-8412-f0dcfdc775f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acf7a27-f5ae-4e49-b93f-b6fc3e53ed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900f57bd-6106-4f58-b721-0922ef4d316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26104dc2-4774-473c-872a-c190b0a6fbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46b9b6b-7197-4855-8413-f85d86806151",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d911ce60-9214-4e59-b548-b9f78d253dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a104d2-786b-4d23-984b-f6f9c70de7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6e6647-37e6-4f13-a9a7-bbde4bea8178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2387b3d9-058b-46b1-a861-70d2af8d3057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4069ba-3920-4029-a531-4781d0d31b9f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70678cff-af94-454b-9bf4-f1987b707eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e039007-99f6-47ec-b891-07ed869865da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1c6fb5-cc72-4b8e-8bd9-b581e106666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ff9130-6b63-435e-8f68-59128c24637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5d23d3-919c-4185-8653-1e3829f4f50d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896905b3-c932-4cc4-bb57-78818ed934d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bc0a4c-de8d-4229-9bb5-6815e598789e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0cdc52-df0d-4d35-9a7d-48beb2455183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "45517eb8-4410-4705-86ea-5e16b9edc04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195b3b2-a77f-4049-8d16-e174281409bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64314623-1392-412d-b6a2-a66aa508adfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f1bc33-6fd2-486a-829d-7727b7e5379f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4f4f63-be68-4dbb-9487-74341ae452d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f45b8f09-6f35-4067-8ba1-5f5097f6d128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46eea0a-170d-49de-96fa-cc032c503813",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc5120a-e412-4e35-b71b-f11b8390a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478f72b5-dd5e-44bc-8659-63fea55c2d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcecbb1-f250-4516-a01d-78860eff0248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da9d264d-3afb-40cf-bbf9-a8f6a1c8c6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2432d-d49b-48ed-baf6-f6bdab3598ae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aefb6bb-d50d-45a9-b138-3970a494a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef117db0-2484-4e4a-bd78-2605adb8bcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6748992-121c-4ecb-84d2-7596ffd34493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b685c300-a8e1-40f9-b618-8f59aeeea59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a9f1fb-142a-4e79-9dab-daf0ccfc0d5a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51cefb7-ddaa-4da8-9edb-09b3443a163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6511ef2a-c0cc-4d0f-90f3-6df0f49151d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b085c3f4-db81-4db5-a8d9-7aa1a3d59e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fe917f-1f01-4c53-81f3-aa8732375933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e280aee-398b-45e7-84c9-07b42b9e0bf9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c84e5a-4626-4585-ba78-2079ba7736e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a11809f-99c9-4b4d-b8b4-ab10bd85c598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a761b5b5-f1d2-4935-bf12-52bea96ef32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "895399b3-57c0-4aea-a8a0-95e96ada29c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5e248d-2744-48ea-acad-3bed62b9d85f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73503e4b-5edb-47bb-b117-cb607c02bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6b7224-de0b-4c2e-8d99-021c628c71c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650c972e-dda4-4b7e-aba8-543324e3cda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2eeeb2b-fb69-42cd-bd3c-6d5eea5318ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8161d730-0390-40cd-97af-989fa8e9eb8d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d87663-2380-4a1b-856e-f19e520a592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3767af0e-ac22-4c7e-8087-a2f09d90ad66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4946a5-b5f4-4051-8f06-2213f7baccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0695c6-9914-4a89-9a21-49858b433d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9361a1-c547-45e5-8951-39b3d5226fb7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313e9a9a-c9e0-4989-9cc1-b34b0a3bae9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0daf28-df2e-4683-8a00-817be2c97257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af8ce58-f228-4e01-a120-e457a8982fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0c639e-d1d9-4254-9796-76f9ece84f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7e52fb-f835-45ca-bef1-8147eac9c75d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4318be7-bb3d-4759-babf-e45452bfb20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c11712-d178-43cb-ae76-6328f64fd784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d2ed6-f7a4-4491-b6e2-19facc72d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b968858c-a45b-443d-8db4-380614bb67c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de55b220-3e96-458c-b757-0087a05ab2ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f080868-d939-41f9-a4cd-c3b1e8eae7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266c8e6a-303a-416d-9a15-c2c2f830fa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c8399d-37fc-47c1-88a0-2ddd5fbfcecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "593172dc-c98a-4b2c-bef2-ebdd40dc04d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78231977-bb6c-438f-ae84-8dfdf530e304",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0063200-ce26-4e0c-85d6-c78a8de2c82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4683a10d-67c9-48ac-93e9-04191dab73c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e45cdbb-75a2-4a71-b791-187c4fd52a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "406cd013-7b83-4f8b-b613-5be45ac9252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a3c8c7-6a3d-4e96-8a57-fda27cd0ac71",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1a2ce3-6ccb-41b9-93a8-9faf64085dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d8036b-645b-4626-a7fe-a42dfc314e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c964c-e12c-45c2-9912-30856e9e8759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18415db-703e-4a14-8e6f-56ebe5bbe318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ea86ad-db0a-4284-81a3-8077777328fc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb64787-6cbd-44e0-93d4-db355662a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f9cbc6-d78a-4dc2-a2a7-553463cc40cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119a13c7-0cca-4517-a83b-a539ffdfbf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c7a2fd-e05d-4dfd-aca9-8a209272f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb265a50-e137-405a-841c-aa6189061061",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28913078-4087-45d6-b441-1e1ef291ce3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7256728e-154e-4e52-83cf-059877363689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80dcf84-bb28-4374-89cf-e2614b54be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eadd1e31-1d5c-4753-b2b5-a4dab85f0244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f8ea1d-bd38-4f95-bc62-905085cb0bc5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e2df50-1674-4622-87d0-bc708e7a63e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b77ed2-e953-4af7-ad43-f8bdda6c11d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440566f0-e27a-4e03-8b8f-a63a6f1a564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88e50a9d-d011-4f79-96c5-e965ea1fa7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06a7528-7ed3-4bd6-aec2-6988e5b03fd8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fb89c-0934-4e5c-94c9-4f7d970be21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7576abf0-5f29-4a40-9198-77f0cfdede27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e570b788-2eb1-4471-92c6-abf117dfbd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fd6a8d-1cc4-453a-af89-c5cc1854e9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c4e8b7-ed00-4bb4-8b61-119ea785cb3e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156cf6e8-560e-4913-a8a1-0afb91ffd327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a839c51-26ce-4265-b8d6-16bd0620a332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6495589-a57e-4de3-a3e8-cbdc9f060517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f90cfb9-8012-4d12-83c4-f217f0b4ff2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d478e332-8cd3-4d57-bb08-c78e7a3d2d5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8559c785-9f8c-4908-b5bc-0a364a8912f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff8add3-dcc2-4b89-b4c9-11180f108425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd55b1c-60ab-452b-a5eb-f5203dce3af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a536f3-030a-4136-a9b1-862d418bab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36857a0-875d-4f0d-969e-2a08cfd38cc7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c148ff43-92e7-4df0-8a20-48a1ad872b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bcd060-1ff7-497f-8d37-c2ad22710339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d4289-cf3d-465a-aedf-54611316be4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9826b4-2ab7-40bd-9197-a1e881a6d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846db5ba-3226-4b2a-902f-3ad645b1dba8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72231451-c05c-47ca-bd10-bfa4bba4f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d970855-bdb7-4e65-a96b-0c617656b8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6327c4a-14b0-4188-80b8-49f7ff862e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "260d67c3-ad86-4b54-8148-eed43242a1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e8ded1-9f4c-419a-9805-a52e272ae843",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a6821f-b871-45c7-a739-3a1ece435e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d272d32c-23c5-4a62-8550-75325aba33a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1655ed3d-a92f-4fd1-bdce-4990b451f9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "af687039-7597-420c-bd2e-9250bbe031f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be22877-c450-435f-882a-0c5fc6ca2d0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8435632e-901b-49b9-ab8d-2169c9b9b900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7716146-1ec2-45ff-909d-efadc9ebe0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18152342-66d6-4cd8-aaf9-1d235bc4a435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d34c7aa3-b6ba-4488-9dcc-b619dfd603c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee9507-b4e1-4288-b48a-d6f782a857a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890f6087-a1b4-45d5-adac-07b263363ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c20f3d-40f4-44b0-a776-8085a080acc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ce5070-9b02-4964-b0ec-0c736f6617c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ac47f5-83c8-4eb9-b17d-e739626130bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d48c43-53da-4e7f-a8cc-8d0ec09bb9c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6f5785-a278-4767-97af-cd9fc322309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfcde5b-6135-4464-867d-ca6c9a6a5006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d5f58-0203-4bf5-ba1a-484e4b3d3d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bebd42-9c6b-48a3-9829-7267e48a325f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49e04f9-0a36-4f0c-aa99-d273af76fb95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2086b28e-c810-41f5-8a0a-b1d6518186c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb372f8d-542f-46a9-800b-65257f9ebdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb70169-3437-498f-ae19-65a3fe056f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaefac5-df2b-44a1-bba3-2d10675eff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f415e24-27e1-49a1-8442-0b3d8c02e182",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feae7179-f696-43a1-af0e-ad3ba5602a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1a9a8e-a376-4594-9195-b22e2cf65e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9a981e-3cc1-4010-9962-7145914e650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65a7225d-c7c1-42d7-9abc-1cc1e7b01189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9e2b6-28d8-4e67-8f2c-fb3e5c26ae3f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed825807-46ca-4b47-89c8-ce8cb668587a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6849a06-206a-4eed-b219-18fda7324c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca163a26-5d51-4315-a469-b45f897b9d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c094352-394c-4078-b795-a670c8c74efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb7d030-75db-4b3f-a8cf-46635ad94705",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3ebcd-d0c1-4f3e-8380-5bedccfbdab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb62353b-774c-4c13-b3f1-d7139889ee67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de1bb5f-bde3-4115-be2c-45ba60ea1343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6608b4-9022-4fe5-af76-0eb5983e468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8098836-7678-48c7-b17c-0d7e1b7a31e2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fe5a5c-cf7a-4816-9d79-62cbddb4f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f677192-b96d-4162-ada1-21072ff422de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1894f86-b354-4905-bd98-a5252da121a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed9d053-a92b-4c97-9365-21dd0834ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b497bc6-46a3-4be0-9974-889f15040741",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf221a-7454-4f10-9e75-1212b88e5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e44c056-d3e5-4f36-bfd1-b4475057f8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e1761d-5763-4723-a44f-3a1cb48192d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca8ac74-23f0-4310-aeed-1c04fcb1663b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563c0368-e4b8-4b20-a9b5-0c9044285b98",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f83d2c-c37a-4b77-b487-1c69778f243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5ef6bd-0be2-4076-981e-9235dbb40033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0976870-a49b-4db7-9c81-5b3d6a8eabd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d97fec-f059-482a-8e64-57b37488acac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48fcce6-06db-43d5-b010-feff9caa5c3b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0e27f-64ce-4ea5-bfba-faef9936bdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460c9d0b-c366-49e0-b958-021c9c810c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b886a25-4691-4f79-9225-a7c1f10b9bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c721658e-e024-404c-96ca-6bfbef8767ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3367ef-27b1-4604-a9d1-e8530cf1ff17",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3bd622-af83-4db5-8d3b-499e4a342269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6337dd74-799d-4b49-a027-ef4881ceb9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea1cb24-49d5-435f-943e-3633b3eff785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b951b60f-a056-4347-8cc3-4fef9297ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499cf139-e933-407a-9a5c-48dd6f47d3f0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14b1f08-4ea8-41cd-8cd2-e420803c56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71862e74-492e-4867-804b-955f32adcd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ada2fd-b8c8-465d-b392-df2d975ba750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0700b79-51e1-406d-8ffd-f4d20e506e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a0e5e-3436-4f2c-9d7a-b18d9a57f3b4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e7544-c015-4a6d-b189-0333b325bf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f133e8e-3033-451b-a907-9a5e012643d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb82433-2929-40a9-a326-82535454327c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1526d5-a540-4053-b0c8-0e770cf527b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0104c-cb42-4a15-935a-230e7dd1fe75",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7db228b-3307-421e-8e95-c3f614a953dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c20b2b-3926-40a3-8b7d-548d393f7532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ef183-1d5c-411f-bb87-ec1655afb5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6515da03-29d5-4012-b7fc-9d949295df6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6b979f-b0a3-4367-8c02-09839fdcfc5c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb8ae1d-9ca3-453d-9c3e-2110f029756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cc1420-5cf2-4718-b846-bac4a17cf04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4e249a-e30e-4cb8-925b-2b16c85db162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "606652e1-d5a7-4e23-a4dd-4270964e2421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9038b5-a9f3-4f39-a726-57ed884205a7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f51ea4-0779-4321-a5e9-9f0eba4680c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5329ebd0-471a-45d9-9a0f-14bfea07b996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005cfef8-9f34-49ce-9d8a-d54f3a2cdd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c5a015-a53e-4a79-9939-87ebf124eae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0b2219-2448-48f9-86fc-3f880711537e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baf67a0-4af1-4399-b0ae-6e7359bf23ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42948b9b-f954-407c-ab75-114250b2708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f3dd5-678d-4825-9dc3-e27370612317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1dbe78-6db6-4d5c-a93b-6c0d471c26bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fada26a2-7fc9-4ab5-a9b9-80d1ec96e7f9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d52e25-71d9-4d7b-acc5-c9bacb82ea6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e4f85a-6a43-4228-93ea-1d736f8e0d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923cd34b-c911-4825-bddf-30ed72b38ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3bd81d-0662-409b-b03c-d86fc30aaf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db346a5-dd36-4207-aca6-947561e0003d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1adc94-dc52-4598-bb9d-6175b4f40729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bd3136-9a46-40a1-977e-1dfd34309401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998ba0ac-ab9b-40d7-a8fe-eda62ceb5b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb11c9c-c0b7-437e-9b60-50556f22872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08b97ed-080e-46d4-bd20-fe8cc5348c18",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe260bf-cbba-4198-b9ea-da2df159237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d5c2b1-a320-452e-b889-545f03d2526d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e35b91-6683-4d07-b3de-796a42e7d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec083b6-5cb1-45ff-83fe-0b587a4bf1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a51c9-ed1b-4250-a5e2-ebfed5700bac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a1dac-8b49-4ae1-a687-a515448c7605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1049fa2b-2346-4f93-9677-51cb4c7ad9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e316c966-966d-4567-9cb8-dddccbccc27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a65cf8-6d8d-41c9-aade-43a1b8d6ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b31676-74ea-48eb-9605-71c52e1d9322",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefc0193-192d-41bd-940a-1096affbe6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094e616a-ff4a-4f69-b947-988932fed41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84678a96-c3dc-46fc-943e-ad903f33b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64dfbf37-4ffa-48c7-9752-0851b8c29f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10de7790-3ffb-4dd7-8330-482d3753dd5d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28649445-a6ed-47c2-8288-cc78fcab6244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887c0d9f-1af9-4008-9610-4d49f55cdc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e51314-d1f7-495c-b2a1-067393427787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e11d501c-9d76-4fef-916e-34cd3da2ed52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f70e6a-4f93-4c35-8218-1b2ee5f0afb8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac3295-7895-4a76-b1ec-6fc3273501b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd966f6-ed7c-4ccb-a808-834627b74172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacbba7c-d7c5-41d6-a49f-47c61073758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb76fe3-e4d4-457a-820b-7825c23bf483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0021df7-63c7-4831-b2d3-60b8aa8d7fa5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f26407-b58d-4bdd-945a-6870ebcc230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51860293-bd32-417e-b72a-74595531f779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac08393-fb4c-4603-b608-ebbf9eea0499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "413f0155-e37d-4f19-89d6-b0fe4570ac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d207bf78-4b37-4e79-9a60-48d6601168bc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3841eba7-28d4-4893-9f7a-9693807baae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbbcf8b-59d3-4bf9-b015-f563c9ce1eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a270af-1d0b-454f-bc2c-2dc611fdf048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b0001c-4723-4be3-b692-6493aa623c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f008c5f-3140-4d19-845a-c24c44020a7a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5552eae-09c4-4241-9313-253e2b251ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9923d95d-79c1-4627-b4ab-6111757d7e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99742ff5-9723-4e99-b131-a7280454b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "826b941e-2c10-48bc-a398-377531ef53cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e9780e-ed12-4d4e-9b0a-e3be1e30adf9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4122062-26ad-4dca-8629-97886853719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6453fd5f-1f8b-4824-a4c5-1b655b7908e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580c0d5c-e484-4ccd-aeb7-9a3c9375e18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0b6aae-8b57-4752-8bca-1b4e28c01343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004fa63b-9202-4d1b-8c68-0e6b0436b604",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0bde90-6f61-4d5d-80bc-373ed9d354bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5aa996-8f42-44ba-a653-f3841fc9327d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c186c4-e963-4334-8a36-00e0b3806163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d663e9db-76ca-4ab5-a0db-55e8f19c0b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bf37a8-0190-433b-b358-50848bbd8dc8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e8d89a-6acd-4411-bd53-c83b2a5f3159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cd0cac-2acb-4d6b-a63e-a88a29945146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f52ceca-0b91-42a2-9f2e-2c33094f262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b185e4af-63a3-4fd0-8cc1-46bec0c15669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7b21f-e727-4337-9917-779ee2c7e490",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fbad79-9488-434a-bbe5-f83286a11e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6ffd7d-f4df-4679-88a6-142ccfa4858d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b76bd9-bc9b-4eeb-b249-22305b3369ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50312a45-21d4-4827-b52a-f6dec276f308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8fedc0-b11d-484b-8734-5dcb4e0e1171",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c6b22-cd43-4380-a8a7-04a20d718cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fffeecf-7621-4bbd-8cbf-6e91166b98a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1ccf8b-9bf9-442d-b913-5e6c3973aa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9106a7db-d948-4ce2-b46a-cc28639fb38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea74cbe8-cba3-4930-bbf2-dd2a0a6f67e3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1059cfef-3630-4878-814f-c71a54b812eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32faa09-bb3b-4a0e-b769-fdcfe3bc0759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee1a28b-4a9d-473a-bac0-df68e810bfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccca78c-dc67-42ad-93fa-ddfe1dfd1020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d41ff-6bce-4146-92a5-c885976df00a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307b09c1-88e5-4245-b990-7b2ef5a6dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdc58c2-bc14-477b-bb09-fa2c58b8ce2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d8fd17-5d11-49c0-befe-94486e77b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b813b9-7045-4cc6-bb03-409ea9c078e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e28815-d31d-4c15-bf59-bec7805121f0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904cbc15-eccf-40b0-a95b-e97042781fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c1741763-b001-4a46-83a7-0f9b6e993aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4606d94f-d5b0-4a95-806c-f2543c1aebdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef17a5d6-e999-4da1-973d-59e10e72e1c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d782f290-826d-441b-9a42-02970bbe8847",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c65d89f5-0653-465d-8ac9-d86b1f4215ac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f602ac26-cc3c-4470-b910-46758d05b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88c272e0-f49b-46fa-92a8-d9b705fdacbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e73ba4-5359-491a-a234-ee539e78d119",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e768e60-debf-4442-b05a-2009c6eb7cc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9429eeef-3a53-44ef-afa5-49204305b371",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6c3f936-9c8f-45e4-9e18-568c2e779646"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e349110d-606a-4db2-87aa-cd83aacb0455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "128c2579-baf6-468d-9100-c2a6a7025a6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e088c4af-f2e4-4f62-9067-0d09ba2590fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9850123e-3c23-4fd3-b6a0-8c2d8721b783"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2523b7b1-29db-469f-b21f-c8273ab941e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1e9e550-cdd0-4daa-a208-b99fed5259b4"
                }
              }
            ]
          },
          {
            "id": "5b50e074-9666-478c-8079-2cd26e2cd7da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f3db49f-b6a9-4a43-9bbb-5ac054d0bc84",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "16a3b9db-3be7-4495-aecc-b30e53f37d11",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f4e050-4696-4f2c-8c67-78157760408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4aafca72-5204-4fd5-bee1-2440a0867871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cf6b06-f7fe-4ec2-8273-5e8c3ec4b401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cdf154-3c50-4288-86cf-e9f837d68147"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c0a7820-72f8-4cd9-b1d3-02e0810dd309",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3097df36-5c47-4f03-a970-fc93dd19521a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2526ec6-be22-4d28-9a10-8a0ca8c85989"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44cebe8e-9042-450b-b489-6ff8d3fb0d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "595a8cbe-433d-47af-840b-041a7e10cca5"
                    }
                  }
                ]
              },
              {
                "id": "7496824c-348d-409f-b11c-820217b472c1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09480d60-7f2b-4adb-be66-a5c0d7c4b302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbaeb530-0405-4d54-820a-1c02c36e06e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5feb0f-a44f-452f-a7b6-f2fecd490859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb8962a8-c924-4778-a333-e95f0172f7d9"
                    }
                  }
                ]
              },
              {
                "id": "6f8dc9ad-571a-444b-b8d7-6e70a9c46b77",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e28778b-31c2-450e-a3dc-453c89f0b8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb1035a8-ae83-42a9-b2be-4c0a73f21a99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4a91de8-22e0-4e0d-9656-dfed1cd7f1f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0e05624-6b13-44ee-b90e-f3fc779e41b5"
                    }
                  }
                ]
              },
              {
                "id": "8e8e2220-6afd-4f1c-9e36-d43b97bbeab6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "894cc10d-5e92-4825-a66b-af46f3e25885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d686151-9c63-4583-865a-e1c8a6b83b29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8beec645-51ff-428f-834f-0e346d1af1bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a73080ae-355d-4112-ab3e-83a3bcd704ad"
                    }
                  }
                ]
              },
              {
                "id": "5112c926-f2de-42c4-980f-0051708a9fab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b55152d8-bb52-4cfe-b1f9-379f1e2067a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6c6a674-cc60-4385-b98a-772fa35c0b42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d8f28d6-0dc6-49b8-810a-b3c99a39a889",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "823d985c-c6f0-40e2-91f3-baa1f16aa25d"
                    }
                  }
                ]
              },
              {
                "id": "6a518027-4d3d-4cb0-98dc-deb3ea79b058",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5940e73a-a6a3-49ee-b1ad-3e9f09b53e3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fefd0df4-e639-4bb9-a48b-86701b99c975"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d36c273-81df-446f-899c-43853afd836c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3661d174-0d60-48f9-9939-e8caef5113b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0735398-40e5-46cf-bba8-f61c65bf7ccf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7da25b77-7c73-40b9-bb3f-92bddd29f59d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2f4d4db-453d-4693-89d3-6198f63e9681",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0b28038-4897-44eb-bd4c-8238c141c891"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "540586a7-6469-4c3e-94fe-3bae48817781",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9fc51b01-b7bc-4ef5-8604-80aed97ea3f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae5215f2-1070-4e52-9d19-56c8d3d28ab7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f03d1d3-c67a-4218-9fe7-507665dc5950"
            }
          }
        ]
      },
      {
        "id": "a0ce51b5-94b7-44da-8ea6-6e4174ad03a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e5d6936a-61ce-4976-9114-1a2c6edeb334",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93ad2f75-a2d1-4fa8-9220-3887e12f03ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d4d851f-3c2e-4ef5-9a93-68b0813472f3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c09c8a9-8652-4e13-a618-cbb53a167b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61438c7-2150-40ef-9f44-a46ac0bd857f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d09a4e-23bd-4301-875d-d5f451b6961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a97554-75d0-4843-a64e-87ac7c11f571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff35e2bd-8e70-4e9e-b54d-1d8f98b9b96c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e9412-de66-4d5b-ac9c-d8db7d1bb2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2457e2-2f9a-4be0-a633-85c5ea777aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcffa74-b0d5-4e6b-8d18-4fcfb976d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a869520-67a5-4f16-945b-fe7c1481e15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef275608-42ad-449d-aa24-8d9850305912",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc598eba-f214-4c5e-83e2-62de1e97a851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe32be62-042b-4b72-81db-c623c0f7fd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a5f9fd-0ec1-49fa-b084-f97b9a516d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f33f928-49a0-4728-a20a-d74a34117ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a24ceb-59c2-4a16-957c-4e2c8bae6171",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d0ca0e-0a25-4de4-9c77-d66ab1d1d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f5df62-7e3a-451b-9915-7c307065231f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d70c81b-2088-4cd3-b8ca-df000c52d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d1faf9-0ce9-4856-9d61-0533f5659171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dca966-f00f-4867-9eb9-8aa01e3d8cd3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6c00b0-ad1f-4ac2-b2a3-721c692a05c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dac658-e1b4-4a71-a080-e6071ed179bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5624d1-2df1-4fcb-8f09-f54b901a74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ac355c-9f72-471a-b8e8-dfe0fa0025ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e72d30-a3db-44c1-b7dd-43dab5a32e60",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e0251c-cd36-490b-aaa4-854e339fb310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a0ad96-8eb2-40ec-b759-4f7599c58b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5d0907-cfd3-4170-87d5-72c64662cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b3ff94-0208-4ceb-9229-2726d2182587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b389a9-de8b-40cc-b61a-5dd3ea2ac5ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6258cc34-2b5a-4cd9-a816-f1300e264212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc390597-c950-4d78-854a-81f5d838314e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb04e63e-bbcb-49fa-b1a3-742fea8df083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fedba527-4f3a-4076-a38c-675feab22aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832fe500-0c7b-4cbb-bcae-20ddfe3fd285",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15956719-c440-490f-b35e-806097761ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c41c47b-9d57-4a20-ad76-1c2474749ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7108b24e-fc82-46f7-a508-eefb984b0498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3ea157-4194-434e-ac74-e8268840ac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f0923e-d509-4752-8249-69b0484cf675",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d7c34e-f8b6-4f0e-ad34-00f62c451614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34747f4e-378a-43d4-997a-0864d5bf8d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3df5246-8dc3-4f10-a801-ba75a7e0b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "466acfc3-b84e-4ee3-b247-37827efd94c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a11a6c2-8e48-430e-8913-186fee40adbc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b27b5b-e003-4957-a14b-ada8991a890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acecb288-b748-416d-aa25-a987d2d63020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8588956-91df-4ef6-b2e7-740d306d2e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3ac713-62be-456b-a24b-dadaed0df32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0da71a5-3c0a-4abd-a478-7fbf9f1109ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de49f6-69d6-4a73-b58b-6a4edb01b279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f77e56-1334-42e2-a193-a9835f38de2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21a617d-44f6-44ec-a0ec-b7e6d1c089f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "55fdda4e-9a94-4d52-a2a3-32be9b85d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ecd752-6375-4645-a48a-a057c350525b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972d6187-cb6a-44ba-9504-f2afc3111a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e65b2ab-932b-41c2-8063-ada86966afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b359d-2d68-4042-a575-27c74d392d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8e1ec2-0ea5-47c8-a8ac-d07d4b7e997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c18bb8-4e40-425a-9fdf-dc35eba40581",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b088a-3a78-4058-9731-9f4d9d9a1a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f57920-b447-41d3-9447-bc1f977d1bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641e616a-e5b4-4fa0-98b4-9a622cf0f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb062978-c1f8-418b-92de-c09ada7a3c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f227f1-1130-4531-985f-e3721ae2daa3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665b33c2-c19c-4a21-b474-03755425ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e63727-f9a7-4f24-b842-328a849a5ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63387c41-6a93-43f4-9118-6f2741c52d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ae95e2-be85-4535-bfdd-6ba47b7dc8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf7b3df-002d-43f5-ac6d-df7f0d66f559",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a6d83a-a706-47f2-b48e-43d664e6ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfb0759-1cc4-442d-91e2-4dbe70e9360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8271f39-ab47-45f2-b8a7-2a98f2405811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "52970dd6-16fe-403b-925f-2ddadc3cf704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acd87c1-4dae-4c52-93cf-87f2be9c5345",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33585372-4bad-419b-98ca-ec411eecf60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be8baff-69a9-4cfc-8375-d3a09c3c33db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e705b7e6-9373-4905-951b-6843de9b3487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "45017f74-05d7-41d2-ad79-bc8b4741c7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c277a04-b052-431e-b9da-90262edeef85",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d32826-107d-424c-a9e0-1ee105c11e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8838a41-e730-4f12-bfb9-745dbc137939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303399f9-52fb-4bc5-bee3-c308f3849467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4557df29-7898-497f-9324-2845186b6b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58cd88e-da73-441f-96f8-f9e43632eb1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c076a466-9ee7-467e-bcf0-eac1c768624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b7922e-c84a-4264-9242-cb2d9a8de296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c224d2e3-cb33-4115-8160-943e95115ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5187dab5-a128-4391-9edf-60d905cb9a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f95ca6-6da4-4227-b306-2dc53ca0056e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b56e8e-8649-4f8d-9959-461937217703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbb25ee-5739-42f7-9227-f59be90e9e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e0f628-5caf-4564-9b1d-5be908a2e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "962f5595-6b63-4a43-a094-db4813a1aa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9271795-c5fa-41a4-a27b-3a69b03dbbc4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb92f0f-5fa3-42eb-a130-9fba27794552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b34eeb-c618-4d46-a693-26d89202bab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4706d3fe-02be-4150-8913-37fa58c698e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b708aeb-feca-48a7-9188-ec695c23777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4375e2a-ac16-4eec-8fb4-de31fe761ad6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c138fa20-7f4e-4bb6-91cd-e7a2e475fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a0d5e-9d58-40a4-aed0-85a3d808e624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159a1885-5578-471c-bf07-567c3fb73e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68924a8-c870-49f8-af3e-435d459f4f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27c50ce-33b3-4e44-a267-e183d811d9da",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f32d92-05ac-466b-81ca-0885815adb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa38f704-1f04-4930-92b4-d69b98a4f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b2e47e-bdb4-4cd1-912f-9b8df438e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d632e920-5d29-4b1b-a802-ff57f8ed79fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228948ba-933f-4194-bf0b-23277f964e6c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ee4dfe-03ad-4069-a3fb-65cc69fddd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a650adbc-b448-4053-8844-672b11a4cd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d388f7ad-2e6e-42e8-adf4-77f6a50d8e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be50c21e-a7be-49a9-ba73-666f4238f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f551568-bab6-49cf-aa2a-2adef0020920",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db669905-81d8-453d-aa18-76ff01d99674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d64f97-72a7-4382-b9da-611bcee089c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d44b392-59e2-4552-85cf-b4cd830c4486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e53a68-9f57-45e9-8597-a9f5df62fb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b8c99-f9ae-411b-9152-3137453845a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17032d5a-c3a7-4e5f-ba52-b80a4e49ac5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb77a5dd-888a-49de-a130-bc185499995c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fc4f6d-c270-44d9-b13e-9052d83f6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4191c17b-b279-42c0-a9d2-c0cc82c2dc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdec02b6-baa2-463a-ad17-64eae46bf2be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bffa58-0e8b-4b9b-9c96-e3761bef40cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ef507a-356a-4788-bd73-c76d7297fef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732c53f2-5169-4968-8824-15c81de66e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10dc42ab-3913-4158-96b8-0894c756d2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66feb629-aec4-4143-aab7-2497f9055aaa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad34536c-3535-4fb7-b12f-62f052cfb2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a36908-47ff-4d2e-82ff-7649481e3b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c6546f-2cdb-4632-87fa-487926540e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1068f130-da58-41b9-aec0-e5a35b9e76c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deba24b9-b4d3-481a-a286-2fe8f078be17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8bcd8b-7c73-493e-9f9e-d8d5073fd34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e779270-c51e-4d48-b696-1f393318ec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6161db-e779-4d01-9616-7b64482a259f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03318dcf-cbd7-4ad9-8586-f23f6e951c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec8ec1-5b5e-4d23-8314-17b8590812c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88f1e4-3b03-4d17-ad15-780cb3aa1784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420803fb-03c4-4cab-8488-c40fcfb71cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b56fbb4-71ff-40c2-ad39-0a57fd284892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f115173-8a1f-4b87-aeda-0b11db01000a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc6964-d5ac-4feb-847b-4473c7a4af5a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae6b3e-29b3-42f6-ad6b-cc767576d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929024bd-bca2-45ce-8eef-3583154908ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33846da0-ac05-45f5-9ce3-314e2f848b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cedd471f-ad83-4428-ac4b-466964fd818d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e35c89-66d0-47b7-868a-1e170dddfeb4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fcf00-a35f-4caf-a04f-10d82d29346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea6beae-4061-49a0-89e4-d6ac4cd8d99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497290f6-1d23-48f5-b96a-0a88c51ec3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aecb054e-1592-469e-8ebe-0f8677234778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692aed65-7469-4cf7-8e63-d94e7e83df40",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d421fb-5021-496f-ba98-7c5a68f3a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e031ca9-d143-4358-a192-b47001b19b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24939f6d-5f58-44ec-a570-a13ab49dc38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "847df7aa-f7a0-4961-899c-70ca6a408d3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fa710e1-29ee-45c7-a1a6-c1da272469a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b3ecfc3-64e9-4f03-a9ba-023bf8342f04",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d6adca-53ea-467f-b6a0-cae8ba8ef7ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76847596-8d06-42d5-8377-ebe44569f57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f99e43b-25cf-4ea4-85d5-ac0fa7563db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02b8ae22-9847-400d-b312-eeb268216eef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce7caafc-46c9-4512-ac04-ec19b15e1674",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d774589-65b9-476c-b53c-6a4dac810844"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "921e3815-3f35-483b-a891-31f2076b70c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28558dfb-a774-4cd8-9103-dcd325904730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "480013f7-41d9-4d13-b9f9-dd68fb40b6d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3bfc3b7c-a459-4cdd-870d-f9fe84b87304"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3778d0f-b84a-4197-9b2d-b5c1f49fcdb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df71b616-f0b7-4105-80a3-ddefef223714"
            }
          }
        ]
      },
      {
        "id": "e223fc31-79b9-41c6-8e22-959d13614168",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4663fd33-8b4c-46f6-b3ee-e04be48f6189",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f17c7d4f-18a1-4f32-a457-bedce501e987",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f0df27d-db36-4330-a8fd-ad5b0b883f49",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06842ab-cb56-4c40-a459-8567d817ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e87c3f8-ed43-49dd-97de-e0c642cb202c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7002613-4f2c-4a00-9cb7-7d90ee7db669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e975b8a-a2fc-40e3-a030-a554f724c85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa2d10a-17fa-4854-a9fc-abcb38802130",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50137983-e70d-408d-876b-57c8941feae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6621f9fe-6778-43c8-ace2-7bbdb4954e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f10b8a3-11f1-48ba-9713-6d58233afe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec73e7e-80a9-4b23-82e8-1111dd272c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f5064-22c5-4111-8879-c11165e458dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5e52d5-f320-41f1-9135-23ca81ecfeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e84d72-6afb-4a26-88a0-ad20fe6a0810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2410023-0a67-4c40-b3d2-a38c0c0dc5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c186b01-9593-422a-8dda-26cea3b5448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99919053-852c-4336-8ae7-5d98f5c16c39",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6fcfb8-3830-46ab-b953-67736c8e0e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243f76eb-1e98-4f05-82e5-cab7c1786163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b79d0d-5c2c-4cad-a398-77c3fc99d904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a6d970-1e94-4690-8303-f880e9d11949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbfa971-d95e-4c8a-9e57-c343377a35d8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77307196-2b00-432c-a77a-9a686bc6a915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31e12f-9f88-46dc-a9df-96b886beab96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc64186-16db-437f-b5af-0c0db4244f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c17fad-a983-427b-9a0c-5fc6a45a5bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3bca2b-caae-415a-b552-46dffbad8ab9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591b083d-3573-4961-a9be-89ec01743944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996eae4e-359b-4068-8df8-b5be83b24bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef5b8c7-4f8f-426b-aa7a-94a64b16382f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8291cd-9784-4c1a-93f4-82c3d7e8ec24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ec5228-c2f1-41d3-895a-5b433fcc4ad4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384bc8c2-9b11-4af3-a162-abdc9749c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8002fd-b101-4c2c-8511-da43c734e1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed1eb97-6be6-4300-9d28-cb26fcc14e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaa5118-8fec-4834-bda2-106b861dfc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458be833-4833-4e48-b857-5e225b4bc7b8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbb00d5-3465-45b6-9bb1-ffacf89e7aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af4080e-10d3-4d8f-a9b8-2a7c780a3551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4210fc-f499-437c-bcb8-96c93586fcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae794273-f4e7-43b6-9f3f-2c838dcd8f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea860415-af58-43ba-aad5-251e305b51aa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb461e4-8da5-4735-9c91-6eb8ba963228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335e4221-3b2b-4ea0-9bfa-67f896332f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ee4ad-579d-4860-afc0-b09f2470bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69729198-80d5-4f71-acd0-406605d3fb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61295045-91b2-431e-83f1-9f776ddda10b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f784324-2d58-4773-847a-5371d9d04324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e68126-d0c7-45b3-b793-1c1dc9f61670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9408bc5-b8ff-4d01-82b3-7a34c344590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6438c454-2d4e-4b59-a684-2524c9c6c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f72973-9689-49cd-9411-e5c05a09699d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0613a0f-406a-4792-b23b-f7cdf0a620c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c019182b-e992-4dda-9f18-da32275d080c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e92aa-03d6-4058-bdfc-f2232ab55d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "df145a1d-fe79-45ba-8740-8c0aa23cfc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de63a763-ff25-44f0-b5a4-b15713b570cb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f258ad-365a-4a85-be84-ea6cb9210302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61679c7-c538-411e-a762-2660c65ef295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230c4789-1617-456c-98bf-e6069bd535b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e63889-9a0b-454e-91d1-ee5b626799e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13df096b-7a58-445e-81cf-c34d28efbe21",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd962e7-7e9e-4654-bc6a-4b6caddb4d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb251f5-94e6-40ca-bc4f-9756e1006cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed022d5-a6c7-4679-ad4f-b60b0e961e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1677718d-e14e-40ed-8698-d76183114077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876e36b9-8df3-4901-afcd-a7d91417873a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418ed1c2-d52d-4b28-b75c-6a5d41ddbe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b882d421-07b2-4478-b456-c4f6a2320291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07652f30-df68-4931-81ac-89eb8e710aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d769c8-17aa-4d88-8e18-32cd4ecfc345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ddcd40-9463-4d91-b80c-8761d6b593ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32dae97-4af3-442f-a12d-2c34b7eb227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bc90e3-f848-4272-b633-20a88be6eeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76449ea8-0e05-4622-a8b7-f0219cecfb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc52717f-3d91-45f2-a837-08e6a08f205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460993f1-8108-4a05-818f-31a3da22906c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfbb6c-fe6d-48e1-bca0-2cb371f5afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab6d16-50f7-4737-a44f-88ec29beb6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828408c5-c67a-498a-8f95-6673fda59c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af08e91c-722c-4bff-bf52-0dea8ce227e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edf3985-ee88-4a0b-a6cb-d8f5c94bcd95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8023a0c9-6251-4ca2-ac9f-0e994e6289e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f58e4d-f3e3-4735-b09a-fec4438dd049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee1c3fe-e059-46ae-afe2-ce0c5155b37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7461a552-2246-434f-902e-785b04739724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a5343-57c9-4a50-8281-0f7e69ade2e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13548628-bbef-4972-adbb-f399b70e5f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3752f62c-2e59-4557-94ed-2c843292c865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27141fbe-30a2-4497-badd-b8eb7547a7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd982721-7724-41ae-813c-11b7a7f81cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b434074-75be-405c-8669-1ee2dc32ecce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14ed5b9-51c6-421b-8b5e-f1fa5869e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5be6f22-2c53-49a7-bbb8-14379a21b3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7397193-07b4-4b3e-a810-65143f5f7afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1f35c3-d991-4a2a-bffe-f7f07f44632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0d4515-1c1f-491d-9740-019bef37caf9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1a703-4626-4dda-966c-67fa27837c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c84540-a0cf-4028-84e7-e15c159f10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc86814-f29a-4901-8921-e9329516d63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd3f2e1-8582-45bd-a167-7a39a019867f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e7943-41a3-40a8-8c6e-11c5259098a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14d9c6-a9bb-49e8-b1b3-0b0cea9978c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5703fb6-8b0c-487d-85d6-07066beeb2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a463b8-9cf6-4fdb-8f72-7bb9acfb28ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f5aef0-cf3b-4729-8171-4702a3d6dab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00803571-d85b-4075-bdf5-439ac137b055",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f7d82-e6f0-4a51-b21e-27766e005ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80ca21d-af5f-4386-81ab-8d5f27383c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ef25b1-9f69-4709-83ee-daf13c818c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e86cb7-8494-4b84-b451-d9e8e14a5e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356806e8-6577-41be-b0ff-4a48d92395af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7a8e0-4402-4679-a4bd-19db12df4df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f234151-f4a1-499e-b6a9-8bf3b23999bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e27250-82dd-42c6-b890-37d0656ed46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a5241a-4d09-4e58-8a39-8ddea63b684f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d600759-6a2f-4b0b-883d-5b3d68610cc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37006639-ace3-44b2-8ea4-26a421c239a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3420170c-d616-4e1f-a383-806e33b577df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4390900c-38e1-437e-b579-28b2be71085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b8bdbe-e39e-494c-81c5-9c61a1e4f637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9131ff-2725-462d-b719-cf824f478201",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d775a5-901f-4fdc-8c34-a691d0e12a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dd7dcd-939b-4d06-8da6-b8f6de80006d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b909811-41d8-4954-9297-35788df4d367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc3c37b-5bd1-4438-9674-2c9e15fabd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976848a-9bb5-48d5-94df-7fc88c47755d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99305772-dfc7-4ac2-b6c4-458a23dd7532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d41452d-e33e-4348-9a22-6d84d0146ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bf9a98-925a-41bc-b145-e4e8302c805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f68e72-3f28-4d9b-9810-b39035eb8b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cd3762-bcc5-41ac-825c-fb90bf399e81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f3a1cd-469c-49ba-b91e-40a8459d3f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3789e0da-af2d-4199-a195-14c515872a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb99e4f-704d-4a33-95e6-3b0a162dc663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2516d4e-d3b1-463d-87dd-1dc437c23e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4163ee9-e0b3-4d65-99b5-f849a5855b45",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7e6a18-43c7-4a8c-8f85-b62535e77b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad0c735-25dc-44fa-8c9c-67a1c72f0f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cda127e-5e83-4a70-a4dc-210e270fa642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1afd2a4-91ab-432f-b887-14c2ee89c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c2cc5-3c33-402f-ac99-159ce7b59e98",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a063e2-fc34-4df0-911a-424898226ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c573458-2fa9-4b56-9a4d-1362eebf4032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcb6384-c418-45ad-8fa9-85e172b28d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf01e64-edde-4608-a76c-5c10688154ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05d842d-8071-4988-b1ac-4b40014691d3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf9deff-0d74-4e51-9500-915b46b47aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8cc800-ba3f-49a8-bc1c-7af8957bfca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4328ec-6e52-4267-b5e0-07ed55bf960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc6822a-fe95-4586-975b-9ceb65deacb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd26571-742d-4834-b3f4-7e19512b65db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7497c504-9cda-4b36-b464-7dccaed63522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c3d965-a3a7-4b06-97d2-e7ca3ba33d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ce02d1-3dfc-4be5-a015-be4aaca6d37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8a1b9e-c300-472d-aa6f-1a5cf1e8039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdf0159-b091-4ae1-a5fd-de965c5bd726",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3644d10-ec65-4132-9c55-15b5d73bd1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446675b5-6113-4fcc-b055-efc19a0abde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ff2a02-849b-41ea-8992-cba88b52c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "def045dc-5ef2-46ba-9afc-1f21fe18b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcd3da6-1f4d-4742-a03f-3cf49eca7295",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4e3e7e-db96-4163-a434-b3cd8e104d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c055ad8c-d9eb-43ce-a413-fe4e64a81da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2e0e3c-0e2e-4965-98d6-4b3594cfce61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7411f19d-fabc-4abb-87e2-84c8e61d2d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f166b-ae73-49ae-82fd-009fcc94911f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d67cb73-b350-437a-b09e-1204dc68d4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573c79f7-ab9a-4d9e-a60d-80cb2916b850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c9484e-533f-4c92-94b5-17e142e31133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7ae272-5831-4967-a2c2-342b25d119ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae501a8-136e-4b8f-b32c-b3880934c3ba",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b85870-5755-4258-b414-d1fb9fdd359f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48eea17-a5b6-415e-94ad-d2df47f89a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067ff51d-0ba0-4c79-8f40-69d7daa4953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef952689-8044-46c1-b3e7-8a54bb5abb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9574f94-8c7f-40df-9398-0789927e5920",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acf40d0-373c-4819-b805-5053571f0fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62401a19-67cd-43fc-b7b4-b8918db0b0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f8e6f5-be5b-44b8-9b98-cd0727a03ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9654406-63a1-4be8-8347-2542d68c5713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029c3f92-7272-452c-81e8-07fdd9bd561f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280d3426-b9ae-43c2-8c1d-147c0f40a557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912d7d93-d20a-4031-ab21-ac2f20bbf237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc090d5-167e-432d-8bd8-14317a9897fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230bebe0-f765-4054-81cf-b11ae2f4a7c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10ca6ed0-754f-4193-a279-639d1619eeb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc917201-9672-4631-b6a5-0f6040c8b901",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976880eb-9668-4632-9d0e-c1a6492ebde8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1421c54c-247f-4787-b31d-1f99e2391cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee15af34-9bb8-454f-bc53-6716873da06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5f27298-da98-4c55-b8f3-dcfd25f7384c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92563f31-a10e-408b-b49f-e5fed67700d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f44ac29a-be93-450b-b660-5d35046b604f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d48942f4-5c9b-481c-8e57-29be25e7b261",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7ad6e54-30fc-4768-af10-e9ea35052052"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32b97e8b-16e6-46bc-88b9-e8ef2e2e0c66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1238e325-0a75-4750-b93b-2913539fef13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04e932e2-2aa8-4a9f-8ee8-3df57dbaf678",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b675bc1-acb7-433b-a987-ffc79bb4f9f7"
            }
          }
        ]
      },
      {
        "id": "668ac294-a9a1-4a45-90d9-fa3eeba1d413",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c83b95d3-1099-4eea-9bdd-21ad77f30cf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00eea0c1-21e4-40c0-8adf-c2fba44f81e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f7b6a18-175f-4119-82b2-8565dc8e8520",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a443450-948e-4735-8e06-00c7edcc9de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95757190-9a24-4d6f-a49a-a2317e687085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881ba6c2-7ce4-46dd-81cb-626ca3512b0a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e974171-f228-4493-a263-701073965a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71bb217-0309-41cf-a14a-5de9a8e65afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9627f63b-5750-4945-9f48-50542de2b8d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c34957-4554-427f-8c7e-5f39c90ab8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828daff3-2a78-4606-9acc-5c4b3f78b036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e49046-5dfc-4349-ab70-e93bd0dddd25",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6736d4e0-cd77-45f6-8982-720e4461600e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084865ae-18fa-45b2-8996-df3f50e3b457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789e652d-6f5f-464b-8ef1-30d160dbc2bc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4908f1-6412-428d-b48c-89b798b0d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5d1978-51b6-495a-b88b-f14fa1a2c36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850296f3-8e0e-4514-859e-a5f0211a01e3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e6184a-f4a8-4777-bf36-9ec9b7b5e6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a47120-4290-4ccc-9f5e-029855dc60e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a73f834-eb3f-48ed-b596-23756d1b76a4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79432e96-e09c-412f-896d-41876145ac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5165c2-06a5-4123-9fd4-eccf2898a033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa57d816-b443-4975-b92c-d64b32d5cfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10522482-f04e-49e5-b150-236f3063f659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb0ab8-94f4-410b-9932-915987ea2e31",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e691c6-e066-4640-9f9c-0aabf32b67c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8151d76c-1a88-4b9b-a0f8-5ee6bd51f042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412289ff-15fc-40e9-b0bd-0df5a38149ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5af350-664f-4b0c-a220-d5fa66c13ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec100d7b-7930-4338-9c52-e15c563ebf6d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1c13c1-9ced-45f2-bd1d-0e2103079954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277ea4bc-3186-4bae-9602-4fbc740dde3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de791fe-fa3a-4b63-b546-b6d439a01f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603de7cc-8986-4f6b-a3ac-b506ff7eac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb2f412-6e49-414b-ab9d-8edb66966037",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6520c95-6bc6-465d-85ea-bc85df63faca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15621b9f-d627-4217-a0fc-55654d973d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a79f15-61d8-46a3-b4fa-e06fc7182d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00e152e-7535-4fd3-a748-9a3fc9d4322f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51c0704-d2d5-4a46-b7f9-3460b4185d2b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeaedc9-22dc-4f4a-a3d4-901349cba915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91227ddd-5ae9-43d6-984f-a7e35ed5b34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3199959d-8748-4f0c-baa9-b0c00de77ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a32d6e6-66b3-44fd-b56c-2f11babca0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7381784-220f-492a-9b52-23e3425f336e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5544c0e8-3b93-48f7-8ca8-f2e40937c09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6955e0ea-5fed-4fb4-88cb-7f11fe880777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1b6363-2788-4880-a8fb-13d840e2d661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b8a0b4-7435-4d53-a230-9c6deedd9b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5659e952-aa45-4906-b94f-4657858e65d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d28461-8f6f-43ef-9a84-3f75c4defbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af104a4f-44ff-4d52-9509-c887054ae345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d9f3dc-aafd-4cb9-8771-d54b8cdf46cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0b45ea-73c7-4fbd-9fa0-67fbb91c783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bb2264-7a2e-414e-b1e9-096d4abaa62c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e62146-a759-4976-8026-e3db275a9eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479b98b4-bcfc-4c56-8ad7-4b46f312582b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8f2888-d647-4576-bf07-1b60dc89622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d8b50a-c086-4be4-adff-d6d663239929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ca416a-30ae-4665-a35c-03476617d5b1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b966be-0745-43b6-90a6-ffdc5b5cfb6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38d9c82-4431-48a6-9599-51da92a9474b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21784373-3e51-48aa-a511-fe8674b8ab77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a8b4d4-0fd8-40b5-b014-c7dff76c2c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc55b3-fe15-4d9e-91c2-a3fb456fbf3f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e038f99c-b55f-4360-ac02-f816ab8349b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6060b874-2ae7-41f7-a3d7-92e4c38ccd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36cd4fe-1892-4309-a634-10bb30285826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b6a35a-a0db-45a9-a054-24489527f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe0572a-e8f1-49d9-afd1-a5b9607db5ba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814186c-67f0-4f10-820a-d6298f09c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e40c2ff-096a-49b9-8a19-de53402a5008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17c2695-b0f1-47d5-b572-c9a2ec4e34b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806595e9-e529-49e1-a199-1a416a220404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d132de-fa0f-414b-9f7d-0106cbbb5d8f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b57289-e61d-4638-bfc9-0b161465821d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e946bf-5b98-45ba-99e8-b4b78a2c1679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9613de-61c5-47bb-b60a-1ff516239bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b24f847-0b4e-4130-ab01-854687776f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842884ad-eb6b-4b6c-88b8-ddbe371245b8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13e35d-f3c4-46c7-9b84-adb57bec6c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ed2044-01fc-4a0e-8517-e649e6f3e1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869d99d4-823c-4395-a936-1e7757a32d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eb6410-069c-42ea-8920-b5912313cb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2ff085-c302-45b8-985e-c9dedb650031",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168cf001-e9fa-465e-8488-278b862659cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ddb2f7-eda5-4573-86ce-c6515c9666fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54a55d7-4d43-4b14-935f-ff473b01fcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d8b7df-c2e8-4c52-acd5-cba5dff3fe7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503f9b5b-7786-490c-adce-a1d1655ac200",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a3e40a-2aa8-4d85-9794-03a5f8cd87a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2b33f5-bf80-4423-80a7-f0abad2d6d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f684633-9872-40a3-9a1e-09929d73de41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8305971-a30b-45c4-a0b3-dd2f8436f888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3671ea06-605b-4d39-a615-26655008d57a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781bb68f-6555-43c5-8ac7-de1e51e822ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c052b6-9b53-45e3-ade0-092b52d42c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1cd381-8e7b-4b9d-acec-dc0e302d2676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c727ee-48af-46ff-91cf-762b21b35d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7c9b11-5067-4cb9-ab6f-ecc65ddf4506",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4500c0-1ff0-4115-aad8-1523c73018c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf43717-f1e5-48f9-ab88-8f68206527e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895efec5-3db6-438d-b69e-087c617ac493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ea9b11-f812-4f32-9a51-ebcdb27110b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2529170f-07df-4ea8-b700-18e5168a9770",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34507ae8-600b-42ad-8e81-ef7d97e2193a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dfa4303-3233-4965-a843-55a0d0a61d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949599b3-a613-4545-8a7c-0dcb528514f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f862069d-8a49-4fb5-a6d5-474d342eaa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb196023-5670-4498-961e-180f6eb82c82",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a85f6b-efd9-4875-b267-4c82b1008fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272f63c9-8cd3-49e8-8af7-be1c2960f46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f7c4b4-4841-409d-9a13-2eef434fc7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff1fbd4-466d-41eb-bca6-8ad486652fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1213f9-e901-4795-a47f-e0e08eda41d6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d157d19-f6b1-4088-9e96-4e2f7096fac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6a353d-d180-4e0d-8e91-82d126b3d593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb658e1-4aa3-40d8-8db2-f6919add224a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e4568d-5dc9-47d1-ae5b-cf9a7bc83238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e2391-f032-41fb-ad8e-7c0bd3a674f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6c9b23-7336-4375-9a48-7d71b76709c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e582bf6-1946-4a57-8f28-fa41382d3e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f39267d-2c71-4d60-9346-89166ede1afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65855232-5eca-4082-b1ba-459f86064139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58145c8c-278f-423b-9b00-c9f955637396",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9618baa5-f018-4b29-a591-caf79d0ac12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed75ba37-1294-4f4b-bd58-5eca73d22f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee03a75a-4c4c-4c4f-82d0-109c5a5014c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31618ff2-69e6-474b-ad7d-4f391f4a75dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9cdc1d-1943-460a-8f67-d1c5d0cfc596",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4f8c8e-ae18-4cb9-894d-bb294aad9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b13ab917-ad45-41fc-821f-c1a263041a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2720e6e3-e995-46c2-a312-23702d23833a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1b0ff9-ee49-45ec-b1bc-6e29c2f31003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a0301-a91e-4495-a496-14e0a93724ee",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7804fdf8-8c76-4903-a375-e34c46a7eb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dece2480-fae6-4d26-8e77-31d72e0a1268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeabea74-fff0-4e89-a951-fa8e30376390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3843a431-aec5-4476-8581-beeeb167db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47863ed-b54c-4505-a3f5-7882582bcdb7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d200d14d-bfcc-440e-a853-74f594ddee02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e58bfc-83cf-46fe-a7b5-92d82ed10a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05b7f48-03ea-45b2-8f2f-7dd475e9dab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27befdc9-735f-4ee6-81cd-dfb8a835d528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d082368b-e799-4e5c-94f5-8f99e2a82374",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a0b8c-b485-4dd0-9853-2f5a72eff11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e0bb17-79d0-4c93-bc61-1e54296cdc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e37dadc-ae8b-4e10-9241-5718e6f946bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc76d15d-c4ac-4239-bd5f-407cd614b885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f82a4c-f6c8-4192-ad05-55b785a72c44",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1606be14-56cf-4d22-a5b1-1ae25076bf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab27892-762d-4411-9cfc-ac8f5024157c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4494c89-a541-4d29-b7b3-8fb219a1aaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208e8d9-5252-43d9-aa5d-3a251eefb647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7287e0bd-cf91-43da-91d0-6a5fcc89eec2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e711c047-6f2a-4005-bb01-dd5622db80c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0bba425-d85b-43e4-989c-9db8a237182f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1c7135-51fb-4104-ab68-b3f3bd0591b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792a523f-d668-48ab-b789-d345ccd43605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e266c4dc-f27a-4234-9ec7-d6226a9f2047",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3f116-9643-4f53-aa90-8e64a06c7110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bcd835-d11b-42c5-99cc-1b8d932930de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754e69c3-f306-4f5a-a53b-c4eebc827371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f02068a-f191-4e03-b882-c91070eaf93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb3997c-50d2-4d68-bae8-7b8ff74369a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457b25b5-2b64-4363-b2ef-4d26013a010b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42d26c6-df6c-45f3-9d25-ddd1d8c24c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8ca994-1d5e-4ff2-bbac-311843d667b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcecd18d-78b5-4595-9101-017fcdf5c196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549c4fc6-526a-4d07-bf50-0994d92bc455",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c0364d-fea6-4e11-90d9-6eaef71be2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa62d34-04ff-402f-b7b0-82fcc5e4e8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb00d788-e374-487d-8fce-731a2cc14fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca329ca3-05db-4275-bf88-1871926a088f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fba219-1fdb-4d3d-ad44-cdd0d92968a4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbd713d-f764-4580-8341-ebb434e3aadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b2445a-4bf0-4d0c-af20-8d27121c84bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05168c34-09f6-4d26-9728-cd7c914eab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9241e569-3cc4-4628-9e0d-72c32e621305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ab0379-d014-4bc5-bbc2-7a1f871d96c2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ed0600-9d9f-458a-8545-5af29ff74004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9526a0a8-eb38-4cfd-96d2-fb290b5aad98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882e4884-edd6-44cf-b04d-321172c7a4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06ecbfc-7708-4ffb-9742-4426808bca3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2245c0ba-0711-43c1-b3f9-7eeec7f3f27d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0449227-7be9-4d13-92ec-a5e5b8982053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ab2b55-60f0-428d-9ab2-4245d5197d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769a3389-9bbe-4337-a71d-6c4e73f6ba90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba97537-0cbe-43f2-abad-ec7e3e1bb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38926fe-ee56-4076-a126-a432fd1f1c29",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c7a648-fa5e-4e86-8cb0-ba5878d99edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47eab8b-7913-492a-ab2e-76a2e6ea76e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15504642-4e4e-44a5-bc6e-705d50db9024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c58ac98-9984-4dba-a29c-fba128978392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc77a92-39b6-486a-97db-51408bf34d86",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad402c3-5759-4758-9e3e-5e0dd0c66865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55525fb9-3022-4d02-aabb-e0f489655785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ef676-b587-4c0c-b11a-a50258eeeada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe8fcaa-6ef9-42cc-9638-08f6cc491ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81678f7c-ca09-47ba-847f-15aeac251df4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebaed532-df07-4eff-9f81-185449b987de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feda3aee-ff37-48ff-95cc-325a9748ce01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ec4a77-ce41-4640-86b2-5e546b645bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6f2684-4611-4d9f-bc94-14e642028fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288acc12-0bce-4f0b-8f41-111cc095b910",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42635b1-746c-462b-875f-730dcdedb52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d1f792-ea6f-44c1-9767-b4e7ceac9cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f1df3-8dd7-4629-ad52-a9db06f5fe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b0f0c7-e522-49d4-853b-b577f1ff36cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ad6b8d-0758-4209-a219-88b6aa9f2873",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64d5324-db73-41d3-b60a-7d350ce70097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65d4237-65d7-47c7-8054-615603c1c1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9dc879-fdb3-4dbc-8199-1035589701ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8113c9b7-7ec1-423c-9dfc-b2abd9108b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550971c8-4a98-4dbe-86c4-c68abe3dc78b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2479ae1-7d0e-4a0d-9931-a564e4b98465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fecff8-70e6-43ab-aec2-6d5370b17237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd8c441-578e-47e7-974b-e8535726d586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15565ce-3896-4e7c-960a-9536eb6682a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa3815-bbc0-4d0b-996a-aee9101b4acb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4cbca3-a42f-45ea-ab73-fa4d1abf0d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1afbed-7560-4b83-a0a6-a37523d240bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d722d13e-c3b9-4a70-8a4b-c6291ade16da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef4964b-d011-4c31-96c7-3da9f9d5c6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c9892-076f-4eb8-ba6d-7e188ba810e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd53ffb-5c0f-4772-a8a5-3577fe10bb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c935f9b4-7196-49e6-8987-a042cb1fc6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9f752-2fec-4258-be9f-002a795e543b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b731fa16-9f01-444a-a9f4-7e237539075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d34af5-de59-4bb6-9a25-9adad90f18a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55978693-5587-48c0-8813-d4594df0937d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23f5e64-aa45-4568-95bb-fc38894d7601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5246d7-4fd5-40c3-b3b1-5291532db63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0d75ef-8eb9-47e2-898a-d568a7c94cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3294637-468b-4747-97c7-bfec6c839957",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904c9ff9-0dbc-4a79-bdba-5a02e6cbbc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dabb76-bb42-4dea-8e8d-756cc3e15516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c2e50-3d6e-44ee-9d84-1e36dff34348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d463295-d0f8-4773-8675-51427c31c598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bb55d8-2093-4d5d-ab46-f75dd928d009",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265253cb-191f-4037-97a4-534e8f9b6c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9d799d-3612-4538-be70-36c3236b2d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cdd683-4a61-4357-ac85-174555dfdb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37926f69-8c82-4734-ada4-d451924ab892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea107e-5966-4604-ae60-2c8a1a625d6a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51662132-cbb1-432d-b074-0c940e0a3dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3677ebd-126c-4820-b7aa-696c374d8c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ac54f1-d4c9-4172-88b1-35077428938f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdce834-5c6f-4256-b542-c9880b61f95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ac4bde-1af0-4973-99ae-3a2963808039",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab511a6-b702-4217-ac43-7b930d526323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb845f9-ae7e-4a3e-9e3e-217355551663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f14b67c-632a-4627-acf1-1a32e1b88bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97417472-a7ff-46ba-bbd9-92fb1bb60f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad859bc-3006-400b-a7ca-165427232a9b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907f4ce1-5a33-4874-af41-3e08ad4bb747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8de0b5-65cd-4ce7-9055-ff692f9d774b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447bb9b1-c41d-4bdc-86d2-359095ad9235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b4a531-ad88-4c0a-8f0c-036e9480f02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb90cc5a-c963-49f8-94a2-6745613a6386",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bad7b1-5bc1-4693-8af8-34adf1f9d6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a68996-9f5f-43fa-a39a-ad8f3a544535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3720725-1c1a-4435-9de3-e192807fbccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75386f0-139b-45f9-85df-a91b4d3da0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af58e63-8441-4bb4-959f-bec82e271a22",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63810e94-6b0d-4866-8ffb-ef1b287fa290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616b1e36-8937-4267-9da7-2e2559521c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cdbaac-2772-4134-9091-33f61f4e5af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f6bcf7-0361-475a-bd5d-1d81cf6087db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d1a47f-82a9-43ee-b375-111b2becdefb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab051b0-75dd-46b2-82e3-901d623b02ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ac8523-4231-47fc-9d12-a4d59d7d98ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10502652-ce47-40c6-97b0-7c9ae0a0f9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cefe92-0131-4d0b-b704-c996e4af3d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d203975-c23a-4710-88ef-5b5cdc0dd8a3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182dc8db-9ef6-4ed8-93d2-ca8775d8505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623fb8d3-b542-4a6e-b866-1ef93ed7d5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec0d125-664e-466e-895a-81a039d8ccca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a827c1-8829-46e5-affe-b643a3c74a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d7408d-705d-49c6-850b-7cba6b755d66",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f134e0-c6a3-473e-840e-75ceab11a289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019ad2d6-af04-411a-a199-a2b97fccd41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbf1376-b17f-49dd-85c0-0ab7c846d630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b91fa8f-0b13-471d-9293-c0947b340876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d711d32-0e79-4d3f-a6a4-95586d604372",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4201ba7-99ab-4d5e-9d6d-87de899a5e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa98902-7bd9-4185-916f-aee5109c4ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7a5fe3-c59f-4a4b-86c5-6a5693621df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b28ce8d-12d1-4990-8822-bbb6b04c52b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684075e-815e-469f-90ab-f07d8a1998b4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbae6ad-8116-4008-8517-66c154f3451c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77966278-7521-4509-a5e3-764a38759de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3850c32-ec2d-4f21-935c-508d65251caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de681836-4249-4d72-bff4-32abdd92e8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a081af-ebfe-4085-82a2-2238707c590a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f848dc0-cea1-48ae-bfc6-d79fcde0816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44830d2-d875-4d79-85ae-ce1eb1dff2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c83b8cd-94de-4e58-b64b-bdfddae1f98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ac4876-2644-434a-9c78-3b57ff2f1343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3f45f1-d0f8-4785-9a32-47499f2dd3e6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c481484-fa85-47bd-9c5a-0105488b5e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115794d0-e663-4ea9-b3f6-2fa0dbceb129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fd2c82-9197-4251-8a38-de79c178a417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d42be88-62f6-4d66-885a-703a476d19d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d116b-3817-46d2-8126-6f6c83225971",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2bbe77-853d-468e-b8d5-cdda3c90848f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8070dddd-5461-4a03-b8f2-d3e280d9fae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505ce74-370e-429b-a138-49426b15c05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35da4786-d07f-41ef-8ad3-153ca8ca8c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b778cb-5506-42cb-8328-e90fc769a417",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825787d3-aabf-448f-a6e4-1877b5df1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde78681-80ed-4ec9-8b5c-cadafedadd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c4c18-93ef-4bb3-976a-497609e51938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb96c95-ae94-4727-8619-ee0e6d355803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7ab0fa-dabf-4ef4-8848-975628c5ab32",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbe04f-d667-44e1-a661-cdce0d7179d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0828669-ee8a-419d-8890-1ea52410cd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d288a37f-b237-4392-8717-0451ee458dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb04f40-767c-49cf-9675-839455602f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48895d0-23e7-4b8f-b3f5-b6f82ae8e032",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8eefe7-02d3-4327-8d85-0b8e577dc6ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279afd8f-d1f8-40ed-912f-65f9a7ca0d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f8bc2-8f67-4202-b43a-f09fc370ebac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8508e809-aa5e-4d95-9aac-9aa681352eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915452b1-47c6-4491-8aaa-6e66b043fa96",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8546f2b5-26e3-4e0a-a42f-d6158b0ddb4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28495efd-b14c-46a8-b2d1-475ae483226c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064785cb-5a77-4990-b10b-c612ae73aa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cbc235-3227-46b9-87e9-248f30fe4838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6910051-f24c-4c3d-b865-d82711320f38",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1085116d-7869-4553-aab1-ccb0a137ac54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7aaf0ee-be2c-443f-b63d-56b22081c306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b67ca94-f021-4b35-ac77-240bc655b435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111d61bd-e6ec-441a-96f5-f2837010ebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2095ce9d-f52a-441d-bac6-05385d31fbd9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfbb8f2-c45c-46cc-a937-c35ec7c6c277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6395380-f55c-468d-a9fe-090e4f9167d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520eb530-463d-4763-b3a0-d6c116c15b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d756c5-ef27-407f-bf33-cd5b3e270a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c4c06c-ef4e-4208-834b-65754f97434f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eba50f-0290-4e7d-b55e-ac6ad2ee029a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57cafcc2-1ff5-4e4e-a2e9-acd72891f0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab956a1-0fc0-4fc6-9f56-2619cfaca9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559f3daa-060b-46b7-a401-daeb89655613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75902a8-775a-4f68-8467-26f8537f1e17",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013c188-0937-45d3-84cb-b25981b287b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95447441-bf20-4819-87bf-082a12d742c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d092f76f-dcfe-460d-a6f5-ff7c0c8cbdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ceabc7-0fc9-4aca-989f-b23857eb6bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8285f7-9f5e-4c4d-ad7b-f12096ad2355",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d0089b-2bad-47b3-81e8-f298ad55583e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a2fb2b-b40d-45db-950e-b7d91fe5070c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275ff387-313c-47f8-a28d-e91709a02bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e6ec62-0268-4cfb-9e9d-e43fe26449ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63be3174-08ea-4366-8891-e548733a2d20",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfd014b-4553-43ce-92e6-f80ba38b02e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b779695-5992-4037-ab15-ece612f1ccb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bf783-4153-4b2a-b1d4-8e1c50694322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574fe92e-fcd4-4e2a-b096-c9cfa179c5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6882ea72-e422-4393-980f-5ad87307dda5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb99e50d-e102-4349-9537-100620361a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3995c1-c4c5-474e-b415-54bd10330a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f479a611-bb0a-44ae-83a6-82508f16047e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7dd3c3-b733-40a3-913c-6e68cc4e22ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0668feb7-1165-45e6-b98b-f322a40f42c8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ffc81a-8062-40fd-8a1e-1995f08bb3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70262661-bab1-41da-a5f9-ef8bb84db507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030f47d9-e0b3-4201-8b1c-82cc0584a324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d30e1cb-f1b2-45b0-81ed-2abbc0f05569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49777ef-3d3a-49de-8044-c43e7475100b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b16a05-5dbd-452b-9a17-7686fc6b863e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f42eb712-4774-480b-a965-28e1f37440d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848fd192-59e1-44c3-bccf-9f53c8dc2c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0742fccd-66ac-458e-b8f5-f0e4d004fb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3963e198-db00-4544-9f87-62541ed24260",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d59f19-ad3b-424e-952c-3aa4af814077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fe0afe-e4c4-4aff-b95e-f3614c4645f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572eda9b-06a0-451d-bdcc-8e2f423a6e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f0aafb-b17d-41b9-954d-165c3a2df1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd21b2a-f9c8-4642-bea4-15b1b4cb19d6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481fc6b-e16a-4961-86e3-9c73792af565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eebeb55-c92e-44ed-aff5-4f438e4db703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e68d0c8-d4b5-4bf2-9fd8-abe1a405902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b103d11f-1a8e-4d9a-8dc0-1bce317d5c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6e764a-4f06-4051-83cc-7507340c2825",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3de707-635d-44d6-b6d1-74f519f19625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd6cdbc-f42c-4862-a164-245f73eacea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28549f7-c680-499a-8aba-29535795573c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b2c4b3-5bd8-44d5-8ee6-d9ef99699c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161246c2-112d-4ee5-9b49-2a21aab11898",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d8029-83d8-4520-ab79-db0afbf63e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a102c1b-0d86-49d0-bd7f-f3313ab71ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ae24f1-a64e-4adb-8ecc-4cd8e238edfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e6719e-5d50-4cf2-b50c-1f67e7c14e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d40268-eb41-4789-81e4-be6ab7b58bcb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136e8ba8-df28-4633-af0b-4b71a16b0d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e42f5fd-e6e1-498c-9585-e441adac5954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a5c5c7-aeeb-4471-8fe8-15a5d8357715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435395ca-6882-4ee0-a65a-d68f454f2f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f906e5e-5823-45c6-86f5-28872c0f1f31",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d8179-fef5-44fc-8ec8-e1cd2511190f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b136220-142d-4bf3-83fb-3ee102335dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3539e8e3-09a5-434a-9737-39ffac62f39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7f6034-7d41-4261-83aa-700406f7e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeb75c7-b5ff-4f06-b828-0aa828a995ce",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c566fe94-e38a-41b4-928c-6b24f4b4274f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5435b6a-7756-4f3e-8c1b-e9f882754a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209582e8-3052-4aeb-a3f8-4040e579cd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e5add0-6266-42a9-8afa-6707e984abf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8587c0e-f60e-47be-8d80-ca5737e3aad0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e92d0f7-ab03-4c28-ba17-6f4b976e7fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e78f7be5-d1cf-4609-a6bc-e2dc14ebf004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ffa27-fa86-46d0-964a-a7cb739242a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cfd74e-5fdc-4b76-8c20-987e464450c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c9e791-c284-4834-aa8c-5fc5585b3056",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69143e5-4d45-45d0-8b78-c026f3abc7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9862914-7437-48a8-8161-77e5936c3140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afee331-9bd2-4d0b-937e-db7e6e9edb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1907c2-33e9-4d8c-b817-c3cf264bbf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20e802d-f48a-4475-a606-8c6f9d68dd28",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb1e449-9a33-469a-8bc8-52f84e140139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ece38f0-759d-4bec-b769-c9f980cee8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6055b7a-6574-45ed-ad5b-53ffbfc08b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d1f792-f7dc-4674-8b5c-cdbeb8df1ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c97507e-09d6-4a2f-86c9-19198bee29ab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3372e-50f3-4a74-aa9e-031e9ed307c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e6ac92-6572-4015-af52-63d96f13068d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d7f568-4cb3-4e15-bf5b-8c6a1c41c6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ea6776-ec6f-4219-a2fe-f2c3b50f93ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b808f9a-998a-4c06-8e50-ba01672ec4f0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6872fad7-13b0-4c39-a257-89482810d989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef4d43a-3506-4114-bcae-9f70e6abdcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bad6eba-38d7-4049-9c36-37d1e1fede93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd2a3d5-ea74-498a-a155-70b2d82dd019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d56be6c-6899-4f03-8ae0-7cc108b8d36c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76f6824-c9c1-43fe-9cdc-8aad62c17b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4e0aff-8d26-4b87-b56d-abe1d55b09ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c2a820-e8a0-4425-8916-375b83e8bc92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5db70e-b972-4008-9120-8baca5bd66e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3eb87af-e65d-4a69-b78c-af90f2ba8209",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6ffbb4-9747-4e0c-b767-3e6c77ea715b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b428c61-970e-40fc-84f2-7aac833385fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3371bef-65b4-4da8-8248-17383484adc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153b8978-9fa6-4c57-8d8f-4644c7750552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a00e6-61fd-472c-bc82-3d9dd4c5bce2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6776d4ab-eaf1-4d50-821e-1d21afa16371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d4ef0d-fb4c-48b1-9f8e-e19bf2e28cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07bc8bb-bc8c-45a6-ae27-ddf84a1b6172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a192c8e-84cb-4200-852d-3206aeb1d23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc5349e-b178-4c5d-9ef1-09f9df062bcd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bac946-f784-4822-8213-5d1dc4541c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9e05b8-8a5e-4dc5-8fb0-ac0e3b0e6638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7462f7da-4a2a-41cb-af8f-60d37b272800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3c5496-db4d-4c67-8554-fc7bcce89f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fddcef0-eabf-44ee-9862-7c8785bbaba5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68255b73-4add-4a96-86c2-b0c3eea7af8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363b8aac-32b9-4b87-8b79-2e68bb70a468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d391d36e-3dd5-4ea1-925d-54b1ca9d9cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a644b7a7-cedd-4353-8548-2447823c88a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e2ed25-4f8f-476b-9b8f-eb2875bd54b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd7bd67-bc9a-4509-b78b-1855b8890b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6583c903-e1cc-4824-94a0-aa94cd4866bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806f4271-2535-4cb4-8db3-ac9e7ba08733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb526cf-1bf4-42c0-96df-da513ddb4dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6fc8f3-7fa1-4820-b028-25726f0f9939",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f00b38-ca44-48c0-b710-36c8cb6840bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b78335-dd3b-4376-96d7-13090d3ea108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e93e11-fbeb-43d6-8a22-237a13daa929",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0d644d-f9b1-4547-b729-fd84073bd80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b28ab49-e5f4-4fb1-bd13-8c0392572771",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39826d42-769b-4432-ae11-59e684de4d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d93661-01e8-46ff-82db-d7527f8b2f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b92da17-e08f-4078-a5aa-5605bc6909c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9a0873-f3ec-4bfd-9414-e54a6e28fcde"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4111a772-28d1-45f7-a95f-6a7b50d2987e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0cc6a40-15ca-49fb-b13f-e1ede0097785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13fe9bb9-0e22-4ee8-ad41-fc2cb39682a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2669b5b-02b8-40ed-9ec3-7274c11be9b5"
                    }
                  }
                ]
              },
              {
                "id": "02eefc88-c929-46bd-b5dc-db798f6735d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "409daec6-568f-4dc1-ac16-d4f059302dc9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60dce23-7125-4c8e-b76c-e2e6e5445250",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7da658f0-5b3d-4e92-a635-32a54f2b4cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2abd1f-219c-46a4-8bbd-1f8f5e678c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57708ed1-5f5f-45a2-aa0c-e2edcb47429f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab952216-852c-4c09-84bb-7f7bd6e5c86f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67c11bce-df1e-4802-9901-6e0ce15b5c2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "692120a4-4196-4dd5-9822-42e8e4533052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07690fa-ccea-490c-8143-cca54f1072a2"
                    }
                  }
                ]
              },
              {
                "id": "380a4759-91f9-4e1f-8a9e-c3b01d300a71",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b0cdedbf-baf6-493c-af2c-fbda097e8963",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42396e18-a909-4c42-8717-3b1c175d1321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d4fd2ee6-46d0-4dde-9264-77ce59539598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4cb4d3-eea0-494f-88f2-ab5c5bb3ec5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0178a65c-8dc8-4c9c-ac02-6e10b2ca5807"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbc2e847-6ec4-41f8-a24f-79f198cdaa57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fa6b74f-018e-4762-b3b9-848c2ddce3f6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3004e039-a8a8-4a95-a42e-cb848dae5545",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2dcd1b95-86f8-4ae9-9482-61f67cd67976"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d66f02f2-1be0-4ac1-9607-7e7d6d439ba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf083b1-9965-4c65-a9b3-4b20b399ff3d"
                    }
                  }
                ]
              },
              {
                "id": "5a466a15-01eb-4000-a4ea-442f0fb1349c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc42c479-ae3c-4b42-a06e-080a8a525839",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13ba652a-2bcc-4d5a-be4b-2e1a5e20f0ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5c95124-ca11-433c-b327-46a29a02709b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dfb04aa-e108-4add-a8d8-e179542f5457"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5482a9d-00cb-495e-8024-6d44c4aa2988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3bc65408-fc62-4787-b6c0-272d8a3f95bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be3857d2-dcba-40ba-a052-9cf945fc8cc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea430f1d-2e95-4da3-9e65-89bfc2ea76f0"
            }
          }
        ]
      },
      {
        "id": "cf3d82f2-4d6c-4ec6-ae08-ff8f41bec6af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "32f3419a-09b0-43db-b184-8907f46f0ad6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18cbe789-06bd-4d76-b8a0-cd658cff81b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4d67bdf-4b15-4276-b8d7-0059ffcf2794",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039fda12-d1f7-45c9-814e-cb7e54493716",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e5871fc-e2d5-49c5-aed3-e6919430a254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24be8b4-dcd6-4791-976a-9633f8dcb27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "616a6b00-7b67-4329-848b-9f4ff7390596"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8451c1c-42f3-4acf-8f63-e813b31c9c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f61ec55-14ae-4078-81e2-c923bb4eef99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d955e90-fce9-4e81-8719-90513bf257db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def1d3fa-f706-4be7-b39f-a2b009ab041c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f24a5aa-1f03-4d51-8153-e65b9e801882",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5cb39a1e-5400-46e9-aa14-edbaf21fa59d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e764121-5234-4581-a157-21ffe6db51ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fc7b46d-ea8f-43b6-abfa-82633821258c"
            }
          }
        ]
      },
      {
        "id": "b8044867-c2fe-4ff3-8dac-52ce532e0f36",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "41a90a8b-96ce-45e1-9c5a-ee85dda8c7ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65ac4cdb-c939-46ab-ac44-3cc68fbca9ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "624366de-2d29-414b-98e9-9ef757ac1562",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732115a8-4c49-466b-bf23-5bdfef8311a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612834bc-b965-4c7f-af84-893432af0f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cf3234-134e-4486-a1c9-0010eb4d8279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f76ccae3-7207-4029-a6a6-d48b2ddbc656"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01dd5733-97ca-4680-9109-42658205df0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c72e653-8ad6-409e-946f-1095f92fec76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "971b43dc-b24d-412e-bdad-92b70f4af0a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eba839c-204a-4e2c-820d-167cf8eaf038"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "785106e2-4e9c-4865-ba67-5b1fa312dcac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "952dfef9-81b4-4e9b-ae81-ecc756c5c5fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dff526f-6238-4e3b-ac25-d02e699b2bba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06695028-f66e-4156-b0be-e76e5537305c"
            }
          }
        ]
      },
      {
        "id": "bfc7a622-dafa-4f76-a06c-b8242b4ba5e5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "16673265-1bf4-448c-a964-e42b1d3be571",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d84758df-1f03-43e5-b34c-d5970870bd8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5dd0af9-7d78-42a1-9219-b01dc74fabf6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e981cb3-e49d-46fb-baa0-73dee308630b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "280cf63e-9253-4eef-a8dc-3ac6a9a7da5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9690d81b-df94-4a82-a428-29575e698127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5e69e30-ba38-45a4-b9a0-e7d15f8836e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec14bdac-f9ed-46a5-9d3e-4b8f27ff6143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8191295-d2f4-49fd-9fbb-63ca901cd792"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38a30377-3c11-4e63-a9f8-2a1ea7356718",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fe95339-1ba6-4cb3-adc5-0aca6c7e849c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6254d91-741d-461f-ac64-99575b5d588b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44acc2ef-3cdd-48b5-aa69-b3c57a00045e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f2ef546-04d4-4e5e-b88d-14d6b3fcc5ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb3fb7e7-febb-42fd-8984-97e0223c3e14"
            }
          }
        ]
      },
      {
        "id": "af793c76-1351-40ff-b72a-544b5267f87b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f953738-b053-4a0f-bb2f-fe64e657583f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "027d97b1-2bde-4492-8551-77ef0941917c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6cf874f0-c527-4f6a-9aca-b7e4038d6581",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2edd8fb-92d5-4972-9190-a5b9a5af3450",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e3446d2-a59f-4374-857e-eabeece6191f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.58245614035088,
      "responseMin": 8,
      "responseMax": 348,
      "responseSd": 24.081390666311503,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709339579776,
      "completed": 1709339593037
    },
    "executions": [
      {
        "id": "6afc4c2c-98f8-46d7-abfc-fc793dcfc72d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "309ba6e6-fa61-44db-a20d-c3125d2a9df8",
          "httpRequestId": "01179c93-eba6-4676-9e0e-248597c00128"
        },
        "item": {
          "id": "6afc4c2c-98f8-46d7-abfc-fc793dcfc72d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1bf95e50-efd8-46f0-9601-bb4fde833fb6",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "4985d3b9-abde-4fb6-94db-077caf005b72",
        "cursor": {
          "ref": "2fec69c7-a6e9-4fab-af43-4fffc65996ec",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a60d21a0-f9a0-44d5-b711-4a73abaf68fd"
        },
        "item": {
          "id": "4985d3b9-abde-4fb6-94db-077caf005b72",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4ebd7ece-ebe1-40c1-9505-156af71c5107",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "dd310143-f69c-4875-9177-b08007be0c71",
        "cursor": {
          "ref": "eebdb0b7-81a8-4218-8ba7-d5341c0f67a5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87c41d35-f4b4-4776-bc31-d3644c65e801"
        },
        "item": {
          "id": "dd310143-f69c-4875-9177-b08007be0c71",
          "name": "did_json"
        },
        "response": {
          "id": "32c34b1a-085b-4204-98fe-f47c5e94dedd",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4f01cc-bd4e-446f-a0bb-e03435ba1a2c",
        "cursor": {
          "ref": "74592765-41e8-43b6-979a-c6dfacdad3c0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d77753aa-f302-4332-887c-54d09e669b4b"
        },
        "item": {
          "id": "5d4f01cc-bd4e-446f-a0bb-e03435ba1a2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "355a1c9a-46f0-4f89-8e5a-8846f26d2018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4f01cc-bd4e-446f-a0bb-e03435ba1a2c",
        "cursor": {
          "ref": "74592765-41e8-43b6-979a-c6dfacdad3c0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d77753aa-f302-4332-887c-54d09e669b4b"
        },
        "item": {
          "id": "5d4f01cc-bd4e-446f-a0bb-e03435ba1a2c",
          "name": "did:invalid"
        },
        "response": {
          "id": "355a1c9a-46f0-4f89-8e5a-8846f26d2018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a59aae6-bd31-4faf-ad1f-0e06ddfac1a5",
        "cursor": {
          "ref": "e77370ad-0bf7-4ce4-8dee-9c82f7df2a73",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "be35e807-43fe-4700-9e45-83079be9cb2f"
        },
        "item": {
          "id": "3a59aae6-bd31-4faf-ad1f-0e06ddfac1a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2ee3fcad-1bfb-4f70-9b5b-0bf9d6ae3739",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c0b38-fa82-4583-a7b3-480e5b79a0b4",
        "cursor": {
          "ref": "04c9e0d2-64f9-427f-a3d5-316611caf454",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff3fa731-44cc-4ca4-9775-c79107885344"
        },
        "item": {
          "id": "6c7c0b38-fa82-4583-a7b3-480e5b79a0b4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9c8a14a9-f1a0-442b-aa9a-d9fac17b4bb8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a2732-61fd-4abc-a9c2-38f36a86edb9",
        "cursor": {
          "ref": "5c21cfdc-5b6e-41d5-9dcf-5721426adf9a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f7a10fe5-3a88-40e3-abf8-00f822081a44"
        },
        "item": {
          "id": "5d6a2732-61fd-4abc-a9c2-38f36a86edb9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "565980d4-8edb-439d-8c56-619263ffabb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b50540e-4305-4053-b8d6-a5e437432b6c",
        "cursor": {
          "ref": "2ee483d3-a479-4de3-9baa-0749db0659f5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "49f52438-6de2-44b2-9385-ce462bbec8e1"
        },
        "item": {
          "id": "4b50540e-4305-4053-b8d6-a5e437432b6c",
          "name": "identifiers"
        },
        "response": {
          "id": "befd8641-231f-4edf-8b20-abd78836e119",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cca2b59-fb02-46a6-b529-0d3d70d883e8",
        "cursor": {
          "ref": "5498d7c9-f735-4187-8f94-e9f2e28b1c87",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4f948285-0438-4fae-a654-3b131090c068"
        },
        "item": {
          "id": "0cca2b59-fb02-46a6-b529-0d3d70d883e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "16512386-8e94-4e05-a3b9-e7f1d9615d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8468068-28b6-4062-a6fc-a8b557a62569",
        "cursor": {
          "ref": "1d4ce3ef-6367-405a-86d5-b77fb9d8a0c1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "23e73a4f-e111-40c4-ad6a-c8182116ae93"
        },
        "item": {
          "id": "a8468068-28b6-4062-a6fc-a8b557a62569",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6161856a-1776-43b4-95f2-4d9284497175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3b3974-28d0-493d-bb32-9b275f395053",
        "cursor": {
          "ref": "57d37bf9-d248-4cb0-a5a3-bc4ec5416f5d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "caf11112-8d70-40cd-9a36-cc6f8eb548f1"
        },
        "item": {
          "id": "fb3b3974-28d0-493d-bb32-9b275f395053",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7dfc1576-96ce-400f-a4a4-5504c2344124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a538f93-6e52-401d-8588-09bd61a2e29e",
        "cursor": {
          "ref": "8d5fbfb4-d204-4369-b663-9c71c482d3af",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b5617671-8986-4d48-86a8-e4473b6a1dd2"
        },
        "item": {
          "id": "6a538f93-6e52-401d-8588-09bd61a2e29e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "930aa50d-6790-4883-a05d-be9f8a53ec76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac59a9dc-3dd5-498d-9149-17759615f0a7",
        "cursor": {
          "ref": "ac61cea5-5ac2-414f-a17e-552314866d51",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6339030e-c83b-45f9-acea-6165c9800e09"
        },
        "item": {
          "id": "ac59a9dc-3dd5-498d-9149-17759615f0a7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "44d7cb59-3853-4ce0-930f-553244960f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5d5c19-efc7-42aa-9e71-eb577ab35e34",
        "cursor": {
          "ref": "052793bc-9325-4959-81f8-e359fc1fcf47",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f94b1e81-b904-4571-ab42-bca3e6e2c602"
        },
        "item": {
          "id": "3a5d5c19-efc7-42aa-9e71-eb577ab35e34",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1b599ce6-e3f9-4d2b-81e1-d0b7887ea49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07442575-c505-4bad-a822-be588a4507af",
        "cursor": {
          "ref": "2670ff33-f5ab-41e7-b72f-51d04926a50b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "266e0b7e-5189-44d3-851d-13a20e234dbe"
        },
        "item": {
          "id": "07442575-c505-4bad-a822-be588a4507af",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98b77548-577f-40f2-82dc-64d1326bade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf17ee2-8c51-4ee8-83e8-606731dddf1b",
        "cursor": {
          "ref": "e711be9a-600b-4a78-91b1-1d765116f313",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "92e63aaf-09a4-4112-9a41-6d3163569560"
        },
        "item": {
          "id": "aaf17ee2-8c51-4ee8-83e8-606731dddf1b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "679d7672-31b2-40fe-bd0b-b8225fcf5103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0a4ae9-5ee7-403d-91ee-3fc76ac3035d",
        "cursor": {
          "ref": "e8650490-ea89-477a-a8e7-0776de8a3aeb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e1c080f2-71f4-4318-9525-c457aa75368f"
        },
        "item": {
          "id": "6f0a4ae9-5ee7-403d-91ee-3fc76ac3035d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dfd1e6d0-030f-4d4b-8a0a-86c8f5839029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62187aa-1280-4826-9bd0-6e87213b13dd",
        "cursor": {
          "ref": "fb2b45da-af3a-48ed-bc5f-10563d966c01",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14fb65d3-85de-4539-905f-21f82c2b48ad"
        },
        "item": {
          "id": "e62187aa-1280-4826-9bd0-6e87213b13dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "69aaec8f-3653-479f-b0b7-d284d94214f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af65cde-dabb-44e3-9f54-59107e1fa292",
        "cursor": {
          "ref": "04a74081-d1ed-4c56-8d05-665143e8b32c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "85eb8ee5-c71b-4fef-8984-e12071d8e6cb"
        },
        "item": {
          "id": "2af65cde-dabb-44e3-9f54-59107e1fa292",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "433aca1a-6d92-4212-947f-614a4a21e955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86147c43-b381-4c01-9d77-2eb542f208dc",
        "cursor": {
          "ref": "21fdfaeb-b4ac-4814-945e-6a09a553201b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "24eb2e9e-70b5-47a9-a071-866887ddae9a"
        },
        "item": {
          "id": "86147c43-b381-4c01-9d77-2eb542f208dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fbed3811-d8fe-4e4d-940e-439d41ded90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d935de0-7ce0-4f30-9fb0-29e5289acce5",
        "cursor": {
          "ref": "0e9f8b94-a55f-47da-ad63-fb20ee8612d0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "26feaf71-f956-4da3-979c-fbb23d18232a"
        },
        "item": {
          "id": "5d935de0-7ce0-4f30-9fb0-29e5289acce5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6c68b9f9-2188-4184-9859-67fa432c2f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27b62c3-1c79-4941-a126-331ca5b26755",
        "cursor": {
          "ref": "976249fd-2e62-4ed9-8f84-51fbf0c56b46",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "477490f8-8b35-4e6b-9b9e-360fe7b49051"
        },
        "item": {
          "id": "d27b62c3-1c79-4941-a126-331ca5b26755",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "46dca8b9-590d-4506-b011-94971b6b201b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc554a1a-00c9-43ba-a4d7-d7046b18762b",
        "cursor": {
          "ref": "fbec3106-7308-49e1-8da9-abd7140b13b8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ef09a849-26f1-4b57-a327-44b5434cb8c2"
        },
        "item": {
          "id": "dc554a1a-00c9-43ba-a4d7-d7046b18762b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8dbb6064-b8fd-4a9e-ad8e-63fd3088a158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa25517e-fd59-42ef-817c-d4af15a53391",
        "cursor": {
          "ref": "8a3b8a7b-9147-4c3f-aa43-010d788a53e9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "063d81b1-b908-4578-8617-885e80a4c136"
        },
        "item": {
          "id": "fa25517e-fd59-42ef-817c-d4af15a53391",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5c34f2ce-dc86-40de-b520-5b4d677fb9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4dad35-5dc7-4570-80a8-1d3f89d7d112",
        "cursor": {
          "ref": "da5f68d6-8715-4df1-90c3-f088ac4cdee9",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "feb9e267-fa23-4893-9651-94b2403f74df"
        },
        "item": {
          "id": "df4dad35-5dc7-4570-80a8-1d3f89d7d112",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f443f72c-54a5-4850-82ad-6889c78a5718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9985321-a73e-4d5a-8264-b86ae9ce7374",
        "cursor": {
          "ref": "04df17eb-a4b9-4cb0-a92c-3d2ef69728b1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "32b63848-9cbb-4899-86ae-8355e7cb3009"
        },
        "item": {
          "id": "d9985321-a73e-4d5a-8264-b86ae9ce7374",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b720f55b-4328-4334-bdb4-6675d8b401fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd52d24-1b50-44af-aabc-9c11a5e1a5f4",
        "cursor": {
          "ref": "70791eb5-8e27-45e0-af9e-dbdcf1be1666",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "175c5e48-e906-4a3f-8a47-3479542f1119"
        },
        "item": {
          "id": "bcd52d24-1b50-44af-aabc-9c11a5e1a5f4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d1f626e0-ba13-49e4-9aff-2f43fd72683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20598338-2093-43e0-a512-2790260adf61",
        "cursor": {
          "ref": "ffde4072-5075-47eb-9da6-e6d1e6f0b2f6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c47f5dd8-6f07-4087-ba6f-4bbc44fbbfd8"
        },
        "item": {
          "id": "20598338-2093-43e0-a512-2790260adf61",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31d82e96-e0e7-415c-b28e-c8d56e3c0e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed86f2c1-1994-45e9-a6d1-e906d23acc3f",
        "cursor": {
          "ref": "4076d437-8d1b-4d26-bac0-c38e0bbe735d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a59add5-cc04-479e-9e93-bea51f17a6e9"
        },
        "item": {
          "id": "ed86f2c1-1994-45e9-a6d1-e906d23acc3f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "450975c1-6169-4c95-bd79-a27ef96068fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e89125-ac66-4e8d-8d67-8b2d43f03399",
        "cursor": {
          "ref": "cd4efd08-dfa7-4fa6-9651-0ce7407846d5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "59b38136-ca3c-4af6-81ee-d34f9c5aff43"
        },
        "item": {
          "id": "20e89125-ac66-4e8d-8d67-8b2d43f03399",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b65b8b83-aeb1-4fbe-8dfa-d05d3a27db29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2675f6d-63cd-49ab-b23a-6f71d8c4cc1a",
        "cursor": {
          "ref": "355057f6-5eb4-48dd-b68a-c840300c3349",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "418c4212-e434-4fc1-809c-e38aea2b061f"
        },
        "item": {
          "id": "c2675f6d-63cd-49ab-b23a-6f71d8c4cc1a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "49b62378-e31e-4bf2-9e83-9aab1fed6b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ff710d-ae06-4ef3-8438-cb0532e082a5",
        "cursor": {
          "ref": "299a0e8a-ac29-4b6c-8add-2a4e26c08a26",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc9535d6-a196-4c1e-a841-ff5c20eca09d"
        },
        "item": {
          "id": "07ff710d-ae06-4ef3-8438-cb0532e082a5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "212f9d49-a1ca-4052-bb77-703fa2a943ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95017e09-450a-4ffe-95b3-c71cf1af2ddf",
        "cursor": {
          "ref": "3dd23239-5a02-4304-b39a-14745991c69d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6413ccf5-c52d-4a17-a38f-aa0d8f6104f5"
        },
        "item": {
          "id": "95017e09-450a-4ffe-95b3-c71cf1af2ddf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d21c3856-bdd7-4881-a124-4763877e72f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe68c13-0f33-4253-b810-408e3b794211",
        "cursor": {
          "ref": "c30a5d28-0eb7-45af-aef9-8949020f5dad",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "188b1bbc-6071-40cc-ba97-b51822ed84cc"
        },
        "item": {
          "id": "fbe68c13-0f33-4253-b810-408e3b794211",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "730b12d1-5071-4e66-a817-e64faa157f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7777524-84c0-4221-80b8-039c725f9645",
        "cursor": {
          "ref": "4b59ef78-09ba-4c63-9afe-f904505e7ec2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "62a5d555-df68-45ff-a304-7b8bda60db75"
        },
        "item": {
          "id": "e7777524-84c0-4221-80b8-039c725f9645",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2271f39b-7377-4b91-9243-6f0c31ccf0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3892c68-21ee-4fa9-b87d-67b3eebaa24e",
        "cursor": {
          "ref": "174fe16e-8599-4dc0-9430-6728aadd157b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f28d17a-5986-4001-b04d-424f82e37b56"
        },
        "item": {
          "id": "c3892c68-21ee-4fa9-b87d-67b3eebaa24e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "455d0e4a-2fc5-4814-ac65-60db234feb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5a81a3-08b6-48e2-ab52-b6db1f81b79a",
        "cursor": {
          "ref": "98f8baa9-0ee2-4f82-bec4-ba9121f21d4d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6b77e287-35be-40f5-8fe8-1674a17a37de"
        },
        "item": {
          "id": "fe5a81a3-08b6-48e2-ab52-b6db1f81b79a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ede9ecab-f7c0-48a6-a5a9-5aec3ada2b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7612c922-46e2-497b-bb8b-491f41244ae6",
        "cursor": {
          "ref": "b2165135-5930-4bba-ac97-81125f5a2079",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7b63db13-9c5c-48af-b610-48833141e22e"
        },
        "item": {
          "id": "7612c922-46e2-497b-bb8b-491f41244ae6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d9b11ec-5e16-4bc5-9926-df6df1008066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb447d9c-2499-45b4-bae7-b8c4490ecf4e",
        "cursor": {
          "ref": "3d87f929-36d7-4216-a841-932f600b9722",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "723e7215-f644-4fa9-ad77-9cbc6c42015f"
        },
        "item": {
          "id": "cb447d9c-2499-45b4-bae7-b8c4490ecf4e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "154eaabf-886c-439e-b803-4d73c01ed11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a652f7-a711-4b21-b758-6cf16eb024f9",
        "cursor": {
          "ref": "44e2c579-49e2-4443-b91e-2f3348241173",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c0da495b-ce70-41e3-b17f-5fb683e9a747"
        },
        "item": {
          "id": "68a652f7-a711-4b21-b758-6cf16eb024f9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "78666e8a-6e91-417e-8a41-842cbbe5f7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46b9b6b-7197-4855-8413-f85d86806151",
        "cursor": {
          "ref": "be79facb-4d5a-468f-ac3a-6e0ebaad5bb3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "462fe013-013f-447e-ada1-3f93aa5900aa"
        },
        "item": {
          "id": "e46b9b6b-7197-4855-8413-f85d86806151",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ee85054c-7ae1-4a82-a6b2-fe58799c0984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4069ba-3920-4029-a531-4781d0d31b9f",
        "cursor": {
          "ref": "7b0dcb38-1154-4843-ad6c-cdd4e43b44f5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "547b11dd-645a-47c1-9c92-460e1239b684"
        },
        "item": {
          "id": "0e4069ba-3920-4029-a531-4781d0d31b9f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ddfbe590-30e2-4c18-9627-5de8a8ef800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5d23d3-919c-4185-8653-1e3829f4f50d",
        "cursor": {
          "ref": "48c4ff64-7583-4fef-9480-f53012fa9c3d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe9f6e7e-bcf7-4e3c-8055-1507e23a9455"
        },
        "item": {
          "id": "1c5d23d3-919c-4185-8653-1e3829f4f50d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47e3cbf7-c561-49cb-a6f9-2a72ce5e5164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195b3b2-a77f-4049-8d16-e174281409bf",
        "cursor": {
          "ref": "a4474afb-61fb-45d3-b163-6baf74b55d13",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b284003-1f47-4384-9ef2-7409a542cb7d"
        },
        "item": {
          "id": "d195b3b2-a77f-4049-8d16-e174281409bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "16ac1490-68ee-4f98-b3db-b6555b010a2a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46eea0a-170d-49de-96fa-cc032c503813",
        "cursor": {
          "ref": "4e59abbf-146b-474f-b04f-0009fd087e34",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2965ea75-445a-459b-9bd1-a6c376fbb499"
        },
        "item": {
          "id": "d46eea0a-170d-49de-96fa-cc032c503813",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6e540891-e14e-4a28-9a92-79cbb79e156c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2432d-d49b-48ed-baf6-f6bdab3598ae",
        "cursor": {
          "ref": "f5016aea-a3ef-4db9-87bf-66d30aaca497",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "141a13b4-bd4a-4c72-a436-304d7df668f8"
        },
        "item": {
          "id": "a2c2432d-d49b-48ed-baf6-f6bdab3598ae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f22b569-8de0-4e98-85fa-ca691aa89b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a9f1fb-142a-4e79-9dab-daf0ccfc0d5a",
        "cursor": {
          "ref": "d5a36905-2765-464c-bd54-c7de8d805974",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cec5c5e6-eff8-4e05-a0d0-a0579038aa5d"
        },
        "item": {
          "id": "a3a9f1fb-142a-4e79-9dab-daf0ccfc0d5a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "09e41ef5-b7fb-48b4-b138-effdcbadf4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e280aee-398b-45e7-84c9-07b42b9e0bf9",
        "cursor": {
          "ref": "c1bcef96-69ba-4a72-af2f-47f9852ec201",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fbad1152-d564-4618-9aa1-94df2221908a"
        },
        "item": {
          "id": "9e280aee-398b-45e7-84c9-07b42b9e0bf9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6230077-4231-416e-bf1e-60668415c859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5e248d-2744-48ea-acad-3bed62b9d85f",
        "cursor": {
          "ref": "354aaf7f-65c5-4fb9-ad47-0ebc5c048242",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "15fb43dc-10f5-4ddd-9800-b3397bb25451"
        },
        "item": {
          "id": "ab5e248d-2744-48ea-acad-3bed62b9d85f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "03ed1cff-b948-44ae-8cff-a068b2191e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8161d730-0390-40cd-97af-989fa8e9eb8d",
        "cursor": {
          "ref": "203c610d-12ec-43c9-ada7-e90abe5bca0b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e4be4e9b-10d4-4239-a800-b00e2a7db69b"
        },
        "item": {
          "id": "8161d730-0390-40cd-97af-989fa8e9eb8d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6b54b788-4eb9-4ee8-b621-2fd15511435d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9361a1-c547-45e5-8951-39b3d5226fb7",
        "cursor": {
          "ref": "acf15bf8-53bf-48be-8bff-8b70233bd45d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cc466695-9f92-47c8-9dbb-6381b72f66da"
        },
        "item": {
          "id": "5b9361a1-c547-45e5-8951-39b3d5226fb7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6318455f-bb4d-4b76-9cfa-d59ea0cfd099",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7e52fb-f835-45ca-bef1-8147eac9c75d",
        "cursor": {
          "ref": "38668220-3f56-49c0-9625-98fbd346ba91",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf0d2ebd-05d1-4fc3-9292-96120f78f291"
        },
        "item": {
          "id": "5e7e52fb-f835-45ca-bef1-8147eac9c75d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6023658-0e19-4d00-8d19-177a66bea611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de55b220-3e96-458c-b757-0087a05ab2ca",
        "cursor": {
          "ref": "4a8d3821-c51c-4b0c-b3a4-8d3b943d78e6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee698797-0853-4413-ae97-0be6d7523e9a"
        },
        "item": {
          "id": "de55b220-3e96-458c-b757-0087a05ab2ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "be1cd18d-2816-4d18-9f5b-908da07850b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78231977-bb6c-438f-ae84-8dfdf530e304",
        "cursor": {
          "ref": "2ece59a6-c2ef-4207-bbaf-29749d72e0cb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2aeafa0-1120-4a96-81c1-c40aa4b9e7b5"
        },
        "item": {
          "id": "78231977-bb6c-438f-ae84-8dfdf530e304",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b74ea0f1-28d9-4b72-bea3-5fab5f90c5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a3c8c7-6a3d-4e96-8a57-fda27cd0ac71",
        "cursor": {
          "ref": "011211e2-7088-4cbe-a188-a7e1fd296259",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f8efd234-3ab6-4d48-b215-7b00e3a8933b"
        },
        "item": {
          "id": "85a3c8c7-6a3d-4e96-8a57-fda27cd0ac71",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b70e4568-50a4-4098-8d50-40f024d19ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ea86ad-db0a-4284-81a3-8077777328fc",
        "cursor": {
          "ref": "1cff4543-18e1-46a2-a0da-f426ede0bd83",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "86a12d76-d4e6-4789-a0e0-ab7a4166c27c"
        },
        "item": {
          "id": "f2ea86ad-db0a-4284-81a3-8077777328fc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98d53b8b-9a59-4d6d-8ec8-53a6a7c3396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb265a50-e137-405a-841c-aa6189061061",
        "cursor": {
          "ref": "2e3a4537-a731-478a-9e32-a0c2e7809c82",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "240640bc-a153-4474-a0a1-d45bf9e691d3"
        },
        "item": {
          "id": "fb265a50-e137-405a-841c-aa6189061061",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b7ed61c2-00e7-48bf-b938-6ea1c04d00af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f8ea1d-bd38-4f95-bc62-905085cb0bc5",
        "cursor": {
          "ref": "3cac6dc8-88e7-45d1-a3eb-3507767da4d7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0e35e6a7-4bac-49ce-ad01-e26c006f9d3c"
        },
        "item": {
          "id": "d5f8ea1d-bd38-4f95-bc62-905085cb0bc5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c58a5f90-dc9e-4eb7-9cdb-849891b841f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06a7528-7ed3-4bd6-aec2-6988e5b03fd8",
        "cursor": {
          "ref": "533966ce-f226-41ef-9d4e-d6ef40c64ac4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "78be3ed3-1f78-47d1-9b75-91c574419332"
        },
        "item": {
          "id": "d06a7528-7ed3-4bd6-aec2-6988e5b03fd8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "719f9d91-3439-48fb-a2f8-76903938e370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c4e8b7-ed00-4bb4-8b61-119ea785cb3e",
        "cursor": {
          "ref": "8eed8917-838c-4d95-b8fb-d8b6f2df9aca",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "eaedf34c-6d1e-4604-b667-ccd1373c8c39"
        },
        "item": {
          "id": "e0c4e8b7-ed00-4bb4-8b61-119ea785cb3e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "db8e8a75-4167-4112-bfa2-62591c75c4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478e332-8cd3-4d57-bb08-c78e7a3d2d5d",
        "cursor": {
          "ref": "93f5ede8-489a-44e7-82d7-c1ca7c1c6524",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d5d30564-ffdb-4de7-8274-6e88805b03f4"
        },
        "item": {
          "id": "d478e332-8cd3-4d57-bb08-c78e7a3d2d5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a9867970-2b71-4e4d-ae57-7d6b9368a432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36857a0-875d-4f0d-969e-2a08cfd38cc7",
        "cursor": {
          "ref": "49f07755-5b59-46c4-896d-2c76f112de9b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "31305868-bc0e-4754-8782-309c5568ae40"
        },
        "item": {
          "id": "f36857a0-875d-4f0d-969e-2a08cfd38cc7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc4947f7-c336-49da-b501-0ca1b05406b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846db5ba-3226-4b2a-902f-3ad645b1dba8",
        "cursor": {
          "ref": "c9a1441c-c334-46f8-a0a5-cece8b190476",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "646455f7-c005-48ad-ac58-329d9f5f4005"
        },
        "item": {
          "id": "846db5ba-3226-4b2a-902f-3ad645b1dba8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b3c3daf-60c2-46fc-a919-66aba54edc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e8ded1-9f4c-419a-9805-a52e272ae843",
        "cursor": {
          "ref": "ff25014b-3aa5-467e-81dd-7675afa0b4a8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18d314f3-b355-4038-880d-08f639c43e59"
        },
        "item": {
          "id": "b1e8ded1-9f4c-419a-9805-a52e272ae843",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e91e2817-defe-4fc4-b59d-1eb7c1abd19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be22877-c450-435f-882a-0c5fc6ca2d0a",
        "cursor": {
          "ref": "8527c10c-21ea-4985-b2b5-15d393a69e18",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf79cc60-5d6c-4193-85e3-1c4b62e4cb2c"
        },
        "item": {
          "id": "7be22877-c450-435f-882a-0c5fc6ca2d0a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fb5cf12f-a1a5-47c6-8619-e81fea663376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee9507-b4e1-4288-b48a-d6f782a857a1",
        "cursor": {
          "ref": "f0a5348e-a490-4907-a064-8cd536092a4e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6803a1d8-a1f3-4276-aba4-01d6eaa59a51"
        },
        "item": {
          "id": "42ee9507-b4e1-4288-b48a-d6f782a857a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2adceb29-7457-45ec-b7c0-ac7ed20636bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d48c43-53da-4e7f-a8cc-8d0ec09bb9c1",
        "cursor": {
          "ref": "72f24860-f89b-4c61-88cd-5f8c88779efb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1d4c6a1a-27ed-4de4-a715-0444be629fc2"
        },
        "item": {
          "id": "08d48c43-53da-4e7f-a8cc-8d0ec09bb9c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "419445fa-a1a6-48b5-817c-22343205dc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49e04f9-0a36-4f0c-aa99-d273af76fb95",
        "cursor": {
          "ref": "2083702a-a6b8-4a84-90c7-73f25a54c9d7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6373448b-a6eb-4197-9afc-831c74607b7a"
        },
        "item": {
          "id": "b49e04f9-0a36-4f0c-aa99-d273af76fb95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9928a33f-0152-4c8e-b334-8ceadb6a34e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f415e24-27e1-49a1-8442-0b3d8c02e182",
        "cursor": {
          "ref": "7cf6a6d2-6e43-4a02-b7e8-a5035e914800",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f690867a-b692-4c1e-8099-754d8f82fa74"
        },
        "item": {
          "id": "3f415e24-27e1-49a1-8442-0b3d8c02e182",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7a49d8e8-d905-45c7-bef5-516ce40928b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9e2b6-28d8-4e67-8f2c-fb3e5c26ae3f",
        "cursor": {
          "ref": "ee25a2cf-7af8-45f1-9a5e-76637a1efe2a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49b5f5a7-6a73-49de-b71e-ca32c9e083b4"
        },
        "item": {
          "id": "62b9e2b6-28d8-4e67-8f2c-fb3e5c26ae3f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "449808da-9358-450c-ae47-c77ef666bbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb7d030-75db-4b3f-a8cf-46635ad94705",
        "cursor": {
          "ref": "df3b3159-7485-4699-8d3d-34bcb37c498a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8092c145-2e03-4ce1-9c13-36ca29c04ef1"
        },
        "item": {
          "id": "8fb7d030-75db-4b3f-a8cf-46635ad94705",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bcc50ffa-9333-4ce2-9172-cdd1b75468bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8098836-7678-48c7-b17c-0d7e1b7a31e2",
        "cursor": {
          "ref": "71c1a5c0-d180-4d88-a1ca-a9113243c30d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5ed219ae-cd49-4225-a67d-1a2287f9d177"
        },
        "item": {
          "id": "e8098836-7678-48c7-b17c-0d7e1b7a31e2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bf061cae-99b7-4238-bc47-571d17838c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b497bc6-46a3-4be0-9974-889f15040741",
        "cursor": {
          "ref": "fa2b836b-47ca-43c3-82d4-13fba906f7f4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "151ee346-f14d-455c-a854-603db7d2e4c4"
        },
        "item": {
          "id": "2b497bc6-46a3-4be0-9974-889f15040741",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b5036d50-d050-4e33-9274-f3d23fe5c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563c0368-e4b8-4b20-a9b5-0c9044285b98",
        "cursor": {
          "ref": "78ff4868-681f-4de3-a64b-f95968e49883",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4c2b1743-db4e-4932-84dc-b28ba3d6625a"
        },
        "item": {
          "id": "563c0368-e4b8-4b20-a9b5-0c9044285b98",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a58f3406-b070-487e-b06f-46ff9ef0d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48fcce6-06db-43d5-b010-feff9caa5c3b",
        "cursor": {
          "ref": "efcab953-76bf-47c9-8c4f-a7cbf54d24d3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "39638022-4450-4ac7-942f-44d578c9efce"
        },
        "item": {
          "id": "f48fcce6-06db-43d5-b010-feff9caa5c3b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "af4751df-de39-413d-b28d-c81b7cb08b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3367ef-27b1-4604-a9d1-e8530cf1ff17",
        "cursor": {
          "ref": "b872dc5e-69eb-4e3d-a773-1a4472456aed",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8c23d499-c1fc-446a-b88c-b69460c5f549"
        },
        "item": {
          "id": "3d3367ef-27b1-4604-a9d1-e8530cf1ff17",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f0c330ca-23b6-4d52-b314-8786ba2baed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499cf139-e933-407a-9a5c-48dd6f47d3f0",
        "cursor": {
          "ref": "3dd15f49-97dc-42ea-b563-3e8f56821604",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "58664209-0ea9-4f9d-8472-f0fd049ef9e6"
        },
        "item": {
          "id": "499cf139-e933-407a-9a5c-48dd6f47d3f0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7fd24059-3502-41c0-8d94-52b8779f0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a0e5e-3436-4f2c-9d7a-b18d9a57f3b4",
        "cursor": {
          "ref": "d9ebd1d8-4567-42f7-8080-7a2edf5e5ab3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1cbd1ae0-32ea-4fa2-824a-23ae3f4fdea0"
        },
        "item": {
          "id": "ef1a0e5e-3436-4f2c-9d7a-b18d9a57f3b4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d715cb7-9473-4ae5-a71d-ed984c1a3b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0104c-cb42-4a15-935a-230e7dd1fe75",
        "cursor": {
          "ref": "e1542580-29c2-4d01-9927-a657ea88a3de",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f5beb61b-da7d-4d63-8dce-d27551316d37"
        },
        "item": {
          "id": "fae0104c-cb42-4a15-935a-230e7dd1fe75",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f832ba40-0a53-4be9-a63e-b833ef440a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6b979f-b0a3-4367-8c02-09839fdcfc5c",
        "cursor": {
          "ref": "99d7d0c2-87ad-4b2c-bead-e3cb7382f884",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6aabc99a-43ee-4f6a-8313-e2124f586f1b"
        },
        "item": {
          "id": "af6b979f-b0a3-4367-8c02-09839fdcfc5c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "50db32f4-e280-484d-9c34-a77a729313fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9038b5-a9f3-4f39-a726-57ed884205a7",
        "cursor": {
          "ref": "de54fee6-d9cf-4a80-84f1-130008ca8374",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41a94124-6d93-4337-9750-b0c1a53b537b"
        },
        "item": {
          "id": "0c9038b5-a9f3-4f39-a726-57ed884205a7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "79aba532-9a18-4fa7-8c63-ab1cc2db4df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0b2219-2448-48f9-86fc-3f880711537e",
        "cursor": {
          "ref": "28f00429-467f-4968-83ae-9d04c2f75a62",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9ce390cd-9046-4fea-ba8b-698803f7e66c"
        },
        "item": {
          "id": "5f0b2219-2448-48f9-86fc-3f880711537e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a65d6b5c-4d3a-417a-b801-a612ac6d4165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fada26a2-7fc9-4ab5-a9b9-80d1ec96e7f9",
        "cursor": {
          "ref": "acfceba7-f91e-4b31-aba7-87064aafa6e0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2b0b1801-8e21-49f9-9188-43235cf7888e"
        },
        "item": {
          "id": "fada26a2-7fc9-4ab5-a9b9-80d1ec96e7f9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3dd68924-f5f7-4160-9bf1-37143ff8f4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db346a5-dd36-4207-aca6-947561e0003d",
        "cursor": {
          "ref": "ee0f81c5-5a21-425b-bd76-fdbad980ed13",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7502fb79-8668-44a4-8210-c8efc1570955"
        },
        "item": {
          "id": "5db346a5-dd36-4207-aca6-947561e0003d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a2c96e69-8ddb-43b8-8b55-4b2b1d2dd5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08b97ed-080e-46d4-bd20-fe8cc5348c18",
        "cursor": {
          "ref": "754c26db-1e73-4c9b-a649-0f3c8b13b3fc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fdb0262d-2ec1-4c7c-8782-2ec1200f6ef9"
        },
        "item": {
          "id": "e08b97ed-080e-46d4-bd20-fe8cc5348c18",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "afa02af7-1577-4dfb-936e-6d008f723426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a51c9-ed1b-4250-a5e2-ebfed5700bac",
        "cursor": {
          "ref": "11853590-eca5-4b84-8cf8-eee5d6a6a1fc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8d9b79fb-d89f-4cfe-a8fd-6a7a313e911f"
        },
        "item": {
          "id": "5c4a51c9-ed1b-4250-a5e2-ebfed5700bac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "125973ef-3e83-4d6b-8fa0-163ef536fbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b31676-74ea-48eb-9605-71c52e1d9322",
        "cursor": {
          "ref": "034f9382-d56b-4050-a728-055280c9effe",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "10fdf3ff-7885-4618-9a26-ae355c35ff01"
        },
        "item": {
          "id": "97b31676-74ea-48eb-9605-71c52e1d9322",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ef3d728f-5084-44a5-a14f-78ba6a1d0eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10de7790-3ffb-4dd7-8330-482d3753dd5d",
        "cursor": {
          "ref": "5cbc6d02-d11a-4170-91ca-e70ac8238d24",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0b9c69d0-e9ff-4f76-ad35-7f5700fc4455"
        },
        "item": {
          "id": "10de7790-3ffb-4dd7-8330-482d3753dd5d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bfe58d54-22b9-4715-8f30-f2bbe3135ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f70e6a-4f93-4c35-8218-1b2ee5f0afb8",
        "cursor": {
          "ref": "f931a911-12b5-4bb1-8940-c3cf94142baf",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d360c6d-270a-4f57-8e39-d70f64fb9741"
        },
        "item": {
          "id": "52f70e6a-4f93-4c35-8218-1b2ee5f0afb8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ac45bf99-d359-4740-8837-82a24bf4439d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0021df7-63c7-4831-b2d3-60b8aa8d7fa5",
        "cursor": {
          "ref": "d7d121a9-af70-4773-ba50-1f25bba974b2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0377cbe5-7eda-4101-8047-a5fe79790c2e"
        },
        "item": {
          "id": "d0021df7-63c7-4831-b2d3-60b8aa8d7fa5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52d607c8-b89e-4547-9ed0-2ea517e16449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d207bf78-4b37-4e79-9a60-48d6601168bc",
        "cursor": {
          "ref": "2e09f949-788f-4b39-bbff-8e6aeee9f1ad",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3a8f55a5-f44b-4e26-9202-6cf74a014df1"
        },
        "item": {
          "id": "d207bf78-4b37-4e79-9a60-48d6601168bc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f283eba3-fd72-45d7-9240-0adfa72ce6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f008c5f-3140-4d19-845a-c24c44020a7a",
        "cursor": {
          "ref": "72eec7ef-f5c1-43e5-ba46-8f6f1effd7c3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2533b152-f795-4a10-bc24-1dd9dc26e74d"
        },
        "item": {
          "id": "7f008c5f-3140-4d19-845a-c24c44020a7a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f014d4e2-bf14-45cc-b7a0-a76bd85a4f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e9780e-ed12-4d4e-9b0a-e3be1e30adf9",
        "cursor": {
          "ref": "949e5a35-c9e3-45fc-b4f1-55d869908614",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0aed884c-5432-4e3b-a3e8-d2af9839daa5"
        },
        "item": {
          "id": "34e9780e-ed12-4d4e-9b0a-e3be1e30adf9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "98e94373-7a23-47fe-ab2e-dc977d377871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004fa63b-9202-4d1b-8c68-0e6b0436b604",
        "cursor": {
          "ref": "8a36c318-32ec-4ac6-bb65-421783c9ba58",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f5a7fe6b-d579-473b-a8f3-f0b9f6f3c9bc"
        },
        "item": {
          "id": "004fa63b-9202-4d1b-8c68-0e6b0436b604",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a70f3c01-df9e-4802-8f44-54e7a223cc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bf37a8-0190-433b-b358-50848bbd8dc8",
        "cursor": {
          "ref": "159d9900-ec5d-4539-b1dd-547258c97f8a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9a3c4bd-2bbb-4a22-8915-c32ab9eba9d4"
        },
        "item": {
          "id": "29bf37a8-0190-433b-b358-50848bbd8dc8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09d3c5d5-938e-4a66-be28-e8f19c2db4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7b21f-e727-4337-9917-779ee2c7e490",
        "cursor": {
          "ref": "bf2783cb-fc55-46bc-806f-8a80d21d0188",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db183714-e0d9-4414-a8cd-6d8aea531522"
        },
        "item": {
          "id": "88c7b21f-e727-4337-9917-779ee2c7e490",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2a531fee-e3ee-4efb-a17a-407e558c4d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8fedc0-b11d-484b-8734-5dcb4e0e1171",
        "cursor": {
          "ref": "52aebcdb-1c81-49fa-bb7b-93279a925ee0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "789ae12c-517e-42c9-8ce1-399c84381694"
        },
        "item": {
          "id": "9b8fedc0-b11d-484b-8734-5dcb4e0e1171",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e1ce0c06-1861-4ea8-a650-dd81f8ee5ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea74cbe8-cba3-4930-bbf2-dd2a0a6f67e3",
        "cursor": {
          "ref": "9ca4bfcf-eec0-4c28-b02e-997551c17e1d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bed5dfff-2e2e-4f1a-b054-2dec439136ff"
        },
        "item": {
          "id": "ea74cbe8-cba3-4930-bbf2-dd2a0a6f67e3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eefb2eb8-16a3-4549-95d3-43a3295494d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d41ff-6bce-4146-92a5-c885976df00a",
        "cursor": {
          "ref": "1511b76f-ccd2-4e75-b9e1-bc6af1ddee99",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a37e8d96-fa46-4d89-8fc3-6f9396730de6"
        },
        "item": {
          "id": "5a6d41ff-6bce-4146-92a5-c885976df00a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b91db7da-f68e-477c-b473-7c7304550f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e28815-d31d-4c15-bf59-bec7805121f0",
        "cursor": {
          "ref": "8ca72c28-8b7e-425d-9f04-dbc5b50574ef",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4f02e0d8-8345-47a1-90e3-348175255f0c"
        },
        "item": {
          "id": "91e28815-d31d-4c15-bf59-bec7805121f0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0d0d71ba-a1ec-46cb-b141-0b48582e41ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65d89f5-0653-465d-8ac9-d86b1f4215ac",
        "cursor": {
          "ref": "18236062-1296-404e-97b6-d948d5f010bd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b9f1568f-8811-4293-b8d4-6a6cf232517c"
        },
        "item": {
          "id": "c65d89f5-0653-465d-8ac9-d86b1f4215ac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c512e8a4-8fca-4a9d-a4ae-630b05eea404",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a3b9db-3be7-4495-aecc-b30e53f37d11",
        "cursor": {
          "ref": "94a759ce-4ca5-487e-9f6e-7bd07fc2fc26",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fb43a797-3a37-4e54-a434-6f45e83a8242"
        },
        "item": {
          "id": "16a3b9db-3be7-4495-aecc-b30e53f37d11",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "96a169c3-3ce0-4e4e-af33-cf5fabf5260a",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0a7820-72f8-4cd9-b1d3-02e0810dd309",
        "cursor": {
          "ref": "dae99f7c-fa70-42cd-81ae-55819aec0ed2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "74883b37-d742-4a01-a74e-ec776d76202b"
        },
        "item": {
          "id": "6c0a7820-72f8-4cd9-b1d3-02e0810dd309",
          "name": "credentials_issue"
        },
        "response": {
          "id": "28914038-a1de-41a9-8e59-70018e235cd7",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496824c-348d-409f-b11c-820217b472c1",
        "cursor": {
          "ref": "c7971aaa-200a-47ca-a69f-8a86236f1004",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3d3bca2d-fe0c-4b81-8da8-5c5c6ee2b607"
        },
        "item": {
          "id": "7496824c-348d-409f-b11c-820217b472c1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c03ec53f-ac16-4bbe-8151-c8e57c3cccba",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8dc9ad-571a-444b-b8d7-6e70a9c46b77",
        "cursor": {
          "ref": "525d8c17-ef08-4327-b1b7-33bd93be178e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ab1907be-1d2a-412b-bce6-03ed891e5a31"
        },
        "item": {
          "id": "6f8dc9ad-571a-444b-b8d7-6e70a9c46b77",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "201e68f0-7684-4a52-9be5-aca560d4ff60",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e2220-6afd-4f1c-9e36-d43b97bbeab6",
        "cursor": {
          "ref": "4fd87e0a-cf39-4436-9727-5990d7dfc402",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "04fb39de-8a4c-4716-8262-6da6d63b5482"
        },
        "item": {
          "id": "8e8e2220-6afd-4f1c-9e36-d43b97bbeab6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ca8813d7-c139-42fc-ad97-5b4c6de858aa",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5112c926-f2de-42c4-980f-0051708a9fab",
        "cursor": {
          "ref": "05e39414-f319-4271-809e-4aa4899e72f5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b7c7f07-33a2-4e6a-8974-3de2e55dbcab"
        },
        "item": {
          "id": "5112c926-f2de-42c4-980f-0051708a9fab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c7a8afdf-987d-4aa6-be6e-90d0a9380246",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a518027-4d3d-4cb0-98dc-deb3ea79b058",
        "cursor": {
          "ref": "fbfeae40-51ae-4c9c-bd1a-8a7217644bf6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "566dc065-319c-49f7-8e9c-130744289a77"
        },
        "item": {
          "id": "6a518027-4d3d-4cb0-98dc-deb3ea79b058",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d4f03078-4522-4ea3-8080-c2bfc58171b5",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4d851f-3c2e-4ef5-9a93-68b0813472f3",
        "cursor": {
          "ref": "d9c35bc1-4621-48db-aa8e-2f96f6953f38",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d89c63f9-9a62-4166-b31a-80ba86035b56"
        },
        "item": {
          "id": "7d4d851f-3c2e-4ef5-9a93-68b0813472f3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2341398e-31fa-46b6-8f72-a43f1fe8dc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff35e2bd-8e70-4e9e-b54d-1d8f98b9b96c",
        "cursor": {
          "ref": "276dcbfd-a0e1-49f5-a5d6-d64ce28d4427",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ebb0a59-d782-44f5-a688-2a23758c3398"
        },
        "item": {
          "id": "ff35e2bd-8e70-4e9e-b54d-1d8f98b9b96c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ff5bc0c7-8867-45c3-a4ed-5704da662077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef275608-42ad-449d-aa24-8d9850305912",
        "cursor": {
          "ref": "bd2dfb0c-9e4d-4336-be68-d2688a23a5cc",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "49d63910-22fa-4550-8322-0888efc37306"
        },
        "item": {
          "id": "ef275608-42ad-449d-aa24-8d9850305912",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d73ac8f2-390f-47d7-bb84-9de0efe73dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a24ceb-59c2-4a16-957c-4e2c8bae6171",
        "cursor": {
          "ref": "24bda33f-7a1f-468b-b821-a398dc476e11",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7741307e-d961-49de-9508-2e8ccc341a25"
        },
        "item": {
          "id": "06a24ceb-59c2-4a16-957c-4e2c8bae6171",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3af541f-b33a-4b0f-a2ae-db6db863ad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dca966-f00f-4867-9eb9-8aa01e3d8cd3",
        "cursor": {
          "ref": "1a0c2dfa-58d6-4665-a05c-2b5276470404",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0f06b057-ac44-4e49-b76e-78fc7c805186"
        },
        "item": {
          "id": "17dca966-f00f-4867-9eb9-8aa01e3d8cd3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78f16a63-f976-4241-83fa-c5dcb4ee97af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e72d30-a3db-44c1-b7dd-43dab5a32e60",
        "cursor": {
          "ref": "618722ef-aa84-49eb-90cb-de89b45e3ec5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d21a5b17-db8d-473d-8b4d-70be6b123867"
        },
        "item": {
          "id": "16e72d30-a3db-44c1-b7dd-43dab5a32e60",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8c8c37f-0db7-4d04-928c-32674e89aedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b389a9-de8b-40cc-b61a-5dd3ea2ac5ea",
        "cursor": {
          "ref": "f895935c-5ab3-4c95-bee4-c8560d731304",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c73b165f-f5ec-4bd6-a959-d368f0defdda"
        },
        "item": {
          "id": "12b389a9-de8b-40cc-b61a-5dd3ea2ac5ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "88fbc914-e7db-4bfa-89e0-ec4b3b2de5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832fe500-0c7b-4cbb-bcae-20ddfe3fd285",
        "cursor": {
          "ref": "9f537527-d52b-4b64-9861-585311687ea9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eda52276-6ace-4872-8f44-dfb6fb592e76"
        },
        "item": {
          "id": "832fe500-0c7b-4cbb-bcae-20ddfe3fd285",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9587c6a5-a5cd-468a-8143-0804f0c22f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f0923e-d509-4752-8249-69b0484cf675",
        "cursor": {
          "ref": "cd78d8d8-cd4e-4f2b-a131-b3bf613f3764",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2ab9e2c3-b977-4d69-811c-b93b8a0c3674"
        },
        "item": {
          "id": "e9f0923e-d509-4752-8249-69b0484cf675",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f28129b1-48e2-4cf5-adb5-c255bc7f4e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a11a6c2-8e48-430e-8913-186fee40adbc",
        "cursor": {
          "ref": "508e207b-7635-49ff-908a-7f46e2c4ef8a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fe08b7f7-1bcd-49bb-9e49-4b9d611a55ee"
        },
        "item": {
          "id": "4a11a6c2-8e48-430e-8913-186fee40adbc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53f31c4c-8c2b-42a1-b631-ed090d8d046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0da71a5-3c0a-4abd-a478-7fbf9f1109ac",
        "cursor": {
          "ref": "a72d8e75-15d1-4f03-84e7-dd5ebce368aa",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1529e19-d881-40f3-a209-550e77d1c528"
        },
        "item": {
          "id": "d0da71a5-3c0a-4abd-a478-7fbf9f1109ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f1f794d-eb3f-48f6-a234-96782659b0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ecd752-6375-4645-a48a-a057c350525b",
        "cursor": {
          "ref": "e206106e-b218-4edb-a8ed-a2575a51a234",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "443b6d8c-ce79-4151-93ca-75ad2cba6280"
        },
        "item": {
          "id": "46ecd752-6375-4645-a48a-a057c350525b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8a6517a-41ad-421f-a29b-798e5d73a765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c18bb8-4e40-425a-9fdf-dc35eba40581",
        "cursor": {
          "ref": "9e3e0ead-5806-4197-84a3-801ac14cebed",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d1712e05-4c70-458d-93ff-a7e656def499"
        },
        "item": {
          "id": "29c18bb8-4e40-425a-9fdf-dc35eba40581",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a6d2313-be5c-4991-b46f-26990779b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f227f1-1130-4531-985f-e3721ae2daa3",
        "cursor": {
          "ref": "1f201b40-6f05-47d5-b303-44cb7fdc8788",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "979a4c33-2cc7-4e07-87e7-33645d168191"
        },
        "item": {
          "id": "b4f227f1-1130-4531-985f-e3721ae2daa3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a3e0d01-e466-4102-b5b6-bc9eac3ac965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf7b3df-002d-43f5-ac6d-df7f0d66f559",
        "cursor": {
          "ref": "53842794-c179-4c6b-a2a7-b62811cc2799",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ea77f1a6-2ae7-4f44-99f0-bd425e9aa339"
        },
        "item": {
          "id": "6cf7b3df-002d-43f5-ac6d-df7f0d66f559",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e621222d-17cb-4a20-9321-6209af2886f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acd87c1-4dae-4c52-93cf-87f2be9c5345",
        "cursor": {
          "ref": "c0b3aa41-16b0-4704-b552-bc9dc46188c3",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c9ef7397-1c14-4da3-ab92-097aa65bd4b6"
        },
        "item": {
          "id": "5acd87c1-4dae-4c52-93cf-87f2be9c5345",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f4bec852-bd41-4333-8b78-bd5e1cf1a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c277a04-b052-431e-b9da-90262edeef85",
        "cursor": {
          "ref": "d398a339-176e-4f59-be20-2149e443241b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2aa7273b-e98b-4ee5-8216-8600120d291d"
        },
        "item": {
          "id": "8c277a04-b052-431e-b9da-90262edeef85",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1f8ce1f6-0267-41db-bfb6-868c6e2ea085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58cd88e-da73-441f-96f8-f9e43632eb1c",
        "cursor": {
          "ref": "bf783343-6d6c-4a3f-bf01-8c2bcceb3420",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "87930f2b-fb85-4fa5-97ae-3ceb2c546698"
        },
        "item": {
          "id": "a58cd88e-da73-441f-96f8-f9e43632eb1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "78c739f9-db50-4958-93ec-b332b9c776c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f95ca6-6da4-4227-b306-2dc53ca0056e",
        "cursor": {
          "ref": "e897b488-9383-4d1a-927c-217fccce4c16",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3ea50f42-5661-4e6c-9865-eab3fbf35a7a"
        },
        "item": {
          "id": "03f95ca6-6da4-4227-b306-2dc53ca0056e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7815bd65-c2e5-4505-9299-2ed02d66733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9271795-c5fa-41a4-a27b-3a69b03dbbc4",
        "cursor": {
          "ref": "eacb1e43-3be8-4c8d-bda7-e0b1e194e94c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3cfd7055-465e-4aa3-831d-13da3f0b9515"
        },
        "item": {
          "id": "b9271795-c5fa-41a4-a27b-3a69b03dbbc4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd1b8dc3-4cfc-436a-af7f-5429585da892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4375e2a-ac16-4eec-8fb4-de31fe761ad6",
        "cursor": {
          "ref": "73e48a25-18f2-4d20-99a9-d6a846133295",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ae1adc0b-f339-4a27-bd02-a1b535fefdd8"
        },
        "item": {
          "id": "d4375e2a-ac16-4eec-8fb4-de31fe761ad6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b9663621-1fdd-43f6-8da1-258842613e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27c50ce-33b3-4e44-a267-e183d811d9da",
        "cursor": {
          "ref": "a4150f5a-b5f0-4e64-a0c4-c92fdbd252cf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "413067cc-5a2e-4012-9484-f138e582f139"
        },
        "item": {
          "id": "f27c50ce-33b3-4e44-a267-e183d811d9da",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f00ba173-2e01-42dc-978e-90c7c29b048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228948ba-933f-4194-bf0b-23277f964e6c",
        "cursor": {
          "ref": "43099d5b-07f4-4dd0-b5be-dd656c5e062d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dd50128e-ce07-4b56-82a9-06e611a56649"
        },
        "item": {
          "id": "228948ba-933f-4194-bf0b-23277f964e6c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9be5ee4e-c763-450e-abf7-36933fdb5622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f551568-bab6-49cf-aa2a-2adef0020920",
        "cursor": {
          "ref": "fade1f61-83f5-4d14-a92e-c6cc64641538",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17401fed-01c9-4fd9-9de3-764f4734c89b"
        },
        "item": {
          "id": "1f551568-bab6-49cf-aa2a-2adef0020920",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9434c8e-6887-41e5-ac05-1125667a3bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b8c99-f9ae-411b-9152-3137453845a0",
        "cursor": {
          "ref": "963b529d-5ffe-4717-bf1e-e58ce1b17a57",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f25e6d37-2166-41d0-8ae2-f8bed4e4213d"
        },
        "item": {
          "id": "ad2b8c99-f9ae-411b-9152-3137453845a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01f5172d-c509-4ecb-86d9-a7eae0f2d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec02b6-baa2-463a-ad17-64eae46bf2be",
        "cursor": {
          "ref": "886a31a0-21ab-4490-9c40-de4b127e75bb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "251ca253-41e6-4a42-9440-2758c331fe7b"
        },
        "item": {
          "id": "cdec02b6-baa2-463a-ad17-64eae46bf2be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8074d160-4094-499c-a857-e53966f94dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66feb629-aec4-4143-aab7-2497f9055aaa",
        "cursor": {
          "ref": "a0c1ef05-59bc-4418-b7e2-2348869420a1",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9308cb20-077e-442f-a816-ae450b1ab7c2"
        },
        "item": {
          "id": "66feb629-aec4-4143-aab7-2497f9055aaa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7201d37d-c50e-4d3d-91cb-67cbdc10e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba24b9-b4d3-481a-a286-2fe8f078be17",
        "cursor": {
          "ref": "71bba17c-b537-4fc4-89dc-d284038d0efe",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "83ba158e-c511-4076-8318-cee2c794dd5c"
        },
        "item": {
          "id": "deba24b9-b4d3-481a-a286-2fe8f078be17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f8599e0-25f4-4f80-8c0a-c4c54b2b0675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec8ec1-5b5e-4d23-8314-17b8590812c2",
        "cursor": {
          "ref": "d09f50d7-fff4-4a71-8cd2-8e48632c7eb2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "634225c2-8a73-4b2a-b5f5-6807f5120f77"
        },
        "item": {
          "id": "a6ec8ec1-5b5e-4d23-8314-17b8590812c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34367b49-7d12-4e47-a4e8-5dbdda03a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc6964-d5ac-4feb-847b-4473c7a4af5a",
        "cursor": {
          "ref": "80ac9d13-e57e-4e7b-8eb1-59405d343d8f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2856e576-393e-4a20-a942-f7ea6336dae0"
        },
        "item": {
          "id": "6dcc6964-d5ac-4feb-847b-4473c7a4af5a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5b2b0523-1330-4389-bc13-42e2e02c2421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e35c89-66d0-47b7-868a-1e170dddfeb4",
        "cursor": {
          "ref": "c3fb1fad-06fb-4d4f-8039-be4c57b563c0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4e64cec7-2455-4636-9bb7-c4403ca98e6a"
        },
        "item": {
          "id": "c0e35c89-66d0-47b7-868a-1e170dddfeb4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60a5e431-add6-4408-a622-11ed47ce1b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692aed65-7469-4cf7-8e63-d94e7e83df40",
        "cursor": {
          "ref": "ca373b16-9ea6-400b-9605-a97edcaaabd7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dfd391d1-883b-46a9-9900-ba3cf6e74846"
        },
        "item": {
          "id": "692aed65-7469-4cf7-8e63-d94e7e83df40",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c3179231-4505-4a75-9e2a-384858505ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ecfc3-64e9-4f03-a9ba-023bf8342f04",
        "cursor": {
          "ref": "55163310-a92b-4935-970f-2ce6e130606c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "61dda712-a9a2-460c-af34-fad6fd3cda52"
        },
        "item": {
          "id": "0b3ecfc3-64e9-4f03-a9ba-023bf8342f04",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50deb11c-2497-42de-844b-c7f90014fa13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0df27d-db36-4330-a8fd-ad5b0b883f49",
        "cursor": {
          "ref": "28b97097-ec09-4083-b31d-9c19efc0882c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "01e32204-1a7b-47ff-ace5-403bc19bfa83"
        },
        "item": {
          "id": "4f0df27d-db36-4330-a8fd-ad5b0b883f49",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0ebc4cd8-9f10-46e4-ba9f-17602344cc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa2d10a-17fa-4854-a9fc-abcb38802130",
        "cursor": {
          "ref": "98c82fdd-49ad-43dd-a349-0ca7d36032d5",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3eb081eb-461f-40b0-a7ed-b4b6bcf8c878"
        },
        "item": {
          "id": "faa2d10a-17fa-4854-a9fc-abcb38802130",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "843252ff-256c-439a-b7a5-142772b6af98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f5064-22c5-4111-8879-c11165e458dd",
        "cursor": {
          "ref": "55bed1fa-50ac-49ad-9fe6-82296369a8de",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6cc40f3e-6974-4054-b2f9-d1c119e6570b"
        },
        "item": {
          "id": "ad9f5064-22c5-4111-8879-c11165e458dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "acc34df5-70b4-4063-b4f3-459d61b5cfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99919053-852c-4336-8ae7-5d98f5c16c39",
        "cursor": {
          "ref": "06413c82-4a45-4402-9564-0800d7ba9c1f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "715f15fd-80cc-42b8-a361-2e73f5094921"
        },
        "item": {
          "id": "99919053-852c-4336-8ae7-5d98f5c16c39",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3fc97f7a-1631-4eab-882c-90b867b50299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbfa971-d95e-4c8a-9e57-c343377a35d8",
        "cursor": {
          "ref": "c05f41ae-8902-4729-8b69-654ca8f69166",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a2283e5e-5f09-43ee-8416-8e88cb1c05a7"
        },
        "item": {
          "id": "7dbfa971-d95e-4c8a-9e57-c343377a35d8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0b970c8-aa7a-41eb-a62d-c1cecb99ac17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3bca2b-caae-415a-b552-46dffbad8ab9",
        "cursor": {
          "ref": "246a8604-d29b-401d-beba-d978b93295d2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb6e1ba0-009f-45f2-9bd4-9815a1b7113f"
        },
        "item": {
          "id": "8c3bca2b-caae-415a-b552-46dffbad8ab9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "94310ec6-a176-4cd5-89f2-1afcbfe3de02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ec5228-c2f1-41d3-895a-5b433fcc4ad4",
        "cursor": {
          "ref": "472d0235-6787-443e-b016-93c03380eb19",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "293038f9-8df7-4834-8884-521d7369c5d8"
        },
        "item": {
          "id": "b5ec5228-c2f1-41d3-895a-5b433fcc4ad4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "baeb9ac2-b1f6-4d9f-92b8-e5d606733e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458be833-4833-4e48-b857-5e225b4bc7b8",
        "cursor": {
          "ref": "30cad6c5-a4ff-46c4-b16d-5a8f84686d99",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3aa45775-8237-4fea-9922-406e6621eb2f"
        },
        "item": {
          "id": "458be833-4833-4e48-b857-5e225b4bc7b8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5876ff02-d6d3-4138-9d6f-070dc3682efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea860415-af58-43ba-aad5-251e305b51aa",
        "cursor": {
          "ref": "5d0dcb24-b819-4314-a45d-c2828c386c60",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21bab6cc-5bcc-4578-ab00-b8b362b0c572"
        },
        "item": {
          "id": "ea860415-af58-43ba-aad5-251e305b51aa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6978b08e-1fc0-4f7a-845b-ad613fe5b0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61295045-91b2-431e-83f1-9f776ddda10b",
        "cursor": {
          "ref": "3ffc87bd-6418-4b43-a7b0-93fb78c713c7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b5011ac5-39d7-4fbc-a250-69dd800e160e"
        },
        "item": {
          "id": "61295045-91b2-431e-83f1-9f776ddda10b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1eacc1d6-aec1-43d7-a772-c864dd1f5fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f72973-9689-49cd-9411-e5c05a09699d",
        "cursor": {
          "ref": "2b0cf22f-a402-496e-877f-e9258d10abf0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6495c113-1ad9-44ec-935b-1c0ac33b9274"
        },
        "item": {
          "id": "68f72973-9689-49cd-9411-e5c05a09699d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b63ed16f-4556-4f71-9c01-3aa905022486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de63a763-ff25-44f0-b5a4-b15713b570cb",
        "cursor": {
          "ref": "93df7fe7-a12d-4150-83ba-d641c3ee071d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "466e1a95-3358-4ed0-b43a-19008a4d1bae"
        },
        "item": {
          "id": "de63a763-ff25-44f0-b5a4-b15713b570cb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6c68d191-070e-4f2e-b607-7468b49bf4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13df096b-7a58-445e-81cf-c34d28efbe21",
        "cursor": {
          "ref": "f50bb31b-9385-4d8e-96e4-8e09e3599f75",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3346fca4-2c3d-451f-90db-031e60c7b512"
        },
        "item": {
          "id": "13df096b-7a58-445e-81cf-c34d28efbe21",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "96263ad1-75bb-47fa-9a28-cb8f88d6f7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876e36b9-8df3-4901-afcd-a7d91417873a",
        "cursor": {
          "ref": "c099f5d9-95a8-49ab-8d55-2cb2332c1c75",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc66b4e2-3ff4-468c-a1df-3a713aaab40f"
        },
        "item": {
          "id": "876e36b9-8df3-4901-afcd-a7d91417873a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "455cdeed-ebda-4ed8-8a43-d0a798d7a7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ddcd40-9463-4d91-b80c-8761d6b593ee",
        "cursor": {
          "ref": "65bf2fb8-fa3b-4ed2-b9a5-a696e7ff0d27",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ed546d9-16e9-4e2d-a8c6-cf7c5f2cc2bc"
        },
        "item": {
          "id": "23ddcd40-9463-4d91-b80c-8761d6b593ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "938bc93c-6e2b-4cc9-bdd0-2831d008a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460993f1-8108-4a05-818f-31a3da22906c",
        "cursor": {
          "ref": "9e1d40ea-60b8-4f71-9b78-0df87fd30295",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18a96396-60ea-4255-9f42-1c2705373778"
        },
        "item": {
          "id": "460993f1-8108-4a05-818f-31a3da22906c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c6a651ff-1f0a-4c67-b7f4-57483178d94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edf3985-ee88-4a0b-a6cb-d8f5c94bcd95",
        "cursor": {
          "ref": "7c272b09-758f-4cb9-a2d9-98ba628b545a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d7f2ed51-a1f4-49be-9771-d29b410a1017"
        },
        "item": {
          "id": "1edf3985-ee88-4a0b-a6cb-d8f5c94bcd95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d94c5857-2da3-44da-a429-8a458010e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a5343-57c9-4a50-8281-0f7e69ade2e6",
        "cursor": {
          "ref": "8cc4cfe8-8325-43ec-ad91-53b53318494d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "adcdc006-b08b-433a-b554-d8386b95aa15"
        },
        "item": {
          "id": "fa7a5343-57c9-4a50-8281-0f7e69ade2e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4ba80c61-1788-4feb-a8f3-11aa8ad4f238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b434074-75be-405c-8669-1ee2dc32ecce",
        "cursor": {
          "ref": "9b98ced3-a5de-433a-9ba2-2a324896d2d6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a010ed08-5692-4ad6-8c10-592587d34136"
        },
        "item": {
          "id": "7b434074-75be-405c-8669-1ee2dc32ecce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "723e07cc-7405-45c4-b62f-381ec6e3a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0d4515-1c1f-491d-9740-019bef37caf9",
        "cursor": {
          "ref": "e1b63a62-efdb-4370-a9fa-adbda1830979",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9030184f-a3f3-4c36-b798-86beadee6a73"
        },
        "item": {
          "id": "4a0d4515-1c1f-491d-9740-019bef37caf9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d7d123f-09c5-4cb2-b815-684ac261e32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e7943-41a3-40a8-8c6e-11c5259098a1",
        "cursor": {
          "ref": "a10fbdd4-b935-4c25-831e-3ec7cfae51ac",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "07df9061-6362-4335-92c1-b2ef7dce59d8"
        },
        "item": {
          "id": "927e7943-41a3-40a8-8c6e-11c5259098a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "87248aa6-cbb8-4f56-8fe5-43ef3df3e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00803571-d85b-4075-bdf5-439ac137b055",
        "cursor": {
          "ref": "e799fbf7-ee09-488c-8b0d-58aa71809303",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6e19a01f-2f66-4149-a3eb-407a988c6d2e"
        },
        "item": {
          "id": "00803571-d85b-4075-bdf5-439ac137b055",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "757000ae-61c8-436f-af4b-cee5331bcaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356806e8-6577-41be-b0ff-4a48d92395af",
        "cursor": {
          "ref": "e49f7f10-bfc8-471c-ad20-accf0cbce748",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c368feae-e34d-467f-8c67-71ff0c19050a"
        },
        "item": {
          "id": "356806e8-6577-41be-b0ff-4a48d92395af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbd084b7-688c-46f9-be0d-77a589af0cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d600759-6a2f-4b0b-883d-5b3d68610cc1",
        "cursor": {
          "ref": "c02aefa7-ce3e-4f0a-a614-432b49553648",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bfc3d42c-31fe-41b6-ba56-3764fad8dc3f"
        },
        "item": {
          "id": "6d600759-6a2f-4b0b-883d-5b3d68610cc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0ca3cd2-ef5d-4379-8da0-235d8ee1ec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9131ff-2725-462d-b719-cf824f478201",
        "cursor": {
          "ref": "713f9eaf-3890-43d0-92e7-d256b6535ee0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ad685d0f-80a4-47d7-93ef-76dada22248b"
        },
        "item": {
          "id": "8a9131ff-2725-462d-b719-cf824f478201",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6a1f2746-a69e-4717-b2d8-58bc640b8b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976848a-9bb5-48d5-94df-7fc88c47755d",
        "cursor": {
          "ref": "9a4de9ad-e5a6-4249-96dc-49c71068ab92",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "96b5e2cd-a2ed-48de-ae8c-a67526b014ad"
        },
        "item": {
          "id": "4976848a-9bb5-48d5-94df-7fc88c47755d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f708d688-50c2-43df-90e0-947a79beb714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cd3762-bcc5-41ac-825c-fb90bf399e81",
        "cursor": {
          "ref": "135d2baa-282a-49e8-818b-bceef3442d77",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f9400374-52a8-4622-9887-5ebee5b66580"
        },
        "item": {
          "id": "82cd3762-bcc5-41ac-825c-fb90bf399e81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f198fad1-09b1-4dfe-93af-55b7260a2626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4163ee9-e0b3-4d65-99b5-f849a5855b45",
        "cursor": {
          "ref": "19b5fe09-8b1a-4654-95e6-5aa5b9267a50",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f77753a4-9076-4a64-b589-28720a96cbd7"
        },
        "item": {
          "id": "e4163ee9-e0b3-4d65-99b5-f849a5855b45",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c12e2551-5f92-4ed0-8dec-05760345629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c2cc5-3c33-402f-ac99-159ce7b59e98",
        "cursor": {
          "ref": "48c0eb0f-5500-4b09-a569-d36c3e33b2c2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bc020348-124e-429c-9aff-48f4b847f5b8"
        },
        "item": {
          "id": "c67c2cc5-3c33-402f-ac99-159ce7b59e98",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "351d6c38-78b6-4e28-9c31-8f541e6dc07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d842d-8071-4988-b1ac-4b40014691d3",
        "cursor": {
          "ref": "1799a3ef-7624-462a-ac0e-4b42ef657aab",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3d38c981-b3f3-4ca3-87e5-e2c4549cfb15"
        },
        "item": {
          "id": "f05d842d-8071-4988-b1ac-4b40014691d3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8debc604-e4b4-402a-8473-d6ce90867d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd26571-742d-4834-b3f4-7e19512b65db",
        "cursor": {
          "ref": "5529e5f0-311b-4ebd-80f3-740c9d576122",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5ac3998e-9505-4994-a3f1-0b9c8993a27c"
        },
        "item": {
          "id": "ebd26571-742d-4834-b3f4-7e19512b65db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10e1cb65-cebd-492e-8ea5-ea606deeeaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdf0159-b091-4ae1-a5fd-de965c5bd726",
        "cursor": {
          "ref": "b359f9c8-4ba1-47be-a39e-5c4c4232e047",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "157a0a10-9eac-4c0b-af3a-0bdfd015632d"
        },
        "item": {
          "id": "dbdf0159-b091-4ae1-a5fd-de965c5bd726",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a3ebc1c-c830-411a-b3de-a1d697b8404f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcd3da6-1f4d-4742-a03f-3cf49eca7295",
        "cursor": {
          "ref": "79eb1f2a-02c5-4798-9b65-fce6ca945ed8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8b7c24a5-b533-4ac4-ac83-46cc156a5d63"
        },
        "item": {
          "id": "bfcd3da6-1f4d-4742-a03f-3cf49eca7295",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "08273ac1-fd44-4ba5-9c5f-4ae802075330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f166b-ae73-49ae-82fd-009fcc94911f",
        "cursor": {
          "ref": "4ed985eb-5d04-4f96-8c8a-81b4cde5b515",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e4dd42cd-990e-460b-9302-e3ba31836a60"
        },
        "item": {
          "id": "2e0f166b-ae73-49ae-82fd-009fcc94911f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dfd91338-89c8-4700-b0ac-2a758f2cbe49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae501a8-136e-4b8f-b32c-b3880934c3ba",
        "cursor": {
          "ref": "71e51ade-0fa6-4343-9837-943d72b69fc4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20617523-81a9-4b1a-91c0-3804ccf4916d"
        },
        "item": {
          "id": "bae501a8-136e-4b8f-b32c-b3880934c3ba",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e3324fa-99a8-4ebb-8fb7-e37b64bf4d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9574f94-8c7f-40df-9398-0789927e5920",
        "cursor": {
          "ref": "fd640528-5879-45db-8d8b-1bf3d8caa0bf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f5af6225-1ae4-45f3-bfaa-b6bb27cef5e7"
        },
        "item": {
          "id": "b9574f94-8c7f-40df-9398-0789927e5920",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "df0841ce-e6ab-4d97-a4cf-9981ee6b0630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029c3f92-7272-452c-81e8-07fdd9bd561f",
        "cursor": {
          "ref": "f521d598-4282-4b46-99ca-71e518142c50",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4179be38-25ed-432b-b1f1-07ea29796ba7"
        },
        "item": {
          "id": "029c3f92-7272-452c-81e8-07fdd9bd561f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "52508451-e603-414a-9252-026ca45dd36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc917201-9672-4631-b6a5-0f6040c8b901",
        "cursor": {
          "ref": "9b0d74d3-c04b-48df-84db-87706a283cd0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d21b744d-1c0d-4540-a52e-b34c759b4a85"
        },
        "item": {
          "id": "bc917201-9672-4631-b6a5-0f6040c8b901",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38bea406-79cb-4a75-a140-c6c1d268f2e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7b6a18-175f-4119-82b2-8565dc8e8520",
        "cursor": {
          "ref": "694ad465-c1da-4cbd-b844-2f014bc72b2c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f32284ff-e1b6-4dcb-8e88-6a068bfc14d7"
        },
        "item": {
          "id": "4f7b6a18-175f-4119-82b2-8565dc8e8520",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "63ae0a92-6d03-4499-9a81-b44db62b5400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881ba6c2-7ce4-46dd-81cb-626ca3512b0a",
        "cursor": {
          "ref": "3b19eb2a-b179-4dc8-b584-491183941e82",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65d5d508-d97e-42fc-b75f-a2736f3fdb5e"
        },
        "item": {
          "id": "881ba6c2-7ce4-46dd-81cb-626ca3512b0a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da7e3275-acb3-4c28-bf48-2078ec6d8432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9627f63b-5750-4945-9f48-50542de2b8d9",
        "cursor": {
          "ref": "d0e78db8-5b08-49ae-b22b-2677455700fa",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a8f95c67-1687-4e84-a264-af6957da1bef"
        },
        "item": {
          "id": "9627f63b-5750-4945-9f48-50542de2b8d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "30207174-19b7-4dbf-9554-a0f37206e370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e49046-5dfc-4349-ab70-e93bd0dddd25",
        "cursor": {
          "ref": "19cc23dd-d1d3-430b-b064-d37ed498a535",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d8c2322-f951-4600-9bc2-f0c083cad299"
        },
        "item": {
          "id": "c8e49046-5dfc-4349-ab70-e93bd0dddd25",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4a1e28f7-7af3-4183-831e-42ed3b36259e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789e652d-6f5f-464b-8ef1-30d160dbc2bc",
        "cursor": {
          "ref": "51902c85-7e34-451c-bb8d-8ae0cbd51026",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5bb050af-7f8c-490f-9d75-77087f92487d"
        },
        "item": {
          "id": "789e652d-6f5f-464b-8ef1-30d160dbc2bc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cee79c2d-78b6-44fd-8738-7f207cdee9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850296f3-8e0e-4514-859e-a5f0211a01e3",
        "cursor": {
          "ref": "fe5d1f1a-574c-4ede-a22c-406467426803",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ce30f902-7b52-4561-ad9d-7d4d0105643f"
        },
        "item": {
          "id": "850296f3-8e0e-4514-859e-a5f0211a01e3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "62c99634-3052-49f5-afcd-65cf351de6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a73f834-eb3f-48ed-b596-23756d1b76a4",
        "cursor": {
          "ref": "637dde52-a600-43c7-9fc5-8c2fd3c186eb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0848239c-48c2-4bee-a33a-56d7e1306a4a"
        },
        "item": {
          "id": "0a73f834-eb3f-48ed-b596-23756d1b76a4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b7a7ab50-adc0-4816-937e-f2a048875db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb0ab8-94f4-410b-9932-915987ea2e31",
        "cursor": {
          "ref": "497e2d88-2ff8-482d-89a0-7952111a1fcc",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d3b6de79-b55f-448a-9f6c-d7b68a0dc923"
        },
        "item": {
          "id": "2fbb0ab8-94f4-410b-9932-915987ea2e31",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "48dce9a3-f814-411a-b4f9-fd75c495268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec100d7b-7930-4338-9c52-e15c563ebf6d",
        "cursor": {
          "ref": "5a5e85e8-cf9a-4750-acb0-249904e97828",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6465ff41-79e2-421e-a100-a33a0e418663"
        },
        "item": {
          "id": "ec100d7b-7930-4338-9c52-e15c563ebf6d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98b2880b-ccbc-4de6-9df9-41e2d16d664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb2f412-6e49-414b-ab9d-8edb66966037",
        "cursor": {
          "ref": "5e146fd6-31b3-466e-a9c8-5cdd9a9e84a8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28a3e8e4-9329-4a8e-b654-3050dacc5fa6"
        },
        "item": {
          "id": "6bb2f412-6e49-414b-ab9d-8edb66966037",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4fd3f77b-9aa3-436e-8b80-f91051d85101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51c0704-d2d5-4a46-b7f9-3460b4185d2b",
        "cursor": {
          "ref": "dddeeaf4-4a48-4038-8f5e-df6657244771",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "72e3a909-cd11-4ecd-b803-e6d50208529c"
        },
        "item": {
          "id": "a51c0704-d2d5-4a46-b7f9-3460b4185d2b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b9d61d7-fe2f-4724-9d2c-0e06fd577acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7381784-220f-492a-9b52-23e3425f336e",
        "cursor": {
          "ref": "afef446a-b7af-4119-bd26-2ef057acf1ce",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4156d487-5273-4b38-81f7-021ae7386515"
        },
        "item": {
          "id": "d7381784-220f-492a-9b52-23e3425f336e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b385d508-579b-4051-967b-1140b4ab6dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5659e952-aa45-4906-b94f-4657858e65d5",
        "cursor": {
          "ref": "f73ec073-653d-4fa2-83bb-5c138b7ecba2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b8c9b79-e7c8-48c2-8af9-e47d41152217"
        },
        "item": {
          "id": "5659e952-aa45-4906-b94f-4657858e65d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e22e0f18-c413-4759-9ed1-c99962933f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bb2264-7a2e-414e-b1e9-096d4abaa62c",
        "cursor": {
          "ref": "5cf8189e-5b30-4d8c-ae06-705c044d3a44",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7dfd6973-8dbb-410f-b92b-e1dbf188ad46"
        },
        "item": {
          "id": "b4bb2264-7a2e-414e-b1e9-096d4abaa62c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7b016c90-f596-4e60-8f77-5b4174879497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca416a-30ae-4665-a35c-03476617d5b1",
        "cursor": {
          "ref": "56d79f2f-1348-4bea-aa3b-c318c8011b1e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5cbdd334-7a95-41c2-9e51-2a54bbd3343f"
        },
        "item": {
          "id": "b1ca416a-30ae-4665-a35c-03476617d5b1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9518c69f-3386-4d8a-b51a-f1559cab16a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc55b3-fe15-4d9e-91c2-a3fb456fbf3f",
        "cursor": {
          "ref": "e10ee292-63ed-4c0a-9cbb-41ef269b7b3d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8304e1aa-474e-461a-8ac3-dceb8d116627"
        },
        "item": {
          "id": "b8fc55b3-fe15-4d9e-91c2-a3fb456fbf3f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ebfb6769-4e90-4e35-9607-0362ebd1ad0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0572a-e8f1-49d9-afd1-a5b9607db5ba",
        "cursor": {
          "ref": "5deaf8ba-a191-418f-ba80-d9d35199d92b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8f8098fc-8d9b-4046-87b4-0c9093e9c452"
        },
        "item": {
          "id": "cbe0572a-e8f1-49d9-afd1-a5b9607db5ba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d7d73796-50dd-4dc4-9b02-c102c9350487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d132de-fa0f-414b-9f7d-0106cbbb5d8f",
        "cursor": {
          "ref": "fea81772-34d1-4e32-b20d-62b7acca831d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "196974bd-8674-44ea-9910-c21a106f622f"
        },
        "item": {
          "id": "26d132de-fa0f-414b-9f7d-0106cbbb5d8f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "85e6af11-19c9-4a21-bfbb-344600ebac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842884ad-eb6b-4b6c-88b8-ddbe371245b8",
        "cursor": {
          "ref": "d4095e5d-512b-40f5-8aa2-e3789f4c302a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7fdd3483-ad05-4d8c-8e44-95e1510e2992"
        },
        "item": {
          "id": "842884ad-eb6b-4b6c-88b8-ddbe371245b8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7b4b895f-854b-439a-beb1-db4d31700bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2ff085-c302-45b8-985e-c9dedb650031",
        "cursor": {
          "ref": "3d21409b-2161-4f46-87bf-93dce139019b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c471847e-315b-4886-8c78-014cb9df358f"
        },
        "item": {
          "id": "fa2ff085-c302-45b8-985e-c9dedb650031",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "93a935c9-d72d-4c62-96c9-baf35ad985e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503f9b5b-7786-490c-adce-a1d1655ac200",
        "cursor": {
          "ref": "532e1bd3-0733-4798-8ab3-cb2b6b2d7690",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f62247e3-970a-4786-8965-9895e4cef20b"
        },
        "item": {
          "id": "503f9b5b-7786-490c-adce-a1d1655ac200",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2d1bd2bf-3e2f-4d09-97cf-876cb1445290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3671ea06-605b-4d39-a615-26655008d57a",
        "cursor": {
          "ref": "0e85e9ac-cf17-45dc-8911-f45b9a22b06a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c49f2b1e-8c35-4a0f-8acc-0a1b60c6501b"
        },
        "item": {
          "id": "3671ea06-605b-4d39-a615-26655008d57a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3fc7cae0-e751-496e-890d-1e297c1a4e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7c9b11-5067-4cb9-ab6f-ecc65ddf4506",
        "cursor": {
          "ref": "d8d5336a-31d5-4746-96f0-c7e9b7543173",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0addf48c-090c-4391-853d-70791ab2ea9e"
        },
        "item": {
          "id": "9b7c9b11-5067-4cb9-ab6f-ecc65ddf4506",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "135204ce-c6a1-4f54-9068-850a90fcce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2529170f-07df-4ea8-b700-18e5168a9770",
        "cursor": {
          "ref": "29c085f6-ce6d-41a9-b45a-c7fb541241e0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dbd4e76c-e37e-4ddf-a786-acb8633f3691"
        },
        "item": {
          "id": "2529170f-07df-4ea8-b700-18e5168a9770",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "75a2d4ba-658f-47f5-a4df-d8a05a8c3ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb196023-5670-4498-961e-180f6eb82c82",
        "cursor": {
          "ref": "c5439567-ce7d-42af-a28a-f7b494301c0c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "faefdaea-6120-419c-9f69-89a7dbfec1bf"
        },
        "item": {
          "id": "fb196023-5670-4498-961e-180f6eb82c82",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96e4ed1a-f19e-4f28-a7ce-efec6ea10ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1213f9-e901-4795-a47f-e0e08eda41d6",
        "cursor": {
          "ref": "0e79393b-4d9e-47ec-a5ef-50fb1d2eb1e9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ea07f087-c1b3-4218-9f6e-21d0ba3258bb"
        },
        "item": {
          "id": "7d1213f9-e901-4795-a47f-e0e08eda41d6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "852dfb66-e16b-4ea0-a4fd-0b56b4e4fa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e2391-f032-41fb-ad8e-7c0bd3a674f2",
        "cursor": {
          "ref": "cd710eda-a4cd-4477-98b8-45f1ec12f2bf",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "800f9c80-501d-4d5b-b652-2bb636e0db65"
        },
        "item": {
          "id": "532e2391-f032-41fb-ad8e-7c0bd3a674f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b30dbc88-cbe4-439c-ae2d-a9d82757ca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58145c8c-278f-423b-9b00-c9f955637396",
        "cursor": {
          "ref": "c938d5c4-d9af-4ccc-9fbc-6a76ff430444",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "646612e2-f459-4601-8228-ccf939d368ae"
        },
        "item": {
          "id": "58145c8c-278f-423b-9b00-c9f955637396",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b05bbd49-62b9-4b4e-9c05-668ec17e8d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9cdc1d-1943-460a-8f67-d1c5d0cfc596",
        "cursor": {
          "ref": "1ab15db0-2ab6-4023-b829-3fcc0af633fa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c68f6044-14aa-4b90-a45a-910bd6fed28a"
        },
        "item": {
          "id": "9f9cdc1d-1943-460a-8f67-d1c5d0cfc596",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e4b9cf64-35cb-47c1-9e88-9488a1c9f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a0301-a91e-4495-a496-14e0a93724ee",
        "cursor": {
          "ref": "d3d2ff1f-3081-4287-bda3-f2b1584a2a9f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e740e603-f7cc-4ab0-a95d-c0da9e1028d7"
        },
        "item": {
          "id": "d39a0301-a91e-4495-a496-14e0a93724ee",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82044f14-7d67-4dfe-a323-ec498cafb978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47863ed-b54c-4505-a3f5-7882582bcdb7",
        "cursor": {
          "ref": "5f13c804-9fe6-4fd3-93eb-4cce5e3bcba5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a5ac7263-ad49-41dd-8825-b17133b14171"
        },
        "item": {
          "id": "e47863ed-b54c-4505-a3f5-7882582bcdb7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05d86f4d-75e0-4c66-b565-5bab4e719560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d082368b-e799-4e5c-94f5-8f99e2a82374",
        "cursor": {
          "ref": "76a13088-d699-48f3-8493-9921340efef1",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4894a836-44b0-436f-b272-bc46944ff386"
        },
        "item": {
          "id": "d082368b-e799-4e5c-94f5-8f99e2a82374",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bed1bfa9-9e44-4dfe-a962-6675215110f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f82a4c-f6c8-4192-ad05-55b785a72c44",
        "cursor": {
          "ref": "e2a4bbde-76df-4599-a580-1985866af8f2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a585aa1e-c381-465a-9955-9e128583cd51"
        },
        "item": {
          "id": "02f82a4c-f6c8-4192-ad05-55b785a72c44",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "140c2921-0875-45cd-a24a-0eee5ba2cd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7287e0bd-cf91-43da-91d0-6a5fcc89eec2",
        "cursor": {
          "ref": "bf2f41d9-a67f-4187-b5c3-23a060663708",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "281b3e25-de43-40bf-b1bc-34b95f4fbe99"
        },
        "item": {
          "id": "7287e0bd-cf91-43da-91d0-6a5fcc89eec2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b06bc91-cbeb-494b-99bc-865af0a5fe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e266c4dc-f27a-4234-9ec7-d6226a9f2047",
        "cursor": {
          "ref": "59581ac2-e9ca-4a95-bb23-f99a5f53b952",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "33078848-45ba-44f2-bb42-53b265976402"
        },
        "item": {
          "id": "e266c4dc-f27a-4234-9ec7-d6226a9f2047",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e24ed37a-b898-4944-9e66-c91b3084d23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3997c-50d2-4d68-bae8-7b8ff74369a9",
        "cursor": {
          "ref": "b0800202-0ff1-4d35-aebd-b009a72429ca",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f78e628-fce5-4e13-b304-bdac9e7a884b"
        },
        "item": {
          "id": "1eb3997c-50d2-4d68-bae8-7b8ff74369a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dd44b619-4c6f-4b2f-a2fe-f1e6a866e1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549c4fc6-526a-4d07-bf50-0994d92bc455",
        "cursor": {
          "ref": "b6b7b8af-d093-4c6a-bca1-e60f2c5c91f2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7e6822c-0a05-4b60-b38b-27548c6f7f0e"
        },
        "item": {
          "id": "549c4fc6-526a-4d07-bf50-0994d92bc455",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "26439c87-4525-4611-9411-14e1bd9c1216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fba219-1fdb-4d3d-ad44-cdd0d92968a4",
        "cursor": {
          "ref": "e1ebbedc-5530-4961-ac23-c97e89e5f96b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d0ab81c0-f503-4d96-a638-6dab37db5625"
        },
        "item": {
          "id": "34fba219-1fdb-4d3d-ad44-cdd0d92968a4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a6a867d2-5390-4e84-9938-35c946d57bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ab0379-d014-4bc5-bbc2-7a1f871d96c2",
        "cursor": {
          "ref": "da2b9002-f7f4-4073-9fb4-e5c7e6b70aab",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d674629e-b454-4427-ae30-999b96ccf616"
        },
        "item": {
          "id": "73ab0379-d014-4bc5-bbc2-7a1f871d96c2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9365f63e-9af0-4b3a-a613-f6de46646933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2245c0ba-0711-43c1-b3f9-7eeec7f3f27d",
        "cursor": {
          "ref": "3eabc07e-d3e6-46fd-bc2f-8c38ae97abf4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "16b48c5e-86b4-4178-80fd-903df95ddb6f"
        },
        "item": {
          "id": "2245c0ba-0711-43c1-b3f9-7eeec7f3f27d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d1ce430-c432-4331-8193-b9949838d4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38926fe-ee56-4076-a126-a432fd1f1c29",
        "cursor": {
          "ref": "c16f95ae-8aff-4d17-8d4b-c2a304a6a16e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e93c309d-8055-480b-87a0-7461fa160cd4"
        },
        "item": {
          "id": "d38926fe-ee56-4076-a126-a432fd1f1c29",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e2771ae4-efcf-4db4-a2af-39458c321fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc77a92-39b6-486a-97db-51408bf34d86",
        "cursor": {
          "ref": "1bb3aff2-7db9-41a3-9569-add4c2f025f6",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "febc242e-5080-42b5-ae0f-f44a3b54b181"
        },
        "item": {
          "id": "9cc77a92-39b6-486a-97db-51408bf34d86",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "54234eda-4352-484b-aa2a-4a46d0d2469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81678f7c-ca09-47ba-847f-15aeac251df4",
        "cursor": {
          "ref": "7e9776ce-a24d-4a4d-8025-6197c0b08c07",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "17a3562c-a515-48fd-ad21-63bf85445117"
        },
        "item": {
          "id": "81678f7c-ca09-47ba-847f-15aeac251df4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c9f914ec-5adc-4a2d-8815-0d2e59363f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288acc12-0bce-4f0b-8f41-111cc095b910",
        "cursor": {
          "ref": "3140af88-14f4-4ffc-b91f-8858082d35a2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5f9f05ff-ce85-4e00-8a09-7ad43de9b384"
        },
        "item": {
          "id": "288acc12-0bce-4f0b-8f41-111cc095b910",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4cb2d1cd-ef92-4886-a6f5-39ec0c9b379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ad6b8d-0758-4209-a219-88b6aa9f2873",
        "cursor": {
          "ref": "9ec5b19c-4c50-4d64-9710-d90cf869d0bb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff0f4a61-d0b7-4116-9bf3-cae6d18e90e5"
        },
        "item": {
          "id": "78ad6b8d-0758-4209-a219-88b6aa9f2873",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fc732698-bdac-4866-8a01-391e16e93f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550971c8-4a98-4dbe-86c4-c68abe3dc78b",
        "cursor": {
          "ref": "672a7db9-7306-4a94-9e47-168f3cd7f257",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "be1edc48-1f3b-4c4c-9211-1c58dae76e35"
        },
        "item": {
          "id": "550971c8-4a98-4dbe-86c4-c68abe3dc78b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fdd27089-df26-47e6-98c0-4b4248a55485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa3815-bbc0-4d0b-996a-aee9101b4acb",
        "cursor": {
          "ref": "ae58bd3b-c310-4051-8bae-71e9e63ff049",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc687e7d-2a17-4d98-9d63-c97a91c19474"
        },
        "item": {
          "id": "b8aa3815-bbc0-4d0b-996a-aee9101b4acb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ad02f90f-04b0-403b-8686-fcb6de3f44f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c9892-076f-4eb8-ba6d-7e188ba810e8",
        "cursor": {
          "ref": "612dbf8e-413d-4f92-ab0b-e843fb85a57b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "621b1bfb-ac76-4c37-85bf-b9584fd2505b"
        },
        "item": {
          "id": "450c9892-076f-4eb8-ba6d-7e188ba810e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bdc2a970-4496-498f-bff3-ef8c985cf6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d34af5-de59-4bb6-9a25-9adad90f18a4",
        "cursor": {
          "ref": "3c8f9432-1cae-4b0d-b51a-66f29fa2c845",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "280c2e45-82d3-4dc0-b5eb-764ddc6ffc87"
        },
        "item": {
          "id": "f6d34af5-de59-4bb6-9a25-9adad90f18a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d020d4fe-1bf1-4c47-8bd2-0cc8dfeb9f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3294637-468b-4747-97c7-bfec6c839957",
        "cursor": {
          "ref": "78960e80-9b23-4298-8026-953bc408b902",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "78843626-ae13-42e1-976d-de0b6b20548f"
        },
        "item": {
          "id": "b3294637-468b-4747-97c7-bfec6c839957",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b622ba6-4ccf-4412-b9e5-eda03a952415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bb55d8-2093-4d5d-ab46-f75dd928d009",
        "cursor": {
          "ref": "5e4d44d6-0466-41c9-a29c-91642e225019",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bb50f9fe-19f3-41a0-a67e-d5afc7573d23"
        },
        "item": {
          "id": "c6bb55d8-2093-4d5d-ab46-f75dd928d009",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c466376-4360-479f-a736-0518956d5346",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "8eea107e-5966-4604-ae60-2c8a1a625d6a",
        "cursor": {
          "ref": "e68fad04-98a9-410b-8068-7ed0db1fd42f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b09c7690-c8f6-4f96-8cc6-fef4a442373a"
        },
        "item": {
          "id": "8eea107e-5966-4604-ae60-2c8a1a625d6a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f5772d8b-d5a9-4e40-aa70-b5da74019ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ac4bde-1af0-4973-99ae-3a2963808039",
        "cursor": {
          "ref": "7e235d6b-f040-4111-9ef6-4523ae1ac89d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ceb67110-f9c2-4ce9-b303-bfb8b6bdb2d2"
        },
        "item": {
          "id": "e3ac4bde-1af0-4973-99ae-3a2963808039",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d167c068-fd71-4cfe-9bc5-b537f8f42a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad859bc-3006-400b-a7ca-165427232a9b",
        "cursor": {
          "ref": "6cb6b0e3-d0db-4082-8f77-a6bed45faa0a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d174bc9e-009c-4c6e-9439-5cd50f511356"
        },
        "item": {
          "id": "4ad859bc-3006-400b-a7ca-165427232a9b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a8639cf-23bd-46e6-b0e8-c9717f326904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb90cc5a-c963-49f8-94a2-6745613a6386",
        "cursor": {
          "ref": "259551c3-635c-45c2-abf8-da8de3e3db49",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b05137a6-1f8a-44af-8c20-23a4d52cd320"
        },
        "item": {
          "id": "cb90cc5a-c963-49f8-94a2-6745613a6386",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5a09e6fb-145e-4dae-8808-782cafbe148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af58e63-8441-4bb4-959f-bec82e271a22",
        "cursor": {
          "ref": "a45c4649-b8d7-4a42-afbc-e365189f66b5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "481699ab-a90e-4c72-a40e-6a8d3d49d14d"
        },
        "item": {
          "id": "5af58e63-8441-4bb4-959f-bec82e271a22",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7f8c4d46-7ed2-45b1-8f86-4f1d3688552f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d1a47f-82a9-43ee-b375-111b2becdefb",
        "cursor": {
          "ref": "d31a1133-a98b-4819-a888-c2d86518c7cd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aa64a7b2-9eb2-4a6a-8395-8f5994ccd519"
        },
        "item": {
          "id": "f8d1a47f-82a9-43ee-b375-111b2becdefb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ea78fe13-176e-4bfa-9ba7-4c6007be96cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d203975-c23a-4710-88ef-5b5cdc0dd8a3",
        "cursor": {
          "ref": "263e9944-f2ec-45a0-b25a-ded4bda7123e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "22b4fc80-5296-47bb-9422-a8f6d0ad7539"
        },
        "item": {
          "id": "3d203975-c23a-4710-88ef-5b5cdc0dd8a3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06cefdca-fc99-4771-a70c-f812e49655b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d7408d-705d-49c6-850b-7cba6b755d66",
        "cursor": {
          "ref": "4de3b621-afbf-41d3-aa24-74dec53ff8d2",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "87279a7c-28c9-420b-a07f-0697103e39cf"
        },
        "item": {
          "id": "f7d7408d-705d-49c6-850b-7cba6b755d66",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff888fa9-fa76-499b-a330-afbc035f0bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d711d32-0e79-4d3f-a6a4-95586d604372",
        "cursor": {
          "ref": "b548584d-7a7f-4040-825e-4e8585b37a57",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee3632e4-7c0b-42b9-a4e5-a14b7eaefc0c"
        },
        "item": {
          "id": "5d711d32-0e79-4d3f-a6a4-95586d604372",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3128cc77-c521-42ed-b604-9ee2d7e950ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684075e-815e-469f-90ab-f07d8a1998b4",
        "cursor": {
          "ref": "c45fb80d-492e-438c-9a5e-8be53d6375c9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf6f70b5-85b6-45d9-bbdb-dd0317141372"
        },
        "item": {
          "id": "f684075e-815e-469f-90ab-f07d8a1998b4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ec472cfd-8cfd-4a14-9bf3-645918bbb13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a081af-ebfe-4085-82a2-2238707c590a",
        "cursor": {
          "ref": "ac43e506-6f62-444f-b2c8-68a80a5cf88e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8097d7b1-c55e-4496-b0b1-0487efaad3c5"
        },
        "item": {
          "id": "08a081af-ebfe-4085-82a2-2238707c590a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4251a24d-d775-4240-8d53-4ba91f808323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3f45f1-d0f8-4785-9a32-47499f2dd3e6",
        "cursor": {
          "ref": "606e40b0-2503-42a0-8b69-f702f8145ea4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "54ad47e7-b477-4c65-8e8c-dc1f395491e2"
        },
        "item": {
          "id": "5b3f45f1-d0f8-4785-9a32-47499f2dd3e6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae9b0b2d-a1b0-4c7b-bfb2-60d5e22a710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d116b-3817-46d2-8126-6f6c83225971",
        "cursor": {
          "ref": "101322e5-6065-41f5-b23e-15c1328a90cf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cd783ab4-e0b5-441a-b2e3-8f29d7334ac5"
        },
        "item": {
          "id": "907d116b-3817-46d2-8126-6f6c83225971",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "351614c6-d6db-444d-8e03-0b52452a2bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b778cb-5506-42cb-8328-e90fc769a417",
        "cursor": {
          "ref": "5db86241-372b-4515-9646-07d61d54a573",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f5d572ef-11b7-4003-a579-525fdb4e92f1"
        },
        "item": {
          "id": "41b778cb-5506-42cb-8328-e90fc769a417",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "afde3342-b25a-4f33-a89e-5f787a597bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7ab0fa-dabf-4ef4-8848-975628c5ab32",
        "cursor": {
          "ref": "680861cc-a155-4c98-8c63-f2d13b267836",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "22dce750-74b6-424f-96a0-cda31b79ae93"
        },
        "item": {
          "id": "6d7ab0fa-dabf-4ef4-8848-975628c5ab32",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5d2a59c8-c7c9-4a5d-887c-445ca3834ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48895d0-23e7-4b8f-b3f5-b6f82ae8e032",
        "cursor": {
          "ref": "8252a9ee-4bbb-4137-a572-2869f740c479",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "791eb2a4-0bf3-4559-bf76-f266b9f9845e"
        },
        "item": {
          "id": "d48895d0-23e7-4b8f-b3f5-b6f82ae8e032",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c6e01e0d-7e59-435e-94c6-4601474e9f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915452b1-47c6-4491-8aaa-6e66b043fa96",
        "cursor": {
          "ref": "70cdab0f-3394-4ed5-8256-7a56f9e66ad1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3cbb27ca-9672-4a09-979b-23f01498a4c7"
        },
        "item": {
          "id": "915452b1-47c6-4491-8aaa-6e66b043fa96",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b0ef12db-161d-43ff-95cd-2a8dfee0fccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6910051-f24c-4c3d-b865-d82711320f38",
        "cursor": {
          "ref": "08bc769e-c4d8-400b-87bc-419329007a31",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33439b85-b213-4282-bf87-43f7988cbc24"
        },
        "item": {
          "id": "f6910051-f24c-4c3d-b865-d82711320f38",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e58299a0-d33c-48e2-ba3d-bb8522fb8a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2095ce9d-f52a-441d-bac6-05385d31fbd9",
        "cursor": {
          "ref": "0efb045a-acb2-4b1d-b41e-009cd0330e2c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "405c3ae2-3c89-4dbc-9cb0-6cd422b6533e"
        },
        "item": {
          "id": "2095ce9d-f52a-441d-bac6-05385d31fbd9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "255da5ab-282e-4c8d-80fe-3718875634af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c4c06c-ef4e-4208-834b-65754f97434f",
        "cursor": {
          "ref": "38b0e86c-351f-4f42-b49c-b292836318a5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49fce13d-d3dc-4dc3-a80c-cab8bb4fb180"
        },
        "item": {
          "id": "71c4c06c-ef4e-4208-834b-65754f97434f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe4fca91-3413-4270-aa1c-902b6cc6b2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75902a8-775a-4f68-8467-26f8537f1e17",
        "cursor": {
          "ref": "0179ea62-194c-4006-a02e-82209ea2bf53",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ebc3977e-28c3-4725-9465-2e8c111e59b7"
        },
        "item": {
          "id": "b75902a8-775a-4f68-8467-26f8537f1e17",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c342fc2a-f1c3-4bb4-9830-2b5d524d0048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8285f7-9f5e-4c4d-ad7b-f12096ad2355",
        "cursor": {
          "ref": "bcd38492-2fd0-4c09-83d1-c531e8772a83",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c0f915b5-f07a-430d-834c-06681860db2e"
        },
        "item": {
          "id": "dd8285f7-9f5e-4c4d-ad7b-f12096ad2355",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "09c5ba7c-ab3c-4e61-a42b-cd47affdc262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63be3174-08ea-4366-8891-e548733a2d20",
        "cursor": {
          "ref": "fef06cbe-69f9-4408-8efb-bc72f00e4792",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e483cc28-bfc7-4eee-abee-9225662ca583"
        },
        "item": {
          "id": "63be3174-08ea-4366-8891-e548733a2d20",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "68f19d18-ff0e-48f0-bd8b-8e1e70adc9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6882ea72-e422-4393-980f-5ad87307dda5",
        "cursor": {
          "ref": "f8b84f1a-ff8b-4ab9-a37e-4b4add89f5bf",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4820123c-46bc-4157-b293-a90a527ca104"
        },
        "item": {
          "id": "6882ea72-e422-4393-980f-5ad87307dda5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9d83feb7-b4b3-454e-b75c-e2b10a489fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0668feb7-1165-45e6-b98b-f322a40f42c8",
        "cursor": {
          "ref": "aaae7a9a-de5a-4b9d-af70-86a9a8e15d1c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5ddc07a2-99fd-4d51-80ac-dde52fdbf0cb"
        },
        "item": {
          "id": "0668feb7-1165-45e6-b98b-f322a40f42c8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f9577714-acc2-496b-a07b-5599e0a7a44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49777ef-3d3a-49de-8044-c43e7475100b",
        "cursor": {
          "ref": "82dd8b92-18b2-428c-85ec-4ee5439861b0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e877ca32-3437-4f99-93f9-e15cb5888700"
        },
        "item": {
          "id": "f49777ef-3d3a-49de-8044-c43e7475100b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b192d76b-63ee-4ce8-afdb-45143e254d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3963e198-db00-4544-9f87-62541ed24260",
        "cursor": {
          "ref": "52439663-cbc3-409a-9133-647f6095c36a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "117fc57f-871d-4f1d-acbe-23b87f01c550"
        },
        "item": {
          "id": "3963e198-db00-4544-9f87-62541ed24260",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bb7139f3-2fe3-4d5a-8637-2ad645fa547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd21b2a-f9c8-4642-bea4-15b1b4cb19d6",
        "cursor": {
          "ref": "5130a4e2-eac6-4cae-9976-6af09d28e399",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e891d457-ec44-436b-b29d-c565150c606c"
        },
        "item": {
          "id": "ecd21b2a-f9c8-4642-bea4-15b1b4cb19d6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5e6f9d66-6f98-41df-b7f0-14863dc79878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6e764a-4f06-4051-83cc-7507340c2825",
        "cursor": {
          "ref": "9c99ff26-5ca2-4f67-a2c8-d1b424517573",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c7d1fdc2-40ca-4a17-9b41-4bb510d71425"
        },
        "item": {
          "id": "bb6e764a-4f06-4051-83cc-7507340c2825",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0fd25d6c-df61-4c82-be12-9f3832340223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161246c2-112d-4ee5-9b49-2a21aab11898",
        "cursor": {
          "ref": "10ba91d6-1d49-4a95-8df6-6c59ab20ebe5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2d87a6e0-26fe-4aa8-939a-aaae93283640"
        },
        "item": {
          "id": "161246c2-112d-4ee5-9b49-2a21aab11898",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0a3cefb0-f0b0-4c7a-b96d-070d20e02d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d40268-eb41-4789-81e4-be6ab7b58bcb",
        "cursor": {
          "ref": "6f1f3157-c496-460e-b364-dd4ba08e0252",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f2a219f6-0e5a-404c-a151-7a7bb5fa91b4"
        },
        "item": {
          "id": "b7d40268-eb41-4789-81e4-be6ab7b58bcb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "92715a18-8b2b-4c00-acb3-1860cb24bc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f906e5e-5823-45c6-86f5-28872c0f1f31",
        "cursor": {
          "ref": "fc8c0d65-7ef5-4562-aba1-0f24f810d934",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bc8a496a-56d4-4855-ad87-110927eb1825"
        },
        "item": {
          "id": "9f906e5e-5823-45c6-86f5-28872c0f1f31",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8943d6d4-db75-4bf1-9866-2aa699bbe3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeb75c7-b5ff-4f06-b828-0aa828a995ce",
        "cursor": {
          "ref": "8862d06f-3ec6-4eaf-a3c7-542bff3a3250",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bd6115c9-af05-4036-a58c-f15f8af58bc5"
        },
        "item": {
          "id": "ebeb75c7-b5ff-4f06-b828-0aa828a995ce",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c5fa454a-c566-4aec-93b1-0ecae5a8e7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8587c0e-f60e-47be-8d80-ca5737e3aad0",
        "cursor": {
          "ref": "c1f20433-a565-47a2-876a-d713a575d2da",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8c78bd99-4a6c-4cf0-bebb-fa3fc75978b7"
        },
        "item": {
          "id": "c8587c0e-f60e-47be-8d80-ca5737e3aad0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cfe8f33a-08d0-4a7b-9021-e82bb299d76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c9e791-c284-4834-aa8c-5fc5585b3056",
        "cursor": {
          "ref": "a7bddd48-8e95-466e-b060-379431fbe897",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5845392e-5694-4e7a-a9f4-78449d651ae0"
        },
        "item": {
          "id": "02c9e791-c284-4834-aa8c-5fc5585b3056",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "98b06fc7-4174-49b1-93c3-98460d9b1de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20e802d-f48a-4475-a606-8c6f9d68dd28",
        "cursor": {
          "ref": "3c4ffbb7-8ce4-4b3d-977f-8fb84fd59cc0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bce9f4e0-bb23-4735-9859-a82b98db6c82"
        },
        "item": {
          "id": "a20e802d-f48a-4475-a606-8c6f9d68dd28",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6e6a9073-661f-4bcc-bcfa-c20d89ea6e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c97507e-09d6-4a2f-86c9-19198bee29ab",
        "cursor": {
          "ref": "aa0e3783-67e8-43be-a99b-1e99362d1717",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0195bea1-dccc-4a30-a813-5c80ac4c34d1"
        },
        "item": {
          "id": "9c97507e-09d6-4a2f-86c9-19198bee29ab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f120d0a-254e-4db3-9628-1d7b32914bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b808f9a-998a-4c06-8e50-ba01672ec4f0",
        "cursor": {
          "ref": "3aceeb0f-0276-4fc8-85c5-20c4b07468d0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a2efdbf7-c130-4254-9d6f-3b0a7633d01c"
        },
        "item": {
          "id": "6b808f9a-998a-4c06-8e50-ba01672ec4f0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1a16e5a0-5eec-45cf-a04c-6a3446456918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d56be6c-6899-4f03-8ae0-7cc108b8d36c",
        "cursor": {
          "ref": "edc11b9d-c3e3-44d7-a3ae-ce7703e9444a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "98cb7036-211c-412f-93ca-b3a0c67f2c79"
        },
        "item": {
          "id": "4d56be6c-6899-4f03-8ae0-7cc108b8d36c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6c465337-4061-405c-a5cf-fd4e6122bfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eb87af-e65d-4a69-b78c-af90f2ba8209",
        "cursor": {
          "ref": "7d9f1590-7357-4f55-8277-ffdd74bac801",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "00af0e2f-f061-4967-a4c6-23ce4c45a55a"
        },
        "item": {
          "id": "e3eb87af-e65d-4a69-b78c-af90f2ba8209",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d52c2c0-511f-4aa8-b32f-e679d40de516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a00e6-61fd-472c-bc82-3d9dd4c5bce2",
        "cursor": {
          "ref": "6801751a-83bc-4546-9354-83378fc0447b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4db96472-9bb6-41c9-bbd2-56d10f19905e"
        },
        "item": {
          "id": "468a00e6-61fd-472c-bc82-3d9dd4c5bce2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ddfb03dd-0cd9-4c06-9649-8136ddf8a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5349e-b178-4c5d-9ef1-09f9df062bcd",
        "cursor": {
          "ref": "2edbaf07-c711-46e0-88fb-a8ef05cb3920",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2acc25d4-6a23-4a59-b055-5ee2a3492d36"
        },
        "item": {
          "id": "ccc5349e-b178-4c5d-9ef1-09f9df062bcd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fb52bea4-39d5-49d3-a913-a16101baeade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fddcef0-eabf-44ee-9862-7c8785bbaba5",
        "cursor": {
          "ref": "e40ccd01-a2f2-4884-a280-620363bac528",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "870294b6-76b0-4a53-86b9-ac50a3b10a7a"
        },
        "item": {
          "id": "3fddcef0-eabf-44ee-9862-7c8785bbaba5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c716c2e7-d74d-4935-939a-55c8d010b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e2ed25-4f8f-476b-9b8f-eb2875bd54b4",
        "cursor": {
          "ref": "a6e267e9-b5e6-47a3-9fa2-0fe70f98667d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ef4891df-1df3-4432-851c-bb3816daf7b0"
        },
        "item": {
          "id": "13e2ed25-4f8f-476b-9b8f-eb2875bd54b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a7083ab6-5648-4b98-b835-3dec973d645e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6fc8f3-7fa1-4820-b028-25726f0f9939",
        "cursor": {
          "ref": "24aadf8f-f072-4a52-8892-46323b639459",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "12855b64-bd24-44f8-bb1b-de370ec37856"
        },
        "item": {
          "id": "db6fc8f3-7fa1-4820-b028-25726f0f9939",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "368ef3b7-59fb-4d5b-a49f-5074b826e8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b28ab49-e5f4-4fb1-bd13-8c0392572771",
        "cursor": {
          "ref": "e6682965-102d-41f7-b712-ca9111cc6c57",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "283d76ba-c62e-4703-a723-a5b9db2c9ce3"
        },
        "item": {
          "id": "9b28ab49-e5f4-4fb1-bd13-8c0392572771",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be30a028-800f-498d-9816-6f955b4c6056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409daec6-568f-4dc1-ac16-d4f059302dc9",
        "cursor": {
          "ref": "850030ee-86aa-4341-9ed5-02873b58adb1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7bc5d0a2-2a81-482d-9a75-ee14dbd62ff8"
        },
        "item": {
          "id": "409daec6-568f-4dc1-ac16-d4f059302dc9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "347902a0-e946-4634-83e5-5df05f468e8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cdedbf-baf6-493c-af2c-fbda097e8963",
        "cursor": {
          "ref": "077517f5-2e52-46d6-8464-30f08ca98e7b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9c6997fe-896a-403d-bab4-e1da7bb9fba5"
        },
        "item": {
          "id": "b0cdedbf-baf6-493c-af2c-fbda097e8963",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e7394f58-e37f-44d0-aed9-4cd789774c06",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa6b74f-018e-4762-b3b9-848c2ddce3f6",
        "cursor": {
          "ref": "c5accf3a-ecd1-4ae4-b004-69021c26f839",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5ad46c4c-51a0-40f3-8e3a-ecf14fdbf5bd"
        },
        "item": {
          "id": "4fa6b74f-018e-4762-b3b9-848c2ddce3f6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "39fd69c3-d948-412e-9f55-6562cedee36a",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a466a15-01eb-4000-a4ea-442f0fb1349c",
        "cursor": {
          "ref": "96e97928-0862-497e-964e-475072a4f6b0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "791a50d0-4726-4716-b025-dfdd904c3e82"
        },
        "item": {
          "id": "5a466a15-01eb-4000-a4ea-442f0fb1349c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d5ffea27-a6e9-4ebf-be28-efd8bd741ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d67bdf-4b15-4276-b8d7-0059ffcf2794",
        "cursor": {
          "ref": "2922428c-c923-40a6-9196-135a2aa0b4fb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3b84e02a-adc7-464b-a86e-7ca3c65e2f23"
        },
        "item": {
          "id": "f4d67bdf-4b15-4276-b8d7-0059ffcf2794",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4088209b-b875-4787-8825-799a6d181079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d67bdf-4b15-4276-b8d7-0059ffcf2794",
        "cursor": {
          "ref": "2922428c-c923-40a6-9196-135a2aa0b4fb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3b84e02a-adc7-464b-a86e-7ca3c65e2f23"
        },
        "item": {
          "id": "f4d67bdf-4b15-4276-b8d7-0059ffcf2794",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4088209b-b875-4787-8825-799a6d181079",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624366de-2d29-414b-98e9-9ef757ac1562",
        "cursor": {
          "ref": "323e4f06-ac8a-4317-8c8e-e0fd8d59d997",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2b7d12bf-2565-4a75-9359-98a8e213f41b"
        },
        "item": {
          "id": "624366de-2d29-414b-98e9-9ef757ac1562",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d405b702-51dc-4680-9b13-b1628af3684d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dd0af9-7d78-42a1-9219-b01dc74fabf6",
        "cursor": {
          "ref": "82492b84-e64f-42ca-a9a0-e79d27199017",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8dd63787-84b4-4dc2-92c9-5fe5633728f2"
        },
        "item": {
          "id": "d5dd0af9-7d78-42a1-9219-b01dc74fabf6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d03f1152-c86a-4d79-b1b8-6b810d4c5dc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}