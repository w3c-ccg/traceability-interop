{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cd2d48da-4792-40c2-a551-952bc662f570",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55b20504-5318-49d5-a69d-fd6be15e5a91",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90cb47e6-b7da-4ded-b34e-e1dd184e4a54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "569b38a1-4e74-43ae-b1c9-dec2fcc76425"
                }
              }
            ]
          },
          {
            "id": "58b4aef9-84b3-49c4-8d4e-d7401972c410",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a0ebb15-76f1-4465-b339-839acd79a94a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc0ca5b1-6945-463b-99c1-1a4b90a5691a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "69a7ea81-06fa-4410-b46a-327f5d4c6b2e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ca5ed631-228d-4670-9cde-c7ce51437383",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7817d9a7-531f-48b7-8e5c-e29c1fc07d3b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "636e9404-f670-4d5a-b525-75745ec21588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65941664-fa34-40c0-ab26-e024e93a37ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4aacfe3-b319-429e-a97b-c8fb4390147f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46bc026e-c8a7-4ccb-bd73-9fcce77d12e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9efdd414-6312-4db4-ae59-72dd15f0944c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cc0f30b-a9e3-44f9-8495-df53a02fa65d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16c2f9ec-aa96-484d-9ac5-e56dfabdee2b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a983c96b-c29f-47fd-bf61-e63ab98a85a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca4ecdfb-af5a-4af0-8aaa-fc3b4cf5d5cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "445f37ee-fb79-4bab-b0b5-92831c31c2eb"
            }
          }
        ]
      },
      {
        "id": "466e3c54-06b2-4c57-bc38-230d9f308ac5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bd8c32ea-a3df-4349-b9e0-cf2157e1ebee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31280505-4538-4459-8725-65220005e5b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbd689a2-270e-45a4-a0bb-6f5ca3e9c975",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3cdc37-bcae-4876-a59c-9ad5158fe7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4172fc6f-cb20-4c66-9dcd-82530a20c905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eedb56-32c4-4756-aa82-b7a057d68f0b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c49706-5a8d-4e61-8004-328ea777029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f7cc8e3-867e-422b-ab58-a0598eaf2980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5b8d3b-8fdc-4452-a5a0-8917610df0da",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec8d85f-025d-4d43-9f25-b59b60dfe602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "446713c2-e18b-4067-a144-72ba0406d859"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6372380a-6c22-40c8-89b0-a367fcbd7807",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bb20c18-917d-439a-beab-3db525000c03",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d76e8-bd88-404e-8239-6822092e7a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a46bd0f8-c18f-4601-a184-d840b687ad09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f092f81-805e-4724-82a3-14b343a37e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e70776a-d65b-4bc2-af07-4a2ff5dfc135"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "18bcdb90-962e-490b-af26-2138d5989587",
            "name": "Positive Testing",
            "item": [
              {
                "id": "826e9209-be13-4467-815b-1734992cfc2d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eba6f26-2ec3-4d7a-aada-9b23e0901c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bf0b10e3-2a79-4253-9a39-61457e437923"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252a2c08-bada-44db-9dea-9e03c65dd9f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a8984ca-3887-493c-a983-0c4012caf600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d8fe466-9e60-4de8-af20-a9f4ebe15eed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7742e64-862a-4007-97cd-f88ad187df77"
            }
          }
        ]
      },
      {
        "id": "b5b52fa9-a97f-4e68-afa1-91e6cb1d7abd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "956c2f84-9454-464e-8ca2-cad1fa9c321b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c1d26bc-9643-4852-b6e8-45bf3249e943",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a527276-81cd-4631-8596-dd713ed89420",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd1898f-4484-409d-829e-8a8b1cc9ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab76cb5-14ab-4405-af11-491fde1593d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daaf674-00e6-4a3a-9575-656f6d8beb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d956c9c4-5efb-4fc6-a8ac-f43e602e4b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fd4984-72b1-46a3-a434-68a14c90156f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9653d-a406-4746-b097-b6369314b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f17c65-3d3a-4c07-bbf4-785d845e18e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428bf24e-1ca4-4dc0-8875-d774825e9b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f81ed191-a648-4065-b5d8-5b6d5a648dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7cf851-671f-4ab6-aea3-2a83d45eff4d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c817479f-1603-472f-9054-0095a151bb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402a0554-62c8-464c-80b5-97188708cd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c20d49-5904-451e-af6f-5255db0b5434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13624c65-86de-46e0-bab4-0e35fe4d1dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47b0a35-a1ad-4d4e-a5e6-1c8f491fbdbd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a97cc-2d1c-4de5-be8d-5c546b001ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c8b082-fa62-4aa9-9b75-bfb061d85045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fd33a-f862-45e9-b092-984eb763f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f179fc2e-0d3f-4e0c-8f71-12c62259d4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9484ba03-9507-4de0-ab20-ef47e5567833",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5408c180-34c9-4864-aecb-62e307f3de1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d986faf9-f64a-4eca-a2f7-9542cb3ef646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0b658f-e602-477f-94ad-6d554b4ca9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db5f2d6a-def2-4c76-9b6b-56ecf5252dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b6ae70-2fc8-433c-b74c-26ee367b7111",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb50dc-08dd-4bb3-8a12-549e3947d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7d169d-65e6-4fd3-af9d-be9dc202d7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e4615-89be-4eb3-9dbf-8092daa0d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40231c12-0a20-4159-a0b1-6a2a1b1ef59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03faddb-9bf8-4ce7-ae65-05ba184c6043",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee138711-eda0-4915-91a6-5b969b486ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91895e9f-d11a-4691-99be-f8bbfb9a2fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0d6be6-b039-487e-a5a0-50c2eb8d24a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4caae586-d957-4bae-bb15-da75e3cf077a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a277d86-efe7-44e5-a001-9f6101be7f0b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f5105-11bf-464f-bba1-1a00479a1b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe72ad9-b772-47aa-b974-da5a56bdbeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55d7a2a-d505-446f-995f-dab85230b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "361d8019-b72e-4729-a183-e00385750406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31306c8c-8e68-4386-9c51-e7c0e045b95d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db2272-067c-45e6-ab63-0eabe98d7a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a30d18-3f88-47f0-9354-ff237cfb4d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c93078c-2f5e-401f-8b62-c4ed15c0bc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "917c48c9-83d5-489c-9b3f-a63fa2fb02c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417aed7-4d25-42fc-82e1-3990f5f9cfb6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3d61c8-56af-4668-932d-bd456f862f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ecd551-4fd7-42b7-a135-8c783467ce1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204411b1-ef5f-4d78-a2d4-e7017c4d8e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37b2796c-c2f6-46bc-b522-bcf59a2c5930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc70975f-8c0d-4cf7-a1ff-227bac512d01",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d3b411-5757-44e9-8b43-4f39eebe50ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d58f1c-d24b-482b-a5cb-bfa4493da953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84ae6a8-a91f-441a-a29a-2967498d6a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dac4df1-7916-45b4-b21b-8c4090cca42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d603ff-62c3-4ad7-af4f-f26f42ce6a44",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8be7b7b-a1af-4044-9237-653c15a93458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5241910b-4810-44a7-812b-4d4b457a288b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ba7d4a-7636-4597-a3fa-9967683bb750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca972d16-ee9e-44db-a6bf-96b9183cb96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81ced7b-a302-4b91-8e01-5800c3f78422",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f69da6-8992-4b8a-b044-ba04099eea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c744dfd-4dc2-42c1-95a0-848e93d8e229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a3416-ae7f-4017-beba-1f14b8668b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4d077f8-971a-4965-885c-c8fd8857e2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c411b3-9b4b-476b-bae4-c50e0ff497d8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e490ac60-8d2c-4c2a-a2ed-7667d98787b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a09cfb-8513-4051-81a8-717facf593a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c7aa09-ac34-4236-8f0f-9118c09eaf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58d420fb-a90a-4016-b9fc-2148b647f97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d0250-0ec4-479b-8323-8aed91085e12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4677af97-1b79-4202-a855-bed5ccb22f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec148105-e270-4a41-b408-90e4812c5f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96837f-8949-45aa-84da-3e0c67e1d269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ef0982-b804-4029-b1ec-eca46aca51d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8bc496-324e-411c-8511-d60ec0983f70",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab51acf4-0e82-4f91-b3eb-9b9e1e7b4be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cf5da0-e0b0-475c-a69d-6d537c16dee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587da2eb-17b9-46e0-90a0-7a4283e7d13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50978538-9049-4f21-9fe4-8efb65c27d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86257ef-1d89-4d41-8637-27e94d4ec092",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29803708-ff64-4480-bdd9-040df8bdc5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faecb4c-8d29-450a-bfb1-3c740eb48690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7286366-05dc-4565-a04f-096f14c93254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b21c432-ec10-4465-b662-bd5442a66e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d66b818-d532-402d-a522-d9f0c3a02408",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda92c5e-45c2-4d7f-97ba-0ddda436e47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f73db9a-77be-4720-985a-2385c969db5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e65f99-bac1-444b-b031-757568abfc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1531ca56-c0e7-4344-bdbf-14764c06cf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51a8324-635c-4422-b8b9-920a2b0129f4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e59997-0ef3-46fd-9a27-a5c8276b50bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c4366a-f4e3-4c87-944a-6ddb79fd17b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beecb8ca-5ae5-4b8b-8860-4f0651225526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85fe646a-dd94-4522-885f-b82ec7ea8736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616339b3-9d52-4973-94a9-fd80be1dbcd9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55c6d5-4892-448b-8a8d-d879a004aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570bc97b-10a2-4c99-a1ee-6ffd371b1ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0e099c-020c-4a83-86f5-ca4e746ad2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a20628-239c-479b-b207-de90a56df0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51335eb6-244d-4095-9fa5-320726119329",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ebf57-0bb4-4e4b-a838-179dedd85379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1169ebcd-2099-4cc3-af3b-47b8130546b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6b09ac-4dfe-4714-b77e-ebd570b2bd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "214adb3a-02e6-45aa-a41b-657188f84e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed1da70-e5bc-4b2a-9865-e97f616ca892",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad70ab-2b2f-4ecc-8c68-03bdb03f56c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa361d59-9b52-4997-837b-e0f330e09af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a7045-49c1-468e-92f8-e2c1f40fb62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6765e80-148f-4b6c-9953-a2ad2256088d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d6e601-1b98-47b9-879e-4c9be007ab04",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ccdd53-8de5-4c61-8d5a-532fe6d16963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b77b3c9-1de1-4696-aed4-d795d746f64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f279c16f-f909-499e-a630-abab6838cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bc8e41-0f98-4769-abf3-3d486c5072c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae92254f-6ce7-4dc2-bf8a-fffbb94bf1cb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135b4f80-940e-48ca-b378-fd1244237fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dba6179-bb11-42b6-925c-65f11159b76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41de954-8f64-4426-bcca-cd27c5c4d512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b154eaa1-8b0f-43b8-83c6-a4de1ec1a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdfa627-7282-41c4-ac5c-0ac8cb78db2f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd94117a-8c47-414b-ab6d-45971d3476f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccee68e9-b8d1-4a87-8b7e-6e4079d76bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef25d84-55d9-4f9f-902e-5d19a84b4421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29d1d37-bd23-448d-a42b-fd678e2765a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67da5cd5-0709-4335-a003-068d5cc9cf14",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b810429-ec12-4b68-a943-35b36ea18ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82c3144-e070-40e5-809e-78e6bcbe8c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936ff8a4-b1c9-4225-834a-cdc3bcd89d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af4ff13-2f4f-4d67-a7dd-f61b250a788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4644258-19b9-464b-aa22-8f9eaa3e9b68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18e4e3d-b645-4d7e-a187-6e0b1977d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed6ca00-3c5d-4242-addc-8d58eae6ce4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b396f-9f34-4b3e-91aa-e065af0a2685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "998df043-bdff-47c6-a320-5004c4d849a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac7e088-3fc8-43e1-bcbd-a5f513a94bfa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b789dc-8cb6-4a9f-8ee0-2ee6386dcc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5bb60e-45f6-46c7-9c36-0b29733d2e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7843fae4-c1f3-4966-b6ba-e5905806c480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1fdce0-da85-49dd-b160-89062afaadb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9956319-3fa7-4f78-aad8-af723033ff5f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0631a3-a3a0-42ee-a7b3-6ab012616af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e281cb3-659a-4c0e-969d-ebb95f4215ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1ed77-43e8-46c2-94a4-50b71717f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbab64e-afda-496e-a6e0-3a0ac68e6a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15bdba2-a56c-4342-bd48-ba9331b334f5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c6b7dc-4de2-4ffc-b063-b0a260188d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64eca6e-46e6-4ad0-b40b-6301fe138114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269681f3-f4f7-4080-abb7-a1b49f8e98f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7743a9-3501-4104-afc2-939afb6a6076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a01a99-2cf3-4de1-978a-c5bf27e69dd1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ae67a9-b9df-428a-8c81-023b052a9ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430f2d6e-3451-41bd-87d2-96120b893ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b140e9-e4f1-4071-ab76-b45c11cc592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2af1543-b33e-40ff-9043-024b4f349dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb994d3b-c3ee-4908-946b-013430e02f14",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a465c65-697c-472d-926c-afaa7aad9dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba70d56-0c7d-4c7e-96d0-5eff97752244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e773a439-f0c4-49cd-824a-4fa11cc5e302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e5bdf2-077e-434d-8b18-32320dc7e343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deabfceb-e2dc-458a-be65-2975486e6165",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd980041-1cc2-44f6-baa0-c5ff95472979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e0aa01-cd14-4291-b443-83cbf93d1838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b688eae7-43bb-4aba-8e50-488cbfbffc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec402c57-0759-42e7-9813-e0066331c1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c293ad5-2f29-4a3c-a682-fd85f52b5c27",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e02bbf-0eb4-429a-a05d-7f6232e50e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c217188-bbe4-4a42-a5e9-44094e6cd466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a640a1d4-a40f-456c-81f0-438688caa1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe1265e-501e-4b6d-9d35-5b4250de30ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fdfdb6-6922-4572-acbf-dc69ab14db57",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed40bd50-067b-41d4-9cae-7684537873e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b4922b-9888-41ff-8ab9-8e9c49f4a874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c310b-eedc-4f49-b14d-00c18cddb3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7acac2c-a22c-4fe4-8548-aa1aa87b52fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3122701-291f-4761-ba98-37b5c41286c0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb48caf-cdf0-432e-9ab5-92edff5823f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef4f019d-9b6d-4dae-a088-ddd869827615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bbf528-d60e-4112-8a61-ab89710d07f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20e62390-9e6b-4808-b352-1e69ee8e6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758e9b8c-65f6-4b68-bf78-4c362092c8de",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4231d150-3d71-4156-8ef5-fcb6b2a010af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7857a800-1365-47f5-b476-c62ae77ef39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e56bb-8231-4180-b769-3781f49a9e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73300a50-cb68-4c87-939d-d49825fc7366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c53d2-147d-4879-a1c5-47a22ca1ee41",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e075df7-0231-4e34-aeaa-94024eabf53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf9ec82-a3e3-43bd-a56a-aa43c69e26a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc1ba0b-43aa-4749-b8ff-8633ef377ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a12bce32-e2e3-4e0c-ac7c-ecd99621b65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1212cd98-3228-44c9-afba-1a5475ba469f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf848f85-4760-42f4-871a-8f906deb7192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e63d25-f5f8-4864-8c4c-55944cc6a499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622e2769-fcc7-4072-8ba8-098736ef286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c55f5b-c262-4ff7-902b-e63f10ea23c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aea8ad0-352e-42a7-aa50-cd5da46f5dc4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b13475-e43e-458c-8f72-9f1d89a8378d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37637d06-5e12-4494-8863-99f62bbd3ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d8d6de-88b6-42e9-b6a9-97fb3c994d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41f87e6-e724-486c-b9f9-f0e7ecb299d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202f6d41-2f4b-48ae-9699-b9dbc29341ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36e505b-2716-4e97-b072-2f9b8c712f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1393ba18-ad5a-4997-a54f-3c9d2089e6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be828ce-d530-4cc4-8a8d-226d116dc3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "480a2f19-da45-4805-8c06-b61b3c8aeac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a988b5f-e414-4221-bbff-b70faae79f7e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e865b8-72dc-4a58-9e0e-3ccbf5d56544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246f8fdb-1af5-48cf-ab54-171021912d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04b67ee-aca2-4a0c-8337-2f602e5d01a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d23739-b1bd-4419-b74b-f5ebb48d3510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221c7747-aee0-4560-8934-a4df6d85067c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91089f3-6b05-40e3-8049-fb48a8eab441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be179b81-f321-46b3-948f-13b3920262d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8594d0-07ad-45da-9e86-948173d0bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a72940b-6ea6-40c1-a169-ba40a2386d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f57e27-708f-4640-bd13-6082a5b0891b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dfe3fa-c0f6-47d1-a1d1-bb06d0f04aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd76a12c-43a0-404a-8149-03bc87cd9697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fbacde-e3f2-46a0-83f5-759db49ca4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b6136d-b21c-4371-822c-9d7222e5c801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac11d94b-2c98-4c22-b13a-e3d2683620e4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc2a4c-9db9-499b-98fe-a028ec7eaae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5c8331-2e95-4836-993b-545d1e4b6a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf96eb9-5d2d-4f11-8d39-e596b07b075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7accf0-eaea-4067-9f7e-45307e3912d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61acd43-f3bf-472d-ba6b-68d10f0641ba",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daab0bc-835f-4e1f-9b04-960141ce75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0526f69-ecba-481c-9cd0-9a63a3795bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57addfe6-28dd-4c15-8f96-19d1abcaebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ac00a9-2a63-4aec-83fa-6d441262713d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb06bdb-5afa-4442-9abc-17774b7c7f41",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bae968-c248-4a52-9c14-65afc3ffe4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f6dcd7-60dd-4f74-b66f-d32e0991928c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f4dd71-0617-4825-9f2d-288e5c800cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aee0fc49-0b3a-41a0-8bc7-f4f1bf769e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e97e958-a1a5-4944-ae8d-42feb2603f8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9258bc-19a8-4004-8726-e6bed82c3037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e237267-52c3-40df-b9d7-9bde66d16fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54347e6-9183-4545-a812-846cc35df679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a01f35f-0e34-4ac6-8bd8-634aa3aeab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6369cb0e-1bca-4542-be2c-2c676884090c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b52a35f-6512-4e50-9aba-337a41df4bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cdeaaf-14bb-47eb-a0ae-ea38733c3960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a822f7-dc2e-45b6-9a03-93e6d98f5a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21c564d-4ecf-44f4-9fd3-8b2d02650dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e886f0a-ea2e-4672-b823-006995c605ca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e6e886-0701-4bbb-8ebf-a8b0bc77e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0687ef9-d1ef-4463-8fbf-64ba37f5e8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76cd9f6-17c1-4b50-8586-7ad2e136c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce055e6c-879f-4c24-8e44-85f3ceb249b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf88b42a-2c8f-4ade-aec8-1fd8add13e99",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5238e869-62f3-4ec7-8e95-3edb01d0750b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa18f33e-be76-43a7-aa18-f78c0ce7a241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5805cb5-8745-4f67-894d-3662fac546d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "57851a07-62c5-4d2f-a5c0-0ca8bf3dca11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620debb8-e184-4eb2-8c15-7710e27f3e5f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1893acc-b49b-4dcf-b09f-4dddadf27c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c30f6bc-ef31-4207-b6ed-9d026870d38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23f6344-042c-4464-b0e1-1df4e2aa0a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7baa7f1-cc4a-41b2-b5c3-3f800542a34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b4bdf8-c0a3-492b-8ad1-5d2e0dffd51d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d274c2-873f-41ac-9c30-a8e6e672c41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a78227d-b484-41d2-9f2b-bd8750e149e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e681e7-4304-4d6d-8a7a-3f71a8f4a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405efc8a-a924-4e70-8b49-cd5bc704e78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a51f83-2272-4780-b286-a1646c6c11eb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a939ade-f475-4e05-b0f3-391ad5a37f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983d3e53-def7-45ef-b9a6-827074cc53ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72e48c-0612-4549-a256-464a424194c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9820345-21b2-41ee-b6c4-8bcd669cd406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9d72f6-faae-4ef6-a4ae-4f494d757c07",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e70161-9876-48fc-9a51-653b93200ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e602c0a-5393-4d1f-99ff-8d692646854c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915a7cb2-807a-4532-a902-e6178fcfa248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2e13b-0725-404b-8732-bb758c148846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a8902-c2a6-409e-9798-44c7957c8d44",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce1110d-9498-41e9-a2ea-c6cf3f1fe189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9b87d6-4caa-4878-89b2-92df49dfa4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d8f8d-6518-42a3-b2fd-e37c169da744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab9e416-6600-4ba0-a627-4399609f057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4dabcc-eab9-48b2-be6b-b234641e1e05",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa7fa9b-4552-4f3c-83f9-59c813094fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b2f2ab-5542-4249-8c6e-6e78d4aa811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb16efb0-a44a-4b38-ad38-cff14c000b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2ce89a-5665-48fc-80bb-b98e29d595c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f773b66-4b76-4124-8469-0b2b0860c6a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4cebfd-b322-484c-b43a-c7c1e59e5897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0701c5ff-6c10-4c35-ad3f-4f43830efb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11888cf5-628f-4e2b-9f21-9ef9e779eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2af8dfa-b123-46d2-b869-a3eb63bd5340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789a80a5-4aea-49e0-8fcd-a71e2c6d577c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82092f08-d70e-4210-8d22-f945246792e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a157fd-652d-42d4-a8dc-7c70e2af3f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360a3018-ad8a-4c11-b21b-1f67a8dbc5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d782e9-58e7-4ac4-9531-bcab284327af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce67d88-b6f5-4ae3-8e84-2d244ccf72ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5369c552-4e23-4a20-b255-4c77e7bd0873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f06e73-e127-44e6-9ab7-a99cbf9be76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7605bdcf-267a-439f-988b-48fc5f42ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b362a064-e857-48b9-8b03-efa683d6218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a39cd2b-e117-4c94-b7e3-9062bed26810",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fd8499-272b-487f-b2db-ee6b7617e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa507beb-aa32-4e50-aba7-b926dccb3c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f758a7df-a8ad-4742-b64a-dfbeb4cbcdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e78dd23-d677-4776-b9d2-fefbfa230905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3e00ee-89e8-4e3a-b7e6-f67b694a9429",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748c743-6029-4486-8f52-78b9cc7c2fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27669b1f-9f0d-4e58-982a-bcf3934f3adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3fe085-8ff3-4b96-b7b2-f335230b09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "238bb889-cf08-4aea-ab5d-4592cda3f181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4904a17-c23f-45b0-980e-71910fddd0ed",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34012cf3-3405-41f3-9b7c-ada941e09ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378aee23-968b-437a-b014-cbc2ccdc79e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72daa698-b088-4831-9ce1-3404089fabd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb3fd6f-808e-413a-8241-4ee761436e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f622f6d2-b63d-4257-a98e-949cd478d3c5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff9146-f357-48c3-b4da-c679249cbcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aae6150-8899-43d3-b141-767cd02e9037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a98bce-fd88-47bd-b3b3-3139013efc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed7381d-bef0-408c-856d-43435e15facb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1606da8b-e931-43ba-886d-2afd792d197c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56943d65-b5d5-4536-90a4-7580828dfc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a867c9ac-05ae-4b58-afc6-9f18b808e3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fa0d9a-d6bf-4f00-96c2-7951948b53fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d076bd-1fef-4a85-be36-b27d426ae80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa2911f-f9c6-44db-9ab7-1a95018d7e66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332f497-e63d-459f-bc70-4a28a97d0c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d782ea0d-8b6e-4b4c-bf54-282b59933ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bffcbe-b088-45c0-bda3-f46c25e5dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a3fd59-5084-4a25-9e27-7422dee11369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09250699-8521-4b57-b149-157a7a9f5a53",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3285e0-d796-4633-b13e-738a12aca45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45447129-6130-40a4-be16-495c0e440b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87df9ec7-178d-44f1-95ba-4a7482a77312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87a5a8eb-b5be-40e7-94f7-bccaf2ea90b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead26903-9864-496c-b63d-250e59074942",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82fc07e-153e-45ab-b19f-ef88cc5d398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6feda231-811b-4a01-854c-f20289d32dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30fbbd0-0411-4b05-b586-6daeb15c8541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68211292-71b4-4513-89c5-8f0b647c05bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3202a7b5-9477-4f60-a4b7-fabe8cde0d08",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24df55c-b556-42c4-a594-007462a203da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388b83d4-35b1-4aac-8925-181226c7d224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae39ae1-169c-48a3-8c0b-1076fa073ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a332b19-a2c3-427b-952b-efd6fb715d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32371536-b458-4e3f-9de2-255a489dc3dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da75c68e-342d-42b8-a71e-9f734ee50a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd3d5b1-86df-49df-b00c-ad2c6b3ee565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc5d8f-ef67-4fc2-9aa7-508d5cf71828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66480ec9-de06-440c-818d-46ef4f4d7bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5a3f62-84d3-4fe2-bae3-d53e932c706e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35133288-4ca6-442f-9331-7438c5077249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d8f020-c959-4f97-8ff4-990c7e06a7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7a06c3-ede8-47fe-88ec-92492a65303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baa2db0e-a87f-4997-9d21-aa56ccee390e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d95c949-81bf-4b03-aebf-20b0b2603214",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df09783d-23fd-4534-8dd8-99fca793ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4c04c5-61fc-470b-b87a-67e13f083e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d449cf-9b98-4a71-bdf8-45c0b886d1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93b1c1-d196-442d-9f06-f2edfe276d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6a58b0-d6cc-4526-9d4a-864bd695439d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a2696-b1b3-4d8b-98ab-1fc5d09d13d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6d2d90-0c4c-45af-b298-bc52f0eb9a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29a684e-e000-445b-aec4-a65759f45809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd1fc5e-b9da-45f8-ac98-a947a62d84f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d826acb-c13b-465a-a93f-061ce27f69fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bee638f-5ea7-40d6-bd73-19d1893ef560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600ee844-187c-4faa-8e20-ed3531d69523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205f0578-3fb5-4e9e-a1e3-0b0356a20bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "339ddfee-0a18-4699-80b2-7b9552f1a989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d016575c-466b-4fa3-9e00-395b2a9af069",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9f5044-2c27-4be1-a457-cb7a0c63e665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69de4e7b-720e-4b55-b373-943040968e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a59eb-97a3-40bc-9637-b1ada467a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca7e585-1762-4be1-9ccb-ef14cdf62f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c52aa5-54f7-4a57-ae18-a5652e7ea190",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc082b3e-5b40-4134-82cd-58f0ebb15ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e36bcfc-bda3-49af-a3bd-38af358d48cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2f2b73-18ee-4f23-88c1-ad5691dde5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "694206c4-056c-4f6e-ab8f-45dd33661b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380ec82a-8d7f-4562-8346-ddfd295e5fa8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb6cafa-4854-4471-8bed-8c2a7dc9c2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9812ebd4-b571-4ef1-843b-7f93b3c41535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa7895c-e6b5-46cf-a9c5-e0f777f1db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada80dfc-6837-4827-8415-e6ea8781bee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a94093b-c58a-4325-a9c7-a12a1a865b7b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493467ed-3454-48ab-891a-09dd1eec3eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619e4180-8805-4252-88f7-7f1a132963fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a23993b-01bf-4268-b344-4311f029ccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2d2bf9-0dda-4dce-9f9d-be88e08aa822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100518c9-3506-43a9-b9a3-2b95a05799f5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb8c0cf-5e20-43cf-9329-69bbaeb60d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3ddcfc-ed8f-418b-917f-c16f185d5264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a181428c-b2c5-4bc8-aad6-e4117bae7352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0fc18e-e458-4e6b-8c8e-5423ef25b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f812a236-6e04-43e8-bdbd-fa35214fcf20",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ca5fdb-c035-4e33-b60e-4db73d70a4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcd27bf-9b06-4545-ad81-2ac0603c90c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3667e4be-a54d-41c0-83fd-4e0bde7ca438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "784cf48d-ffb6-4a3d-8ca4-f373ebcd97dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab4fdb6-d22a-4838-b5c7-0fa67fe85ce0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba622b-5bb6-4b4e-bbc7-54b2e4213b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acba2ac-9e20-432f-87f8-9222ead10b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc8b12-e10f-4e23-9c31-48d648a59aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cccf1aae-1d3c-4d13-bb2e-c84554e9f55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936dfc0a-021c-4fd4-88b0-37d275883cf8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c986ef45-ea13-436d-893f-c6dc551565a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ae3873-e8cd-4053-ac6f-21c331d3fe1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be03cff-1a4e-435d-adfe-e0576d1a6938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54707fec-eaf5-4e09-9406-6b9cfc0892e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a27a8c-7c93-4987-a428-a0892f0a10ab",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03196315-fcec-4a65-902a-bf29da30cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c730baf6-fe3e-41c5-aa6c-f7da1025019c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfce95f-1ca2-49b6-80ab-fdfeaf6f1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7f8dd7-97d2-4af1-8fbb-bb5777b44333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb1e2ab-9180-44e8-9170-316919719700",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad521cb-cc0e-4b48-a232-36113f76864d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde1b01f-8c4a-4ae7-be03-8fb0c9c4eca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ffc527-5cec-4e8f-81ac-bc3adaa831da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a9f4fc-6d32-4caf-ac0b-d7d11a99c053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0126504-6541-4f86-a58f-3bbbd3da7ac9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661010ea-5d89-4336-8b0d-4fab941a2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29e1a75-f5b3-4a87-86e9-0655ba6ec572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e67940-8b55-49f4-9172-a3e779277c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b604fc32-74aa-48dc-8c1f-5dcd9d2f697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef6414c-049e-49dd-9a44-4358d1aa34e5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f1e6a3-ce23-46fc-95e8-c3ca008bc172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25117a5e-96ce-4948-995b-ba7deaa9a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5826f3-e5f1-4c20-bfef-c819a309e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9486056c-d5c1-4b6d-a31d-bfc907d7e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117ea01d-da5c-4c80-a91d-65942271830b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d779b-2369-4037-aecf-4c8d9f7ad141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a742502-e136-4b08-93a9-a6a515dde39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd5cb01-31e9-4f4e-b22b-588286fb148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20df73a1-0fd8-4d20-b8a1-ed1fd8f78e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae51c6-6559-4dba-b826-eaabe9a417c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b888300-da12-4dc8-8822-296ea3c89439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe4c5a6-6331-46e3-acdc-3a394fd22b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181cb4d4-691f-4770-9f43-2f11cf3760a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ef294c-d093-4116-afca-2fbb7593cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3be5c5-e36d-4112-948c-2ef4d89a0cc6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef382a-a7bd-45fb-98ac-78e5468c0982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0716a671-b7d8-4964-a97d-24c4f27a2e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db9702c-9ae5-4a9d-8040-b936215bfcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0037fc7e-faa4-4c9a-8252-1ce1c4ab01c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e417dd6-a544-4cf4-b268-fb3e292b66be",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b129bb-3f52-40f3-b209-01db66f6ad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71554e36-6a26-4cba-ab69-9b972b1a45fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669d04aa-8f1c-4dd6-8c5f-7248513ca707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c76ba67c-6df6-440c-9b81-63c90418ebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06294155-24de-4353-8009-9f6d92d55e01",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefe02f6-5870-427c-b5aa-f19fc06adbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c404e7e7-bc39-431f-8fa8-535d8bf1b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d3d30d-2f69-45e8-87f2-36abbefe32b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdc7ad9-a779-4b98-a85a-5dabf9ce956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9b6bb8-0c16-4089-a46e-8d044cec0726",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f9f637-5314-4657-854a-b74a59a538ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "664f4c61-a51c-42bd-a5c9-d88c2fdb5cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba60235-999e-48e8-b4f8-9130e87b00d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ad88fb-e38d-4848-be34-4454b8db8f67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eee2d051-6972-4fbf-9bfb-68a681ef38b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0f55d42-7bc9-415e-bcf8-439a7a6732a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c97a544-9d53-4af6-b93f-5525653f490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9daf017-8d9d-4da1-a32b-758a175318a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f82667f-f21c-479f-9717-98539f0172d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54807ee9-b283-450b-871a-8376b3ec0798"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc2be573-d133-4fc8-ba34-c5592b5cf819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50f7ac7-87dc-4995-a817-9b3a4228438b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f4088d-87a8-4648-bbd7-401ae149406f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74876fec-d5d8-48a7-914f-abc7536a188b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ada4094-1e64-4a70-b2bd-0f665bb52fca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "340c210a-fe1f-4cd9-9a42-3e6ee564e2ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51056575-0e01-4a27-959e-141b0ee837aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98d6be5c-aea3-4176-a4b0-254020527a31"
                }
              }
            ]
          },
          {
            "id": "e6344e47-61e5-4e47-95c0-372c73d473d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f1afcb4-78a7-4427-9217-f2d8cac16f5d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a859321e-c31d-4f54-b271-3edd0a18a5e8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e998c-de46-43bb-aff1-4ea02bedcd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c72b55f-b49a-4cdd-9290-b920513239d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae5c47f-c2a1-45ae-af75-af14eda87cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cc7369-18ac-4f86-9ccd-fc59945bbd5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c24f4933-3a91-47ff-b97c-31b2b510ff02",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9da3d2e-6360-43ab-9ae6-1b05803cb07a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0ae3738-18db-4185-9006-372eac9d79b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3cb29d9-1e50-4969-b363-4827ecd5247c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac994e92-7b60-4ede-82e3-4f633f8abf83"
                    }
                  }
                ]
              },
              {
                "id": "acf0f3bd-226c-4d06-bfd2-5c4892051bfe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fc11cb0-4bba-48c6-a434-0dcccc9bf1c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "063e355a-68fd-4228-b544-e5630bddbd80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae628fe-40e3-4c38-a55f-08f2ca999f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db2ab1a0-0892-47ba-bccf-1b6d6a5eee89"
                    }
                  }
                ]
              },
              {
                "id": "7603baed-32ab-4b6e-a67a-25d6b77347bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "035f15af-ff2b-4e40-aa4e-eda70ff4aed6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2777693f-36b2-43fe-b454-278a3318212b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5915099-430e-47a9-96d2-c8317d556e08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b427e09-aaa3-4669-bcbc-e3cdc7b60c7d"
                    }
                  }
                ]
              },
              {
                "id": "287676c0-60b5-4d87-83e0-d34ca26a6eae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "966f01fd-6f29-4579-980a-90a88f6e7127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f61e1ce-d6f9-4b19-ae0b-d125e1a04583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cb5d2f7-f3ee-4665-863b-c7494eb50f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "27cc2db4-3a23-45a7-bb37-49a76d2d42c0"
                    }
                  }
                ]
              },
              {
                "id": "f296833d-0f63-4f02-bc8d-7ffe75c05a93",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d7823f8-655a-405f-b93c-13b79afb4374",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67dc50e6-d9c1-4bac-8dcd-91838677d08b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7baed9b2-1d1c-4ff2-b5e3-4baeaf6bb21b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f28e0f6d-00dc-4241-a0e8-b9affd5a7198"
                    }
                  }
                ]
              },
              {
                "id": "eb5192ae-13fe-4c5e-950d-cee65bd9a13a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77b2b8d1-7f3c-41c4-bb6f-52a0b99ff63c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "637c1f88-90c7-4865-8710-d58a1b4f2ac0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c096a83f-8ed4-4f5f-abc2-bce47c8fb5db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d2592bca-9eac-42f1-bb34-ff50dc041e9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f87a26e-fe1d-4f46-9478-a7d34b8e9d1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f460fba-3348-46a0-a04e-bc389f2f1e03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "434bc908-0b3f-4f88-9040-2a6e805e705b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07ae32a1-010a-4670-bca2-e2c8b3bf3056"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca685f60-8814-4eee-9b0e-0280c8f4de12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f5fd949-a637-45f6-b669-f1abdf04cdd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "746f77ef-4f1b-4308-aa57-ce1b2dc8588f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56f03b75-a00a-4b31-b5e0-8601aa5c05e2"
            }
          }
        ]
      },
      {
        "id": "53fad15c-4444-4abb-8199-02d0191e842c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf0a9970-8836-4687-a0a0-21569aa8340a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a85b2f49-91c9-40dd-b2f9-748695a200c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2e3767b-6bf2-4849-aaa5-4de25e450559",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9b8ccf-92d1-4e6b-9639-a7b2bc2d8d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc25e06d-af56-493c-b3b5-f7615d813235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d07b17-14b2-41a3-90c7-0c3fceb2d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eba139f-c712-403e-a164-3676f19457ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff3e95a-3025-45e5-82c8-a11c0fcadc3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc365df-5dc5-4599-84bf-9ce14f44b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ef28f3-7884-4762-ae5c-885f3584565c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a2c964-6a7f-44da-8344-f2e57a64d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2411793a-f7c9-41f4-a09d-7370bc96f063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79db224-ceb4-4c37-84fc-f279b8ef6335",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8c8395-aadb-435e-91e8-b84405eda002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e88a12a-8dfa-4f3a-8673-953c80a1c825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3b43d8-6d34-4113-998a-26bfb6feffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d41f9082-b395-4952-8f82-4497441edfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515a2bb2-5eba-4c3b-9291-a2bc3a42f840",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e08420-3b39-4f19-9fd2-d9070d688f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8254f200-0567-4fa3-9306-141cd454c289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d05f92-c076-4caa-a5b9-1c19e07e7d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7653549-1c64-499b-beee-bda8af90e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3541ac-910a-4dce-80d8-615788593e77",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa00f63-7e9e-4ca4-ac39-b98e3559a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715cad32-4eb3-477d-87ee-6009dfce2611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0200304f-efae-4d82-8a1e-0be670e36447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb419b29-1056-40ad-8cbe-45e83e37cf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d77f3f8-98d2-447c-b367-0bf7958e15b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a521f7b1-744d-4346-ba4d-5f6a916fe205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed1705c-1f76-4111-9bee-73ff6cd87eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27299f2-3344-4cea-aae2-7436a6563be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57cd08f1-41ca-43b1-847b-2105e5aeb4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42de64fa-3016-4ecf-840e-d21f45df9c11",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fa91e7-5b60-4ec5-9651-adc71c770df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b570af-0e68-46c5-80f1-13884de22541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4789fdc3-52f3-4ddb-a017-06aa201f23b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd49853-f732-496f-8a38-555778317f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b39ad-92f6-41ec-98b3-cda952b14f07",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8389af-53e6-40e8-91c5-e7b28c416eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a023d7-5d97-47c0-acbc-e95ca5b3bc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471172b2-8fe0-48f5-989b-4f3714b44f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0f96f6-5786-4d03-a480-ba92215f3424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2090e0f9-d9c3-4ce9-b062-80acd6b643d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a73fd20-d2bd-4811-af5a-a42bdba26798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e58caa-a026-4999-a6cb-e4a327ef99b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d667c6-2886-48b0-9196-97026c4a213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a3701c-16ff-4401-a5e8-996d7a8cff5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9371e270-9eb6-4b59-98ff-51625fc6ce10",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa130884-eac0-41c5-8d85-886e319a4b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f96e964-e117-4f59-b718-43595f998fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31434c54-f810-42a2-a2fd-2680524871fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cf3299-b738-4372-80fc-1fe215656794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46977309-8dc8-4380-99d9-f660cca961db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ad35b-d458-4eb5-a2d9-13a9317961da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39140c64-bfb0-4629-b591-e26c57d7fb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a463d5-b2cf-4c75-baa5-0b20a65bb76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b948e135-6342-4020-a3c4-132b87f141e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34020230-9bc9-4700-a817-d16f751a5a8b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c342ef-f25f-4003-aaba-5d1b0e759da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de15a1d6-980a-43dc-b93f-1909a8b22e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d27eaed-0099-414b-9858-b6bde1e9724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7094ae93-d889-4e9f-bca1-2621e9fb561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcc85d9-1aca-4e20-b5c6-4ed0d2295e4d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c70d48b-9d66-4df3-91f3-23cd1e7a75c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3741944a-1aed-4a71-a7cd-104c17481cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c2601-16dc-4c24-ad21-deee77207382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dbd086-a30b-45d8-b0a3-ec877e5dabd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed516d-d268-46df-ab44-f3a76e6ba316",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc18f17c-9bd7-45f3-9e74-64d6c0c65866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fa973c-3c46-4dcb-9082-117633dcd044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d00ab8c-2d48-41fa-9246-29fc47f63d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2248e315-ea95-4ac6-8dff-53a62e3ddf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcac72d5-cceb-4df9-8c2f-e1ca512030e7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3c18ec-79b7-4950-aea9-435f2df2428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a54dbe3-08de-4074-86b1-38efe6a6e74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42354288-ce9e-4dba-8093-7b4e573e568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d549d1-23f5-41e5-a70f-beb2b836a44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d70b2e-5e4d-41ab-b51c-d0cb642c11f9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432bcceb-8a91-4d13-afe3-f5094925d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6382f2b0-349b-418a-a08c-129ccce2a70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328d9aac-9822-487a-a362-77ddd0081054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75e6a70-f1c5-4306-97ed-e410e78e4195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77bca04-998b-4ac4-8194-75dcdec475b7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e8487-e73b-4dea-a8d4-6856d349dcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d84f04-d3fe-4927-82a5-b1b56e2d2168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109e3a9e-069e-4932-8267-21a101c52911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2aa9cf5-63c7-4e7e-b656-8879500b3e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce296a00-c07d-4ec9-952c-f3e08cbbab30",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570fdcbe-6126-49b7-849f-39ce08ff51eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4ad26d-0e45-479e-af77-bc41cfe1d6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62184688-c5de-4b64-bfec-46d5114a79ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17603428-0c9a-4b97-ab3a-2df7b88e425a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdb395-dddf-4935-b126-221ad7bc7ea0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b4000-1453-46b4-8471-6917ed36a7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe85b7d-c900-425a-9302-981e0714ae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3ebf71-b910-4825-a235-2d0cffd0e13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947d3356-e107-40fd-9561-39e8d9f199a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68f167a-a099-4850-998d-ca2a92cb0bd6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c5b9ed-cff2-49b9-b431-9b5c0df7b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d86a62-aa36-4a96-9e4a-d9c6c3190e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd15e0-7b47-4ee8-87d7-55379a4d2f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdc6274-2ff0-4706-98e2-ecca4ab5d10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c865058c-8b75-4c09-877f-26db853c5ff8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8367974-cb6c-49ac-befd-cf54b48af25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d826b9c5-c106-41d5-9448-34da90b6e116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cac352-d6f4-4012-b4d0-7720dd7182c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5569e6f-48cf-4486-b21f-b9626a545dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a6c21-fa0d-4905-a013-e7dc41acb862",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51291cb0-312a-44a2-be03-24fce5154c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dcb3a4-fbc4-4833-96a5-93716d07324f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4b3299-d2de-4ba8-84c0-6774a5fcf49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e405fc61-b966-480c-863d-2eb6ac2f5459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d56075-dae8-48e4-aaad-589d3ecfc9b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e30f9-8109-4bd4-8425-bf768faac0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7449af-36d7-4a5f-a90d-f710757bf38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0b5e57-91f7-4b44-83d5-2c419bdd311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "206ccf93-2f3e-43f0-b9d7-c2cf0fb75f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844fe25d-3029-4727-8c3b-587e7d3945e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce0ae1f-8189-430c-b595-cebb94885325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e582b70-f6b9-4e79-91dd-d538f06c522d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27d82d-d711-4ac7-9d85-127d063bc2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974b315d-4ed9-45fc-b0ac-eb42bbbd97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace87037-18e5-45b4-b9df-b58695d350b0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb409be-25bb-42aa-8c0d-c1aa196b1fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416fa3b5-b2e5-4a2b-8902-0eda4d83c7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6215000-e083-4d82-bcc4-34bc629b0cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adfe97b7-0490-41c0-8ab7-995a58fb2ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2432b3ce-0b7f-4141-8606-11c8d3125637",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f730a83-bb14-47ac-8a8f-3ce0f180cf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515c9486-8f04-4570-b658-988ca3a9f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5c0f00-cfd6-4f25-a1ec-170176100aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc03285-f2d4-44a4-94fb-91843e2fa293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc50ff-d3fa-445f-bd97-44894318b25b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f3411a-eb89-4aa2-b596-f7c4ce15abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444e61e-95e5-4152-bf76-965514e1a88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461548d-61ad-400e-afa8-4eae18c99eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0211a963-77c2-4bd8-80f2-37eb7f0b601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e6520d-bf3b-4fa7-bd4c-ac36e27b51ff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae32644-322e-4959-8e76-23ce0527840f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c953302d-e2fc-4511-9ff8-736988ed4a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649a023b-1855-45ee-bd2f-7a571d7c7eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5411d753-418e-4d3a-96c0-0b688a65f8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb006067-fb64-48ba-a061-681b07ce1b5b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a054e4-7ebd-4dd2-8958-57aa2cc807be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab8e08f-7fe0-4da5-9046-b47edf84e5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc7463-0124-4277-8d29-23beacfc60a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8079a77-7452-43c6-a218-ce3e52e5b233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cec76c-52fa-40da-ace9-ee4f968161ef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d9def8-0aae-4513-b840-75ec4dd5d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f775e3b4-5622-4064-bfef-b734be80063b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6f19a7-a195-4913-9554-27d2ad0c253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55f9577-7210-44f5-a4c5-95500b672dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901d78cb-3de7-4fcb-88ed-dcefeaca0480",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d02d4b-195d-4d4d-a19d-58d5fe694883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6011051-3d8b-48cd-98da-6f2972d5bf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790aa242-b5c9-4ce2-b378-524480024f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "774932fc-5766-44d2-803c-1faa99f24aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cace6b6-97d8-4026-98bc-70d5aa5fbae0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d9c06a-5279-41f5-b786-eddc6b00b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22212b4-6c42-4245-b837-7175a249744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2890eb7-b30c-4b8d-b9f0-deb897d3a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad08459-56d5-4dac-8eb2-6fb7c2bde4b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "beffed0f-8f17-4902-a85d-708b1e79e627",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d28193a-9087-4e52-a59f-637da62f2c46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ccb254-84d4-41c0-bea5-702660a0085b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a553a31b-86a4-4352-b84f-dfc769f8c2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad38be8-c0fc-4a9c-9ea2-48e0b8fb651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b8c721-9c78-44ad-b6ee-065a22c947de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f7bb00a-e98c-45a3-8357-aa1c56e34729",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ccd7e99-388a-4814-bc2c-a7eac03abb57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e98219ce-4623-4e3d-a433-c4afdbb39eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1227f7fd-e145-4ee0-b122-ee36c006fcee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53312f73-5fd8-46f0-8ff3-5f2569a969d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bcb9bc2-83ef-483e-a12d-479a9b78b268"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87cb4219-13f4-49d3-b049-1b95389acc98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f1d98bc-4e6d-494d-9dfb-23330b83c594"
            }
          }
        ]
      },
      {
        "id": "ce8ebb55-eb59-4309-ad80-b4a06c29b639",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "dae9cf17-33f1-4832-be61-ebade7c573c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff21fa71-3151-4dcd-8b4d-c8f4028817ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71aef8f7-64bb-47f3-90e2-1c69423c7537",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b42d0e3-aaff-41fd-a711-6a0ebf80f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb445f22-59ef-4817-beb2-ae0b5fce55a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc262a7-1205-48f8-9a01-5fe718f42a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f42f74e-74bc-49df-870e-5628adec2372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7442cb-934e-4c84-b21a-b968c5e77c21",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9f2e76-3f6b-41a6-b13a-569ac55c2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1e8dea-f137-49ff-b8c0-59284347ed65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb64c0c-34b6-4c45-8a32-af739b3f7165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd6106c-cb7c-4de4-b744-3b062d5b0676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb1030-d290-420f-8989-83b20d65e781",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53938b2f-a56f-41c4-8de8-ada94d1c1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fa208e-2992-4bde-a99b-2f0c0486fb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034088ed-6d34-455e-9e97-da3758616ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4abe3c-6a1c-41d7-9f47-8d79288611b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf1649a-c891-4434-8b8c-9d3c012f6132",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6879f81a-c1db-4778-9319-3995ec8706f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f1146b-6d43-4809-a15d-751c6dda2be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e2ff36-d516-4197-a9c4-18d70c0816ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a0f6a2-42c7-46f7-ba9a-49ea1207149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e52c24-63b2-4469-a053-88333a2de0e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f2e5e7-e6fa-4f2d-bbb7-7970cb8de487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371b0642-038f-4475-995f-3d02e07e3c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b97ccd-52e5-4b21-96e1-f388b24e7b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc6fa57-b27e-4250-bc99-f57e2c74730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5654069-9fd9-45d9-9c27-8629ba06a6ce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c82f22-7c30-4cb9-a863-a9075a10d9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943a82ed-97d4-4e2f-9d98-d9b68f34eb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2418f198-df50-4f21-bae7-f919d51b9524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de2705f-44ad-4f51-8026-e45144dac37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca50d58-2fcf-4db4-a79a-339bda3e9ac5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3036d491-af83-4d85-b999-48e5482a7066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161d3e9-c150-4d00-98f5-f31cff9308f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3466d8f0-495b-4aa4-917e-f68c24792442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c26741f-bd8e-4bca-b227-694149b8d86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb72c2-d05c-4240-aaaf-160c299c4e67",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c51a49-701b-4c9e-9c59-d1978fae8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c171e6bd-a59f-416f-b090-69d99b503221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40718501-bd7a-4baf-b687-451a567de8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd1eb13-92d7-4326-80d7-b61110d8dba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab67f0d5-07d7-4a3d-b2e0-42ea5d2ad7d0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d02b33-93e7-4613-8b5c-29e40e964b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9828ae-ed4f-4119-b1cd-4bc8bc6f700d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b63c86-60b7-45cf-a4d8-3fb8b5b17573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86530162-99cc-4028-8d28-3ee54ef0b48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d545d9b-3270-47e9-9ddf-abf38ad0c1bc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7802b9-9f6e-4c87-a942-84646d9aadc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6513a8ce-e306-4b31-b55e-c76102f13482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1805284-c839-4f4c-b428-8798de3b92a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "511399ee-bba8-4f45-8cdd-124b7c9e8b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3fa979-8f0b-40cd-844a-3a7c8bf3b56a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9c3265-8669-4127-be6a-e832739cfe8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93531077-44e0-4995-bcba-790ccfc24825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9974a9e5-6bc1-45e0-9413-7ecfe55e8e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a365b729-17ce-49d8-9179-3cd7580ae52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c845621-a773-4c4e-ac20-5c0bba113d5d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af7b6f-88ed-451d-9b1b-0a4be68ed464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d806d78c-fe6f-4d25-9a62-1ed711cc638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c14050c-76ad-44cc-a815-440ba4240e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73dc6d65-41db-4931-8d4f-42b2318eb668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15077e06-018f-4047-a378-1a608f42cfe2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd39d26-be7d-4c2a-80ff-233de2158f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3fc0f2-6f0f-45af-b55d-3ab090cc80d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63897945-0c09-4fe6-a596-54e70585d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15261825-6409-4d4a-8672-491ad5dbf207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91de97a1-01e1-4e8a-8f3c-343e832a112b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e48c9-40ea-49f3-8c16-0b758dd5baba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a96f96-5f49-419d-9e4c-2db6971ce86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f66af66-143e-4e93-a656-507f9d8ee61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22aad5d-96f8-4074-b965-a554e3a95287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba3ce4a-2305-48ff-897b-4bb425cd6acd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b57be5-3c1c-4451-aa58-6ab3e6b9c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745d335c-819a-486e-98b8-8e53e653ec2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f84f515-b10a-4174-8d8d-e9aedac75ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1157111-d200-41a7-9386-cfe049b10374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7044247e-64a9-4586-819e-13e73bd5674b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdbdc38-e727-487c-9167-58f02f321603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417197c8-cb73-4cd6-8a9e-c829a59d3930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb28bfb-293b-4b38-9530-21db652fc94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd6b22a-d87f-4ff0-8aa1-d5913840753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69223f38-6179-44d4-be94-f2cd89210033",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7a66a5-f212-4996-92ab-ae5444049dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d0fc46-854a-4b12-9886-481404c16f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569804bf-1818-453d-a062-4afdcd7436f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cebc17-a8d1-4790-966f-e83f7161512a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c0bcd-ed40-4d17-9c9f-6784927b3945",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308ec37f-1029-49e8-b741-6e382d426519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd99f8b8-4703-498c-80d4-8484f69a7e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbd0980-055a-416d-87a5-f1782626e816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5d8a79-9286-45be-a88b-1dbbad9dddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad45c1-6ac3-4cb3-97aa-2f24b5ea208d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe3603a-96a0-4e00-9986-e428100e41b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfcbf00-9a8a-4cb0-a01a-be399850d28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f884896b-e171-4192-9ac1-f2790a5ac731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7827b3ff-1321-435a-a5b7-82bf97d9d1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11475453-1ca1-49c1-8256-d23059775549",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b9be76-adc8-4a1e-80f0-270303f45340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2d2b04-082e-4541-a88f-4b5dc3398aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68894328-60ae-4d0c-a5fe-8f3c633b960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe68be34-a084-47c2-9b92-fb3d3a47cffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56fde49-044f-4418-b42e-e31442b9c13e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3f314a-ddaf-4e1a-876d-1394bcd565c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64122bb8-d2ab-40e0-a463-bb78a223332b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd66299-ad37-4978-ab65-fca5b8418d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a20ebeb-f057-4772-9ad2-718349e73e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa363178-e0df-4e09-861a-794f38680672",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610a67d9-81f8-4a3c-8ccd-b76ab74eb50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0fdcc6-0fec-4786-8714-f1426ff569b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2de56d9-61dc-4a88-a4ab-2b7b4b459b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd28b62-5c31-4abd-9a56-4e2fde8627e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432d0a22-e984-4971-a087-70525f962b1b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2d1da4-f498-4859-a3c0-14bc2fef1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ea0f1c-ce09-4824-94ff-da17bc152486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8813b74-5ce1-4580-947c-b9acb71bf060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "665aeff7-95d9-4ba8-bbde-1c0c6de8a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fb88d0-d3ff-4533-98a6-27c0ee9fc852",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0953fd52-df92-4b76-82a8-b37a8f457bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500ea4ab-c8eb-485f-a089-fcc258c57811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9c6a9c-d67a-49db-ac3e-08c01be5236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf72ac6-ef24-4ef0-916f-a0962f476582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56f8e32-e8fd-4331-9c49-9432cf628d28",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c5a9ef-a09d-4713-b17d-952b142acaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d4e677-79e3-477e-9f0f-59f5ab4761d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b763347-1066-4e5b-84c3-5e0088b8b893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41f7e07d-c6f6-4004-ad9f-75dfb0f307ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635d0188-caa9-4c6d-9c64-4f02df150a98",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f1a54a-5b75-448f-bf81-370c78c30021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9924fb-a6b1-4ef5-a9a8-1dfda27260c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2118d211-c906-4d91-83ad-cccda2bb5887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136e8f63-6c3a-4786-8011-0a513c387a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84376ce8-9f5b-49b0-ab98-f3edf7ef8b5f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b50cb3b-67e5-42bb-8e83-4a66860f9fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1946286a-8d70-41f8-b4b8-2b5dc4ce77e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a5006b-90a5-467e-aa09-a6ef662b76de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97676c2b-981f-4e94-8cab-1541d8ed5b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748cee32-a36f-4f6d-8592-7ce14a416a03",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1967a7-88ed-4d52-9449-0520a5f68b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd42d02e-cbc7-44ff-b2bb-c9441a729ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53a4b47-c9ac-4094-bfe7-167a04b734e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83c3f8a-d844-47b8-9a20-7ae479873e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7472a407-d3fb-4d2f-932e-9aa0db03bab4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef61fd2-1011-4d21-ba01-99c53645c917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0ea27d-7ba5-4266-a243-f17c7508d04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c98d8c2-a6f4-49b5-bb33-42175dee1201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfb29a7-543d-431e-bd7a-ee2de3565db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30557ed-8dea-479f-8c36-195040102421",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdc7a35-efa9-4b11-b8dc-3ef0ffd1b7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03879a2-4e3f-431d-8d03-7c825864b7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2737cf54-bb1f-46ff-aa6d-1f815c7fa025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "712b9666-e88f-4847-9ec7-f761a8e95bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3169ba-4ced-4cef-b010-c8c49ce1718a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f043bc-9223-4b74-957f-e9b61ba7b230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d99d4a-4f6a-4152-9be9-8516b377d36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d710b082-17bf-4c53-96f5-6025cb371e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "895bccdb-6419-428d-8631-9002c60e04f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73956aaa-36be-4ce7-9a49-109ee360bb4f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe70197-14f7-42d6-9d7c-201219e416ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5b368f-b6b4-425a-a1a4-d0f74acd2904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a572d6d2-9a89-4ead-9943-567d3acd99e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffcf33d-277e-47e6-bb32-18d96f2158cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd6279b-1876-45fa-ace8-1ad9fa456a60",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868524b4-a4f8-47d8-9c58-3c200f2f47dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe0cbb2-1af0-4661-b8b3-038a7dfb7c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6e96a1-d340-4127-9a10-2f4ef2c57109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08ee0b8-3d89-4c19-acf5-a8329a9958ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3731eeb5-90ed-4c7c-b6d9-d78dab3f7a8f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866be9eb-3608-4d69-bb0a-6a459995aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16671f45-85d2-491e-818e-08f6ffa33c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2c600b-88a1-47d2-af88-7587797f33eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f90675a-dfc1-468b-a84b-daca6208823d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6c55d8-497c-4d91-97b4-aeeb18b5838a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84c1e4c-83e5-4d10-895a-f18c15b4d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f08b95b-7eba-422d-9ad8-45c6e2924bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47ae466-a29a-4b39-9947-b24e84867a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4d2632-c47f-4459-b836-cb6e449ededc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b890a3a-9a8a-4c52-b502-bda2df7c4b2e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38613c86-ffe1-48e5-97ce-d40cb2719353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4d2467-691f-44fc-b2d8-a5473e1b25f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978a8a56-fd54-447a-a35b-271bf41003e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3812eac-7837-4871-a57e-64e4253d37e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae8db7e-555a-4f4b-b8e3-62f5b3e3205c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c87ecff-70ac-4264-8341-3c06d40e4133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb3bbf3-3f04-4fe0-bf63-9d0c3eca8a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfc7045-510f-4bf8-bc00-ea1687ce3d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c2b241-4382-4c7d-85dc-9a282d9f6eed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "318d5664-8338-407b-8d74-f90665f486aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a65cb3f0-6709-4e56-9015-00592198b590",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199d3cfe-27b4-407d-afd0-9a926a96c734",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c39152a7-d07b-42f1-9bc7-b64231205c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be0730e-1c36-4a6e-b898-cb8d1ef07c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "101c4c80-63f9-4a26-9d0d-819fabf4b97a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f75a1526-8433-4c89-953d-7eddb025723b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16769cac-721b-4014-a378-81bb0afa0028"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18e8bb0d-7050-4424-8251-f47bcd45bab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ec53ed6-564b-4a43-be24-c53bb6c4d7e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a5cf14-f331-49a1-a44e-12755141e517",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "551a6da8-7896-44c1-90d9-40afaf8c983a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59d5a69f-1755-4be5-a2c7-dea4e283b4bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8c2a683-3b2c-44fa-9b20-d666b8cf32b3"
            }
          }
        ]
      },
      {
        "id": "618ed80b-36cd-4ed7-b8eb-fc9afc0d6121",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "02e357b1-d1ac-4e74-a88d-4e72df72da2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb2f5e29-10ab-4f1a-b381-5bf0645d5489",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78edbb09-2522-4893-bb55-0d0ba319083c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aa613b-f99c-4470-b39b-e4eb03612721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9956e585-2061-4111-921e-4141958d02ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c5358a-cfa6-49ac-a32d-5904d8785870",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6630fa4-dfe9-4897-b9ba-d6800a336fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa34853-da0d-4dbc-9e97-c698562cd8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5303735-8de8-41f8-982b-d5809885ff28",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66b31d2-8532-4103-9217-ce21b4218cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e988ca-f97f-476e-82cc-a7f27e62420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0780868-2c25-42d2-8d33-b42f5a53116c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b51588-5fc4-4d8e-b2e7-9bd0379490a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4b6797-5e82-44f6-8eb3-bf64fedaf028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891590be-d58a-412a-aaf7-4bdee5ad1f67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9b21e1-bb85-4a19-91ff-8187f4b89e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1431919-d622-41dd-b0ff-63138628df3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f251f6-c0f5-40fd-a9e5-2fced63f4c29",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1651108f-640b-4138-a906-6b406a4a2b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb7227f-410e-41d8-a242-9934d0e22c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97808c6-91e5-4b52-bdee-8a71e18ebdf2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088bfba6-b76c-41a8-b606-46cdf6d53792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f676ee7-f9aa-4dc0-99e4-ae72be2c38f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae923a-68d6-48b2-bc37-b559de42f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47e5f1e-a2e2-435f-97f7-4a645d9d4dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb29556-1832-48be-9079-312a9e5cefca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5911db2f-1a77-49e6-bc81-82c9e625b71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9963e8dc-286d-4da6-b4ce-5e799f5a81bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e45272-e8f0-42d2-b320-ad3dc22feac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60baa0c-3dc6-4121-a64f-033b7dd0bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79a0194-64cb-4c44-b2a0-d4c947129e67",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44044dc-69b4-4f93-b9d0-05d3b027b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f440e0b7-f067-4a18-9f9c-34209cd406ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceda5c8-bd79-404a-b238-75b627fb3e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ddf202-e3c4-43bd-ae04-6789d74b5b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a702e2c-7c08-4bba-8035-46a929e9c37d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26ca388-311a-48d0-be98-356c99a344f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71937cf9-ea23-421f-8809-adc9a79d9b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232d87f-184d-4a91-ba52-4137aea70243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18b0ac6-2650-46ca-ac3d-b4beb55a872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3852a4-f9c1-49be-b6c4-bb1a1fa3e755",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b84f88e-64ea-4b14-b9e8-e1faab74d38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc884a29-7bb6-4355-9931-f74d7c9fbf02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e0d95a-a26b-4f32-a74b-1e3937329874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0f403f-14a2-4f7c-b239-3414e64aba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12275904-09a0-4ba5-8b99-1972d3907a49",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edcf7ca-7da6-4fc2-b592-5e3d2139153a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a49895-82e2-496d-bc42-154ab1aa9650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5e6d45-26ec-4162-932d-6ac3dcee58a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca1d0a4-d2f0-4d65-be56-c01e5f6c68b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78d0d07-44b4-4e7f-a9af-a2b2db1f3db4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f25b87-ddca-43cb-893b-e483c56f0ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5768745b-5e7c-4453-b0af-f71d4932b725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6325be-05ed-4b6e-b544-77e5c0f5d06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa4021a-c025-4676-ac68-1fd7964b11bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760eea9-4fff-4a3d-a92a-244cc12926f2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31444011-8449-465e-9480-ae1714027bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50176f5-bf9d-4ee8-a5ba-0a155af30b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b69cc57-c69b-449a-b147-c07ce16bdc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcbc198-9a11-477c-8b3f-6273514a0a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4713e4-0972-4b7b-85d2-d49b06442480",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac8bdc0-35f4-4ea1-ba6e-95a543cd8fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357f1476-74ec-4946-8f2b-c13242d13d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5840a48e-2519-4683-9e79-6dde6253bb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9961f229-f9d8-4e84-9853-ae0e824cdcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25570754-9ee4-42eb-b396-ce69fd46fa1c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f17abf-9454-4c0d-bbe1-8457d95d998d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f480c94a-1377-4336-8e0b-ebec9a5b9731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a89c4e-2659-48f3-8c70-bcb7c43862e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1c5c5d-f1fa-43a6-8927-10fb1b34f640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cdb2c4-6480-4647-94b4-82d709634eb1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0585af-de96-487c-9db2-76d0fa74c91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48c16c0-52ce-4289-a530-97ebbc1aab7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea35d34-b478-4aa7-ac5c-6a91d85d09da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755cc683-134f-4ae2-a491-40e7505fd487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bd71ce-d83f-4ede-9101-c7d5e567914c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb2525-8334-49f3-a795-901769767e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcbe18e-4555-402a-8ee0-6780504465a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500fa69c-507c-4a73-a852-d77a73933016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd9cb1b-5070-4fcc-8b86-f6625676dd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4b73f7-3db0-4ea3-bf99-1e39dd3cfa82",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541d1617-c512-49e4-883c-24c9fa887225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a29f134-ca8d-4516-8893-cac4b828fe2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e94bb8-5bbb-4a63-8863-b8bbfbbe3f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880aa72d-ad83-4c33-b990-793df91fd1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f06efaa-55ee-47f2-abb4-f00ebeaa7711",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef01cdb-f50f-49ac-bcb5-5fc0b4463d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88261d9-46c5-46e0-8192-2a588825fe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8c5131-518e-4f9b-84d2-685ba3bc4076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7a2c97-51f8-453d-9dc8-ef2742562e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c468836-950f-41b6-ad44-49f60609151b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd509a4-8363-41f0-8cca-a8d0ca7b6593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57347273-421f-43fe-91d5-1e069ddd12c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8aff240-ab12-495a-b573-ceb3dce020d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e38acd-45bc-4474-83f7-6ae8caf93d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d8db40-fb83-473a-8529-06f3ec66fb08",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514927ce-242d-4708-ad4a-166145cbab08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c841e8-6e08-45b5-8e6b-8c97addf0373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647447f-a78f-41fa-8359-b0bdf592debf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6311a239-80d0-43ec-99b7-6520d9fe38bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d1b66-9ef5-4b92-8766-8bd868796286",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a20802-42bb-492e-af21-1d30cbfa717c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645747f0-f59f-46e4-9752-81d2e92ce79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4ab1a1-8941-433e-9aea-a13c9ac231e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bedd3d8-afd9-439f-bf29-37a47b830b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231f7659-e744-4e63-9f57-968752c52a68",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae2c291-167e-4c84-9fa0-0b181fda8fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221b3f18-905b-4cea-8790-050f773aafdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e734ae-1f5e-491b-9120-b06b0dd59917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f8484-fd10-40db-9615-84c87e07f700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f54b1a5-9e12-4dda-a87b-87f054bbf3aa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a1fed-27a0-49c4-82c2-dd00b4fb8a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62a4b92a-0669-464d-aadb-a2c8664dedcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27941aec-5f4c-4e40-8615-07c3f582b844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e472af73-20c8-4882-af33-668e204b1373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa1ae24-36c3-489b-acc0-8adbae1bd59c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a7b01-6fbc-49b0-8ea5-4a371f7cb8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bae8a4-b94f-42f6-8702-6eb33154440d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb11ce8-257f-47fb-bf22-145193aba317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94bca49-fc40-44bd-83e9-a6f903ad85bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba045fcf-e18b-4b08-87d2-e3d1ca938135",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e4fb53-2ae0-4c42-bc32-7d7fd80769bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d4ae52-8e8b-4e4c-ad44-e6981364f29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515a32de-2a55-446b-96a3-3d6b17209293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eef38ec-0042-402a-8c4a-ae54d0c208ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9999e5c-bb07-4d6b-8992-7f460ea2b75e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac8c1a4-94ea-4b65-9244-1379129e3885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd3c0c3-cf28-4dae-9d82-a7039af24a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dae3cd-6a11-4be1-83ef-2e5a87cc17d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52436022-eae9-4f1d-a245-9da8fccbd42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac3411a-5409-475c-9509-ee2d4f019de8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaa0748-8841-44ac-a953-e51f8280fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef6a653-5667-4b27-9481-4e1118e35f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89026afc-9944-4fab-b91b-4d071faf1835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14673f06-e63c-4ba6-a076-25b19ecd990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01140df-7c98-423b-9b94-bb7c68a72512",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25072810-7841-402d-a050-62d97ffc39d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b49ca7-1dff-48f1-a94a-79007941da76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217774e4-83eb-41ea-a639-6babf02c6f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984a0617-27bd-4bc2-b5e2-fcd818780dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cd55bd-692b-4180-bff2-061842b9e742",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7050f9cd-bb5b-43cd-889d-eeeae228a218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "524e0c03-43cc-478e-bcb1-bdf5a2cf4eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799b58ab-52f4-4be5-ad10-bdae8e009209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dddb7b-2a88-47a2-a940-205f5e5e9d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed1f42c-5dd8-4874-b5c8-96aed2f4598d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0138e12c-41e4-4251-97f2-2eabe1fc0cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c78119-b7da-4045-bcca-54c634e4154a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd81501b-a8b2-41e6-b45b-65a952434afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1dc242d-5cef-464c-8143-f7e0d6d10d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66d7e4-7d69-47dc-b4af-58d33da2b2c7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0086cd8b-7fc3-4c1c-8ae0-6b14824c0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c4585c-8ba2-466d-b5ef-9584aa971472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c81391-6160-4f5b-893a-983b3136762a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d85d5dc-594a-45b7-af0c-574aac0c29d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d3e14f-6ed9-4b72-bdd6-5f780e35b1e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c9d4b5-ce57-4e90-923c-0d55c5cbdfb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a4b744-55ca-40f5-8f93-a8d86c13cde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9cfe29-e37e-4a92-91b9-3d0cddb0b93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6744c318-67a3-4eae-9a18-871a1259fd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c14f17-49ed-4b67-b2d9-4824d79121b4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01fd5f-c09f-4c4e-8ec3-bb814ca6e20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07907de7-e5c8-4252-bfc0-b603a9cba5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466c6239-39bc-46c2-81c8-e90e962db673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b982c9c-fabc-4d9f-aa84-fe9cde8b21a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edc2c0e-12b3-4433-b10d-1b4f8a7efa2f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8a9517-1544-4f01-8b8b-8fdf58431840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb28cb68-d02d-486e-b7d9-7bcf2ca6647b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d31e3e6-b0fb-44da-96ec-49fd8354ef7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddaa0202-9c88-4359-952e-9eb8ee152da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f323f-454c-4af2-9641-4031a370ab7b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda7fbf7-376c-4dce-91b9-2b4b6b8ac71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7bcf11-0eb7-476d-81c1-b3cc51df6600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da0f2b1-e153-4b42-8acd-7f9faa394a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee14ed9-248d-4925-b60c-e6729b5528fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7417ae37-9dc6-475d-8502-010f3acc1322",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc48776-8d81-4140-99f6-99e9173d8440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d9cd44-78bb-45cf-9821-2f04e1a28f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b399ffd-976c-4cfa-8e23-f4a36b2f4cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9c7b0a-a491-4598-8a35-347414c17098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70db801-602b-48ff-980a-3d8068c006ec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2569a4-e3ed-41bb-9726-4c1444dc22ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd41de5-d3ea-4c6f-8ece-85652328b268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c25ce1-f1fd-47ef-a6d0-ca65bea46cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb8bea-35db-42ae-8a3d-07e911182618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eec7d6-ec76-4837-ae54-7e65ce7b1031",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9dc61f-d193-4ba9-960f-33cea827480b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cb6ba5-c60d-4403-a80e-487960cf355d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd30a709-6a1d-43c9-bcc1-a40b4c00a58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb57b55-b8ae-4217-8c7e-d72faf166374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad99779-8023-4500-9f7c-5eee5cb35407",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b5a20c-f338-4faf-8ff5-ac1f19992ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b19a9fe-3ef0-49e3-b58b-bd51eeaa6ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3773d612-b574-49d0-82d6-171d1e884aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a32908-17d6-4fd8-971e-cc7ccdcbf019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4e9e3-e2f3-4bd6-bbc3-d9ed21806367",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41fc7db-2711-4f04-83b2-082214476e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313ee306-1166-4c23-a7db-36e7effe98bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a10aa6-9c4b-4fb4-8422-176bc0416d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732f42ad-a990-48ce-aebc-4eb425d4b94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ee4cc4-19c6-43fc-a537-55b66ee57648",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c73546-13ec-4e1d-99a4-7e2392952936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daae0d5f-f407-4044-b35d-67d11c5b91af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a04c8-4f07-4aa3-bb8a-7d5411c0fdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da16523-dca1-4517-b612-bf40b980390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4facf9-ab8b-4d88-a1f1-8ae476f7e7dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2245d10-a202-4f59-bcc2-f07df18e9d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b418a05-cb36-4eb7-b0f8-800f0ff7f53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0f0960-e3d6-4452-b1ac-d298320a572d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ff08d4-bc0c-4081-9128-b29509e97750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1f5e7d-5121-4c88-8273-999417ec4fd8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1ba8e0-841b-4785-9d8b-9be97d7d91e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8045e3-d55c-487e-99d0-0e0ce7820895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3bf87d-ccef-42a0-8240-1c6c338b6a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2793d9-c5b4-48c8-887b-72df220a67da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e164ef96-a289-44c1-86a5-108ac3ec714e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85334313-c34d-4aeb-9829-0eb885184636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1b9e23-10c8-4cd5-a210-0c492388e1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdd0767-83b0-4554-b3fa-2e0c5b1d71f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0192666c-42eb-4eea-b543-66520614b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2889b03-a867-433e-bb65-c49c655d1be8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4199f54-d7c0-4169-9ac5-738f59e8726d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaed9ff-fe80-4377-8f8f-9b4ba7747ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02edad7-9d37-4750-b99a-20dd8e1ebe90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6222c2f-0910-4c1b-b0af-b6543546d01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf64ead-ab22-4a04-b441-54d8ec534692",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b345ea2-c943-42b7-aabf-e8c694087634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836b3ad5-a72b-47ac-9dc9-c6f65c3a403a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc73169-f729-4800-9774-33f6c94af749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41480bb-acef-4121-8af3-467ce048251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e3bf8-ca70-4e3b-8e7f-5b0796b82ae0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71becceb-1d11-4d0a-9158-910913eae9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a9a6dc-9d68-4964-9d91-10a975597a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be99584-d870-430b-a6b3-314c5a340671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bec722-cb15-4c98-bdff-702fe9443099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defb4fd4-4896-45be-9d6a-0427a41f17d1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d162cbd-e5bc-484f-a8ae-eb0c51adade2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a0b339-0e24-428b-b247-a5327c5f8a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf30d482-9191-400f-9aaf-12a3bdb5f8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5920cb8e-6672-4b9a-8bec-294c03abeec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52fae30-50b1-4150-ba6d-26166ba54108",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d40cde-b71b-426c-8a48-f627e9298fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0cf9c4-08ba-4ba2-93a2-40f1d6f49ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8d4764-338a-48ca-bceb-c4e374418164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6f7125-a0f2-41d0-8f79-253e5f43d541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74116b4-cb2d-4d15-9f94-d0c2bec8b164",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc66a1c-6d4a-4d18-adfc-7566b0182e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6486e301-f412-4f53-b063-fa2434b26f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c6a061-b366-43d7-9ee8-e424a8d932e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6351bfe-f7a6-40ae-90b4-a6b1f7329a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0454a8b6-2b18-4d89-ad0f-50b4304c156b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc3c3c6-3eb1-4cfe-ba32-0e7d4158eb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e7d593-39f4-435f-b22b-92c34e6d47c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d2e98c-d69a-4cd7-9fb0-4ba2defef169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6756395-d1f3-4726-b6df-7feb7cc4d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5c92a0-26a5-4887-9a4e-d35c33978f68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f02a74-6ebf-40e6-931f-a33eb97c57f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a88073-8a4d-4f77-a44c-9c9e854f7567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299121b9-01f4-4716-8a92-202b7f225a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76425d8-a151-403e-9d12-5d733e115c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e69522d-ee15-4289-a336-5a6924892d1d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75b168c-5f04-4263-8b57-9bf48e5ac2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f9f0ef-ded7-4f98-8ad6-58073bbf8996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f193d2-a6a6-40da-a0db-3721730db945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fe8754-15bf-45dc-9f3f-e25cdebc4e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42622230-5b6d-4c4c-afd4-7d0e410a8686",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd1a1de-6f1e-4549-a96a-91f53c129545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363baa32-0de1-42c7-b17f-ddfcc934dd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80077d4-1116-4deb-8522-7e6aa94e5398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d88eea-73c2-40b0-af7e-8022d4e69434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3633edcb-1709-4bb6-b358-61bbb45c14be",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331cd805-94d4-4c3f-8dea-7f6a1cbcd289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59304d6-9569-44a3-8020-3e02b141ecb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244fd2fe-b92d-4615-b279-3e4bf11a3130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ac240d-4c70-4158-a87d-1fc36c1445e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c560f-fd20-4573-8597-a029b3513871",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9ace43-435e-4340-89c4-30fa9fc5954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12832cb0-15f0-4c0e-878f-0ea2ceff5b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753f410e-0dab-480e-925c-25bd27d01e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65635e79-426e-4d80-95c6-dc0f46105db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828f0001-0895-4afd-81ff-44471fa3e888",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8bb7be-2d71-404b-b08f-4c1a3f3d8097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7441fb46-8225-4d1e-b029-85d643e26a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bdb661-a1b9-4c24-a942-80673866f0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac2adde-e35d-4a6a-940f-63eb2eab2dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1af83-586b-42db-8953-642b66270703",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b7131b-54f3-44a7-8a08-d6d7ccb97b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a71f60f-1f4a-435a-9af1-fd559ab50496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c7c61a-5add-4d92-87a9-9d22c547e700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad82aee-0912-4a6b-969d-c71d93920d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dccd02-de9a-4b59-9b33-f0cc18c19e4b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638cbf89-cbfd-4ad5-995c-8d0c1f5be0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5330ebf-d0ae-401a-be36-8b4d37a942d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f55cd37-c5c7-4127-a1a9-1cfe26674e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fe2d64-69ac-47f1-81d8-45a2a6cd5125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c11189-13ec-4061-b167-52d09eeb537a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27671741-74d3-4d3d-ad68-cb371207f068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f4fa9d-044c-4973-8e1d-bcd8528296ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d518e5b-1be9-4ac6-baf0-a1282343c766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35441761-3e5c-4a9c-a7ad-bbaa73b94de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23795ad8-b3ba-48cd-8900-b5f5d0105708",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83333b38-d3af-4796-96a2-3202a769587b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2cf9cb-32f4-4718-9245-721e5f2ae2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b6defb-7b99-49f2-b258-d93bdbae5414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f15501-6c30-49da-955e-ff1dce8064ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4635ad-8245-4eb9-b802-1d00fe657fb8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000db90c-2e63-4bd8-847f-11ca8c5e1de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27422d72-766c-4224-8754-946ab728bdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3840aba7-4b0b-4d2b-bf70-b5d0b92abc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc93fe84-ae4c-4938-86f7-033037418224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f895f4-96ae-4634-937e-080de6c05cf3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecf1f8c-5df8-4e2c-8ed0-fe904ab49969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d468803-4f04-490b-b30c-9a20e1c2757b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac2b004-3e12-4538-966d-dfc7582d22e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6342572d-9538-4eb7-bec2-789eb40786dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da58f7f-3180-4833-8822-61188f1dbf94",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4b6557-137c-4898-8f4c-1cf6b9a5622e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dc3e0c-11aa-4796-be8d-fe640c47bb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874a610c-6edc-4e33-a654-13117f2bc9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54364faf-73a9-4e41-9a58-72bd8619da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a480d1a8-ebda-4a66-9c0e-e3db0dbcccc4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20484446-b010-4e86-a0aa-161e1b89f92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db51a513-4ac1-451f-88b8-5e9a12f3caa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583630e4-fa0d-41c7-bd8a-ec581068a51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb92c78-dd69-4d8b-9cbb-aba92b9d127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd78a126-f382-41d6-ae9e-9e89d4d36631",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb30905-9c49-46cd-b9e6-4591f3d1ce23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d49f659-7b84-478f-ab2e-baf2e7afcc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3298adfc-c83e-4351-8e9a-507125708df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757b8c78-96ed-47a3-93d2-cd25cc9b7939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec0094-7053-4053-a312-138be48db016",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017d5435-8a8c-469b-8bdb-ed4fa2218c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6b190f-8137-45c6-b88b-5439f81b5403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55442ed-a740-4f36-9ff1-b7a9d67c4c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1dc69c-59de-4105-8b3a-cde6e3724ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6dc605-9cbb-45d7-8a70-2c9247e66686",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd153d6-8639-497b-9e38-9b87c3817c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d74e78b-f863-4033-9a3a-62298ad60f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7f7fe0-9fdd-44c1-a656-3acc1afd2d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f987bc-2669-4b9c-bb52-737ae0bb5b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87089585-c36b-4165-9357-ea077aceec9f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1de508-4ef0-4dff-92fa-2cc0f94123d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba6cd3e-4b99-4298-b6cc-064e9609d2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0173aef6-9c73-4ccd-ab61-850841c88e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1980ea-7876-4956-b195-a3d2becbbc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9336b4c-96e2-451f-a500-debdcf047f2b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de307a-e0d3-403c-87b8-367b334937ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94533ab-a934-47c0-9efa-81a1177a1cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d11363e-5ace-48cd-9b97-77b2bcb8a295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f565dfbf-fe6b-4a5b-927f-5cbe82d0bfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6798947-5331-4464-94f5-645446222824",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0474720-a036-4b90-85f8-d8c30699650d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f182d6-fe2f-4551-ab7f-04bbf3a8a551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94d9775-5581-4535-a0cb-a8792f208564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d4d0f-8395-4a78-b88c-2771f2c1501b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e559d0-6925-4254-958a-d9a021497097",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8560813f-c35b-4f30-9c8d-245616536f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188473e2-4cb9-401c-84fb-bf0c7a9e1074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f9598-bf79-40f6-bb8a-d7b1d6b9ecaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba35098-d886-484d-9be7-221d98458e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a6906c-e6f4-42da-a92a-08e0e426b1cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e2e379-528b-42bd-a953-820dbee96bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55bdc6a8-18c9-44b7-8984-b4383a194c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054ce19-1552-4654-9acd-d6ce3328e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b75c08-3eb8-4008-9a0e-595045c07d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bfe46b-6f19-4508-9aed-f081ff24edda",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b087e4b-0732-43dc-9fc6-8cd60b21c64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f896a50-d65b-4642-9183-a2f9cbf3ab61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8697e27-d8d4-4aac-920b-b79777415470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9adcd2e-fb9d-4363-91bf-b431a63e5f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023fe044-6ada-497d-8c24-43233c20398b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4f47a7-da95-4919-b9d5-2ef0015213cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489a872c-bbd3-4823-b545-49f803001d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ee5325-8988-45a8-93a7-9a976825a0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f9a50f-e919-409b-9ad6-2d3808e93597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e65024-4cd9-4773-92c4-36cb09e6928f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ed77c-f28b-41d5-821b-05002b505622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d57eb5e-8fa9-427f-985f-95df096b8c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d38ff6f-db4e-4644-9442-09d4aef79072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3b8a72-5887-4d8b-bc8e-03b23e4c4954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c08c434-872c-4a2a-b89a-98cdde8e184d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd0098a-4696-41ec-bf69-099dbe2fbf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a81f0d9-d852-4e07-a98f-803b4301cd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a326a129-2a57-4a53-bf13-4d040df2f15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f135c0-e276-47a1-8821-784efadd78a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffde04e9-20bb-4e4d-be62-0bb62ade9c8e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba172b9-6c69-4f0f-b669-97228c84e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4349f31f-49a6-47bc-9be5-fcb6e96de1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b581a0-7dee-45ed-adef-d6fdbcb3bb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94270f92-2a4f-4855-b853-0c1f43ac80c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b9d14e-e006-4f86-b4f6-c69397446f08",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24752b68-4055-4aaf-a5cf-becf934fbd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327aedbb-b06c-4947-ae44-83ef14187d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dfbd45-c56a-4c24-9325-50949a9b3ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737742b7-1b16-47d0-a9dc-18f1292cecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499838b-ef19-4645-9502-11bf36492d95",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274953ac-7294-4755-8e53-688581c88d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6376713d-0d32-41c0-978c-36c259d59c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9cf828-0d96-4967-a995-f75cceb27bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1ee402-be6c-4c58-9025-8989b4b89cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7232c2-b090-4d4d-8a6d-1b3b6fc10d79",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f26d0cf-2ade-471c-8584-2601b0eb8c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7928e909-6550-43d2-b6b0-82459ce9f24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e503821-52b0-4962-9293-d3cc574e9c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852cb1f0-de4e-4adf-833d-1d661611b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da1adc4-64c2-4c75-b65d-6f215a93112c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e58d8e6-f738-452e-a452-c7e9e73fc429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06404f7-3f29-48fa-a511-d626a33808ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ecfd21-1255-49b9-8d15-ad2661201b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d353c09-43a5-4b13-a0e4-1a062cef6ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec502de-e0f2-4b40-b3c7-34b6cfda790e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc4e784-8550-44b1-bc65-19a70974ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7454823-a3f8-4cc3-935a-ce952ab682d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a8198b-32b4-45d8-8ed6-16c67815e215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548009d9-df23-4724-b99c-7accc590b211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157e2be9-99a3-4907-ab5e-87a2b24598f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66aa1d7-bb7e-420a-b3fc-f3daf3536b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12323b1f-c40d-495b-a3fb-28878d77da84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe329c88-595b-47ce-816d-9c735976ee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1815694c-7678-42e8-bee3-33664140f483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58b70a1-61ac-4c15-a9c0-fcc48e35557c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1607359-22fe-4cd1-95c2-4ca489dead44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676c2ff5-891a-4bcc-969a-2ef957075b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea369949-5178-414a-9fe0-581d30ffb15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86b4570-b4a0-4d46-a766-f37654ca78fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1ad005-be01-4b64-8e61-f32eee3839ed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d219014d-f092-48c8-8547-c346a9c7b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087214b9-cf38-4881-a799-a731cca45d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afafcd64-1f96-4247-95e7-8048fe28f0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc778c9-b06a-4417-8f28-edef9a644fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bc3401-54c0-4c15-a5fd-45839692d0d0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5914cd0-c438-4832-a295-07586e93f07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17dfeca5-3b54-4219-97d3-e63eb898a1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6f47a2-85fc-4052-b239-639802460355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c61c243-40b7-43bd-a05a-e175565e2178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d43b4d1-fd00-4b30-8502-c37a052b35d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035c824c-d97f-4d31-9430-b67fd5ef1fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aae6524-1b1b-474d-8dbc-1ade5012bb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb61f9a-0b7e-419d-9950-a38d8da5bc73",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9081b8c3-d07c-48b0-9fbd-8635eb61ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63e5f59-ccc1-4d86-affd-e6b006f01d76",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811d97a-fc6e-4c96-bc4d-5e56c62385aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c4cbfb-b430-4689-8970-2a73f4b9e066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf683e1-c89d-4102-a94f-0a433ac9bfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265ec027-4093-4f2a-a162-1d207fb42493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dbcea2-4dfd-439a-9b0c-f35de33cea17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24d873-757d-4e37-86c1-e2a1a8ae7370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef48bd8-8389-4306-b9b8-db501dc987ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013bf6f8-ee77-42f3-afa4-6e41a227ed68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea485a3-143d-4cad-927e-abede96561c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6a079f-a95f-489e-b8fd-dd29b180e751",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f0227-9f9c-447d-ba3a-d4334d4caaa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9158590f-c8e2-4def-847c-127c42bac0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b718e80-f8c9-4829-882d-50bfed2bd175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89e729-eb70-45c0-8a1a-48ba05ebcf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b5c1d5-e913-4e22-91c8-b24d7582f119",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b83111-4d36-4599-9214-f7ed44e89269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a79385e-1fa9-409c-b675-2263d72d49c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d529beb5-f8f8-490a-8bb2-34f21643ae1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95b7756-a29e-4946-b884-66bd58044fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf4d4a1-5417-45b9-9716-fe1f935196a7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603c3ffa-c4ea-40d0-b59d-e510ad4c5e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e477c9e-7885-430b-b755-6e13e9796a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19f7d64-c624-4775-84e8-03dec063aedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb6cf0c-354a-4138-9c4d-faf427e2e72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cbb0c4-1b08-4017-b338-e679cd36c84e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5303ef75-2e9d-4b8e-be49-bcab228cdc93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a637b6a-d0cc-4683-9ee6-6313aefa3c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed15d8-abf2-4cec-bb78-1ef2af7320f8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9b1385-daad-4243-b14a-c5690d11f756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ef2005-9564-4d6d-8e7f-5ce836822b5e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fea0ef-e37f-46e4-9e7c-47e171432a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74915cae-38c7-4d72-b12c-3eff1b9d43a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b8f491-474f-4958-aba4-c9ac7f572e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0427a5ea-c306-4d53-a799-5c80c28075f0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6357d1b7-0c3d-402c-ba1b-1b2eb1a9bb66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b915710c-3f37-4aef-b9d3-daecdeb94f53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f641774-1747-4969-8715-30e2a1574942",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2b2ce44-2732-4e56-8b1f-a2edbf4b03fa"
                    }
                  }
                ]
              },
              {
                "id": "f5d90fa8-1586-4a63-8711-0c1a88e5a115",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad93fc5b-16a9-4168-b16c-2a5c70626f66",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f570e1c-33e0-41ff-831a-07be18c592a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c74fe6bf-77ec-4ddb-b202-23fd50e1c086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da35b8-79e5-4621-be66-bdfca4ab1e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fcaa65e-4aaf-45c4-ab3f-29338ddf4531"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a7419c3-90ab-4d4d-9950-2555e8d4eb25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8757046d-9601-46a4-aa76-e2d35b708a9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faec06a8-a764-48cc-b3ce-f02391a377ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636ffb54-70e8-4756-a75a-a02402b15340"
                    }
                  }
                ]
              },
              {
                "id": "723a35cb-74f7-4104-89c0-715d8c6aa28b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9a35daca-62d7-4c4e-836d-1419a81d88fb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc260f3-2722-44ff-bc99-44ba8346da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "89d3604f-55a5-4ae0-b1f7-0fc75d5ec92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32752653-3564-4f40-a9f7-b3042b0b023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ffe092-33af-4de0-917c-6c22951eb05a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40f23efb-0809-41ff-92d2-b55a7805333a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ed03a3f-9039-4db8-b03a-fa0ddfbc249d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0730f8e-c50c-401a-943e-5cfb21ab11bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "186cebb7-fb6e-4f70-8901-2cd1fb954b4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff0926a-a4e9-471c-8757-9bb459128e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45320466-8731-4b33-8ffb-b1a9ff6da7dd"
                    }
                  }
                ]
              },
              {
                "id": "0d4d3b09-9c0c-41db-b968-825a96940c3c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "229fd1fd-ba10-49c3-8448-1effe2830505",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9e8a885-548e-41c4-b26b-867daa08294b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77625af9-78c1-45a9-bcb9-c61feaf9bdd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1a9c7d-48e3-4e4e-a6b6-5aee6d5e3a8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97fae6bd-8f76-439b-b957-a81949229b88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a50ccb1-4e77-45b6-b44a-18cc899b178c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "604acb72-b529-4e09-bfd7-d2d1254973fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30345c05-b004-43e3-9a19-a21a65a2fca2"
            }
          }
        ]
      },
      {
        "id": "59e1cd01-a5ec-4af4-9d9d-b9160c24876f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b037c89e-a92d-4ede-94a3-c92eef45ac89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36f111af-28a1-4c4c-b578-53b84d5a143e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5096a7de-cd1a-4102-bbb5-d2437e6320d6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f6fcc-2f07-49bb-a58e-dfa677dfdcab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1b4b2f0-be62-47e9-949c-615ace477aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c2fd8-ae48-4e29-a622-af788c85afcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b91012f7-b818-4e95-a722-ee0c52e08562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa40c76b-c020-4227-b317-687ba3ee410b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f26632fc-cc2c-48cf-8dd7-f7bd5b1d2d02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "535ba0f8-92c8-41eb-9dbc-ad88cc5d8ebc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffad68e-3c8c-4eba-8bb4-629d7e6880fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e2d0630-ff68-4d9b-ae7b-669a6243a8fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b6c33a93-2328-480d-afe1-2bea49f89f8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77b2bb0a-065e-4de6-b27f-60416cd08ca1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff98a87e-989c-4be2-8fa3-11c69ddcd75f"
            }
          }
        ]
      },
      {
        "id": "467bd18b-c766-4572-bb7d-ae90ce5b70f7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "91a04b30-69d2-4ee9-9576-1ec1d984aacb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "560aad33-d81c-46d6-acee-f09b21604ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25ea9dda-e026-4ce3-9a4d-fc12376b1511",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b27fbe-9a48-46f8-83af-85f69c57392a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5358b312-bbe4-4898-84d5-d1f09c9913ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7464e64-a0f7-4326-90fc-b89d06cd496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d13664c-c879-48dd-b801-eaa5ee19d44a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0f8ed48-dd6d-46f4-b101-31e34734dbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c773add3-33d9-476c-b4cc-c8c48a5994e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edde76d8-aaa9-4bfb-805f-149a6dcf5bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1433c523-2652-4c04-9c89-71660fb0bc35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c276fd9a-d7f3-430c-8a42-908b9e7b496a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05d90890-8c80-47ef-b7ad-263483b1c175"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31a7bafe-066c-4165-95cb-0d880d8d7842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb285a73-ff4d-4d3d-ba73-ad82bc132f84"
            }
          }
        ]
      },
      {
        "id": "c69c2eab-88bc-4cda-b4e9-f80284147a64",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0905f2d7-1104-4ef5-9062-84e57e02377f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1882c809-fe3d-4055-b74b-b550ffade175",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd2e67ab-3768-49c1-9e7a-857b033c25f6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b110e-b04c-4de7-a4a3-65ab153677c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "334f87a8-c6d5-4cf5-a90a-5de77d7b6901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ea982-1aaa-4fd4-9bb2-e8db67f6857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e101f103-2694-4b0f-ac9c-c0ea94c22b64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b24561a-7e00-4cc9-88be-56fbefcf26ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48071329-0968-4438-9180-1e56224b8932"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdef9b90-5ea3-42a0-8a86-f07f49a2d4d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b9394d-67ab-4ae5-bcae-9e07fcc22c67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15100ac9-6a72-4bc8-98e0-8d6282aa8e1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa468343-1a33-42b1-bf30-8e56d7a99e5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e480df5f-9617-48ce-be05-6e2b2f49bc8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5258fba6-ea90-4d8c-870b-5c35602f26a9"
            }
          }
        ]
      },
      {
        "id": "595a5f58-ec6b-4ccf-82d3-39967ac5dd21",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a040f295-f76e-4a8a-8fa9-2d243c91334a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc5e897f-8452-4b39-ac8a-456bd970da91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2955190f-9ca8-4ea5-85a6-4f9112bd6da5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7964032f-4044-465e-986d-39f3f272e01c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "795cedd6-deb1-40e5-b00d-940871003ee6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.87017543859649,
      "responseMin": 5,
      "responseMax": 2900,
      "responseSd": 342.1652324586442,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704414961294,
      "completed": 1704415002795
    },
    "executions": [
      {
        "id": "55b20504-5318-49d5-a69d-fd6be15e5a91",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3b7aa544-fd1f-44a9-88f1-043fe2631b4b",
          "httpRequestId": "03f23c12-a477-4a87-af19-52de0a72c768"
        },
        "item": {
          "id": "55b20504-5318-49d5-a69d-fd6be15e5a91",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c2741c02-38c2-46b4-8a88-8179d6f4c9cc",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "58b4aef9-84b3-49c4-8d4e-d7401972c410",
        "cursor": {
          "ref": "7100290b-7962-4e6c-9695-caa8491857fd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b6e455b8-f145-4f04-9567-692a7d4b7a0e"
        },
        "item": {
          "id": "58b4aef9-84b3-49c4-8d4e-d7401972c410",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "938ebbb3-2782-4cea-8f4e-08fe21c896af",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "7817d9a7-531f-48b7-8e5c-e29c1fc07d3b",
        "cursor": {
          "ref": "d79fdc08-1531-40ce-a27c-12c1cfa7abff",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2056cbd5-e92a-4ff4-919d-0067e0c8c2f5"
        },
        "item": {
          "id": "7817d9a7-531f-48b7-8e5c-e29c1fc07d3b",
          "name": "did_json"
        },
        "response": {
          "id": "1ec30d61-041a-4eab-9aa2-b111880cc4b6",
          "status": "OK",
          "code": 200,
          "responseTime": 685,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd689a2-270e-45a4-a0bb-6f5ca3e9c975",
        "cursor": {
          "ref": "53e922f7-74ca-434f-9d8b-8e0ba5a46486",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02d27055-fe7b-490a-b05c-0f89ee4c1846"
        },
        "item": {
          "id": "cbd689a2-270e-45a4-a0bb-6f5ca3e9c975",
          "name": "did:invalid"
        },
        "response": {
          "id": "67dd765f-b07b-4bba-a33c-580ce2082e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd689a2-270e-45a4-a0bb-6f5ca3e9c975",
        "cursor": {
          "ref": "53e922f7-74ca-434f-9d8b-8e0ba5a46486",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02d27055-fe7b-490a-b05c-0f89ee4c1846"
        },
        "item": {
          "id": "cbd689a2-270e-45a4-a0bb-6f5ca3e9c975",
          "name": "did:invalid"
        },
        "response": {
          "id": "67dd765f-b07b-4bba-a33c-580ce2082e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eedb56-32c4-4756-aa82-b7a057d68f0b",
        "cursor": {
          "ref": "22bf2ae9-4dab-4abe-8189-7c67416f68d6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "675b50c1-063b-497d-a295-fff5afbc4889"
        },
        "item": {
          "id": "b4eedb56-32c4-4756-aa82-b7a057d68f0b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "944adf51-ad84-408a-bac5-1b5134c25f91",
          "status": "Not Found",
          "code": 404,
          "responseTime": 129,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5b8d3b-8fdc-4452-a5a0-8917610df0da",
        "cursor": {
          "ref": "17612026-2201-4497-9209-f2efe8db62bd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e41ba5d-a60d-479b-949e-9af022666239"
        },
        "item": {
          "id": "dd5b8d3b-8fdc-4452-a5a0-8917610df0da",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "69906fff-0f1a-4f92-aa4a-9d4454fc7333",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb20c18-917d-439a-beab-3db525000c03",
        "cursor": {
          "ref": "0b239231-e6b3-40e5-bb30-ac46b858babc",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01ab3ed6-7cf9-4796-a59b-052a5aa29221"
        },
        "item": {
          "id": "9bb20c18-917d-439a-beab-3db525000c03",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "019d1fe0-7fda-4400-9b4f-2119d63ce9ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826e9209-be13-4467-815b-1734992cfc2d",
        "cursor": {
          "ref": "e517ba18-2e4d-4b39-9029-1f3968dabcd2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ffb6312-c036-4fc9-aff4-16e888855083"
        },
        "item": {
          "id": "826e9209-be13-4467-815b-1734992cfc2d",
          "name": "identifiers"
        },
        "response": {
          "id": "2f51be82-a73d-467e-bf32-eda1f25f3f40",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a527276-81cd-4631-8596-dd713ed89420",
        "cursor": {
          "ref": "89d739db-ec9b-427c-89a0-395f7dfa2da9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9080cbed-083e-4792-a9c6-0e2c86147f47"
        },
        "item": {
          "id": "9a527276-81cd-4631-8596-dd713ed89420",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "980fa2b5-c351-4598-a2fd-abad092597c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fd4984-72b1-46a3-a434-68a14c90156f",
        "cursor": {
          "ref": "c4f50537-3527-48e8-adfe-393edbd12aaa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "96aae97e-d69e-43e6-8e37-d0531ce1a907"
        },
        "item": {
          "id": "36fd4984-72b1-46a3-a434-68a14c90156f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7e159c33-5795-4669-8e18-dca40b603958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7cf851-671f-4ab6-aea3-2a83d45eff4d",
        "cursor": {
          "ref": "d714db31-d447-41a0-86aa-6bd28921f6d6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e3a34d21-1166-4706-9c74-39ecafaa74cb"
        },
        "item": {
          "id": "0d7cf851-671f-4ab6-aea3-2a83d45eff4d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "77278855-5199-4a59-9cd2-344c77d187bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47b0a35-a1ad-4d4e-a5e6-1c8f491fbdbd",
        "cursor": {
          "ref": "bd03e0c6-d11b-4c82-9247-f36309dfa2ee",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b58fab70-1cd6-4e21-9c02-d98207fcfe90"
        },
        "item": {
          "id": "b47b0a35-a1ad-4d4e-a5e6-1c8f491fbdbd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a289fe5-a996-479c-abe1-f536d363be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9484ba03-9507-4de0-ab20-ef47e5567833",
        "cursor": {
          "ref": "af304b67-a991-4bba-9c8e-d281389061f9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09e8439b-8b37-46ef-ad7c-b238ead8dbef"
        },
        "item": {
          "id": "9484ba03-9507-4de0-ab20-ef47e5567833",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "82037739-12dd-4baf-ab68-ae7f76a04ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b6ae70-2fc8-433c-b74c-26ee367b7111",
        "cursor": {
          "ref": "db896378-e5dd-47ff-8959-784ec9bc3e4e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "534af778-b1ba-4732-a7cd-ebef7994693a"
        },
        "item": {
          "id": "05b6ae70-2fc8-433c-b74c-26ee367b7111",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "85f9786b-50d7-4450-ab42-d58b0b73da5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03faddb-9bf8-4ce7-ae65-05ba184c6043",
        "cursor": {
          "ref": "c50f060e-b22f-408d-959d-02a694bac60b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "55e32ce8-9005-4fad-9584-058a1a7dbf12"
        },
        "item": {
          "id": "b03faddb-9bf8-4ce7-ae65-05ba184c6043",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b53676e-19ff-480d-955e-857ab7338c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a277d86-efe7-44e5-a001-9f6101be7f0b",
        "cursor": {
          "ref": "81f030aa-1034-488e-9011-0e1fa006d53f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "40f86858-cc49-42c0-ae31-e25d76effb3a"
        },
        "item": {
          "id": "9a277d86-efe7-44e5-a001-9f6101be7f0b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f1959ccb-2149-4a1d-99a1-3287226c47ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31306c8c-8e68-4386-9c51-e7c0e045b95d",
        "cursor": {
          "ref": "974fff09-737c-4fa8-be9a-1a278b6d195b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "62aa690e-fea7-4702-9fbc-dcba99f54d93"
        },
        "item": {
          "id": "31306c8c-8e68-4386-9c51-e7c0e045b95d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7c9a342f-3223-46e0-bd06-69a3a213bb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417aed7-4d25-42fc-82e1-3990f5f9cfb6",
        "cursor": {
          "ref": "a8634b4d-6418-405e-98b4-0e7f79d6b9a2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6f8c6a7a-ba3e-4ab7-8cbe-2412f27c9092"
        },
        "item": {
          "id": "8417aed7-4d25-42fc-82e1-3990f5f9cfb6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "086bd3ad-b24c-496e-8ad2-7b336cbca45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc70975f-8c0d-4cf7-a1ff-227bac512d01",
        "cursor": {
          "ref": "4ec1cd95-16bd-411e-801b-d57fb0517698",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1c851f58-2e43-4daf-9d84-6aa52a084f87"
        },
        "item": {
          "id": "cc70975f-8c0d-4cf7-a1ff-227bac512d01",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8bf3d603-bda2-4e89-b351-4176253bc52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d603ff-62c3-4ad7-af4f-f26f42ce6a44",
        "cursor": {
          "ref": "d207e103-32d3-430a-897e-681f6f8bd9e2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e3790bb9-4003-4f48-a92d-3143c00d1eed"
        },
        "item": {
          "id": "20d603ff-62c3-4ad7-af4f-f26f42ce6a44",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "58678b22-fa61-4123-999a-dc53138d2cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81ced7b-a302-4b91-8e01-5800c3f78422",
        "cursor": {
          "ref": "04bc41f1-2930-44b0-9983-da2cbec0a536",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "319ec5f3-0dcd-4ca0-a4f9-3ce2fdd9c499"
        },
        "item": {
          "id": "f81ced7b-a302-4b91-8e01-5800c3f78422",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9baf2c90-c507-4e6c-b194-983bdeabca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c411b3-9b4b-476b-bae4-c50e0ff497d8",
        "cursor": {
          "ref": "f205e02c-594a-480b-a54d-e449fa8f08c9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c4b07004-efbf-4445-9557-0e4a55640b14"
        },
        "item": {
          "id": "a4c411b3-9b4b-476b-bae4-c50e0ff497d8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b8217ef-3d96-4ad2-a27b-d0c82f9272c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d0250-0ec4-479b-8323-8aed91085e12",
        "cursor": {
          "ref": "ddbb82c5-ceb1-4e16-99ab-fac7b87ed58f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f87cd022-7dfd-41ac-8202-fd5a2896e567"
        },
        "item": {
          "id": "b86d0250-0ec4-479b-8323-8aed91085e12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fe10b043-46bb-4458-abd1-9f56dcf718ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8bc496-324e-411c-8511-d60ec0983f70",
        "cursor": {
          "ref": "d88fed1e-e0cf-4f2b-bed5-15b0d2a7a69c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eac02d07-f365-4af9-8162-21563b6bf77c"
        },
        "item": {
          "id": "8d8bc496-324e-411c-8511-d60ec0983f70",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b5d38f2-68b8-4f84-b80a-f1fba51261b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86257ef-1d89-4d41-8637-27e94d4ec092",
        "cursor": {
          "ref": "5e9da554-f763-4008-9217-86135ea02d7c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5ce2bbf0-1e3c-460e-8ac2-10b0d9297b2a"
        },
        "item": {
          "id": "d86257ef-1d89-4d41-8637-27e94d4ec092",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f7967f1-c831-40fc-8659-c42bcdf032f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d66b818-d532-402d-a522-d9f0c3a02408",
        "cursor": {
          "ref": "f83e7d96-6940-4d3e-9cbd-532fbfbc35b6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bf4fd0e8-ef1f-4d27-b2c5-68672a4d3f8b"
        },
        "item": {
          "id": "7d66b818-d532-402d-a522-d9f0c3a02408",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "81adcf7c-72ea-4379-90f1-2ed8aca5bfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51a8324-635c-4422-b8b9-920a2b0129f4",
        "cursor": {
          "ref": "53541acf-aafb-442a-8b20-30518d57a63f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "78860ee4-c8d3-4bfe-94a5-46b31c8d87f9"
        },
        "item": {
          "id": "c51a8324-635c-4422-b8b9-920a2b0129f4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1be5906d-de3a-4441-b7cf-93f7ca7c91c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616339b3-9d52-4973-94a9-fd80be1dbcd9",
        "cursor": {
          "ref": "f599abb6-af86-43bf-b81e-fc440cc7a04e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7e32d209-a0cf-4910-96f2-6e160e8258b5"
        },
        "item": {
          "id": "616339b3-9d52-4973-94a9-fd80be1dbcd9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d995d9fe-a522-4947-ae3c-3b61f07eb9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51335eb6-244d-4095-9fa5-320726119329",
        "cursor": {
          "ref": "11d0a96f-b8c4-4d9f-842a-d0d977f3cba2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ceff6ca3-5d7a-4906-8a41-bd589298697d"
        },
        "item": {
          "id": "51335eb6-244d-4095-9fa5-320726119329",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6e85fe17-200e-4016-b9d8-ef79be2e8d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed1da70-e5bc-4b2a-9865-e97f616ca892",
        "cursor": {
          "ref": "251ff6f7-4837-47e7-8800-07e6d484bf35",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f1936942-f826-4f56-ad64-6bfd2fb8bdc5"
        },
        "item": {
          "id": "5ed1da70-e5bc-4b2a-9865-e97f616ca892",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "333aeeb5-d601-4dc1-9c29-819d9bc35dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d6e601-1b98-47b9-879e-4c9be007ab04",
        "cursor": {
          "ref": "accb83c6-85b6-44d0-b0dc-c302e416fa4c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "94624a51-6b9e-48c0-bf96-6b1586885795"
        },
        "item": {
          "id": "e7d6e601-1b98-47b9-879e-4c9be007ab04",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7ac90165-2250-4362-89ee-e88992a89a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae92254f-6ce7-4dc2-bf8a-fffbb94bf1cb",
        "cursor": {
          "ref": "26c716b0-24d8-4f1b-be6e-15e615f5b48c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d8a7bca-6b28-48d1-b638-50f416393784"
        },
        "item": {
          "id": "ae92254f-6ce7-4dc2-bf8a-fffbb94bf1cb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "15719949-ff9c-47e8-aaf9-52d9a513bcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdfa627-7282-41c4-ac5c-0ac8cb78db2f",
        "cursor": {
          "ref": "5d56f1be-5c57-4bfd-884a-1d4afafe6d0f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0f15cad5-7ff7-4214-8eda-45fbcd060b3c"
        },
        "item": {
          "id": "5cdfa627-7282-41c4-ac5c-0ac8cb78db2f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f9809be1-f712-429f-85be-ce1e904a60a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da5cd5-0709-4335-a003-068d5cc9cf14",
        "cursor": {
          "ref": "fc83a70e-b919-42b8-be5d-4c6941bb89ac",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c9d73145-97e9-4001-85c4-330ac3b5d5c1"
        },
        "item": {
          "id": "67da5cd5-0709-4335-a003-068d5cc9cf14",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "58071a43-06b9-49b3-9b58-734e30c11c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4644258-19b9-464b-aa22-8f9eaa3e9b68",
        "cursor": {
          "ref": "96583600-ad09-4169-9176-1b9861af9d42",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fb1c14d9-94af-42d8-9321-029712489717"
        },
        "item": {
          "id": "d4644258-19b9-464b-aa22-8f9eaa3e9b68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d28eb67-5af8-45e8-a634-75c789299577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac7e088-3fc8-43e1-bcbd-a5f513a94bfa",
        "cursor": {
          "ref": "a3999de0-2424-461f-b895-2f8300367de4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a75e1cd2-2d43-4097-b9d3-1cc8c8366a9d"
        },
        "item": {
          "id": "2ac7e088-3fc8-43e1-bcbd-a5f513a94bfa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "35e872ad-064b-427c-ac5a-7bde894dee77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9956319-3fa7-4f78-aad8-af723033ff5f",
        "cursor": {
          "ref": "ccd600bb-d915-48a2-9cda-1d978d85ebfa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ab85cebd-29a8-4b07-b32e-de0aca8bbe9b"
        },
        "item": {
          "id": "f9956319-3fa7-4f78-aad8-af723033ff5f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d35ee68-7a25-4e74-892e-999b8f0a9262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15bdba2-a56c-4342-bd48-ba9331b334f5",
        "cursor": {
          "ref": "fc2ebb5b-fe42-4912-bb02-ce26cc49d2c3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "75659918-56fc-42b9-9b44-b0320ae65653"
        },
        "item": {
          "id": "b15bdba2-a56c-4342-bd48-ba9331b334f5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ff32f623-10db-448d-922b-a26678e64d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a01a99-2cf3-4de1-978a-c5bf27e69dd1",
        "cursor": {
          "ref": "cab9e315-ceb6-4e9f-bddd-b2e6b3165800",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "75b9c10b-1693-4ee0-b704-2b72682359ce"
        },
        "item": {
          "id": "60a01a99-2cf3-4de1-978a-c5bf27e69dd1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "178ff5d2-c37f-409d-973f-c8c24d581b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb994d3b-c3ee-4908-946b-013430e02f14",
        "cursor": {
          "ref": "5dadc883-dcdc-406d-8934-435a07dbc501",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "adf26d44-840b-48a3-a561-22688aa3b7cc"
        },
        "item": {
          "id": "fb994d3b-c3ee-4908-946b-013430e02f14",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5163c608-1f06-445d-971b-2df01266165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deabfceb-e2dc-458a-be65-2975486e6165",
        "cursor": {
          "ref": "a4f6899a-0296-407d-b04d-12714a504f64",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d7407df6-12b7-41e2-a90a-fec2b8a7cb8f"
        },
        "item": {
          "id": "deabfceb-e2dc-458a-be65-2975486e6165",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "af2819e9-1b49-4763-8fc5-38d283134db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c293ad5-2f29-4a3c-a682-fd85f52b5c27",
        "cursor": {
          "ref": "cc673c6f-a4fb-4abf-b3e1-ec9c5313a1fd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "571edfb6-7263-4268-bbee-77c34c491c96"
        },
        "item": {
          "id": "3c293ad5-2f29-4a3c-a682-fd85f52b5c27",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e60743bd-8028-4c17-b90e-6d76714cf309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fdfdb6-6922-4572-acbf-dc69ab14db57",
        "cursor": {
          "ref": "6eaadbc4-6f19-4042-98e1-a3522bca8faa",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1aabb23f-cfb9-4ec1-b111-a49baf43b3ff"
        },
        "item": {
          "id": "75fdfdb6-6922-4572-acbf-dc69ab14db57",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bb170601-4bdf-4b53-8d81-02a9259741ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3122701-291f-4761-ba98-37b5c41286c0",
        "cursor": {
          "ref": "6a0367e9-8f66-4a94-82ee-444d5d3d8e60",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0cb4e96e-6776-4dba-91b7-94b9668af22e"
        },
        "item": {
          "id": "e3122701-291f-4761-ba98-37b5c41286c0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8892f037-84ca-412f-a44b-aa0591b82d28",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 334,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758e9b8c-65f6-4b68-bf78-4c362092c8de",
        "cursor": {
          "ref": "b6e58f70-07b9-42ef-ada8-46ab2ddea168",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d96aeb84-625d-41d6-885e-b353de4322d0"
        },
        "item": {
          "id": "758e9b8c-65f6-4b68-bf78-4c362092c8de",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "621cc6d4-85d5-43a4-a33d-4d1b6c331e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c53d2-147d-4879-a1c5-47a22ca1ee41",
        "cursor": {
          "ref": "2ca79e04-5f4b-40d3-a1b7-538069f9f982",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ea87d250-46c6-473d-bce6-e1b4b5aa3a18"
        },
        "item": {
          "id": "eb6c53d2-147d-4879-a1c5-47a22ca1ee41",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20d78e95-380b-45d7-bb46-2ce2caf6d742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1212cd98-3228-44c9-afba-1a5475ba469f",
        "cursor": {
          "ref": "b749ff2a-a7d0-46ff-9316-4af69641c0e1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "62b3f43d-588b-4078-b239-41cfd1b0b973"
        },
        "item": {
          "id": "1212cd98-3228-44c9-afba-1a5475ba469f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "120834ec-8820-4954-b716-e3620ec94699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aea8ad0-352e-42a7-aa50-cd5da46f5dc4",
        "cursor": {
          "ref": "6fda780c-cd32-4eff-96ac-593763456ed2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "434fdd6c-d7c3-4940-894c-cc33334faa4a"
        },
        "item": {
          "id": "1aea8ad0-352e-42a7-aa50-cd5da46f5dc4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0ac12ac6-1d73-4fb9-a310-c7a0525b9bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202f6d41-2f4b-48ae-9699-b9dbc29341ce",
        "cursor": {
          "ref": "e0d52aa5-952b-45ec-aaeb-67ff175b3f6a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "293b04d7-6e17-4de0-99be-fd2b39f3af83"
        },
        "item": {
          "id": "202f6d41-2f4b-48ae-9699-b9dbc29341ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2d3e69de-83eb-4ec5-ba2f-4e40028038f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a988b5f-e414-4221-bbff-b70faae79f7e",
        "cursor": {
          "ref": "693b4f2e-315d-427e-8ff0-45aeef1030b2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8f4e95d3-8474-4ee6-9b8c-39471cd643e8"
        },
        "item": {
          "id": "0a988b5f-e414-4221-bbff-b70faae79f7e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "69dcdf83-bc94-4463-9d6e-ef20d9d5e626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221c7747-aee0-4560-8934-a4df6d85067c",
        "cursor": {
          "ref": "00bb756c-3b9a-43f5-bb55-7cd2262a4612",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66b7ee55-6719-42d6-8b0e-b59a6aeaefb7"
        },
        "item": {
          "id": "221c7747-aee0-4560-8934-a4df6d85067c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2fc95ba-4ee7-484f-9501-50635090d713",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 321,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f57e27-708f-4640-bd13-6082a5b0891b",
        "cursor": {
          "ref": "695e4004-c61c-4189-a76c-e094ba3851be",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d30e3214-f2f6-4850-b0c9-71367c9aa9a6"
        },
        "item": {
          "id": "23f57e27-708f-4640-bd13-6082a5b0891b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9fbf3944-b0d1-44f8-b9d7-2770fc67bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac11d94b-2c98-4c22-b13a-e3d2683620e4",
        "cursor": {
          "ref": "7c75305b-0949-4124-a2ef-a98b6e25ca38",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d0ba18cc-62d1-48d6-85c1-5b4fdbe1aea4"
        },
        "item": {
          "id": "ac11d94b-2c98-4c22-b13a-e3d2683620e4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0124d6b8-da3b-4048-9192-543ef5b33ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61acd43-f3bf-472d-ba6b-68d10f0641ba",
        "cursor": {
          "ref": "cc02b2d8-bc12-44af-8af5-f6b5f5cd3a18",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b6f7e50a-da5e-481b-b56f-67c1fc73e88e"
        },
        "item": {
          "id": "d61acd43-f3bf-472d-ba6b-68d10f0641ba",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8e531a89-3608-432e-983e-304e1001a372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb06bdb-5afa-4442-9abc-17774b7c7f41",
        "cursor": {
          "ref": "ddfdd95c-01d0-421a-bc43-b75ceceb6404",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9a57e99c-a1c6-4dbd-97e4-40c0fe6764dd"
        },
        "item": {
          "id": "5fb06bdb-5afa-4442-9abc-17774b7c7f41",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "abb4f487-5019-4ba0-ba8c-b55389f4c148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e97e958-a1a5-4944-ae8d-42feb2603f8c",
        "cursor": {
          "ref": "09853e50-db08-4247-831c-6997733f78b8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e73964a-c67e-40b0-9e05-863ea78449d4"
        },
        "item": {
          "id": "2e97e958-a1a5-4944-ae8d-42feb2603f8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7d1f1a2c-f1b9-4d26-bb1a-62ee67535061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6369cb0e-1bca-4542-be2c-2c676884090c",
        "cursor": {
          "ref": "ae9203ba-2b7f-4cf0-96de-973b62ec680d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fc49aacb-353f-4349-bb50-d490f8b64de5"
        },
        "item": {
          "id": "6369cb0e-1bca-4542-be2c-2c676884090c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1fb98c9-f153-4ac7-ba1c-c8b0c3cf3287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e886f0a-ea2e-4672-b823-006995c605ca",
        "cursor": {
          "ref": "d92c51e0-da1d-49f8-b994-8bb9d137e63e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ecbbb305-69d7-4853-b8d2-014509eab0d1"
        },
        "item": {
          "id": "5e886f0a-ea2e-4672-b823-006995c605ca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a201f737-2b32-4915-89fa-0574a3474000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf88b42a-2c8f-4ade-aec8-1fd8add13e99",
        "cursor": {
          "ref": "3a2a6b4f-7e3f-4238-aa87-469e7dbf141c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "848f216a-3a0e-45d9-9935-922bd9866cc5"
        },
        "item": {
          "id": "cf88b42a-2c8f-4ade-aec8-1fd8add13e99",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6c0c43b1-f719-44dd-8a6b-6d9544241e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620debb8-e184-4eb2-8c15-7710e27f3e5f",
        "cursor": {
          "ref": "536ff005-7807-400b-b805-f2ff2e07a6b2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "340872da-c22b-45c4-b188-6f26bd1e6fd5"
        },
        "item": {
          "id": "620debb8-e184-4eb2-8c15-7710e27f3e5f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "59e263bc-e864-46c1-8730-87d04a660126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b4bdf8-c0a3-492b-8ad1-5d2e0dffd51d",
        "cursor": {
          "ref": "ec25011d-cbe4-4820-983b-46cf94c764ec",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4dc937ce-3b14-44c2-b68c-94fe3ffa947d"
        },
        "item": {
          "id": "58b4bdf8-c0a3-492b-8ad1-5d2e0dffd51d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "91670ab1-4eab-4893-b4bc-0838bc86a59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a51f83-2272-4780-b286-a1646c6c11eb",
        "cursor": {
          "ref": "486972e9-e6d0-4438-bbc8-66d9614f4d2e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "55103ccf-28ad-4ca8-9108-a317fce2c504"
        },
        "item": {
          "id": "57a51f83-2272-4780-b286-a1646c6c11eb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dbead73d-d6c6-4392-997f-67d506b17ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d72f6-faae-4ef6-a4ae-4f494d757c07",
        "cursor": {
          "ref": "0d6f4058-7e6b-4065-a832-4d12c2c1ed2f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5a575a62-cae1-42eb-8e58-148f7e09f989"
        },
        "item": {
          "id": "eb9d72f6-faae-4ef6-a4ae-4f494d757c07",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b1fca49e-5888-4b1e-96f7-325bfaa858f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a8902-c2a6-409e-9798-44c7957c8d44",
        "cursor": {
          "ref": "65523f3f-4151-4e36-aa61-4547e0429f6b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2091c4a2-ec96-4227-852c-1678efde9027"
        },
        "item": {
          "id": "f53a8902-c2a6-409e-9798-44c7957c8d44",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bd6462f3-1ee7-48e0-9c33-c54d22a17490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4dabcc-eab9-48b2-be6b-b234641e1e05",
        "cursor": {
          "ref": "3b7b53ef-2dee-4d19-8214-8db96587424b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "40fe2482-25d4-4424-ac8f-6da447db88b8"
        },
        "item": {
          "id": "ad4dabcc-eab9-48b2-be6b-b234641e1e05",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7460343c-7fe2-4c3e-8d66-330b463f081d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f773b66-4b76-4124-8469-0b2b0860c6a7",
        "cursor": {
          "ref": "50f297c4-148b-4463-a6aa-d220c528f04b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "edb76aa3-02fb-4dbd-ab99-d92142574144"
        },
        "item": {
          "id": "0f773b66-4b76-4124-8469-0b2b0860c6a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7406a351-ce22-444b-9fac-fd9cef621f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a80a5-4aea-49e0-8fcd-a71e2c6d577c",
        "cursor": {
          "ref": "43d4c32c-d58d-4339-97fb-5ed763b23fb7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8c816f8c-9849-4e6e-a95a-bb639d59c745"
        },
        "item": {
          "id": "789a80a5-4aea-49e0-8fcd-a71e2c6d577c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d6f5ac1d-fe16-4fe4-934d-f14b026cd175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce67d88-b6f5-4ae3-8e84-2d244ccf72ad",
        "cursor": {
          "ref": "d0d7e27e-efb6-44db-afe1-d085ebf76bbb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d05f5fd3-ae09-48f4-82c4-ca8613f0fcec"
        },
        "item": {
          "id": "cce67d88-b6f5-4ae3-8e84-2d244ccf72ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "19831467-ee7d-4b97-bc56-0b9075d451ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a39cd2b-e117-4c94-b7e3-9062bed26810",
        "cursor": {
          "ref": "6b551372-5587-4226-b320-098f68694632",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e5a08767-223c-4fc4-9ba4-81559e191fcb"
        },
        "item": {
          "id": "4a39cd2b-e117-4c94-b7e3-9062bed26810",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ec2fadd6-3e35-4087-9690-3aa43c5a5554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3e00ee-89e8-4e3a-b7e6-f67b694a9429",
        "cursor": {
          "ref": "a02af9d3-f5a4-4625-8db2-adc419666486",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "31927892-d475-4d39-8d48-a45232c9d4c0"
        },
        "item": {
          "id": "df3e00ee-89e8-4e3a-b7e6-f67b694a9429",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "beb653e7-6670-4188-91bd-9755a991243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4904a17-c23f-45b0-980e-71910fddd0ed",
        "cursor": {
          "ref": "c3396ca5-fb0b-4479-884f-48d404b66287",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "74af38c5-27f3-475a-8e98-d7688d6b64a7"
        },
        "item": {
          "id": "e4904a17-c23f-45b0-980e-71910fddd0ed",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d37217e5-0f88-468a-905b-112f6dfbe1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f622f6d2-b63d-4257-a98e-949cd478d3c5",
        "cursor": {
          "ref": "bd4a9226-2148-4739-8658-a5e0d08a8624",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "154c2686-9da8-44de-ba18-f0bd37ed8b1f"
        },
        "item": {
          "id": "f622f6d2-b63d-4257-a98e-949cd478d3c5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1dba7327-880b-493d-b9d7-8b702eb0e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1606da8b-e931-43ba-886d-2afd792d197c",
        "cursor": {
          "ref": "5c158398-b223-4b8e-bf44-534a1b314f96",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e1909983-47ad-42ce-8ce9-3ca6600623cd"
        },
        "item": {
          "id": "1606da8b-e931-43ba-886d-2afd792d197c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7d1e537a-634a-44f7-92d4-bcb0782dd3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa2911f-f9c6-44db-9ab7-1a95018d7e66",
        "cursor": {
          "ref": "7b29d530-9bfb-4a50-97c9-2bea8db73b01",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "295dca5f-499a-4b57-b081-7ccae6a78714"
        },
        "item": {
          "id": "3fa2911f-f9c6-44db-9ab7-1a95018d7e66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "94d806f9-13c4-4409-b259-c30c62f0e0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09250699-8521-4b57-b149-157a7a9f5a53",
        "cursor": {
          "ref": "ebb3fb11-adba-495b-b95c-de8647cf6e60",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4ae0d4eb-d5a2-408f-8296-651b34a90251"
        },
        "item": {
          "id": "09250699-8521-4b57-b149-157a7a9f5a53",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1dca32f7-f06d-4248-9883-24679f3e5bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead26903-9864-496c-b63d-250e59074942",
        "cursor": {
          "ref": "2313ddde-22c7-427f-b51c-d9a5f96a6c47",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe92d99f-d8a5-42e3-a2d5-b3a03d8ef6fa"
        },
        "item": {
          "id": "ead26903-9864-496c-b63d-250e59074942",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eef32a9e-fab8-4ddc-8d71-93c3aa106760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3202a7b5-9477-4f60-a4b7-fabe8cde0d08",
        "cursor": {
          "ref": "443de85d-fd46-4c64-8e94-44942ac0cbc4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5692ffea-d291-43fc-84b3-b8757ecddcbb"
        },
        "item": {
          "id": "3202a7b5-9477-4f60-a4b7-fabe8cde0d08",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ccf76cc-e298-4567-b0ca-4ebd2456e999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32371536-b458-4e3f-9de2-255a489dc3dd",
        "cursor": {
          "ref": "5c0a7373-e3dd-4028-8dd9-fef5643426ba",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5168c59e-b3d0-4f63-a25a-310307b222d8"
        },
        "item": {
          "id": "32371536-b458-4e3f-9de2-255a489dc3dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08fa14ed-bf34-4c97-b377-9b1cd42289d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5a3f62-84d3-4fe2-bae3-d53e932c706e",
        "cursor": {
          "ref": "f26f9329-d5e5-4ba2-b91e-cf3d0639e559",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e12276d-a849-40fc-acc2-509d64405f5f"
        },
        "item": {
          "id": "1b5a3f62-84d3-4fe2-bae3-d53e932c706e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "423b69fa-b965-463d-b4bf-2c4ac66f6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d95c949-81bf-4b03-aebf-20b0b2603214",
        "cursor": {
          "ref": "b1efa3dd-9e31-40e4-8741-3e52895c9657",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6304031d-04e5-4d72-9d7a-4e64a3a2a34d"
        },
        "item": {
          "id": "4d95c949-81bf-4b03-aebf-20b0b2603214",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "13915a07-77be-41fc-ad2a-ad8b65b6a829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6a58b0-d6cc-4526-9d4a-864bd695439d",
        "cursor": {
          "ref": "47f8f010-e0e5-49e0-81ed-56bd483c978e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf7dd2ad-002b-44b1-825e-62b73c160ce6"
        },
        "item": {
          "id": "ef6a58b0-d6cc-4526-9d4a-864bd695439d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4f6eb55f-d2d4-4514-a382-e830023e26cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d826acb-c13b-465a-a93f-061ce27f69fc",
        "cursor": {
          "ref": "5723a565-7c89-475d-81d1-db771b23c4c0",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c7fb1316-acf9-417e-af59-0319522c4bcf"
        },
        "item": {
          "id": "9d826acb-c13b-465a-a93f-061ce27f69fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3aa8dbf4-bcd6-40ee-bd33-7465a9b12557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d016575c-466b-4fa3-9e00-395b2a9af069",
        "cursor": {
          "ref": "f2715e26-0da0-4da4-988b-481d86eb5430",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d5caebc0-88da-435c-a04b-7f1132cc4187"
        },
        "item": {
          "id": "d016575c-466b-4fa3-9e00-395b2a9af069",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "09341580-09e1-42d7-872c-056c199b3243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c52aa5-54f7-4a57-ae18-a5652e7ea190",
        "cursor": {
          "ref": "036f45e2-69b5-43fe-bc96-1a6c7a88c037",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d30b03b9-a4b7-4d1c-b412-6dda40a31fba"
        },
        "item": {
          "id": "17c52aa5-54f7-4a57-ae18-a5652e7ea190",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3bbfe415-471d-4ccd-8696-c633888beea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ec82a-8d7f-4562-8346-ddfd295e5fa8",
        "cursor": {
          "ref": "dd4eab80-7eeb-4cd3-ad1f-f7dc15ba17cc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e8f7fe0-167e-415e-afd8-7b79b26d135e"
        },
        "item": {
          "id": "380ec82a-8d7f-4562-8346-ddfd295e5fa8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b887dba3-24f4-4e4b-8ed1-74db06b524e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a94093b-c58a-4325-a9c7-a12a1a865b7b",
        "cursor": {
          "ref": "78131c04-6acf-4457-95e3-88321e5b021c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5ed633cd-05d2-43bb-b44d-6d8dbee7afbb"
        },
        "item": {
          "id": "1a94093b-c58a-4325-a9c7-a12a1a865b7b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22d01a34-3c0e-4b19-a23a-a5954c313928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100518c9-3506-43a9-b9a3-2b95a05799f5",
        "cursor": {
          "ref": "955fd0a9-c573-41ca-b590-f2f74b950dd5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0ef8d88f-84ec-4c97-85bd-400623466160"
        },
        "item": {
          "id": "100518c9-3506-43a9-b9a3-2b95a05799f5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6f222d54-0ce3-483f-963a-62760bfce58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f812a236-6e04-43e8-bdbd-fa35214fcf20",
        "cursor": {
          "ref": "f945dfa5-d7af-438c-8227-66e1188aefd1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5ffd3c73-7cf0-4b0e-94c9-499a36579550"
        },
        "item": {
          "id": "f812a236-6e04-43e8-bdbd-fa35214fcf20",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "38aed8fd-ed9d-4099-828c-635395fc6eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab4fdb6-d22a-4838-b5c7-0fa67fe85ce0",
        "cursor": {
          "ref": "0075b221-1fa3-41a3-ba72-e60ce66889a7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d0434f40-7b72-481a-b995-212b2fa82012"
        },
        "item": {
          "id": "9ab4fdb6-d22a-4838-b5c7-0fa67fe85ce0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "acdfbdb7-bd83-4455-baaf-832039ac56e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936dfc0a-021c-4fd4-88b0-37d275883cf8",
        "cursor": {
          "ref": "3d205370-872c-499a-8c85-395ca044bb4d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "225a96e8-cc62-4122-b57a-b6766da84cdc"
        },
        "item": {
          "id": "936dfc0a-021c-4fd4-88b0-37d275883cf8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a4eb8410-cd2c-4bdc-85c7-be07c5034496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a27a8c-7c93-4987-a428-a0892f0a10ab",
        "cursor": {
          "ref": "cd18b398-363a-44f0-a8e1-861cf26a16e1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5665f43a-c224-4d4c-a230-3beb7a5ebc54"
        },
        "item": {
          "id": "69a27a8c-7c93-4987-a428-a0892f0a10ab",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50bacd63-e61d-422f-82d6-79195d359e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1e2ab-9180-44e8-9170-316919719700",
        "cursor": {
          "ref": "a05af505-9dc4-431c-bca1-dbb4982b7b16",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fd97d948-7262-46c8-904d-c9b9167bef9c"
        },
        "item": {
          "id": "6cb1e2ab-9180-44e8-9170-316919719700",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f5db3c1-3d70-426f-a6ea-7c39a9caab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0126504-6541-4f86-a58f-3bbbd3da7ac9",
        "cursor": {
          "ref": "5e714351-d58c-4d94-9d5c-b0f684433de6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e3734dd8-dac1-430f-be1d-ac06b83e40de"
        },
        "item": {
          "id": "d0126504-6541-4f86-a58f-3bbbd3da7ac9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "69bf09cf-5602-4182-8af2-052a09134a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef6414c-049e-49dd-9a44-4358d1aa34e5",
        "cursor": {
          "ref": "ad66b627-84c5-4d42-a6c4-16a4178cf772",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "da6e307b-862c-4840-91da-7acd9715ef88"
        },
        "item": {
          "id": "9ef6414c-049e-49dd-9a44-4358d1aa34e5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e0d347d7-3670-4950-91b9-0e719960fbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117ea01d-da5c-4c80-a91d-65942271830b",
        "cursor": {
          "ref": "d9d8e465-d96f-4d18-947d-e60b3a7ad351",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19929300-6695-4f0a-b9a3-23875dbfa535"
        },
        "item": {
          "id": "117ea01d-da5c-4c80-a91d-65942271830b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c68af81e-c70b-4fd5-ae49-67f29b8089f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae51c6-6559-4dba-b826-eaabe9a417c2",
        "cursor": {
          "ref": "3166b52a-1703-4695-a5b8-f38642c60a62",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "306a0d61-e441-4093-bbf6-8bec341f1838"
        },
        "item": {
          "id": "48ae51c6-6559-4dba-b826-eaabe9a417c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2f6c7340-e52a-40f6-8dc8-0d78f7520833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3be5c5-e36d-4112-948c-2ef4d89a0cc6",
        "cursor": {
          "ref": "6f9d24d1-7b2d-420b-9a95-270b7d9aa936",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8b6b901f-303c-4194-bff8-4459e7d22188"
        },
        "item": {
          "id": "4a3be5c5-e36d-4112-948c-2ef4d89a0cc6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a6bd3740-a615-4ea9-89e4-6e41eced2dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e417dd6-a544-4cf4-b268-fb3e292b66be",
        "cursor": {
          "ref": "80d3bff8-bac5-484c-8fe0-13881b1ab922",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e4cc3096-e99e-4560-82d6-3ebdce4e32c3"
        },
        "item": {
          "id": "6e417dd6-a544-4cf4-b268-fb3e292b66be",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "57f423f4-9cb5-45a8-a6de-5c37bcca0bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06294155-24de-4353-8009-9f6d92d55e01",
        "cursor": {
          "ref": "af26bf29-4c66-4dc1-b620-7a2b09df19ad",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c288502d-0c58-4e8b-9330-e710952bec6f"
        },
        "item": {
          "id": "06294155-24de-4353-8009-9f6d92d55e01",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d454b703-faac-42e0-814d-0d3b92f652a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9b6bb8-0c16-4089-a46e-8d044cec0726",
        "cursor": {
          "ref": "d2b97218-3820-4bca-b4bb-11b848857f09",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fc01c413-a086-4f0e-9bf4-4e2f8fcc6270"
        },
        "item": {
          "id": "ba9b6bb8-0c16-4089-a46e-8d044cec0726",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0912573-df80-4e0c-a412-192219b6cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f55d42-7bc9-415e-bcf8-439a7a6732a9",
        "cursor": {
          "ref": "aaadb2a1-ce3f-4b73-bc0c-c5c8369317c2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ea568ae7-f382-4c3d-8c6f-522d8829c40d"
        },
        "item": {
          "id": "e0f55d42-7bc9-415e-bcf8-439a7a6732a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d371ded-8e9f-4669-849f-371b2e0ab5e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a859321e-c31d-4f54-b271-3edd0a18a5e8",
        "cursor": {
          "ref": "16d4d43b-d0d1-4f06-9546-35b6e32943f2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3129a3b1-3087-4e4d-8085-495d1d0f4ffb"
        },
        "item": {
          "id": "a859321e-c31d-4f54-b271-3edd0a18a5e8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "06c23ddf-fea3-4255-b535-dd159fa2f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c24f4933-3a91-47ff-b97c-31b2b510ff02",
        "cursor": {
          "ref": "2ce09b93-e329-47ac-9a4c-630037597fbf",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0f8522ac-5ba6-47ce-92c7-e53aec2d8d65"
        },
        "item": {
          "id": "c24f4933-3a91-47ff-b97c-31b2b510ff02",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4c141f06-20e2-4616-a9ca-d382447465e2",
          "status": "Created",
          "code": 201,
          "responseTime": 2900,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf0f3bd-226c-4d06-bfd2-5c4892051bfe",
        "cursor": {
          "ref": "69c5cf21-ebd0-41da-a746-9fca7fa6364d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b560cae5-0f99-4866-b376-d0feee748982"
        },
        "item": {
          "id": "acf0f3bd-226c-4d06-bfd2-5c4892051bfe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e9a75aad-73ae-48f1-898b-3dc75711d8b5",
          "status": "Created",
          "code": 201,
          "responseTime": 2859,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7603baed-32ab-4b6e-a67a-25d6b77347bd",
        "cursor": {
          "ref": "b8a0b64e-560e-418e-ab33-4a9737ecf705",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e02ad4d-e108-4ba7-9151-1f9009b4c74f"
        },
        "item": {
          "id": "7603baed-32ab-4b6e-a67a-25d6b77347bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eea26219-0d80-4ed4-8d4d-a8976cbbaaf5",
          "status": "Created",
          "code": 201,
          "responseTime": 2178,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "287676c0-60b5-4d87-83e0-d34ca26a6eae",
        "cursor": {
          "ref": "6ad17f24-a703-4638-a249-b91dd3136565",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cd59b4f9-b198-4f92-8671-c5d8abf643f0"
        },
        "item": {
          "id": "287676c0-60b5-4d87-83e0-d34ca26a6eae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0a44a791-7f7f-46da-a1a6-580f9abeb99d",
          "status": "Created",
          "code": 201,
          "responseTime": 2157,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f296833d-0f63-4f02-bc8d-7ffe75c05a93",
        "cursor": {
          "ref": "62fff887-89b9-4575-a097-c703bdc68fea",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "305cbd88-bf4d-46dc-8b6f-0d2357a0262d"
        },
        "item": {
          "id": "f296833d-0f63-4f02-bc8d-7ffe75c05a93",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "008fd225-9c52-41ad-bb1b-d0ed45ee34bf",
          "status": "Created",
          "code": 201,
          "responseTime": 2310,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5192ae-13fe-4c5e-950d-cee65bd9a13a",
        "cursor": {
          "ref": "696658d2-92af-471a-bfd2-2410af9fc865",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fc301f21-75de-49a8-a574-696b45d57579"
        },
        "item": {
          "id": "eb5192ae-13fe-4c5e-950d-cee65bd9a13a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "47fcb500-30c0-4607-bbce-6b2138461540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d2e3767b-6bf2-4849-aaa5-4de25e450559",
        "cursor": {
          "ref": "fddace44-a750-4f08-85ce-f6ce8edbb850",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "38dd92e2-71e3-47ae-a3b2-7cb4ccf0abe5"
        },
        "item": {
          "id": "d2e3767b-6bf2-4849-aaa5-4de25e450559",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b11cdf15-f84e-42d0-b0c9-3595f5eb5895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff3e95a-3025-45e5-82c8-a11c0fcadc3d",
        "cursor": {
          "ref": "80a63d73-cdb7-48a0-8863-11369dbb44ff",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "052460b3-2d89-444d-85fe-757c9bf8dd07"
        },
        "item": {
          "id": "fff3e95a-3025-45e5-82c8-a11c0fcadc3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb9f6599-4b71-46b2-8fd6-00705031eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79db224-ceb4-4c37-84fc-f279b8ef6335",
        "cursor": {
          "ref": "db21a6bd-82c0-4511-a314-908058e6da03",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0a6f2b12-b90f-4c23-a6bf-bf2da30b3350"
        },
        "item": {
          "id": "b79db224-ceb4-4c37-84fc-f279b8ef6335",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b1f1ee26-88b8-41e9-881f-11167e519f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515a2bb2-5eba-4c3b-9291-a2bc3a42f840",
        "cursor": {
          "ref": "7c1ef83d-cefd-4645-8584-191bd493e6b0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30326369-64db-4d21-8394-e7bc063545c7"
        },
        "item": {
          "id": "515a2bb2-5eba-4c3b-9291-a2bc3a42f840",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b356233-05c4-4b0d-a745-7040d5b930ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3541ac-910a-4dce-80d8-615788593e77",
        "cursor": {
          "ref": "0a1465a5-53ea-4e4b-8162-f05c1e3d963c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "102a0ee7-a389-4b75-a23d-f5f4226745c5"
        },
        "item": {
          "id": "da3541ac-910a-4dce-80d8-615788593e77",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d5cc725c-235e-4df1-9e46-24a07353f046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d77f3f8-98d2-447c-b367-0bf7958e15b5",
        "cursor": {
          "ref": "4d4e5ec2-cd9e-4282-a633-62464763cad0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e7b655d-3e6f-4ce1-b355-2aaf3813da39"
        },
        "item": {
          "id": "4d77f3f8-98d2-447c-b367-0bf7958e15b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4b6c8c8-48b8-4452-afd3-4b7b3c4c4e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42de64fa-3016-4ecf-840e-d21f45df9c11",
        "cursor": {
          "ref": "686f77bf-3e6c-45c4-81b8-71bd7c67aac3",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ed2c1dd6-a80c-4db4-84e8-b59b7ebd22b6"
        },
        "item": {
          "id": "42de64fa-3016-4ecf-840e-d21f45df9c11",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b6927643-4e15-4972-a556-3e97b82601e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b39ad-92f6-41ec-98b3-cda952b14f07",
        "cursor": {
          "ref": "f6018d86-2d29-4c6a-a251-aa17a99ca7ba",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3e43b9ed-7d91-48a1-b5d6-284cd0978edf"
        },
        "item": {
          "id": "0e3b39ad-92f6-41ec-98b3-cda952b14f07",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fb9924d-3768-41ea-a754-b5c2f2546fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2090e0f9-d9c3-4ce9-b062-80acd6b643d8",
        "cursor": {
          "ref": "2bb104e2-119a-4c61-b9d2-27d29f41ac8d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a30c74c7-3d44-44f4-864c-dd212bda3d15"
        },
        "item": {
          "id": "2090e0f9-d9c3-4ce9-b062-80acd6b643d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d4ee2044-c405-429d-8c42-9646a87b0c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9371e270-9eb6-4b59-98ff-51625fc6ce10",
        "cursor": {
          "ref": "ab358ec0-d36d-45c1-a8b7-309dddc541bc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6c4deadc-4695-477a-b961-d796715f1cb1"
        },
        "item": {
          "id": "9371e270-9eb6-4b59-98ff-51625fc6ce10",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eb9607b2-a294-4652-a53d-7c8619171cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46977309-8dc8-4380-99d9-f660cca961db",
        "cursor": {
          "ref": "61126528-91da-4956-953d-6face697b3fb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b74669a1-f97f-48d2-ab1b-2caecfb5ce09"
        },
        "item": {
          "id": "46977309-8dc8-4380-99d9-f660cca961db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "31fd2365-b196-44f7-b4b3-eb3d7b4abd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34020230-9bc9-4700-a817-d16f751a5a8b",
        "cursor": {
          "ref": "95590366-ef56-449b-b788-4d8d33e051e1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "135b3336-e4af-4f49-bb4c-7b0462df5734"
        },
        "item": {
          "id": "34020230-9bc9-4700-a817-d16f751a5a8b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f05b1384-ac11-445b-b0cd-8d0bec038902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcc85d9-1aca-4e20-b5c6-4ed0d2295e4d",
        "cursor": {
          "ref": "58606e29-cf26-444a-a4a8-75523eacb4a7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ee2826a-39a3-461f-b89f-23931c8c6315"
        },
        "item": {
          "id": "1fcc85d9-1aca-4e20-b5c6-4ed0d2295e4d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d0f576d-19ea-4de4-a2e8-518bcbedf919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed516d-d268-46df-ab44-f3a76e6ba316",
        "cursor": {
          "ref": "e1368ea4-098e-4724-a293-c25fa1476dd8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e0e61ee6-8020-46d4-a9a2-6797bfc46e07"
        },
        "item": {
          "id": "93ed516d-d268-46df-ab44-f3a76e6ba316",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c2f1f621-e396-45d3-90ba-8b667e162e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcac72d5-cceb-4df9-8c2f-e1ca512030e7",
        "cursor": {
          "ref": "dfa9f786-a39a-4df1-b331-99407a01b8fe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "175fd8f3-77de-42d8-8bde-e13b4c391847"
        },
        "item": {
          "id": "fcac72d5-cceb-4df9-8c2f-e1ca512030e7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dde03636-d21d-45f6-b81a-8c026265ac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d70b2e-5e4d-41ab-b51c-d0cb642c11f9",
        "cursor": {
          "ref": "75a9a5df-2d67-4bd0-8255-b6c9c754a594",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "57f7f72a-522f-4104-9e8c-23e98926e040"
        },
        "item": {
          "id": "c0d70b2e-5e4d-41ab-b51c-d0cb642c11f9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ed353a7-b1d2-43a8-837f-cfeabc29bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77bca04-998b-4ac4-8194-75dcdec475b7",
        "cursor": {
          "ref": "71f4f2f0-670e-4cc8-a7bf-1a5809356b98",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "30d4ec93-a286-4a87-9da1-6811f5778aba"
        },
        "item": {
          "id": "c77bca04-998b-4ac4-8194-75dcdec475b7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "434ee6b2-f8e9-4504-987c-30302d8e43d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce296a00-c07d-4ec9-952c-f3e08cbbab30",
        "cursor": {
          "ref": "efe15400-5686-480a-89ff-a20b716ad71b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "af065e38-39d1-470e-9f45-e4163294f38e"
        },
        "item": {
          "id": "ce296a00-c07d-4ec9-952c-f3e08cbbab30",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc91e857-2377-421a-a334-1702caf8900e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdb395-dddf-4935-b126-221ad7bc7ea0",
        "cursor": {
          "ref": "a987fc32-73f7-4c25-842c-48b84cdf704f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1ba7b46-bd9f-40b3-99d5-2e0a19945e5c"
        },
        "item": {
          "id": "37cdb395-dddf-4935-b126-221ad7bc7ea0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd87931a-0216-4088-bda1-bfe887dbdaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68f167a-a099-4850-998d-ca2a92cb0bd6",
        "cursor": {
          "ref": "3c9c99b8-fc6b-4234-a940-59a9ba059b69",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e6d5ab9-95be-4e18-80a2-3a9187800585"
        },
        "item": {
          "id": "c68f167a-a099-4850-998d-ca2a92cb0bd6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3c6ff95b-24ee-4c3b-a8a6-03632ad74525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c865058c-8b75-4c09-877f-26db853c5ff8",
        "cursor": {
          "ref": "d6602b58-9bf4-4172-9b05-395c35b7ad9f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "415d87e0-fead-4c6e-9e9c-e81173dbe4ed"
        },
        "item": {
          "id": "c865058c-8b75-4c09-877f-26db853c5ff8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "148760c1-3adc-4f54-91c2-11e7ae172c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a6c21-fa0d-4905-a013-e7dc41acb862",
        "cursor": {
          "ref": "a27e1a89-ff31-4d5d-80d8-154b6914cfa0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6c9c85e9-0e70-4c6f-af28-4e1a2621f9d7"
        },
        "item": {
          "id": "396a6c21-fa0d-4905-a013-e7dc41acb862",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a7955b4-7362-47b5-8871-72699d2521a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d56075-dae8-48e4-aaad-589d3ecfc9b7",
        "cursor": {
          "ref": "eb713a76-8dc5-47b0-a69a-7a2d14cb739f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c494dfdc-ef3c-43c0-aeaa-8bc64e4620e3"
        },
        "item": {
          "id": "57d56075-dae8-48e4-aaad-589d3ecfc9b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "20a39c45-5112-45ad-a77c-8364ebe0e3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844fe25d-3029-4727-8c3b-587e7d3945e9",
        "cursor": {
          "ref": "ed7498fb-80ff-4959-b67e-6a4117a46aca",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7cf7e872-6d66-43f6-8f7a-083ada8c6027"
        },
        "item": {
          "id": "844fe25d-3029-4727-8c3b-587e7d3945e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dacb4ace-a31a-4877-aecb-7d37d8ceeecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace87037-18e5-45b4-b9df-b58695d350b0",
        "cursor": {
          "ref": "853084e5-be11-4e60-b64f-fbe92f3c961a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4ad876c2-724f-4e5d-8fad-8fcf38e424eb"
        },
        "item": {
          "id": "ace87037-18e5-45b4-b9df-b58695d350b0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "addd2a04-7bc6-4a05-8fe6-b3b3448220f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2432b3ce-0b7f-4141-8606-11c8d3125637",
        "cursor": {
          "ref": "d50c68cd-8c95-4298-8432-df132ff62d34",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "113c2ffa-6ea7-465f-a82d-77d620fb1bcf"
        },
        "item": {
          "id": "2432b3ce-0b7f-4141-8606-11c8d3125637",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7469fc3-7b09-4029-bc1c-dff29bf29e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc50ff-d3fa-445f-bd97-44894318b25b",
        "cursor": {
          "ref": "f63740c5-6764-4c21-b586-20bfbb9f4afb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "207bdb6a-5df3-45e1-92ce-4b4303dee349"
        },
        "item": {
          "id": "abcc50ff-d3fa-445f-bd97-44894318b25b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "916680c6-0cb6-4dc9-9580-fb4475954f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e6520d-bf3b-4fa7-bd4c-ac36e27b51ff",
        "cursor": {
          "ref": "c394ec39-301f-4a85-8aa2-02fcca88f25e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "38bf2af5-4bde-49bb-960c-f08dda3e0894"
        },
        "item": {
          "id": "29e6520d-bf3b-4fa7-bd4c-ac36e27b51ff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6cc76355-ed0c-4a61-9cf7-56f6f2c3549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb006067-fb64-48ba-a061-681b07ce1b5b",
        "cursor": {
          "ref": "8a174272-431f-4c17-9a57-494cb5cd873e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6037c0b-acf7-425e-a1a6-3a4e1ba80922"
        },
        "item": {
          "id": "fb006067-fb64-48ba-a061-681b07ce1b5b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5bcfb59b-ebb1-4f5c-b232-576358af50e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cec76c-52fa-40da-ace9-ee4f968161ef",
        "cursor": {
          "ref": "622452af-d4bc-42ca-bdb1-94ec57bd1cba",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4e78202a-6daa-4401-8811-91510d1a2a08"
        },
        "item": {
          "id": "c4cec76c-52fa-40da-ace9-ee4f968161ef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "10b2ea4a-972e-4596-8f02-9a1798f697c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901d78cb-3de7-4fcb-88ed-dcefeaca0480",
        "cursor": {
          "ref": "45af024b-15b0-46bd-8680-31dfb83fbac9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0f2b40af-70a6-414a-a6d0-8dbd24be3012"
        },
        "item": {
          "id": "901d78cb-3de7-4fcb-88ed-dcefeaca0480",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b478c14-12c0-4ea1-a28d-1e133ffed822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cace6b6-97d8-4026-98bc-70d5aa5fbae0",
        "cursor": {
          "ref": "8ef71908-5d53-4f2e-b5cb-bf3417eeded6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5f35791d-a845-4475-8d1c-d2c6ef5b3de8"
        },
        "item": {
          "id": "4cace6b6-97d8-4026-98bc-70d5aa5fbae0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dcdb2062-e243-44a4-9cd4-855da2d28964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d28193a-9087-4e52-a59f-637da62f2c46",
        "cursor": {
          "ref": "81fa2dbf-bccd-4c10-b9d9-b65d9c4ef010",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "68baa99c-e9d7-4578-bd44-3e905db4753d"
        },
        "item": {
          "id": "1d28193a-9087-4e52-a59f-637da62f2c46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "47801796-3029-4327-9e5d-b0d3be685956",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aef8f7-64bb-47f3-90e2-1c69423c7537",
        "cursor": {
          "ref": "6118bf18-0aa2-45c1-bed2-5730fe663078",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8abe0a1-9fa9-4066-a867-933592377ed3"
        },
        "item": {
          "id": "71aef8f7-64bb-47f3-90e2-1c69423c7537",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd97d02d-5bd6-41fd-a1cd-b0a22446c1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7442cb-934e-4c84-b21a-b968c5e77c21",
        "cursor": {
          "ref": "a94782d3-e775-4cac-8ba8-61d9c0c495fb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63f7ea06-1721-4232-a6ec-ee47ec788af6"
        },
        "item": {
          "id": "1d7442cb-934e-4c84-b21a-b968c5e77c21",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "954a9203-c45a-4237-a4d2-e94c2907806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb1030-d290-420f-8989-83b20d65e781",
        "cursor": {
          "ref": "f0016963-6f85-4958-b6c8-94c34188688d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "323dd8b6-5373-4ce2-a2f2-82b2f55c07f2"
        },
        "item": {
          "id": "13cb1030-d290-420f-8989-83b20d65e781",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "524801ef-9c0a-42c8-a73f-e5cac0e4dd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf1649a-c891-4434-8b8c-9d3c012f6132",
        "cursor": {
          "ref": "4af39b1b-2a40-4591-a77a-72e28d0945bf",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cb33957c-58fd-4aae-87fb-570493dfa33f"
        },
        "item": {
          "id": "cdf1649a-c891-4434-8b8c-9d3c012f6132",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb1a05ed-8940-4871-b885-0d52f4348a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e52c24-63b2-4469-a053-88333a2de0e7",
        "cursor": {
          "ref": "8762b123-abad-4409-81c8-b46212de75fa",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1edd63fd-dced-4ed6-b9b1-fbd947652a86"
        },
        "item": {
          "id": "10e52c24-63b2-4469-a053-88333a2de0e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0a81a3ac-ff55-471f-bb07-5a47614d4a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5654069-9fd9-45d9-9c27-8629ba06a6ce",
        "cursor": {
          "ref": "42a4ec39-0d2d-43d7-bb37-4279bee24b8d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a5afc22f-94e8-425f-a9be-ab69c4ad866c"
        },
        "item": {
          "id": "c5654069-9fd9-45d9-9c27-8629ba06a6ce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e141ec41-32f4-415f-9c7e-8d7980c085b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca50d58-2fcf-4db4-a79a-339bda3e9ac5",
        "cursor": {
          "ref": "fb1569fc-4863-4f3a-951a-5c67102560cb",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "511e5945-50c4-495f-a95c-1ca9c5155721"
        },
        "item": {
          "id": "aca50d58-2fcf-4db4-a79a-339bda3e9ac5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5f413135-d66e-4c2e-851f-6003b7884139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb72c2-d05c-4240-aaaf-160c299c4e67",
        "cursor": {
          "ref": "9d2da46e-86e1-4c48-a39d-888621b32187",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e7f90d64-b691-4166-a324-f154e8f985b5"
        },
        "item": {
          "id": "6adb72c2-d05c-4240-aaaf-160c299c4e67",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ffaff248-434f-4a8e-a4c3-c48ed41b11da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab67f0d5-07d7-4a3d-b2e0-42ea5d2ad7d0",
        "cursor": {
          "ref": "f447ff4c-5085-4f33-95bd-fc26e4454fec",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "02d25194-9a28-4314-949f-a08de8748113"
        },
        "item": {
          "id": "ab67f0d5-07d7-4a3d-b2e0-42ea5d2ad7d0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c4998fa-069d-47d1-930a-ef779141f174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d545d9b-3270-47e9-9ddf-abf38ad0c1bc",
        "cursor": {
          "ref": "2e91ec0f-7833-445b-b67b-992c43b573ab",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6bbd3042-111b-479f-ab95-390a35b00c10"
        },
        "item": {
          "id": "8d545d9b-3270-47e9-9ddf-abf38ad0c1bc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "84487c16-8331-4633-9639-61448de276f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3fa979-8f0b-40cd-844a-3a7c8bf3b56a",
        "cursor": {
          "ref": "7b1adb5f-155b-46e0-a6d3-a0ed846231f6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db14cbcd-eae7-4eb5-8b28-647b8d46a428"
        },
        "item": {
          "id": "4e3fa979-8f0b-40cd-844a-3a7c8bf3b56a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db2255b1-6652-482f-8ed1-e1517f404cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c845621-a773-4c4e-ac20-5c0bba113d5d",
        "cursor": {
          "ref": "a760f200-0932-49f5-bff1-53be64efbd9f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "552727a9-4148-45e5-bff2-81983bd28dc9"
        },
        "item": {
          "id": "5c845621-a773-4c4e-ac20-5c0bba113d5d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "383fee62-385d-4fa3-833a-3b8ba5ee6000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15077e06-018f-4047-a378-1a608f42cfe2",
        "cursor": {
          "ref": "e84cc1e8-b047-4ea7-8b72-47bc8576d36f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20ee3e14-015b-4ede-bfcc-af7e26c3ecf6"
        },
        "item": {
          "id": "15077e06-018f-4047-a378-1a608f42cfe2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40f2892b-438f-44fa-9c66-5116f3d48cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91de97a1-01e1-4e8a-8f3c-343e832a112b",
        "cursor": {
          "ref": "f379a7c6-db63-4e57-b828-2d7940ca063d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "547c32f7-c60b-428d-b1d6-b23797a31c36"
        },
        "item": {
          "id": "91de97a1-01e1-4e8a-8f3c-343e832a112b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d4c554b0-90fc-4dec-8f7f-b1f601a55781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba3ce4a-2305-48ff-897b-4bb425cd6acd",
        "cursor": {
          "ref": "0c62a6fa-07d0-44d6-9d0a-30b4eb1b1875",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "be0948f0-d90e-4e8d-ba94-019ff4a6f038"
        },
        "item": {
          "id": "eba3ce4a-2305-48ff-897b-4bb425cd6acd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7249ccdd-1ef9-4513-9523-ae2bdb84e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7044247e-64a9-4586-819e-13e73bd5674b",
        "cursor": {
          "ref": "eabb3e10-3ead-455f-b788-c9b8a05bab47",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7affc8cb-3d0b-483d-bbdf-c088422909d3"
        },
        "item": {
          "id": "7044247e-64a9-4586-819e-13e73bd5674b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1eb1397b-da1f-49fc-93ff-9d288a9d5f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69223f38-6179-44d4-be94-f2cd89210033",
        "cursor": {
          "ref": "3505f2f8-51ac-4d11-b94c-bb1e1c00d7f8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "49bfe205-ca05-4657-aac8-dcbc31735073"
        },
        "item": {
          "id": "69223f38-6179-44d4-be94-f2cd89210033",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f5fe44a-98c7-444d-bccb-0adbc2763274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c0bcd-ed40-4d17-9c9f-6784927b3945",
        "cursor": {
          "ref": "428650d3-d7d5-4601-9fc6-0405d9294f56",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76acd7fc-35db-4936-a4cf-f764c984f966"
        },
        "item": {
          "id": "124c0bcd-ed40-4d17-9c9f-6784927b3945",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9973d86c-4cdc-4475-b425-c0f4a23a5948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad45c1-6ac3-4cb3-97aa-2f24b5ea208d",
        "cursor": {
          "ref": "40b0367a-78a5-4912-b76a-2dcd3f288fbd",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "52bec783-3ff6-40a2-b792-c31b1f345c0b"
        },
        "item": {
          "id": "05ad45c1-6ac3-4cb3-97aa-2f24b5ea208d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7615e09f-3c5e-46e0-b8a3-14cf0897d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11475453-1ca1-49c1-8256-d23059775549",
        "cursor": {
          "ref": "2187401a-8cb4-4674-913b-37268394b479",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "64b2e794-e895-4201-8dfa-2ff2c5fa1ad3"
        },
        "item": {
          "id": "11475453-1ca1-49c1-8256-d23059775549",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a6c1b55a-2ca1-4669-b777-44d413eb636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56fde49-044f-4418-b42e-e31442b9c13e",
        "cursor": {
          "ref": "a77de151-473e-442a-90d4-58b498d3a465",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bda5651d-c2ed-415b-8bce-75d764a3799b"
        },
        "item": {
          "id": "c56fde49-044f-4418-b42e-e31442b9c13e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00c88a1a-2b8c-4593-9c0d-d5c6b712f18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa363178-e0df-4e09-861a-794f38680672",
        "cursor": {
          "ref": "191a1943-3b57-4482-b4dd-303dfaf46d1b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c2d9c226-99a5-402a-87f5-3f75fdd83a28"
        },
        "item": {
          "id": "fa363178-e0df-4e09-861a-794f38680672",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aa93b49a-4cba-405f-b5cb-79b05e34e591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432d0a22-e984-4971-a087-70525f962b1b",
        "cursor": {
          "ref": "69b56ffa-baf8-449b-a828-9bb3c828b1f6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d0dcb76e-7076-44dc-a396-c6cdf0b3b335"
        },
        "item": {
          "id": "432d0a22-e984-4971-a087-70525f962b1b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "60ea2af8-9198-42c2-abaf-cec725c81a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fb88d0-d3ff-4533-98a6-27c0ee9fc852",
        "cursor": {
          "ref": "ca3b644d-c572-4221-b7db-1f0563416ce3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0a94ab3e-85d2-41a0-b2e3-62dc92349a6c"
        },
        "item": {
          "id": "e9fb88d0-d3ff-4533-98a6-27c0ee9fc852",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3d4afae3-cc56-490a-ba55-7ff71da7d00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56f8e32-e8fd-4331-9c49-9432cf628d28",
        "cursor": {
          "ref": "00ea9d0b-d614-4d5f-af65-c9a6d79c0244",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "469fce41-72f9-49bd-838b-2a6eacf141b7"
        },
        "item": {
          "id": "c56f8e32-e8fd-4331-9c49-9432cf628d28",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f97e3a01-ac66-4aea-ba62-7bbfa89d2e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635d0188-caa9-4c6d-9c64-4f02df150a98",
        "cursor": {
          "ref": "755c34c1-7b69-4d93-9efb-639264f9e8b8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0918720e-b28f-4aad-bb3f-cebfa4346317"
        },
        "item": {
          "id": "635d0188-caa9-4c6d-9c64-4f02df150a98",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71f82f3f-6ab4-4e82-a6c0-338e4be35d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84376ce8-9f5b-49b0-ab98-f3edf7ef8b5f",
        "cursor": {
          "ref": "8ad09c50-c3e2-40ed-8c2f-dfa67fc5c214",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "65bf2dd1-f31d-40f4-a071-a0579634a8c8"
        },
        "item": {
          "id": "84376ce8-9f5b-49b0-ab98-f3edf7ef8b5f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76546d0f-9703-4a0b-9cca-83ccca0f5ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748cee32-a36f-4f6d-8592-7ce14a416a03",
        "cursor": {
          "ref": "ae9bde02-603f-49f8-b001-8b408b82779c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf2db09d-850d-4519-a649-42c5d88e5318"
        },
        "item": {
          "id": "748cee32-a36f-4f6d-8592-7ce14a416a03",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c7414b6-375b-4178-a5ba-0a86008f95c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472a407-d3fb-4d2f-932e-9aa0db03bab4",
        "cursor": {
          "ref": "86fa2271-e054-40f5-9ec1-835168506997",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc11ec25-8c4b-4078-9253-3985a58acb8d"
        },
        "item": {
          "id": "7472a407-d3fb-4d2f-932e-9aa0db03bab4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9e647b8-9bff-4a3c-b824-e44afff84efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30557ed-8dea-479f-8c36-195040102421",
        "cursor": {
          "ref": "61cb9050-6216-4377-9e1b-4367d3f83a06",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "52848343-1ee3-4010-a954-9041d63d7c3c"
        },
        "item": {
          "id": "d30557ed-8dea-479f-8c36-195040102421",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "400609ff-125a-4b26-90ea-2b2c6cd74e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3169ba-4ced-4cef-b010-c8c49ce1718a",
        "cursor": {
          "ref": "031635c3-d47d-42d0-af17-344d3487f2c8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a77da7b6-bfdf-4c97-920c-7f46d57d6957"
        },
        "item": {
          "id": "ac3169ba-4ced-4cef-b010-c8c49ce1718a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20ee150d-2c0c-45b7-9409-f99d165822ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73956aaa-36be-4ce7-9a49-109ee360bb4f",
        "cursor": {
          "ref": "33ee8b7d-f665-4bf1-939b-e65391607049",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1ff3a035-baf8-4b0a-b20d-5773c455a67e"
        },
        "item": {
          "id": "73956aaa-36be-4ce7-9a49-109ee360bb4f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0ef1611d-368a-49c1-aee0-0b11b8832aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd6279b-1876-45fa-ace8-1ad9fa456a60",
        "cursor": {
          "ref": "e8e40fe8-81b6-4f5f-9245-3a8d19ebd1d7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "677bc4e9-f6b1-47bd-ab18-e0d1326325d2"
        },
        "item": {
          "id": "3cd6279b-1876-45fa-ace8-1ad9fa456a60",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "93f9bb0a-2a5b-4969-ade3-6335560e8b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3731eeb5-90ed-4c7c-b6d9-d78dab3f7a8f",
        "cursor": {
          "ref": "962faef9-5b97-4210-bd94-19306ea850ae",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e4a72c9b-a6d2-4677-ae45-2379e344c047"
        },
        "item": {
          "id": "3731eeb5-90ed-4c7c-b6d9-d78dab3f7a8f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "947da1c9-55d5-4398-a7b6-e0d4976c24c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6c55d8-497c-4d91-97b4-aeeb18b5838a",
        "cursor": {
          "ref": "90b9e0fc-6472-4f47-8699-a69ccf52c997",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "adfd60b6-64f9-446a-9770-ac3a32f40126"
        },
        "item": {
          "id": "8f6c55d8-497c-4d91-97b4-aeeb18b5838a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2807022f-bd78-4377-b88b-c1e5cf17d83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b890a3a-9a8a-4c52-b502-bda2df7c4b2e",
        "cursor": {
          "ref": "2d4b2c2c-f270-4a83-a79a-d3063635863c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2640854a-02be-4b72-a500-3fd8794b9e6c"
        },
        "item": {
          "id": "8b890a3a-9a8a-4c52-b502-bda2df7c4b2e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "66718c7f-89c0-454f-9c49-e5446bd696a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae8db7e-555a-4f4b-b8e3-62f5b3e3205c",
        "cursor": {
          "ref": "2df9da5c-4c51-4a0c-9261-ebe8ad3bceb0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d6732822-abce-44bf-aa0a-c6405b9b8210"
        },
        "item": {
          "id": "7ae8db7e-555a-4f4b-b8e3-62f5b3e3205c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "08f23e2c-32c0-4433-b923-ebb686bb42fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65cb3f0-6709-4e56-9015-00592198b590",
        "cursor": {
          "ref": "0a774964-463d-49cb-a2a6-5354ee6b50f7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f627811f-3ec0-40d1-ac97-679ab10f2d32"
        },
        "item": {
          "id": "a65cb3f0-6709-4e56-9015-00592198b590",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2e2d5fbf-2e84-42d2-84e5-940f06e363e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78edbb09-2522-4893-bb55-0d0ba319083c",
        "cursor": {
          "ref": "53ffc02c-e59d-408e-a773-2c13ba2d9489",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5bcb5c13-5c44-4796-a77a-82ed584943ca"
        },
        "item": {
          "id": "78edbb09-2522-4893-bb55-0d0ba319083c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2649bc1-0d38-478f-8d59-25999703f0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c5358a-cfa6-49ac-a32d-5904d8785870",
        "cursor": {
          "ref": "d49fe3bf-a92a-4205-874a-9eda966b9dc4",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7cb224b4-bb5b-4bf3-a942-6c1234b6a38d"
        },
        "item": {
          "id": "b8c5358a-cfa6-49ac-a32d-5904d8785870",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e7fb5fa6-c197-4ff1-86eb-058ad76c26f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5303735-8de8-41f8-982b-d5809885ff28",
        "cursor": {
          "ref": "dd7639cf-7d51-4209-ae1f-a45f9f9f8c76",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "67530ce2-abcd-4d32-adf4-b3a831d44211"
        },
        "item": {
          "id": "f5303735-8de8-41f8-982b-d5809885ff28",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9baa505f-160d-49f3-afc7-57ed8667ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0780868-2c25-42d2-8d33-b42f5a53116c",
        "cursor": {
          "ref": "a30dec6a-b7b0-47a7-906b-be048e433d05",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5fe8f869-25fb-4ed9-bef1-a8fba497f8c9"
        },
        "item": {
          "id": "f0780868-2c25-42d2-8d33-b42f5a53116c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2f455d39-7523-433c-b215-ad1bd1ad03d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891590be-d58a-412a-aaf7-4bdee5ad1f67",
        "cursor": {
          "ref": "866d866b-1ac4-4010-845c-29bb3a40b419",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47270863-c70f-4ce5-a905-3e696fc32b70"
        },
        "item": {
          "id": "891590be-d58a-412a-aaf7-4bdee5ad1f67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8f61e513-5274-4b72-95b2-d180472e70e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f251f6-c0f5-40fd-a9e5-2fced63f4c29",
        "cursor": {
          "ref": "35f6018a-ef97-4f25-b6f2-049da67bd2f1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a5f3967c-4d0f-472b-9930-ec78a0cf5873"
        },
        "item": {
          "id": "89f251f6-c0f5-40fd-a9e5-2fced63f4c29",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1c57f169-648f-4791-8c70-0e49080e4737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97808c6-91e5-4b52-bdee-8a71e18ebdf2",
        "cursor": {
          "ref": "69dbd94d-5555-4bf7-bb2c-9e4bdb2c49f8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "40cccdc7-b536-432e-99b8-daf95fd16ab9"
        },
        "item": {
          "id": "a97808c6-91e5-4b52-bdee-8a71e18ebdf2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1f66c62f-2015-4b47-b65e-20fbfb6343d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb29556-1832-48be-9079-312a9e5cefca",
        "cursor": {
          "ref": "cc9d7946-6932-47a6-802d-c0f11dd5daf9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af02f4d7-24b7-4043-8044-0d00cce50623"
        },
        "item": {
          "id": "0eb29556-1832-48be-9079-312a9e5cefca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "39fea474-4fdb-48b7-8d9a-74ed9e9596a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79a0194-64cb-4c44-b2a0-d4c947129e67",
        "cursor": {
          "ref": "459ba8e8-9613-491f-91fb-92d390bfa0ad",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9f27fafa-ddc4-497d-9689-3541f18373bb"
        },
        "item": {
          "id": "f79a0194-64cb-4c44-b2a0-d4c947129e67",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e024d7ef-2456-42d1-8ee7-0e8bdcdde8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a702e2c-7c08-4bba-8035-46a929e9c37d",
        "cursor": {
          "ref": "df7a1542-ac6b-4277-a50b-02af56ecb189",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6a9738a7-c72b-40b4-83b5-a1625c6a737e"
        },
        "item": {
          "id": "7a702e2c-7c08-4bba-8035-46a929e9c37d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce084f5f-25f9-458f-83e8-e7f4f5e2e33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3852a4-f9c1-49be-b6c4-bb1a1fa3e755",
        "cursor": {
          "ref": "deee66ca-75e5-4403-8eb9-1c96428a7946",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7efa93ca-ed82-4df4-b563-f4f4e2a28715"
        },
        "item": {
          "id": "7e3852a4-f9c1-49be-b6c4-bb1a1fa3e755",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ba650b59-63e0-4915-a8c8-ddd7b63183e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12275904-09a0-4ba5-8b99-1972d3907a49",
        "cursor": {
          "ref": "85b2adad-859d-4ce8-9eb1-e0ebacce2e04",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0f18e14b-3b32-4cc1-9b5f-1479358c87e7"
        },
        "item": {
          "id": "12275904-09a0-4ba5-8b99-1972d3907a49",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ac323543-f510-4885-b21d-576a2afa67db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78d0d07-44b4-4e7f-a9af-a2b2db1f3db4",
        "cursor": {
          "ref": "630c7130-d521-4371-acca-fd3d3f54562b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e11aa787-9b0a-4071-b606-d76035013c4f"
        },
        "item": {
          "id": "d78d0d07-44b4-4e7f-a9af-a2b2db1f3db4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0355a02d-56d8-4561-bd66-09e9f2efa8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760eea9-4fff-4a3d-a92a-244cc12926f2",
        "cursor": {
          "ref": "4ee347dc-9c3b-4fcd-88a6-a648cb2b1074",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8cb4afda-a3bb-4bcd-8aaa-ace29b735b45"
        },
        "item": {
          "id": "d760eea9-4fff-4a3d-a92a-244cc12926f2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "50d6f994-bc53-4415-8e64-ff3b069d424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4713e4-0972-4b7b-85d2-d49b06442480",
        "cursor": {
          "ref": "480f42e2-57b4-47d3-a972-14a130a87de5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0ae1dc70-b848-474a-afb8-07da43ce3936"
        },
        "item": {
          "id": "4a4713e4-0972-4b7b-85d2-d49b06442480",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e1b9e9f5-092c-48dd-84a4-300ce73bd61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25570754-9ee4-42eb-b396-ce69fd46fa1c",
        "cursor": {
          "ref": "9ec7816f-0e8e-449d-8fb8-bce6ddff9e1f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a4c4aac5-254f-448f-b154-26f9ce134118"
        },
        "item": {
          "id": "25570754-9ee4-42eb-b396-ce69fd46fa1c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a55f459f-8b58-42c2-91d0-1ce028b0a17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cdb2c4-6480-4647-94b4-82d709634eb1",
        "cursor": {
          "ref": "02d4a31d-608d-40c4-a357-f2562cf18b09",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "55aa6a0f-ab82-444f-b3a5-9b64865149fb"
        },
        "item": {
          "id": "f4cdb2c4-6480-4647-94b4-82d709634eb1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f6c339f6-8a13-4590-bfe4-5547b278c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bd71ce-d83f-4ede-9101-c7d5e567914c",
        "cursor": {
          "ref": "9bbc4596-8d5c-438c-b16a-65ff2a078a40",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d064725f-7d32-4df1-86ac-7bd010e8a291"
        },
        "item": {
          "id": "98bd71ce-d83f-4ede-9101-c7d5e567914c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d75d3ea1-1fca-426d-ae85-963ce647817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4b73f7-3db0-4ea3-bf99-1e39dd3cfa82",
        "cursor": {
          "ref": "d7fb78f6-b885-4520-a625-15e34997a6a4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a007baf-b382-4db5-b285-9395e4bc411a"
        },
        "item": {
          "id": "3f4b73f7-3db0-4ea3-bf99-1e39dd3cfa82",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8bd21ffb-b303-4b01-b4da-d07fb70b6f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f06efaa-55ee-47f2-abb4-f00ebeaa7711",
        "cursor": {
          "ref": "03240746-d731-4a57-b29a-fe94593e4784",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "09569bf9-f2ca-4a7b-9395-eb373ea9744a"
        },
        "item": {
          "id": "3f06efaa-55ee-47f2-abb4-f00ebeaa7711",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3dde1690-1d0b-475a-8f45-f328c978d01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c468836-950f-41b6-ad44-49f60609151b",
        "cursor": {
          "ref": "ff21f87b-8fb8-49e5-b320-097fb2fce049",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7289ff3e-68a1-49f3-93ce-bede53b9ebe5"
        },
        "item": {
          "id": "1c468836-950f-41b6-ad44-49f60609151b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a9d2f00a-50e5-4330-90b8-6175ad6caaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d8db40-fb83-473a-8529-06f3ec66fb08",
        "cursor": {
          "ref": "276752d8-0b4f-4e44-a8c1-e7910925e43b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "71b3d93b-9e62-4dc4-8b63-c24cd883b7f2"
        },
        "item": {
          "id": "a0d8db40-fb83-473a-8529-06f3ec66fb08",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "58c2609f-df3d-4181-995f-13986ea9658c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d1b66-9ef5-4b92-8766-8bd868796286",
        "cursor": {
          "ref": "162151dd-5c17-4ca9-8822-240fff40ff60",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "212c78ba-124c-4769-aa27-d8468d4daacb"
        },
        "item": {
          "id": "041d1b66-9ef5-4b92-8766-8bd868796286",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4ee15482-debb-49da-9ebc-9c07c31f478b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231f7659-e744-4e63-9f57-968752c52a68",
        "cursor": {
          "ref": "3aa09278-389c-4400-b0d6-03892363d88a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "613aa3c9-485e-42f2-a259-dbe835874a09"
        },
        "item": {
          "id": "231f7659-e744-4e63-9f57-968752c52a68",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "805fa239-29b0-4ecd-99aa-ca158c595523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f54b1a5-9e12-4dda-a87b-87f054bbf3aa",
        "cursor": {
          "ref": "4f6994d1-6314-471d-acbb-6ed30b86bd4f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "11be0ebb-fa4b-4d10-bb33-e336ce2a5b47"
        },
        "item": {
          "id": "7f54b1a5-9e12-4dda-a87b-87f054bbf3aa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "37cc4247-fa3d-4f0f-864b-6db510794051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa1ae24-36c3-489b-acc0-8adbae1bd59c",
        "cursor": {
          "ref": "f11ccdc0-08a7-4f8e-8768-a29d422fe5e1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8d34c619-528f-4c30-ac97-e9b4c8ac37ef"
        },
        "item": {
          "id": "ffa1ae24-36c3-489b-acc0-8adbae1bd59c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8fa52f85-377e-4107-9af8-06ea3ad5d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba045fcf-e18b-4b08-87d2-e3d1ca938135",
        "cursor": {
          "ref": "c2ccc522-2bcb-4e38-a650-df24fd3378ad",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7c3f890d-ccbf-4156-b548-72a102ff1541"
        },
        "item": {
          "id": "ba045fcf-e18b-4b08-87d2-e3d1ca938135",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "84e737d2-e53d-4037-a5eb-1441109c17ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9999e5c-bb07-4d6b-8992-7f460ea2b75e",
        "cursor": {
          "ref": "79acacb1-ccab-4c2c-b639-4a1abe181169",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "21dab83c-d9b2-412d-9ce7-69f7542533ea"
        },
        "item": {
          "id": "a9999e5c-bb07-4d6b-8992-7f460ea2b75e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f3b02c31-87d3-4014-b91c-d49b2b271477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac3411a-5409-475c-9509-ee2d4f019de8",
        "cursor": {
          "ref": "12a2dd69-773f-40ed-a42a-a38cf9bb63a6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "23563ea3-d6c2-40f5-a9c6-2f955ab00486"
        },
        "item": {
          "id": "5ac3411a-5409-475c-9509-ee2d4f019de8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d89e8df0-a46a-4cf0-8c2d-1e89526a0e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01140df-7c98-423b-9b94-bb7c68a72512",
        "cursor": {
          "ref": "68880d51-5f5f-417b-a791-571a7dbfb622",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "951a18a5-b7ff-4590-94b5-66370539df57"
        },
        "item": {
          "id": "d01140df-7c98-423b-9b94-bb7c68a72512",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "760ced0e-89cd-4420-9dbf-6d27b772d350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cd55bd-692b-4180-bff2-061842b9e742",
        "cursor": {
          "ref": "516c2e3f-abb8-4d99-964b-8963558e5061",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "efc081de-3f8e-4432-806a-269852a02de4"
        },
        "item": {
          "id": "d1cd55bd-692b-4180-bff2-061842b9e742",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f97476a8-8cc5-4ca1-b999-4648a82821b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed1f42c-5dd8-4874-b5c8-96aed2f4598d",
        "cursor": {
          "ref": "2c2fbf8a-e003-4601-ad9f-b233285eacd5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f62e23a0-5c54-426a-ba34-903b7a1adf2f"
        },
        "item": {
          "id": "4ed1f42c-5dd8-4874-b5c8-96aed2f4598d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "197be2ba-0a25-4a27-b9b8-8e4ed969fc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66d7e4-7d69-47dc-b4af-58d33da2b2c7",
        "cursor": {
          "ref": "7ff78e08-65e8-4f8d-9e1e-a79f6e855103",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "27256447-4c68-42a8-889a-54685bb814e2"
        },
        "item": {
          "id": "7b66d7e4-7d69-47dc-b4af-58d33da2b2c7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "69a3ec9a-8104-4f67-961c-0c011633e3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d3e14f-6ed9-4b72-bdd6-5f780e35b1e9",
        "cursor": {
          "ref": "fff20761-769a-48b8-9bd2-50791226a758",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5cc67b6a-3b56-441c-addf-7291c932e800"
        },
        "item": {
          "id": "81d3e14f-6ed9-4b72-bdd6-5f780e35b1e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3fc02fa6-037b-438d-abc5-f68845f09e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c14f17-49ed-4b67-b2d9-4824d79121b4",
        "cursor": {
          "ref": "876e9e42-6b53-4f5e-8c3d-7ffd1f5489ed",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1d4a075b-06f1-4093-ae37-b99e8beb042d"
        },
        "item": {
          "id": "63c14f17-49ed-4b67-b2d9-4824d79121b4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "326646b6-fff4-43d3-9fea-df6cefe7b545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edc2c0e-12b3-4433-b10d-1b4f8a7efa2f",
        "cursor": {
          "ref": "30c68f35-6368-4b15-b6a3-4fcbe954fe40",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7e55bd4b-ec41-4dab-b9bf-16c4edf8d210"
        },
        "item": {
          "id": "2edc2c0e-12b3-4433-b10d-1b4f8a7efa2f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9473d8e0-0c07-4d3e-8f52-8fcb183bb63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f323f-454c-4af2-9641-4031a370ab7b",
        "cursor": {
          "ref": "b9db73c1-0405-4bd6-9917-a6c736d870d9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "82ba91ed-47ce-44ab-be0a-917568e8ae3d"
        },
        "item": {
          "id": "1a4f323f-454c-4af2-9641-4031a370ab7b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "633b0c35-381d-43f2-8948-9ca5708cfb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7417ae37-9dc6-475d-8502-010f3acc1322",
        "cursor": {
          "ref": "097c6609-d74c-4622-99df-f8885e1d68e4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4787440-1172-46be-9ad0-98251c7eedab"
        },
        "item": {
          "id": "7417ae37-9dc6-475d-8502-010f3acc1322",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e664cf7-6f16-42ef-8b0e-5632c4af694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70db801-602b-48ff-980a-3d8068c006ec",
        "cursor": {
          "ref": "2ed267b0-8e64-4d61-b879-0423c578a7f4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "994977a8-5d88-44bb-9b7f-0568bdce3170"
        },
        "item": {
          "id": "f70db801-602b-48ff-980a-3d8068c006ec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90f86321-f3a4-4072-b70b-2a4ae68ecf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eec7d6-ec76-4837-ae54-7e65ce7b1031",
        "cursor": {
          "ref": "3c88dee3-74d0-4c0a-a697-d026c81882cc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "88a42a2b-fdcd-45aa-b7e2-7179a9b75dc3"
        },
        "item": {
          "id": "95eec7d6-ec76-4837-ae54-7e65ce7b1031",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0e2d33c1-fc53-422e-8281-18f600575967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad99779-8023-4500-9f7c-5eee5cb35407",
        "cursor": {
          "ref": "f33346b3-7f49-4b3d-b28f-0bc2d174d705",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8745cbec-2780-45ef-8c45-8f871839f0b7"
        },
        "item": {
          "id": "2ad99779-8023-4500-9f7c-5eee5cb35407",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ddb91d82-c78b-4965-8ad5-c8b6e67093ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4e9e3-e2f3-4bd6-bbc3-d9ed21806367",
        "cursor": {
          "ref": "2917aa0b-95f0-4764-9242-dac3b298a225",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "08e5d53a-813b-4b9c-9833-31400626a6ed"
        },
        "item": {
          "id": "f1d4e9e3-e2f3-4bd6-bbc3-d9ed21806367",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "01d7a41c-48d7-4ff0-9adc-82621bfcb124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ee4cc4-19c6-43fc-a537-55b66ee57648",
        "cursor": {
          "ref": "ec2a4ca8-5950-42f7-a099-db66f1fb3c06",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "36b6be15-a688-4120-a00e-537d4d1e9ada"
        },
        "item": {
          "id": "85ee4cc4-19c6-43fc-a537-55b66ee57648",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d6f91095-6ef3-433d-b5d5-124d4e071bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4facf9-ab8b-4d88-a1f1-8ae476f7e7dd",
        "cursor": {
          "ref": "dc36e5d4-4b97-4f21-bb31-085660f8805a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "318f2646-13f3-4bfc-af31-45d2ca6d70ec"
        },
        "item": {
          "id": "9e4facf9-ab8b-4d88-a1f1-8ae476f7e7dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9f5fd879-f269-46c7-b1f0-9cb05e816b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1f5e7d-5121-4c88-8273-999417ec4fd8",
        "cursor": {
          "ref": "984429e4-c44c-4d1e-a113-179b224bbae8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8598f98-02a5-4f33-9f9b-e9ece43be712"
        },
        "item": {
          "id": "1f1f5e7d-5121-4c88-8273-999417ec4fd8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6c246407-2c62-4895-b8f9-28ca21798129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e164ef96-a289-44c1-86a5-108ac3ec714e",
        "cursor": {
          "ref": "2ae7eeba-5a31-430a-81b5-dd2e12f6a5de",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7f4f415a-4511-4920-8b86-e43fb874fe72"
        },
        "item": {
          "id": "e164ef96-a289-44c1-86a5-108ac3ec714e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6c12d8d5-d0f6-49e3-bd21-488223bc070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2889b03-a867-433e-bb65-c49c655d1be8",
        "cursor": {
          "ref": "0738e621-9107-46e1-b019-e207ab8a0159",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "437061a4-35a4-4122-b0dc-8c17a76d14d7"
        },
        "item": {
          "id": "a2889b03-a867-433e-bb65-c49c655d1be8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0db7d39d-dbe7-4c25-80b2-c6bf4cfa3065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf64ead-ab22-4a04-b441-54d8ec534692",
        "cursor": {
          "ref": "ed69bfc5-8e4d-43de-8fe8-0dbceae869c7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "85d2a772-8cc2-4687-a032-ded577edcfce"
        },
        "item": {
          "id": "acf64ead-ab22-4a04-b441-54d8ec534692",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7f17e50d-a06b-43ed-8c36-11d1da62aa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e3bf8-ca70-4e3b-8e7f-5b0796b82ae0",
        "cursor": {
          "ref": "a4b795cd-75a4-4614-8d20-36cca53b5a83",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c0e82080-481b-4034-a332-d2b75de0ddef"
        },
        "item": {
          "id": "f25e3bf8-ca70-4e3b-8e7f-5b0796b82ae0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8694325c-4072-43af-b0eb-cafecf7f3964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb4fd4-4896-45be-9d6a-0427a41f17d1",
        "cursor": {
          "ref": "160f1535-1816-41e1-acab-8e3e45643720",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aae740b5-693d-4e85-b44d-6c128f30d602"
        },
        "item": {
          "id": "defb4fd4-4896-45be-9d6a-0427a41f17d1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "537ffc03-6947-4721-abab-87543a92b4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52fae30-50b1-4150-ba6d-26166ba54108",
        "cursor": {
          "ref": "44a3a1d5-9ba2-4c4b-addf-c8eb9309068f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3c2cc34b-5394-4b63-83e3-dd1a85dcef9b"
        },
        "item": {
          "id": "d52fae30-50b1-4150-ba6d-26166ba54108",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a751d671-23e7-44dd-bb89-a9cf6dbcc7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74116b4-cb2d-4d15-9f94-d0c2bec8b164",
        "cursor": {
          "ref": "442bbc65-49fe-41bf-aa44-c7bdd358099a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3aa0149f-a613-41a7-95e0-623280d8590a"
        },
        "item": {
          "id": "d74116b4-cb2d-4d15-9f94-d0c2bec8b164",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4e45cdf7-a46b-4a2a-9082-6db90431774f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0454a8b6-2b18-4d89-ad0f-50b4304c156b",
        "cursor": {
          "ref": "94fd7ac9-2fe2-4733-8c2c-adf1d89ddbcb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f2bafbf8-42f1-450d-a908-6bcc7500a47b"
        },
        "item": {
          "id": "0454a8b6-2b18-4d89-ad0f-50b4304c156b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "309a01f5-c636-4121-885c-de583cf8cddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5c92a0-26a5-4887-9a4e-d35c33978f68",
        "cursor": {
          "ref": "b7941388-5933-4b09-94c8-07801870a18c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1768c7d1-5f91-42dd-ab00-df045b05af8f"
        },
        "item": {
          "id": "ea5c92a0-26a5-4887-9a4e-d35c33978f68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "db9c9046-8941-44f7-ad9d-4fd847679353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e69522d-ee15-4289-a336-5a6924892d1d",
        "cursor": {
          "ref": "3b9afa26-1e4e-4530-b7d5-137bf8f79b49",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cf2f63f3-2ffc-4c9f-a227-df0baf56f49d"
        },
        "item": {
          "id": "0e69522d-ee15-4289-a336-5a6924892d1d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "59687672-6b31-4c26-8616-799293cb4643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42622230-5b6d-4c4c-afd4-7d0e410a8686",
        "cursor": {
          "ref": "970d445b-d8e3-4498-813f-7a16cb8e4f05",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "49301b07-5416-40e6-90b7-5102fcdbc7e3"
        },
        "item": {
          "id": "42622230-5b6d-4c4c-afd4-7d0e410a8686",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e2e05c63-f731-46bb-90ca-0d4ec842e938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3633edcb-1709-4bb6-b358-61bbb45c14be",
        "cursor": {
          "ref": "bc4f5bcc-ac9d-4ff6-9160-876ffd81d0e8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "80e8a506-a032-466e-9475-5e6bb0f7a68e"
        },
        "item": {
          "id": "3633edcb-1709-4bb6-b358-61bbb45c14be",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5919b1a-dad5-462a-9c80-bf34d9b1ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c560f-fd20-4573-8597-a029b3513871",
        "cursor": {
          "ref": "cac5976c-4954-4d44-8d1a-051c48292661",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5162acc4-c6d2-4c55-9b93-680c96acb8a7"
        },
        "item": {
          "id": "758c560f-fd20-4573-8597-a029b3513871",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "769601c4-3e8f-41a3-967a-e9402ecd3425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828f0001-0895-4afd-81ff-44471fa3e888",
        "cursor": {
          "ref": "1374271a-058b-4cf9-9575-29c760e1ec44",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c4e09bb-9739-4dd1-836b-5164c6db6f60"
        },
        "item": {
          "id": "828f0001-0895-4afd-81ff-44471fa3e888",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c3721677-a1b2-4744-9484-ceedfdc97845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1af83-586b-42db-8953-642b66270703",
        "cursor": {
          "ref": "823ddb3c-8fc2-425b-b437-8e58f9b0f824",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bc62b110-0273-4a4f-a4bd-fd4e48064a0c"
        },
        "item": {
          "id": "f9e1af83-586b-42db-8953-642b66270703",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7b0cd400-72ae-4195-8ab2-0cc13eae7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dccd02-de9a-4b59-9b33-f0cc18c19e4b",
        "cursor": {
          "ref": "a5be5d94-5ea1-4f0c-9ffc-9cd86f155fda",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2883927-05f0-4a07-8d37-96e075b61ea8"
        },
        "item": {
          "id": "94dccd02-de9a-4b59-9b33-f0cc18c19e4b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c88b9286-950d-41e2-ba09-3820dd25d5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c11189-13ec-4061-b167-52d09eeb537a",
        "cursor": {
          "ref": "e3115747-d5c6-40a5-9df0-495f2a5e22b6",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e85e8d02-4325-4707-8940-e8f3cd014377"
        },
        "item": {
          "id": "13c11189-13ec-4061-b167-52d09eeb537a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "97730ea0-f073-410f-8b9e-0b9702b1d34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23795ad8-b3ba-48cd-8900-b5f5d0105708",
        "cursor": {
          "ref": "523414c3-4233-498c-8a98-402cd8ade545",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b2ea39ca-c865-4033-b401-08ef60a30cdb"
        },
        "item": {
          "id": "23795ad8-b3ba-48cd-8900-b5f5d0105708",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8adefe28-3a16-4c02-bce9-641f13ace2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4635ad-8245-4eb9-b802-1d00fe657fb8",
        "cursor": {
          "ref": "4f20b4cb-d5f8-4568-91df-db197b4db8ef",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "117c75a6-6e17-4719-a0bd-75963ab17cbc"
        },
        "item": {
          "id": "cc4635ad-8245-4eb9-b802-1d00fe657fb8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e031bdfe-9891-4e4a-9977-2409594abac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f895f4-96ae-4634-937e-080de6c05cf3",
        "cursor": {
          "ref": "7fa3c87e-877a-490b-b09d-7aaabd21f67f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "339fea30-bf98-4853-88c7-7f351c6e2e01"
        },
        "item": {
          "id": "41f895f4-96ae-4634-937e-080de6c05cf3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27721797-70d0-4a2f-856f-950eb602933b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da58f7f-3180-4833-8822-61188f1dbf94",
        "cursor": {
          "ref": "c516f0cf-da64-492d-b546-65ec0baffeec",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7e10faa5-0c43-4467-b480-5ab319168d53"
        },
        "item": {
          "id": "1da58f7f-3180-4833-8822-61188f1dbf94",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "199eec94-b6c2-4b2e-8668-abd5a4fab639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a480d1a8-ebda-4a66-9c0e-e3db0dbcccc4",
        "cursor": {
          "ref": "8c44972a-28e7-401b-ae31-9ee3f15d68cc",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1346becd-7023-4702-bc90-fa4f382c277f"
        },
        "item": {
          "id": "a480d1a8-ebda-4a66-9c0e-e3db0dbcccc4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d9cc19d-b5df-42c9-bfc7-bb9ec909f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd78a126-f382-41d6-ae9e-9e89d4d36631",
        "cursor": {
          "ref": "d0811e6e-6931-4035-adfa-b55bfb973640",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a31654e9-cd34-467c-9221-94adca78d462"
        },
        "item": {
          "id": "bd78a126-f382-41d6-ae9e-9e89d4d36631",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "145d907a-90cd-44c8-9778-7a33774034a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec0094-7053-4053-a312-138be48db016",
        "cursor": {
          "ref": "2d645e17-b0b0-4805-9849-e520250c04af",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "39f48835-92aa-4b21-9150-ae2269cf05d1"
        },
        "item": {
          "id": "b8ec0094-7053-4053-a312-138be48db016",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34a807c1-dccf-4f99-9f61-5c6f7709fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6dc605-9cbb-45d7-8a70-2c9247e66686",
        "cursor": {
          "ref": "4b55fcbf-b58b-4781-bdf6-a6758ed849a4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "29af298c-9f43-437f-8e02-eae61c6953bd"
        },
        "item": {
          "id": "dd6dc605-9cbb-45d7-8a70-2c9247e66686",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b74d5caa-e897-499d-8eb8-7cfb05678879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87089585-c36b-4165-9357-ea077aceec9f",
        "cursor": {
          "ref": "9ebe1f15-66af-4498-be9e-6918ab91c3ce",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c617268-2afb-40ba-b746-90f303228bb7"
        },
        "item": {
          "id": "87089585-c36b-4165-9357-ea077aceec9f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b8421402-9c44-45a3-84a5-79236b8e4433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9336b4c-96e2-451f-a500-debdcf047f2b",
        "cursor": {
          "ref": "fd4cb906-9233-4acc-a38a-a565a4bdf13e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "68eed979-bf87-4ea1-9237-5f2bc68aa56b"
        },
        "item": {
          "id": "e9336b4c-96e2-451f-a500-debdcf047f2b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "acc0f97c-6722-43c9-b6ab-101f0e51b558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6798947-5331-4464-94f5-645446222824",
        "cursor": {
          "ref": "3a82bdbd-c4c0-43cf-97fc-c732e8611390",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9b6274cf-a3bf-4c0d-bff8-0ca033493108"
        },
        "item": {
          "id": "c6798947-5331-4464-94f5-645446222824",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ed7c3edf-3f3c-4ec1-bc9e-10da02a64f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e559d0-6925-4254-958a-d9a021497097",
        "cursor": {
          "ref": "86cb36c2-a48d-410c-8297-cab15644ae96",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4e766a74-67f3-4ccf-9048-e32a95475cd9"
        },
        "item": {
          "id": "a5e559d0-6925-4254-958a-d9a021497097",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b8349b4c-e3fa-4ef4-a4a2-54ed02d3abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a6906c-e6f4-42da-a92a-08e0e426b1cc",
        "cursor": {
          "ref": "e56ad5f9-fd24-4232-8ae5-a84d2215f1c9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bc3ef341-7677-446b-94e5-46b62a544454"
        },
        "item": {
          "id": "e3a6906c-e6f4-42da-a92a-08e0e426b1cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4aae06fb-63fb-40e2-9f38-1e8692fdfe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bfe46b-6f19-4508-9aed-f081ff24edda",
        "cursor": {
          "ref": "77ecd961-cd85-41a6-b8e2-002f1497ba62",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e8c0a29b-7d64-4da4-ba85-c56b4f65ee86"
        },
        "item": {
          "id": "92bfe46b-6f19-4508-9aed-f081ff24edda",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1a7eb78b-25de-45bc-bf5c-dd62a0f03729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023fe044-6ada-497d-8c24-43233c20398b",
        "cursor": {
          "ref": "5419355c-14d1-42ba-b6b3-33766f9ca038",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f8cd9c50-f887-4e6e-a625-7b75ac3efd4d"
        },
        "item": {
          "id": "023fe044-6ada-497d-8c24-43233c20398b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "22e45ae0-4f57-4039-b5ee-840220de041c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e65024-4cd9-4773-92c4-36cb09e6928f",
        "cursor": {
          "ref": "ff44beff-0211-49b2-be48-1c3b76d5fb41",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c4ad0a9e-83fe-4e4a-8001-d9f2fbd62bc1"
        },
        "item": {
          "id": "a6e65024-4cd9-4773-92c4-36cb09e6928f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a5a9ea4-6c02-433e-94ca-ecfd4133142a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c08c434-872c-4a2a-b89a-98cdde8e184d",
        "cursor": {
          "ref": "8f1e661a-7a46-4497-8913-47a2a3705c32",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a446ae48-f46d-4ec5-a5fc-d7192ee8eab6"
        },
        "item": {
          "id": "4c08c434-872c-4a2a-b89a-98cdde8e184d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "96db6c47-4c68-4bd5-b9bb-22ca662166a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffde04e9-20bb-4e4d-be62-0bb62ade9c8e",
        "cursor": {
          "ref": "83e88a9b-6f52-4621-9459-e81d8174a806",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "14de069d-2b3c-49d7-b12c-cb4f744e120f"
        },
        "item": {
          "id": "ffde04e9-20bb-4e4d-be62-0bb62ade9c8e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f43d606c-ee3a-4e61-88f5-fa7ac9187a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b9d14e-e006-4f86-b4f6-c69397446f08",
        "cursor": {
          "ref": "adcf9125-4447-488e-bb75-22871052dd44",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76d09d28-cd14-41d5-b4a1-deb49f7a9518"
        },
        "item": {
          "id": "59b9d14e-e006-4f86-b4f6-c69397446f08",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "900c93fc-bffc-4e67-b48b-f61aa0b1cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499838b-ef19-4645-9502-11bf36492d95",
        "cursor": {
          "ref": "b2366190-e287-47f2-bc97-418fc3f4fbef",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8846d37f-cff1-4b1e-b8af-95742736992f"
        },
        "item": {
          "id": "9499838b-ef19-4645-9502-11bf36492d95",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "73fbaee5-7c03-4e6d-8daf-54fb2fd142cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7232c2-b090-4d4d-8a6d-1b3b6fc10d79",
        "cursor": {
          "ref": "70ba23ff-967f-488d-9ee6-416271ab264f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2cfa250e-8fb8-4b02-af72-7caae1c24385"
        },
        "item": {
          "id": "bf7232c2-b090-4d4d-8a6d-1b3b6fc10d79",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "387b43a5-00e4-427d-bb2d-c3a7ca479353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da1adc4-64c2-4c75-b65d-6f215a93112c",
        "cursor": {
          "ref": "f6714bdf-9356-458c-90bb-75c6aab51c5e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8ed42602-df5b-418b-9c8c-7325d51e728a"
        },
        "item": {
          "id": "7da1adc4-64c2-4c75-b65d-6f215a93112c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6d7fcfc9-c16d-43c0-bed2-c98123aecdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec502de-e0f2-4b40-b3c7-34b6cfda790e",
        "cursor": {
          "ref": "75a5c97e-79ee-474f-8657-20051121fcd9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fa28c4d1-1863-4c0c-a457-77328b879da3"
        },
        "item": {
          "id": "cec502de-e0f2-4b40-b3c7-34b6cfda790e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8d5071f3-2e83-4cf2-af5a-458be760abd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e2be9-99a3-4907-ab5e-87a2b24598f4",
        "cursor": {
          "ref": "3e1bece1-340a-4b77-a7e3-4c54c8eb94c0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8602c654-7f26-402c-b5d9-398c1166f316"
        },
        "item": {
          "id": "157e2be9-99a3-4907-ab5e-87a2b24598f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "556c9593-fa26-416c-ae36-a46cef10e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58b70a1-61ac-4c15-a9c0-fcc48e35557c",
        "cursor": {
          "ref": "ff55d6ce-223c-40ce-9dea-951b2ccbd24f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0900df9e-5774-45a4-ad62-db18fe3d58c0"
        },
        "item": {
          "id": "d58b70a1-61ac-4c15-a9c0-fcc48e35557c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d91a8232-4a18-4289-b20b-6ddf6183defe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1ad005-be01-4b64-8e61-f32eee3839ed",
        "cursor": {
          "ref": "3194c81b-b2c2-4157-8e0c-2f1705a209d5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bf3bf76a-90f5-44d6-80c3-69c6b851f8c4"
        },
        "item": {
          "id": "cc1ad005-be01-4b64-8e61-f32eee3839ed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "42a4159d-1871-40e0-ae86-bbef79c425a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bc3401-54c0-4c15-a5fd-45839692d0d0",
        "cursor": {
          "ref": "54ba2be0-7551-4791-919a-2e6c366fe5b0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d06cd890-a382-4ce3-a597-02af2983663f"
        },
        "item": {
          "id": "27bc3401-54c0-4c15-a5fd-45839692d0d0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94a4025e-69ea-49c4-ad1a-408251069f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d43b4d1-fd00-4b30-8502-c37a052b35d7",
        "cursor": {
          "ref": "f21e9d17-9f80-4d14-8324-ccee73b2a8f3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2b9cf0e5-fbf0-4452-ac6f-01d68f1f89d4"
        },
        "item": {
          "id": "5d43b4d1-fd00-4b30-8502-c37a052b35d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d101a56f-46ff-4231-91ad-f70f537f8bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63e5f59-ccc1-4d86-affd-e6b006f01d76",
        "cursor": {
          "ref": "1ef8fa49-a781-4d4b-93b3-80dfc8885a6b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "babc3d58-36fe-4176-bc43-994cac9bf885"
        },
        "item": {
          "id": "a63e5f59-ccc1-4d86-affd-e6b006f01d76",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58ced5a1-1a0d-4473-a84e-d30031df3100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dbcea2-4dfd-439a-9b0c-f35de33cea17",
        "cursor": {
          "ref": "d1bf54ab-d3d0-4cee-8df8-20a9a2d6362e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "29580ab7-2f1d-4677-aaf5-7dd4cafb0391"
        },
        "item": {
          "id": "a9dbcea2-4dfd-439a-9b0c-f35de33cea17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0cc267bf-b60b-4681-a6d1-0e1aa7aa1353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6a079f-a95f-489e-b8fd-dd29b180e751",
        "cursor": {
          "ref": "c0baddda-b790-47fe-a665-e9f58dd10b53",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "04f4c5a3-a742-4953-b599-c4591db7ab24"
        },
        "item": {
          "id": "4f6a079f-a95f-489e-b8fd-dd29b180e751",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c1b3c4a7-d1ea-41cd-9c31-33370da5f80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b5c1d5-e913-4e22-91c8-b24d7582f119",
        "cursor": {
          "ref": "701f90a2-e8b7-409b-9206-77cb010a593e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "83f5687c-8ae6-41b8-871b-f2c3f57b03be"
        },
        "item": {
          "id": "59b5c1d5-e913-4e22-91c8-b24d7582f119",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09daf072-2411-4a47-be2f-f50646b220a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf4d4a1-5417-45b9-9716-fe1f935196a7",
        "cursor": {
          "ref": "6602523f-d819-436d-9850-51503726677a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "de1c72ea-3ba1-44d2-aecf-f4fff0c6a015"
        },
        "item": {
          "id": "ecf4d4a1-5417-45b9-9716-fe1f935196a7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "df3ffcd4-67d9-494d-a6ee-5da570dae39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cbb0c4-1b08-4017-b338-e679cd36c84e",
        "cursor": {
          "ref": "38af716e-057f-47cb-8302-4ba29b354b4c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5490b3d3-cb15-4287-b40b-253102be171a"
        },
        "item": {
          "id": "35cbb0c4-1b08-4017-b338-e679cd36c84e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5a85353b-6d7c-4e8f-909d-dc0f440901ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ef2005-9564-4d6d-8e7f-5ce836822b5e",
        "cursor": {
          "ref": "a0393ded-fbd7-4d18-a5fa-155aef6c201b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2c0a31af-7ce9-4ec7-84df-136edbe80a1b"
        },
        "item": {
          "id": "30ef2005-9564-4d6d-8e7f-5ce836822b5e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f4c56cf-34f1-462c-a6eb-9cd16415ce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad93fc5b-16a9-4168-b16c-2a5c70626f66",
        "cursor": {
          "ref": "107e9aba-03cb-4a95-83d3-da7ff643b7f1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "609e2bd3-1fd3-48cd-b346-55ca6ddd3b7b"
        },
        "item": {
          "id": "ad93fc5b-16a9-4168-b16c-2a5c70626f66",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "caa218c9-44c1-47a3-809d-4f8e254d655b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a35daca-62d7-4c4e-836d-1419a81d88fb",
        "cursor": {
          "ref": "61046bf5-1abe-4fcd-bc11-8085b91ac049",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "de612d1d-40ee-49ec-8614-c41f6a5b415c"
        },
        "item": {
          "id": "9a35daca-62d7-4c4e-836d-1419a81d88fb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a6d7f7b1-b895-4cf0-93a7-a482ef3454f6",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed03a3f-9039-4db8-b03a-fa0ddfbc249d",
        "cursor": {
          "ref": "3bc3ac5a-3f84-4c11-9da3-99ca09d26eeb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cdf3fe4f-c0b8-4b88-ac85-7ef823924b50"
        },
        "item": {
          "id": "9ed03a3f-9039-4db8-b03a-fa0ddfbc249d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "293bcaa0-455d-44a1-80a3-85f31964edc8",
          "status": "OK",
          "code": 200,
          "responseTime": 1406,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4d3b09-9c0c-41db-b968-825a96940c3c",
        "cursor": {
          "ref": "0fc5fc4b-440a-4b4c-8174-0640b3c8e6a9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "367aecc4-42ca-40e0-b659-9c27204357d2"
        },
        "item": {
          "id": "0d4d3b09-9c0c-41db-b968-825a96940c3c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a0e4812-28c8-4dc2-9ace-ef7bad2f40c3",
          "status": "OK",
          "code": 200,
          "responseTime": 1360,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096a7de-cd1a-4102-bbb5-d2437e6320d6",
        "cursor": {
          "ref": "7694f0e3-9e36-4ab8-a2d8-4d9446cc3a52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c55c60e-8dcc-4128-ba5a-ae9da1b9e191"
        },
        "item": {
          "id": "5096a7de-cd1a-4102-bbb5-d2437e6320d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dab36d42-2e69-4ee4-808d-de45fc85d54a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5096a7de-cd1a-4102-bbb5-d2437e6320d6",
        "cursor": {
          "ref": "7694f0e3-9e36-4ab8-a2d8-4d9446cc3a52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c55c60e-8dcc-4128-ba5a-ae9da1b9e191"
        },
        "item": {
          "id": "5096a7de-cd1a-4102-bbb5-d2437e6320d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dab36d42-2e69-4ee4-808d-de45fc85d54a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ea9dda-e026-4ce3-9a4d-fc12376b1511",
        "cursor": {
          "ref": "153556c8-d5fd-49f1-9afe-6299c0e314ea",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "163b2437-630e-44b2-8d67-266ecb5b7dcf"
        },
        "item": {
          "id": "25ea9dda-e026-4ce3-9a4d-fc12376b1511",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92becbe1-ac29-41f0-ae16-c506866030c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2e67ab-3768-49c1-9e7a-857b033c25f6",
        "cursor": {
          "ref": "dd8ae6df-080b-4fa5-bd9d-294f4d601c9a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b8e2f48e-eaca-4cf4-8c5b-9cf75e3cb4fd"
        },
        "item": {
          "id": "fd2e67ab-3768-49c1-9e7a-857b033c25f6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1524bbd1-8987-43cd-a4c9-b9b139b4ce1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}