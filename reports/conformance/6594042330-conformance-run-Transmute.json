{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6b783e9d-16a8-4769-992d-58e8ff88db45",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4e4369f5-5aa7-4bf6-9af7-24af88678d0e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1150fc5e-5c37-424d-992f-b62402dea486",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a23e8cd7-6859-473c-a3a4-d2cbe658c2f7"
                }
              }
            ]
          },
          {
            "id": "eb6241db-b197-4e12-864e-23c31c4dcb9f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "840cf419-5bc9-4a40-a71a-e6b5b8f70790",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3ca9d3c-18ba-4c01-b13d-2908f932475f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f4f423e2-3650-49eb-bd0d-d75f520acd7d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1b02b454-00a8-4744-bc63-c9a0952aeae2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a10cce80-d9e4-4026-a2fa-c44b1e5078c6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3de2703d-d8b9-4a71-a6d6-3ff8e6c87acb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fe07ff1-7217-4129-9a19-745008685c48"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "885943ff-feb5-4c6d-8dc8-51a66209fff0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90ad4d56-f04f-46f2-a3be-690137df013e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "520f98ab-a22b-48a6-a99a-f1e9cfc0323d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6f751b0-7501-40fd-937f-0698a6470d2b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "570e3338-676d-4d96-ac04-12ae2e368abf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "40dad62d-aa34-4a8b-a736-d265b7c10ce0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e83ec1a-996a-408e-b5ac-bb17eeba8c58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d7bfb74-54dd-402a-9334-9e38204d1114"
            }
          }
        ]
      },
      {
        "id": "9d2c42c0-1cbe-482b-b59b-b07eb13f695b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1600522f-d58a-43db-90bd-c8e427dd009c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7038440a-fa6b-41d5-8d5f-736a25e05145",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5dd5912-e9e9-4483-a707-6bb107e71af3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4ba43b-8acf-4b61-8850-95c50e091400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "483622a1-62dc-4c37-92bc-3948d19bc744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8027eba-5644-44c4-94a0-8f9cac04aa82",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e44c17-065f-4bc7-b05d-e78ee12da1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3d5f288-655c-44ef-ad12-d89705fd41f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc36c6f2-682e-4d94-9aa3-bd648b58360a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9a74f1-4c82-45f7-a435-986e6cc0e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2618938c-3c6f-4d10-aca1-6d01f769a928"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0beacecc-b590-4b6a-b956-cc530faf58de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07cc3d53-8db0-4020-a879-231a661e1481",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80997497-3574-4e37-a6e6-cfd2c41c5cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "035c26c0-515a-4486-856f-3c1202ad80a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e5837b-9bbc-4d52-88b8-0afea54d7039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfd2fca-afd1-4cde-b033-4fb478b25b76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c517ba36-17d5-4444-bbf5-7383c5277715",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f3985a7-84b7-4537-b80c-f4e57667c353",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54a2473b-7896-4f91-b1b1-4aec95589321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4ec77808-77a6-46f9-929e-0563421b31d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3ab647c-4a3a-4112-9fd2-91f49e608fff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9495855b-0b76-4bfa-8fc2-31e8c47be7e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3f011f4-d76e-4431-9afa-964bf08a83af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5962cfc8-5fc7-497b-8de2-3f3cb9272acb"
            }
          }
        ]
      },
      {
        "id": "a35a2ddd-c91b-465d-80c4-548cabaadd13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3760d954-358e-4bdf-9e10-8ca229730b6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f857251f-8caa-4f0c-a69e-d44aa48378ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9c625f2-e99a-46fa-becf-ccfbbe154637",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fc4961-f68c-4c6a-8031-c902516ac058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7366e9d-89f1-4d88-8581-1991df5690f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fc5c93-d94f-4888-b0df-341caae277b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182ad175-1c2d-4a40-be4c-763f71a03311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb2f225-52d4-4839-b732-4a287c49adaf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcee1e9-e632-46d8-b959-e842ef384535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6519e55d-56db-4a3f-802a-f613efb40220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432320a2-7427-4c5e-a4f0-dbc788d2055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5579217-7615-4fd9-ad40-db1df33cb89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65bd747-52a8-491e-936e-ed947669d708",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8f4c41-ad49-4f4a-ad3a-543ca70459e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2e2319-9dbc-4e78-a223-07f37a480960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a4271-1201-4ad6-9b9e-9ba72233a438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c464278-360e-4413-97a2-19394fce0444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5730b2-8b68-4832-9861-caeb144701e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d760b251-3670-42c9-a07e-df1c490006fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20bcb79-a149-4761-8d67-a98b5b75eb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec2e6c7-80c8-4439-ba7c-f1bb3b13c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c31800a-89b4-4f18-a214-949b26edb891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254f635-75ec-4668-804d-64529d5317f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f433794-e1e0-4d5d-be42-92f6e78e0871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e4c186-0147-4c03-b5de-d2b310e2d166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d1fc1d-0dcf-425a-a322-49fea8297916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc7d940-ce05-43af-bdc7-63f1343c7e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9748d9-a7d5-4de1-ac99-ec2e869c5eea",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2add59c-4de7-4ce2-acc9-87f254f9d410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbd3277-c2f0-4139-9f50-34f6784c08ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa6272b-a0e3-46d8-9abb-a00f3595384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "048350ab-4333-4789-9455-85fb9dbce68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52407e4-16be-4cda-99a3-17713ddea3ae",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56b4277-5166-4d68-b9db-4f5e546de1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbabf51-6a38-41dd-8f4a-92cb0b2097aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38789c12-407c-42b5-88e9-05bb526d3e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bd3fd6d-c51b-4129-805b-5dd3dcd347ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e146ef0f-304c-44a9-bb53-92f0ee3196f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee898da-00be-4597-a7d5-51b4ebc87a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc0ac12-912f-4445-aa97-6ed31ea2b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419627c0-9e2c-45e0-96b0-c6aad7ff3788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3862245-c1b0-46a2-a607-c23cfb03cadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3b44e-fbc2-4138-b724-93fcbb5765d0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383da903-b415-4dee-ae33-9e376aac9bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610d2414-a884-46ef-a924-54872386e2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953418ca-1344-449b-9cfb-6e88e7be2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8069aade-cb88-406f-b02a-573a4ff3177b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0b00af-6fa9-4b8a-b16a-6e607007e590",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84352466-1946-440d-b235-cf55fb028231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb71099-5296-4648-8282-eb6f33e0413c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b3c04b-d807-4fde-8be2-e28b0179a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ad498d-012e-48e8-86bf-5247f3282d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0137a47-3bc9-4e08-814c-4cc2fb1d7ac0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3cf26-a52a-47a4-8522-521443f4fbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feaba0ac-11ad-46d6-8bf8-3bcabe1ab03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0d5619-c49e-41d0-9074-d0f5c5d72b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37a2197-f486-4098-8237-6590cb2bfca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0bef7f-3f7a-4831-869f-06970584dbed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2c1f80-5ad4-48b8-b503-8c2b44d255c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b22a5e4-4215-4d0c-8fdd-3cc7f6eb7458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691049b5-6564-4516-8be4-5c941a70edd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44110eff-a583-420c-b81d-f6deb76cd941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81673adc-8ca8-465c-8edf-1c29ab85f6c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6c94da-aab2-4b68-9a40-150d7d6c38d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7499bb41-c1c2-4c33-92bc-18e1ecf56c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39cf862-0494-4627-9b73-fbeff20db9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cae1937b-89ba-4006-896b-a8cd4ab3c2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9851bece-ab62-405a-84de-6a7a06f454d2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0a766e-1433-4429-89c0-91c991a9295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70908282-347e-4ccf-b06c-c0a32831cf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f347bb-541e-412b-838d-0c911e0bf8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e758b6-3bf7-4ba8-8a81-579cb6c20cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45441b3f-5f2f-4344-9cf5-a4c38e18ef7c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2e00f-9616-4269-a6cb-ffd99d3f0342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ca2dc-21b1-4b33-968a-4b8c9ba3a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3b57a5-fed8-4482-b364-dc9beeba5ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb0c90e-89b4-4ec3-8752-43dfc36cb63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa6c99-8aab-43a9-94e0-c305f9b79be5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1281e2-0767-453d-9cf9-b386ea239b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec20e396-bd49-4cae-a86e-fdceddd79904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1c4eb2-1eaf-490b-b795-da46d6bd8b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e32ef2-bf4a-42b1-8ee0-50a6ee2ced86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b91b93f-c8bb-4af2-8700-c8c37204d171",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b840f0a2-cae8-45e2-94d9-6e9a4281d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54c98f6-1916-4366-9410-a55444998f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172047a5-9980-42e0-ba2a-8a84ad3e8485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca905bbc-1daa-4252-8ed0-625c53aad70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f21a79-0afe-4d31-9322-d55846ad8f36",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4c63e-5ed8-484b-8697-cefdf289af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f2d7cd-5013-475d-b2ab-51c4bbdd13f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc89a6-f58c-4ac9-8e94-115302e781be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b62fb27-a2d1-4d06-8cdb-7fda73d9a3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7efe6-62d4-40f5-b6d3-2e4e47ac15be",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaa40aa-2601-4167-9016-fec471a8c018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1f581a-9abc-4630-825e-cdcba4b75311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835fcda0-5fa3-4326-959b-a74e3dd7b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29367e-b59b-4eeb-8cdb-a244fd4967a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b63cef-c664-4523-bd15-9a115555d1b0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da552c11-b30f-4915-b806-efbbbeeabaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa457ce-9ad1-40dd-9e47-78e04a4641d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1818d0e-ad11-47c1-9646-daeb27bcf4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b07cdd-e11c-4690-b770-9d63a66cc877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fa47eb-995a-4bdb-83f3-8e1e4a63aa4b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4051b81-11c1-40b4-b59c-0498241d83a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b004ed2a-fa72-4fed-bd1e-9f5bb720a63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e991ae-17af-4adb-8bd7-9a15d77f79d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dc6934-f6c7-482c-a5a4-9a6e205cb29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22597918-fd46-4ef5-a7b1-01f5d918733b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a4d92-1790-4c7c-b9dd-cc663ce1beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165749ba-3125-4a51-a187-ab8a4139bfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c191e-4d82-4766-afb1-bc2e858473d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d497f-a2a7-423e-bee9-65814d3636c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b60d053-9cb3-4608-80d5-298ee055db56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb278b2-50f8-4ba0-92c4-28767a4332b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816ab551-8635-4ca3-a910-8b23ffe1e8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170493f9-3cf3-4c94-9287-67ec5539e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c60115-9532-4bb7-b2d7-f46edb21a7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860e440f-78ef-435f-931b-66681bdd01e9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97900724-f41a-4666-91d3-a895ad515ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ea0cf7-30e1-422a-88c8-1a9ed5c11d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ece3d-19b4-4c82-a35a-0dfab3a711b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc12d3f3-5f4a-4ffc-ba81-07c4bac8ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8282e15c-5c27-4597-bff6-f24f5661ae62",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d6d553-52ee-4a91-ac43-102a246abde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499abdc5-f2f5-4640-8f3c-8ca957509823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab960cbf-c338-42b1-92a1-0517a19d97d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68953c10-72bb-42e9-a62d-8821fe234b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c450d2-4b05-4993-84d2-1b35251540c5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60b1096-6c42-485b-805d-31c2032a0731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a299ab-4b7e-4be0-b9d1-da141caeed69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3f935e-cfbf-4ccf-a4f5-a9675e5622b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db19dcf-b4fa-4c71-8a8e-6c80edbdd42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74a10a2-c4a8-4ed2-81ee-ce7a212648bc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46fba55-f083-43cb-a49c-fd8d414ed356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9490276-4988-467e-823b-c821c3cfd85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544651a7-7a8a-476f-9dbd-4e047e6751d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8be4dfc-6521-46cc-94f5-da831854b585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88010dba-32a4-4296-82c7-c2e16bf4180c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398b4d43-8cba-4ec8-8327-8a3087e0d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b2d0b9-1f80-49b1-88c5-0469f408ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d3f2df-c0ec-4048-8344-bcf016880d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7441ca-4444-4a4d-abca-6b3915afc6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9529b4cb-a422-458a-804a-19488b3c967c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2eba25-8be1-4e28-9e79-ef25a89466ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77268230-d354-4ea3-a439-aedc6d9195dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4e3eef-23bb-434d-92b7-f692268546d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb7a7a6-6d14-474b-9dee-765983fbb4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01de7565-032a-4a01-a6c5-e5c4c2375fc3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ba28f1-96ea-4487-8493-0e3198de04ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b38c633-9ab0-4013-a8d9-4e1e52ff2194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a195640-2a84-4945-b5a6-19dc7cb959ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f631aa-e844-4d37-8c23-90e9ba018ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22394045-11e6-47d4-956b-fb276134c584",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c0d4fd-b453-453b-b2fa-f699bfbd9659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9524f6-c51c-4013-b9a5-429ff28ec79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e6e78b-1cd2-4718-8139-36ef7ad8e8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c96157f-7412-42d5-ab1b-85a654a4e112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690969d-c9d0-44d3-a1a8-eb840939b115",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c13463-6c32-46b7-9a1a-a19046d80585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d844b1ad-bf10-45cf-b931-30119f43fec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba4620-114c-44cb-8846-319883760b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5930ca9e-b476-4d76-a71f-9dfc82c399c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9160f57a-530c-4c09-b06e-7a3b822a5e14",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09271555-6977-4cc5-acbe-c565fd598741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995dcdfc-d3f1-40d4-aefe-f7bc484c3311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ec6727-3a89-4a35-a8b3-bd6245fda506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57df81ca-78a1-40b2-8d8d-734260d11198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd00cb1f-1201-4304-9f10-7c6b87eb8df7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3581ccfb-a93b-4563-bb0e-2360ab075831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a20c27-4605-4996-8036-2d58d6567f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caecd17f-421e-4497-85f5-aaf23f1633fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4367f7f7-3a9e-424f-9c2a-085d058de52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470b0c41-d0e4-4ac7-b028-601ae026da58",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583fbc53-6a73-493b-a857-ff4f1fab4dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f4e814-e877-4989-a4a3-db6ecba83720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcb37dd-266d-49f4-bb23-7b9ab96872d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "226e9499-9655-4d68-8aa7-ced54afebc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6697ced-b109-4d5d-867b-2b0248c05a7d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96035eb7-2a37-4a9d-9b6d-5809418f7752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97733614-0003-4ac4-b91b-3101a5fcf8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65c5fa8-e38b-4174-bf87-5f5cf35d674e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b32e35e2-59f3-4d83-9036-50548e535904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756b9ce5-77a3-4965-95e5-cee869bed79e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e7373b-2416-4dde-858f-41d3c9f2b0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddbfd8b-444a-4d61-b964-bdeb7b9788e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2d9ed9-868b-431f-b04b-6d7c3798ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8af820-db5f-4728-a930-6d9aa7e4a767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb83d31-d2b1-4bf1-8ea3-53c57521bdba",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30e028a-bee2-4058-9541-8d505adc9e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c028d0-7e8f-4741-9987-4a6f2042adaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac88cea6-db22-4dfe-a8e9-a4a870239edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5a83a2-ca83-4e9e-b5db-9331a3feb648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b25c37-0aa7-42c3-9492-0e8781a84e54",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ab854b-9ce3-46cf-9928-418514fa3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dc47e1-bb72-4464-87b1-5534631ba611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004e2d0a-e07c-4095-82f6-aea45459c593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb38e2-b9d4-4d70-81ef-02cf2993ed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0790c6-4ae1-479d-bb25-a5637c0a356b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493dc562-cf0c-40d2-9aae-19ffd1b3667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a30978-0c80-4f6c-aa95-b08affc1d5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b60175-4507-4a2c-b9a2-4521d5524ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f3f306-7708-41e3-8c2c-1b7b4fe9e285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780b855a-9957-479d-8955-01bbe0b86f49",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aeac0d-54a9-4453-9fdf-91fe8f75277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5d9b73-9ad4-47b8-9990-8518596d0365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30946c29-849d-4d75-bb0a-97687d239e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acee566c-15f2-4e80-b33c-5954edc021d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a171ad7-b991-4442-9e55-4b8c11ee9e31",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6654d9a-70a4-48c5-8a16-bb52d9585248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10803e79-240f-4451-8e75-bd1983a3eea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d846d-c7ff-486c-a262-f1843e945065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c696a4b1-12f6-4910-b824-bd1a582b01f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb32d4-688d-42be-9dbf-03c92294d758",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d66659e-ec2e-48f3-999d-bc6a9379f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf84289-c09f-49e0-982c-389e998211cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14841acc-2979-4ede-a960-0e4bc41db2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1354ab66-8dcf-4379-986b-3fcb3519e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360c588c-d6b6-4724-ab38-abf4c719be02",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279b713f-c167-4842-8c09-f82361fd8427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e596a31-2f47-4aba-a7e4-6cbeaec477f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535f5a3-932f-4b7b-af57-d74d425b88db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c86a87-24ad-4d35-93cd-800f5165a281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5174f8c-6ede-430f-b404-7685cc1d90bf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caf5790-f9f7-4bf2-b45f-3a720838dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a997f5c-5452-4c95-a78d-556b9d2a7d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d372ef-d47a-49c5-a827-8c631893abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d66ce7a-271c-48ae-955e-be9ea3e35523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b865a3b3-6f56-416f-b519-5211fb525d2b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124817e4-08eb-4459-a8c4-b187802649c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb88730-2a86-4aa8-a837-a5b2066f4004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f191a0-676b-476d-944e-e017455c3297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "691dcb42-1b37-4491-8152-c150b63109da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdedcaaf-5a67-4b3b-aefb-0efd99064d7d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2b616b-28de-46d1-8a9c-237d94635de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d098572-ac5c-499c-a46a-8edfde9884b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a498a279-0ec4-43ac-b5b7-60e310735a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf110a45-e14c-4c01-8326-1e1e6f200b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45adf960-1e12-4106-993a-2a39f4841655",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764bd24-be7e-4bd2-b40b-7912d3b00dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0998747-fc8a-4709-ad2a-f80a5fed4da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fa066d-3fe9-4793-b3b6-e464f2de0fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "403b4329-7780-4585-a93a-cfeee7ad2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803459e8-8fd4-4c19-95f9-98ce23767f79",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf6b0b-3c3b-4151-bcea-c664842d9b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c17283-cf07-408b-a23e-672f0b648302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0a1fc1-1a3f-453c-ab6c-28f9fb7cc9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50df50f1-b96a-46e7-bf3c-e3e2b5a309b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb4da3-f420-44ab-aec7-b5970a7a3e9a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06699847-2143-4dc5-9388-ec257e6d5484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a45b40-1eb5-48b4-aff7-e0d54fddae9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704abe0b-a996-428c-95e9-2eb35aa5cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bfa174-7193-4b9b-b44b-06e6227e1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92af0b09-986c-4efd-8433-37f79ee13e19",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5444d523-342d-4732-84e1-88cef868c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8df5ab5-cb8f-4f64-9811-deebd142ca9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe704348-308b-4e3b-87fa-9043def6ed3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be19052-8b7d-4bb9-af39-3c0a1e1ebb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151bd433-2e70-4bfe-9b3f-36052c85cba9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5056f39-5ba3-4d37-9b88-a90f0a3525d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ebaf5c-44b7-4ccb-9676-2fc45d4e71f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238cd693-227a-4e22-9617-1dc73625e0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5d2c90-88ce-4ac7-860d-c49800b647cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ae0074-a493-4a07-8bcd-14552f84204e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b538cff2-d01d-401e-a267-08e71c5ead26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908cb209-b1bf-4733-a8f8-4ac8ae49824c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c5d76-27a5-474e-bcdd-f529d5f760c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "672375ac-7e14-4223-8ce6-89ccaa91573c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abf39b6-4fec-4dfd-b127-b6d28da9a6b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ae341d-bcfb-4d2b-86bb-ca750df0177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069292e6-a4e6-40fa-9922-bb96191622a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39eeb54-4644-4fb2-bd43-ed7025720a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6126d6-a136-48f6-98d4-6564932c1295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f01a87f-835d-4d97-9272-430a364d9da7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbe1d6a-8475-44cf-989c-954b7712db39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a83a2-a12f-4650-bf58-d1b98ccd81c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af26392-dd62-4749-a6bf-7cb7a0810444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "900bf2a1-b91a-46fb-8945-806997b8bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe6e97-50ac-4486-8d72-b010140086dd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a976921e-9953-4b1d-8299-b77bbb0b7666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d493ec8e-cb37-4bd4-993f-d8f9d427f81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec5beda-0613-47e0-80d8-eb778d3c8cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b61648fc-fff4-4fd4-aa45-c37e34915753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd41ec-9baa-41ae-980e-a53d1e6c8d36",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779e7b67-170c-4bad-94a6-665a74c90a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa87cf9-eb3f-4a40-ae8d-8e4e8533d1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4925b1ab-35d9-4b93-ab91-de0d45e287f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b791992c-e575-48da-8205-07584201740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173d27c9-57ee-4ead-b6c0-661cba821954",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837c94a9-fe0b-4d9e-8ad3-3fbe2f8ab993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91c90b0-5e03-43b7-a8a6-3e080c20bb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb453a-8645-479c-809e-ee0d28204376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "483b8feb-d8dc-4c8e-91f6-21309a7e5451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12a97ec-1160-4af8-bcaa-1c82af0f2c6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0fa47c-4cfa-4ca9-86c1-6ca3c96eefff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69b19c8-fe65-4d7d-b806-76c1b9437eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2ad1c9-e3b9-4586-95b4-f1968b6e592f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3447201-8a05-42a1-b6ed-963af08172f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb2643a-f68e-4787-b460-0334fd3dea17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f7de0e-63ed-4c3f-b3cd-0edff7c77225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c60e87-fa88-4710-a5b0-7c659ef67ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080e9564-bc8f-4486-971d-7932405287ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "587e0c89-47b8-473e-997f-d1b4166766db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a744844b-207b-4837-88e2-c1c83eb6379e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73806ad8-0526-4fec-9709-0f0f21e3a74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039e0ce6-ceba-4c27-85f9-48b602401a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f49946-eb23-486f-b679-8ae9747b277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b351187a-f03d-4ec0-870f-746bd77fb834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806a1ba0-74d2-4f47-b1c7-cb70d509bff4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc22f2-1b42-4ed2-8041-17da070b432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02239b79-d4a3-45fd-a02a-c9f27adbeef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c02da-e881-4b88-9529-3784df856cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b5afbe-6b14-446a-94d6-adbdeadf3951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197cdd7f-e48b-48dc-b23a-277544a24b38",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5993e9-bb58-416e-9ccd-a863b81f8db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072207c4-fbf2-4041-904f-b1984339f248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35c2da-82f5-4c1d-a7ae-bd45123580c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ea7672-7093-49ad-b155-0fd1e1de97c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c95d93-cf9a-4e0f-8011-72bceb0ac5b5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8693599f-5d3b-439b-a3de-61a8aecc4cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d5ccdb-d2e5-47ef-be11-26b6899e72a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d3897-1bdf-4c12-bce7-aa239e846681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efcaf96a-e0b6-4339-ad07-74c57d9f845a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f59487-b6f2-47ec-9d77-4b4dacce816a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2331b6-2ddf-4a70-ad03-72dbf52ea708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3241fc-dea3-4184-8bd8-94263fa43373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fdc112-d8ff-469b-b2bb-8f4074be385f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4617f791-4984-46ab-89ec-f1118c85ac05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d2b8da-abae-48b9-996c-0adab848231f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686e2525-d6f0-4e09-8123-ab5146b24c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef2ae03-c69f-4853-a732-9dccfd58bcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ad99a9-197b-460c-a7c5-ed36b662ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffef61e0-7b49-423d-9b20-c403e5201060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cc82ea-bcb7-4f56-a532-8c6f44b9688b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709d9e13-e720-44e4-861e-6912cb4a33f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb2fda2-73f5-4bc5-8740-afa8ae91988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0c4c7a-5c5c-433d-a331-24c654162f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b209370-eefb-4d4d-87b2-a6d7fab1c34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea72e393-4542-45c7-b1b1-5b029c288625",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be35bf3-6afe-45c0-9d51-f200111b1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02b6820-334b-42e8-9fcb-2790e077a079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60006c6e-f021-4666-aa3c-db9f6aee71a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42ea23d5-fae6-4d23-a4f1-4af8c34fc701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b680d0-b8b8-40ef-adf3-733061f46b11",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d78025-3ca5-4021-a06b-a677f57dd8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e3a149-c49e-43c8-b627-6e3e1f71c65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a153baef-4861-4bad-94bf-edf80eb2704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3874f4-60f8-4126-924d-5b64e0e1e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2101e37-0f46-4e8a-a61d-fbb5ed18db98",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ff6b96-57a0-4065-b126-60343d866372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f910c49e-8135-40fd-b382-08efbc60a6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae7ab5-035e-47c9-a20f-9c273120f82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfbfb35-21a5-47e8-b06d-7ae37a7b4909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e16e702-0072-48d0-8df5-6c0dcf956b76",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9431aecc-903e-4f9c-9b8b-9ce59ff16300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc479b75-47da-43b5-b6dc-f53939d080bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097ebed9-7d3b-4f28-97f2-ae563e390cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d9d33a-665f-43b9-8f44-cfd042dc1a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707c9246-1b75-47ad-8be1-00617d3f2bd3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1418bf6-d7b8-4882-a29e-0640fb12607f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532c1f48-bf96-4bae-963e-db01b3edf58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5256fdd-b1db-4e39-82d2-69f356c4899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26349568-e614-4b7c-bed5-4848253bc076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc0fd3d-020a-4b50-a350-46b2f7db3b5d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c6e332-b7ca-4851-a6e5-c8d197e73826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2b829c-230d-454a-ae4d-ed2590772091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1928ad-3346-4e0c-96d2-5332ba418fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca23d5c-3231-4bfc-8ae5-8adeaf0cf920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792f5dd-4bc8-407c-a2ae-21f93c293806",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad4334-ea40-4098-a5cc-fc5225137793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212c6ed7-590c-47f1-af88-099b67330a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e9001b-7661-4462-849c-c01e10f36c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf601fe1-e986-45d8-84ca-2a3de0999aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90354d63-2fde-4dc8-974c-6499c65c490f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96be2a7c-1749-49ce-bcd8-8b2b45b02c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a9c8e1-2933-4e39-a647-944102427c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1951df3-dec4-40df-8ab3-0a4c2ea69882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33caf9ed-4a48-4ea5-b52b-e447650166c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c660c520-8c2c-496c-a38e-d33aea7d5aaa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b660daef-7b5a-4417-b903-42947e07efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eb1ef3-5e95-4506-9b26-f32da2a4b53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc207502-abf9-4a17-b614-aeeceef8245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89268db6-99b6-492c-b5ce-b31ee24bcdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583a874-d9a3-4062-9ffd-f13788d90ab8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c8590-970a-47e0-9cc9-bedce9106200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95957ce-3646-46c5-9fe8-0fbdca1fc28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fae33f-ae3f-4f7d-81e6-dcd38b6bfef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef44d902-5dd0-4fe3-9b04-f872c02476bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d54611b-2bc9-488d-a1e1-689f9e6e5815",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b7670-b1e5-45fe-aacc-5bf2d643a926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a4fc59-a488-4a12-acd3-9bcd2edf6365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2957a1ad-120d-42e2-b991-ed697ba0fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46518b8-7327-4d8a-bbc7-ea909c1e88f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec28b036-afff-42b4-b5c7-13a9c1dcf4b7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a27435-6735-4e7f-8886-58ecad508a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f252813-342d-4cf1-9fea-8413f2334825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923cfb9-b436-415c-b52c-30f01ca9e60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cd1028-7a92-4d0b-8492-04b2aea0a0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f2d8a4-1614-4de8-81af-14b82a51ec88",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26225b-fbb8-4cec-9e11-3f42a406d2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e480b2-9650-4408-9e32-5ec0bed6b721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b789e02-0817-484f-8a3f-40d9410176a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dce67718-d036-4028-95e4-248690464a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba4d406-e31b-4c32-a55d-a67ba73f5e90",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1f4e28-aeed-4b41-8d5c-65e87854dca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565d79e6-1bc5-433a-b6c7-22816e87fbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb3e539-95ec-4045-b72a-27ad3bcbd780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9128d79e-e4c8-435e-acc9-7929bbb85664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce620d93-ef25-49de-8cbf-eb81b627a926",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc225b5-6a50-431e-a582-dffb89ef6ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bd901a-7a68-4e17-83b1-69fb52c1ec6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45192bb9-8180-4bfd-b21f-b9e153bcf427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e70161a-5f55-4ab2-ab96-49538741c490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500c374f-e502-49b8-ba9f-fdf4a5413466",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92232f44-2479-4c20-b679-c9f840bbd2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d9196a-1b07-40c9-8c8f-f92904dc1fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5fa870-03c4-4d2f-883f-f9656a4c9453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3224baaf-c8bb-4602-8710-ceae0e181361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81aae760-9e73-4a6a-be5d-2c68487e4b4c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b09001-5ec0-4705-9ad3-3f61ab510ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac8e1ef-c526-4851-9f2f-f757111a921e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20124230-9708-4ee8-8b8e-c750215b8ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86897ca5-fe39-4228-bfc1-432b41c2c0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a92c04-5cae-460a-9e6e-c43c8b907f6e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537b3d4b-1b27-47e2-9c64-61f63e1f564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1410103-75c2-444b-9854-32322af8e9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bbb229-701f-4d23-866a-8f0a3a4d49f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "537473ac-9355-42d7-aa25-37b840d55ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad734ef-d098-4f37-a277-85b81f8f21ad",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b444e3-167e-4786-b3af-b30171b616eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ee6d21-5ebd-494f-91ca-b7a259a0b175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32ceeba-66d8-4512-9496-c42a5e0059ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a70463-6b71-4ba6-b75c-ebc09afa98e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f829824-0d56-4052-b0ed-59ca19c3fc76",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bb2403-0d8a-4a26-9297-1077277ccb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899bae63-febf-4efc-813f-f1f02e944738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c508bc0c-cacb-4ead-bc53-bc851ad192a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "502b1315-f535-41a0-9561-08f13e6ac748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37082bec-eecd-4c6e-9e5d-87015d09dc0d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a35fd62-6071-4803-abd9-09baa5fa1419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2890ec19-622f-4bcd-b5c0-1bfb8fdf7378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9b577d-e8de-4f43-98d0-e93fd2a3be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e909d138-4a97-4df7-bf36-db90a29102a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5295413-ca44-40b6-b5e6-de3b3a42184c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d558ad-1ac3-4625-9a0c-b05859fc206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeabb10-b738-4cb9-8e2a-f1f0bbe30adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30e780c-43b3-4fd4-b25d-743de858d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0087bb7-04aa-44a4-a699-a113321987ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7df9f7-2ff2-407b-ab0e-1ad5097c7daa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e176d0a-0b8a-4371-a0cf-084fb418a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604138dd-416f-465c-9f3a-cfb2a7235da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57f37e9-8bb3-4dd5-bec5-332e49cec737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3799980-8801-440f-88bf-332976492275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e75d47-d7c1-42ce-8985-433ec97b936b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac36f7b7-df0e-4bfe-97bb-c7c2c708c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2fa9d4-aefe-4725-890e-4df445341994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2160548e-f36c-4b3d-9ff8-48f0a3d4e80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6e50f9-b4ea-4eff-8d00-58f40cc94ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036cf4ee-9023-420f-9e64-b52b232e9eac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae939465-9ec8-4391-bda4-1db4dd8ed0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "992d4546-7f36-453b-bfef-efbe40309208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723853bf-5249-40ff-ad91-e1eb78da796e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd995fe-bb30-4219-b0ae-bf0a6206137c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "737abc32-284f-4666-b88c-6aec45a69b67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e22bcfbc-b88d-45a1-8ed1-c53451526270",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243dac56-306e-4d7d-8a8f-c6a96003c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e896e0e2-b557-4fc4-94cf-5b5b0ad5438c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bc0ef7-a6d3-4557-8b01-1ab6c8f85440",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef3f5812-7289-425e-a1c4-4d0a62cc6510"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96741793-b9fa-4a8d-af82-38bddc4f5a32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f26689f-aaf0-4e91-87da-72de975708c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07c80029-33cd-46b3-a998-cab1a50c2841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9acfcbf4-26a2-4eea-b75f-031fc9c5da91"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96a80f73-2859-45a8-bc7d-8956545ce46a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d31518f-c733-484b-9615-2715d2156a6e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3471d1a6-11ee-4a06-985c-2c99590d2fab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a1edbcc-a414-485f-92c0-5e9243def135"
                }
              }
            ]
          },
          {
            "id": "413c07ec-ccaf-4858-a9ce-85bc9075de5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56a5df53-1e53-4d09-9a91-98905180bb93",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a1efbf9d-faf3-429a-ae43-aa891d078b3b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf7924d-5387-4166-88e9-e043d9a57f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a69d03fb-a3d0-4d7c-87d4-5e86136a7663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800f6d73-d0f8-4103-8ad5-4af3f54c7191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6692b0a6-2c29-480c-948b-6f3c1ed630a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81ef0378-2ec5-469b-bb60-46e61b3d6f3b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04ef71e4-b295-417b-9394-3dd690db9bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "404bbc8b-ebd6-4486-9c1f-98769587318a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b527c124-17c6-4fc0-a788-3d0f2e2ec071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73086f3f-63a6-4a71-95a4-5131fa4be56a"
                    }
                  }
                ]
              },
              {
                "id": "df69f153-69a5-4920-8608-7de2afe8974f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f97efd0-6b8c-4b5c-84ff-8ceb1b16ed51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f3c73fc-4415-4617-90f4-77ce03c8eb4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5bd8953-404a-4bea-8db2-c5b4db96f846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5cb621b2-555f-4023-86df-46f4729c5462"
                    }
                  }
                ]
              },
              {
                "id": "ca79360c-d1aa-4f19-8dc1-3e416607afd6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c67568-d822-4c94-9f87-f593d4368071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ddb3cbf-5c9b-4b76-9473-3194dd83679c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23fa6eef-43fa-4dfd-84b2-4e11d7fb75c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "120e9b9d-6ee2-4a21-966e-145fa7b2000a"
                    }
                  }
                ]
              },
              {
                "id": "517a17d3-4d70-4a13-9958-804cac66ca3f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c59a4d2f-93ef-4f1c-9a29-b84c660b8ec2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25336fab-36e3-47f5-8875-6b612332b3b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f53b345d-93fc-494d-931f-f061f7473223",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d211de54-0557-43a8-b402-cf6e6a0eeef0"
                    }
                  }
                ]
              },
              {
                "id": "c5e09ca8-40f4-4007-926f-281623c6412a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "515dfa30-3ccd-41e4-8318-a8d264200f96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1752aedf-51c5-4f69-9294-e7fe009f885f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1b2efed-7e8e-4968-a627-cb4b3994dcce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d63b25af-9db1-42d0-82a9-5721d0c290f4"
                    }
                  }
                ]
              },
              {
                "id": "4264ffb1-051b-4e33-bba3-b46c57fe84e2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "303f77da-baf1-49b3-8bea-59b56e6bf066",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16f10289-a41e-48f0-8f80-6e158b1a248e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12990859-a4a2-43a8-a18d-e7c39dc8c7ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9f9cdb0-456e-47d5-bd75-888b2deca248"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2769eb45-3709-45c0-80fc-095e45b796f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8130dd9a-67b1-4774-8e59-513cd2a99576"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19644bf6-83ee-4aa9-b7c4-c86319ac0a7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c628ee-cdc9-43dc-a1c9-26fc59c4bde2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6db62fff-4c14-4b28-b260-c59d634534bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "13780233-266d-4b2f-891d-d5b5b4d78f02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6987ff51-d138-4463-be4c-6223fa500d7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d8a254f-54db-42a2-b556-5e265474b58a"
            }
          }
        ]
      },
      {
        "id": "2b05ee0b-8d2f-4f99-9c40-3d1c174f0216",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03ba8d65-fe6a-43d2-bdbb-67310e5b9d4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04014c9a-227d-45e1-9ad2-4db7b106194d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1836664-dff4-4990-83cc-c4da8f87947e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aac9e8-c745-4999-b0bd-dee597f6f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b0b4af-bcdb-47f4-bb24-0aeb0a075f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb38380-12d2-47eb-8345-080b384081ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4497dca-abe3-47a6-a861-f654172f7859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2a2ec8-412f-4d2d-83ea-6cb0cf9ffebe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d5176-2361-44fe-9604-961ff649cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea0c6f5-e3c5-4dc0-a410-4b792c43ea66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f4b562-8f91-4989-8a06-d9d076926734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bba28f-8909-4862-bffc-1bead1ac4640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fefec4a-ffee-4db3-89c5-504b5439951d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfae186-ad35-445a-abd0-7eaa875258ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22df38be-49fe-4c9c-b477-446fbb83f836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d2ecde-7409-4eea-8c3e-14f9762b39e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d322155e-bde4-4142-aa64-a134436e35fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fd21a5-bcc3-41b9-b913-a7c59541057d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a89df6-1022-41c4-9774-433b5c0a2edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a16d8-d85a-46cc-bf52-d428656e0938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d69962-1c91-4168-acab-62de35bd75c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c830be7-53d5-4a48-a7ff-a275b0f9cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46641148-dda2-451c-b500-14979c185c3d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eeca87-81ed-45cf-9182-3d3397e99ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a701b0b-3f0e-4593-8ba7-5d2ce736acb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56afe55-aed2-4382-a850-08a67bdfa0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2679f6-6e5f-496f-bb5c-6bda57efc74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30424f9c-78f9-4d5e-af86-70717b1321ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b944546-4101-43ce-a049-5f15be52708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c9a84e-6c6d-4a78-b968-77fa86d83405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e13ea8-5171-4ed7-a4a0-647e56185803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84637e4f-2d46-4010-bbef-0d4e7b599907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8213e60-fb14-4fc5-bbca-9c0015063d6f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c1681d-5bfd-4362-8fd7-9c5b1e625fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959300e7-b6e9-4351-a919-c713a1ddab71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7d1cae-99fb-4cca-845a-9c2c1e515428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "864daff8-3fca-4688-8f0e-31c80a454be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd7d0e6-9d73-490b-bcd8-18d79c2af1ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77436af3-83d4-455f-8e97-f14c5c9c7ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b4cc26-2989-4287-bc71-fd82d903f39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae9a32d-d168-4b9f-915a-f40c63a36db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a094205-cfb9-4f14-895e-f4a08e007269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b35ab0-acc7-4baa-ac1f-003982abe7a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1580c735-37d4-45db-97b8-1d3ddc267b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7186736-33ce-486b-be13-b8ad2cb8ae0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f80e506-f28c-4fd5-b036-c8fe43a3c10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c5db10-e339-43f7-a00b-3eb8a8fd53be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c56cac-52f0-4d08-b8d0-193bc9ed0d92",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8996e1f5-69ee-4c81-ac3e-0e08f8638008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba7d167-fc32-491b-95e2-042279abf5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873bfe21-dd75-4d11-860d-3a9005bec61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadfc45a-6746-4f74-a86c-64138f19c905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ab8664-52fa-4266-9bc9-f7a97090eee3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda2564e-1b0e-458d-911d-92077147e0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7e3053-91f3-4f47-9862-69cb31496eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24083c1-f1e5-413b-a80c-d943dca3bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c4482dba-d9c2-4bce-9d57-711091d77097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f83cd07-bebf-493b-831d-5ac3f5fb048c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce414015-0ebb-4244-b491-fffa2633d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df40e56-0473-4e2c-b59e-39f52bed5454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba0f068-f853-4d1f-9fd1-1557e765c1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66094970-3f9e-4e62-80a4-603ab13e8276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0905ff2-3dd4-43d4-b9c0-863c69f4ad21",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11423849-1558-46a4-95dc-17d6aeea1837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b278051d-279f-4739-b8aa-227db6eb2719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8232e286-fc54-4709-9ef3-02617e92261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0162dbe-17d1-4bd2-ad4d-b0b2e212ea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b092e9e-5c3d-42c3-b79e-e972d92d6330",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe70bae-47ad-490a-8cd7-e4f21a949f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84b6ab5-d653-4b73-be64-d20dacb42a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f645f2-70e0-4028-bce5-52278a655a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "799c8fce-c524-4639-8491-cfdd1cbc60e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeccffa-dd7e-4c4a-80f2-0a5b984dd599",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75cacd0-7343-4077-9fae-1d16d2b6ff54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0d8255-4c26-423f-bcd0-61f3f674cc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e9d490-1bb1-4219-b712-cf49a42d062c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded3fe49-60af-44dd-ba26-f5078f6af5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7afdec-92e2-4c82-9f19-110871e07364",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8bbc83-2fd7-4831-806f-baf6f0f3231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138dbfc8-ec09-4afd-b6a8-2ee23e9f0ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b56f3d6-212a-4835-a080-ee4738880d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb91b3b-0db8-43a8-a71f-d011fd359e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4200d6-7678-4cc9-b392-736591733fc6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b18fb1-e0d0-488e-b8fc-b76dfb5750dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a01e88d-ed6c-4bba-9459-e9838740e4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e7fcf5-acae-46ac-ad8f-902091e1861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3c2e5a-83b9-4a30-8076-1f2782530f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa337783-b895-4300-8ad1-68907eb65aee",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931816fc-35b4-43e8-8058-1728d0a621a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca90578-78dc-461a-81c7-9b592a544e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767e88cf-91e4-4579-900c-6740b0bbf5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b86bc3-1aba-4233-92eb-7152cc86c901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79c0f04-a4fa-40d2-8e27-b36d625a89df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c62d9fa-eb46-4363-a0d4-8158fd92a794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af4242-972b-41cf-8e26-a6b72bec1696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56ff45c-3659-42eb-a1df-4cce16bbbebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b02aebb-7bf6-4cf3-8eaf-554fd760240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c73b6a-a51d-40e9-b54e-93f6f636f672",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3d2c1e-cbad-4219-9f23-15813b167afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc6b0c8-cd24-4351-a16d-786139906095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b4e1a-634e-4d1e-87d7-72f5ac40ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fe5253-545b-46e8-bed1-f65b0497fee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d37f70-9d3c-460d-89e6-57a805c4add6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3bd280-094c-4962-839a-9070fd867f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9fd1a0-a421-4437-8fbc-99c84d5a1c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d0b86d-15ca-4e9e-be05-a8f05c0e3b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1a6554-4f81-4ec9-83f3-50220fe9d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb11085-cc3c-4c43-8118-e00cb6a77120",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc351903-92a7-4bf2-a4b1-d576ccce41f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059fe895-7c18-41d3-9376-e23d85b1f7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867f5545-acfc-49c5-bbb0-3625496e368d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f4ae1d-4fd5-45a9-ad50-4b2044ea01ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c811384b-79ce-4ee4-8e0f-930e454ddab0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83746fab-4d9a-4c0b-95e2-707d0fa7943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7c0c4e-b30b-45a5-a3b2-e5103679c588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3dc011-f35a-4e0a-a0e3-12db2a1b440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ebdf80-4550-4391-bc37-b87ee8bbd786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0ebd88-0d3a-42b4-b9f6-2510c1b0f504",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f767278f-d20e-4b69-ae51-17d0a64be4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512626db-e3f5-4b3c-b22a-a12163678e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b997fc-64cf-4213-a9eb-2a4ec7acb923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "147a7fbf-a759-4e86-939d-8d73639ac01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c98ca1-1208-4572-8796-ab0720d4bd81",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96854e12-aae2-4fce-9052-722a7379b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e769339c-314d-4a87-81ae-2c336fb17f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f65136-708b-42a1-8929-59f36ab81fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77801c46-4220-4177-b80e-15a2645326d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3d9c63-af0e-41c3-bfe1-b30e9cc99746",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba5cfba-7cc8-4eb8-9aa0-cbf0f9048914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca8a96c-41c2-4c57-87da-7995a5523320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0978469e-53b5-466a-81c0-1f5239cf6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ee19c8-ad70-461c-9a37-89e0267e013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3d7674-4b8e-478b-b414-b9249f9c61e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f439d-14d7-4594-871d-bf792978dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8129622a-ff21-44c9-9893-f373fdec2d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f333905-d200-4727-861c-289f7df4a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0082d89-0b66-4c3b-b2b8-34ac8b3824b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedac6cf-466b-4df3-a918-b6e68398693c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a2b92d-7eae-4549-9a8f-a4ce812fa020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4195beb5-8e95-4ac1-83a6-f69351ff4ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370ae6c8-c421-4bf2-b85f-8f24419d708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "994ba83b-26db-422f-8717-e77183ef5094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7abd5a-b5eb-4a1b-9465-1155d763324b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83bdcee-fc6e-41a8-b932-9b45f8088ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d31cc9-c941-4628-8ae3-f3b4a137d5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bfc253-b3d5-453c-8175-34811bc09702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b82caa-5564-4fd5-a737-1ed98b279d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff4dcc-d534-454a-972f-5ba2f5c4065f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba900b0c-0d7b-40ef-99da-0dced9d81ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c145693a-4caa-48c5-a741-b49cad337dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ef225-ee87-401d-9303-68062516d260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9599b2ad-8bef-4120-9613-8137a43e7e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d09eb-a8c0-4a55-b249-14e197903efd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f67297-e401-4a01-8f0e-44431bcde9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8fd76a-1b60-4d0f-99e7-fcc7cb2ab578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce8559f-b438-4779-a647-176646d439b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00d842e-1e99-44c6-8251-b9c5af30cabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30583872-4a60-4c09-b0cc-a8963a33416d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e0870a-7817-45d9-a39f-a348031b5003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8daaa77-1647-406c-b06f-fa7b2a98ea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5fa698-8fcc-45a1-9fc9-c080ebbc6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36bb4454-cd08-4dbb-b6b6-255d29e3b62f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83652e2b-8ed7-4151-b4ee-9118a8d984b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83765511-bd41-4afb-bf79-bdf5e19901c3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bff389e-063a-4d47-ab13-c5798b2f9ef0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "72975e20-9427-4697-bf4b-680cd8f289dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12b4087-fa21-48b2-962c-b990498baef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5da473fa-1a48-4ac2-a362-481e9dced468"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3e89871-6dbb-40be-b468-fa951c2eba45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b9c85ac-9569-4d0d-830e-c76ad77fdd93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39e6769f-706b-46ec-92a1-1c1096c0534d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5799104f-91cb-43fe-ae2d-ad3cb8935a13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59b4f7db-c02c-4c6d-9c9d-d1a2dc01f3fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93a26b87-551f-4d09-bbf7-ccad15659546"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f509c28-a29a-4f1f-8801-9ec77980f2ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0dd12c43-4f93-4d05-a2bf-07ac12f60025"
            }
          }
        ]
      },
      {
        "id": "03858fcd-9948-4338-8604-6e947a74082e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "81f5d124-4cef-4df2-b5f4-7b02521351d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e8be557-9dbc-4009-8b38-33946d67847e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a52d4f5-00ac-489d-b06d-415d3d62796f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dca36fd-a7de-4a8e-beee-77f73350a90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15104a7-a24c-4e85-b0ec-a9770f9bfeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bcca36-8fc6-450a-a81a-a46c2013aaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "060eef10-25fb-4cfd-ad02-6df6e9121fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b3b078-07e5-447d-9463-e4b33d9f4c98",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794c02c-2e65-4bd1-9536-95a7c02403bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98f2b2f-f31f-415a-96bf-2575764e57fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c09e58-2ebf-4e19-b4ae-4397e33125ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f9f79e-9ccb-4730-8814-a2d824a1e470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7039c33-a811-459b-8ba9-ecddd090a6ac",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce3faaf-bd8a-4c86-af01-9a4f1df7103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd43581-2527-47d0-a6ec-ea75186df508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b77140-ff2f-43f9-902b-c48f776ca907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa669b4-4aa9-48df-b58f-eb105e4d07b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527462bc-523d-407c-b7ac-be9abe7db2ed",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcac4ef-da38-4fc6-a8c3-3c1b70b98adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e3834d-ada4-406a-a48a-7c21d102e2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b40716c-6d99-4c32-88d6-0dfe251c65c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0feea48e-8968-492a-9067-1b82f6203289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aedcdb-1fc8-4829-92c7-638768323aa2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063df89f-10f5-496e-8c62-a4ca13f5edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd23684-9dde-4ee3-8f55-390095cebda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32758bc-bcdd-43b5-9547-0148ad5cbd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8fae8d-7191-4954-9d16-f3760334a329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c039076-f4ec-408f-a232-1d71e0e08bd3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1868c583-a1a4-470b-aa40-cf57026702fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f39d8c-fbfb-43e7-9c78-ed0d9376fbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17c42ba-9dd4-45f2-b6ac-f7bdb1547c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f90787-cc0b-4032-aa24-92c98b87c60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0bdcc3-fa00-4874-8be2-2626352961d0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d184833-2bb9-4902-8fab-c4dc7f6177f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bc3ad7-8aaa-4119-8467-46886e98893d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1baff3a-16f1-4008-9583-8d93aa01a820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b49971d-17e9-4595-a4dd-7294f9489b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccbe615-c25e-42fe-ad65-10a310ee4c14",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb4a5cb-2b62-4192-8322-d1888ee300de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73368299-84d9-4b6f-b6f8-80804211ee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fcfb76-c6ef-43c5-9675-7846f74f0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0b3620-a3e7-40f7-8853-5ce2fa738a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1109a469-43a5-4e93-acc3-b12c5a9bfdc7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b920be52-7c7e-474b-9966-c2f98e9bff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25621b5-228f-4ac5-be39-35c9f5bf03a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c266930f-467e-4ba4-9857-ac36aaccc32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d18b089-6af4-47fd-868d-c6b4004ec173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ff144c-a9e5-4e9a-8999-66e70cc29b7b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c07b1c-bf87-4075-8010-a2c14acda4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bde73d-5a5f-4aa1-89c9-799f8e01966a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b1f511-db38-4aae-b367-445029ac5348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5a4146-1509-4730-a908-abdaab9e080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3cccfa-566b-4646-912a-18301c2e7581",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88baa5f3-9840-485c-b202-bb96cf69ce67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae285e61-5025-4e35-93fd-c477d2cfee94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7950e4dc-ed12-4dca-9110-1e2e243edcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a65f0472-1eb9-41f5-9c14-eff1f64bad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807915fe-c770-44e7-9fa2-8f3009e1b81d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61370579-8dbf-45b8-8787-34d6538aca2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a70a005-f896-49a9-9efb-d47f2fa55871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a78c44-69fc-4e49-bf80-661559a22c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a60992f-359b-411c-b66c-22ba8c7dd991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f72d6-3043-4c62-b961-631c9a6227e4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10984b49-cbcc-4029-b4bb-9d553f62cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb95414-b64a-4e51-ba8d-bad393295dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d01c3cc-37f0-49cc-ba7b-af5b169aedfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4c6657-7faa-4e7f-8935-7f4340c53242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36be6f77-68da-4118-b75b-c036f17d05da",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d3e16-3a54-4700-87e2-b8c7df91e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51693071-62a6-4c59-920f-33d51082c2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde9b724-647e-4604-8df1-bba5fd818de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95d4183-3a9e-4d0d-ba4c-e76fdd692751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b94626-dec3-4505-ac8e-6d66adfebe08",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8dc2b3-5a4a-42e1-b6c4-8e57d6651260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192a5677-7f29-45f4-8350-473d39fece60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e688cf-eb99-4935-b1ad-1d15b4ba7fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a181503-22bd-4506-bc54-396425d7481b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b71ab8-bd6e-4df9-a8b8-98bf59e839e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86f5f5f-8715-4189-8da8-1b45edca73a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024d1655-20f6-423a-9c15-57db153c9332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae70b68-5e94-4662-8a07-c468d0ee33a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68b0037-ca77-4b7e-b08f-620f37f06eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12537438-e12f-4164-8cdf-b5ffdb8cbc98",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cf996-5fa7-469b-b8ba-1ea1d046c380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70be7c97-362f-4907-9da3-90d13da7057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a50b52-cdb4-43f0-89e4-0e9f69ba6769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52184cde-58ae-4156-a72b-0b15cda81d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821d5876-9b91-4b7b-966e-ba0803af45af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027baee8-77b0-42af-b845-ac0aeb6ca2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51076b45-0979-4b19-81e2-92adb9657110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f5dbb5-a22b-401d-8ce8-21162c7d79c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5b6090-3b6e-4bf7-97a6-9cbbd80fba76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0f928d-c2c6-4825-a584-bfc8e638af9c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0650c0-4ed1-4cb1-bc74-d51a06fd30ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df10012-c6ea-49c7-afa6-8d1f75721f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a0b12e-cac5-4b9e-b3a0-b3b57a0a1c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fd843a-0d40-4f28-a4d0-ce26466cac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ba5acf-21da-4617-a6c2-6f8bbd890588",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2696cc-b95a-4ceb-bb9b-7b5e8fee58f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36bc040-ba40-46c7-905d-19ad675fa15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c07dd1-6c8b-4946-8ae2-9ec301b41b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "935cbdf9-c9a1-4487-986d-b43bdfb3475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc161c8-3597-4aaa-909a-121d46db8b7c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47998902-3395-43a0-b8d8-f5d8db3685bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca060e2-204b-4e97-bd04-0f0759b2c9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e499f034-b74f-4908-b0d5-9c889ced7d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c282d24c-cb35-4169-b607-f1a3e0104e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162fe14c-3bd5-4154-a7ce-1503cb57dcf5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142c7143-1dd5-46ce-b2cf-0b58a68a8e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ee958a-d69b-4e72-8ea1-6cb3ce4cf214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f78e21-2fd9-49b4-8563-ec6863dd430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7182f4a8-d3fb-463d-abe6-90ac361d80d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5999c1e4-e570-44d6-a84e-d7b468108eba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37291942-d627-4ddb-a55b-d78d1406ad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a246481-19cc-4117-bdc3-e4bd23142093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a61f3e2-671c-47e2-ad2f-bdfbc0291142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8354f452-0f81-4dc9-a599-db83e0b09f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a233197c-6ede-4610-8261-61957ce58b4f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c544470-2ad2-4a1b-8bd7-782a598bc388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f11c70-ce34-4835-aea7-43b2584a9e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e447da-25f5-4cc0-90e8-c146e6c35d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "772fa68e-a675-4757-b08e-49756710efbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa31e17b-5998-4bfa-b6a0-9d4c59c8a38b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620bc97-9f4a-4351-a3a5-d41687fbfbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a0bab1-ee0e-42e2-b356-d5c58a92d10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002670e2-a30d-4098-ac5d-40daf3e3eaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c27484db-0ed1-4bdd-a18e-09702841953d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21239406-21a3-4e89-a604-ed2e4304c930",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37df9c5-ca81-4740-a03f-ce6adaf1fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5539270c-9d5f-439e-a153-76a368bde143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec70725-8c09-4d94-afc4-789631d9ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2d1b0a-b08a-4a18-9eb0-d87a1e56d2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65bbff-46e0-497a-90f0-7d8dab7b8c0e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357609e0-3d76-470b-95c3-71ea883d9396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f4a000-f237-4d4a-ba5a-8f8a77fe1ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c75c888-3716-4ced-ac57-cf578edb030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a1d810-ecb8-48ce-97d6-93573ad2b0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc0b8c7-0378-4202-a2bb-ac13496abd27",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2550b62-447a-4b45-89f2-10e5b13e06b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88787f3-926d-4a4c-8de8-8ed723bf15f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78ebf18-7685-4a8b-95d1-9ef5c515e276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e0a138-4047-49a0-9f87-6965d0846914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9261b54-5d80-4476-9968-87412462377f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abf445d-7840-45f1-8471-b8e82ef782e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0230417-b598-4930-af2d-b5c2ed2bf8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b603e1f-0a9a-45a0-b192-6f3b74d95a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc0ec23-9d06-4171-af91-f4f305479627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203375dc-4251-47a2-acc7-8a9e49785cce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbfdef3-e991-46ba-87bc-ea996eeb1d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cf42bf-5b77-41e8-902d-488beedf6831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64bad3c-4f59-4e77-9ed1-c50621ea5f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa90aac-1105-4ec6-b963-b181554940f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9d3148-763d-49c5-bcba-b5defbe3d40b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8505ff2-871c-4b68-9ac7-88848f016a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c93f257-898b-4b46-abe0-79d5be61cfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf2e89-12e2-45b7-aacd-dc2cf4372ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5d7d7d-2bdf-4353-bf26-dc29dd78a33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aaf4b2d-82f6-4cdf-b89f-a34476909a35",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deb3968-5fa6-46c5-88a7-3c022e4a9172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc1f6d1-dc1e-43bb-bf0e-fff7e95c38c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c048c0ce-cd2b-4c62-8066-a82a9f3c9a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43534619-064f-451f-b5de-e7599898c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7695ef10-75af-47f1-9c6f-7ddc7db753b9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf60e1ea-adec-44df-be85-4c84e2598578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c2cc4e-fa78-48e2-af6a-41b10985dbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c16d15-780b-4bbb-84b7-2df5b2cbb54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9b5c1d-3672-487c-ad0a-7f2b6d141773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faf3b43-5137-425b-abb1-b57420835c92",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1c6f4e-0a1c-483e-8820-a7d4433ca7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801bf03f-c6b2-4baf-9b6b-935330d24a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0494cf2c-24ad-4720-bf24-36a40af2144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17a4024-ee5c-4741-9941-62d1d0cb2bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781b8373-9def-4291-8e12-8d699d0ce9f3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ded7d1d-cd78-4812-a5e7-bf3c6242231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48ad0f6-4ad7-4a7d-800c-c829aee2a54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c631e7-e321-4023-ac3a-388443b2af5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8254fb07-a999-4278-9b7b-fa1a7bf65927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b680b6ef-5dca-424e-9041-0130a499a2de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf13c19-ca9d-49f2-8669-d463485d0455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062cba10-3e8b-4e5c-8c0d-7b5edb892a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a647a61-a6ff-458e-b43c-80fe35cc44f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b0ef6c-f87a-4661-890e-d311fdc06575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67292d30-0944-4079-a807-f162acf8fcb2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29a8cf-f82d-488b-b4e2-03211f929195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d88d7bf-fc8d-4d96-861e-a07b4ec0ff85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f262b12e-3b7a-4a6e-8df4-8f73ff4c1fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "778c731e-b20e-4d2d-8db2-5c081dc8807f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "32f0822c-ab09-4c8b-86a5-f57e6d6ab46e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0db19ec-51ab-4d9b-a395-0da86dc0e4f7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e971eb0-efcc-4d2c-b998-073580ee8239",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a31bf3f9-1062-407b-925f-804b6ab6e4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7983e36b-2a53-42ef-99ea-7bb737996998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1c60d6c-c805-406c-9693-41f4fadc18ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd45778a-9992-4ffd-a3bb-2d30ef3183b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6546377a-beca-426c-b915-11f5799ea11d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f07a19f9-633b-4308-974b-93f136fcef92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4bcb877-e958-4b5b-8b0f-b0dff279e22f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eee2576a-e19f-467c-b784-1af3d2d0fa81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9aa7da5-1c01-4f77-9a8d-7b98abd28e4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad35a033-51d4-4cc4-8e1f-de3b312c1c25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c18eeab-af89-4db3-bea1-c8f2b76f7b76"
            }
          }
        ]
      },
      {
        "id": "bce78d0b-20ea-405a-a3f7-64faa8098b42",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e8a4746-4be0-4c46-909d-3260f8bc864b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfff4926-1ff4-4d60-81ce-297b087d7f51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dc50248-94c6-41ac-948e-d668c3ec1341",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9748d1-f382-42c6-be9d-c28a891de8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9283cd12-0ee4-479d-b0c5-d106aa535724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bf70e3-f3d7-4922-a893-eec37455ddbd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e5d13-be3c-4f3a-b4bb-26cff92187cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f722664-19b9-4f56-b481-58abdbfd2d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf7743e-0071-4f3f-8fa9-e127e08c6f2f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b78c163-68ee-4d3c-85cf-dd7a128b207d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba58571-f26c-4c72-94f2-50607cea65bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398e037-5c6a-4eef-b001-66fd74ecd116",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e55dbc-b126-4396-a0a0-597262add4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679d73c8-3626-49ef-bd29-aad015210475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ac3a03-284c-4796-ab45-71eeda49077e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e56c238-60b5-42d8-bdf6-dbbfc2997180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d012f3-871c-4f2f-ba7d-a604bf086e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6568245-320b-4a43-ab54-9bbc0f8d5e7d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fbb105-cb0e-4819-aa49-e63e0d4a8d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b4b2b-62e6-4664-8770-465333d50ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0512e518-ac41-49fe-9a73-95ce8abc178c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f9f0e6-311e-49bf-b207-d116d0ee2a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327213c2-f48f-4943-a585-5eab2a2292fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be78026-4db1-4764-abdd-ed1cb3f93b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c736d65c-b990-4a70-b099-a9179cf19c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9e7b14-9f11-4c11-bc86-4bee02d20465",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1a79c0-d8dc-4fc8-bc66-b0b08604c27e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b92062f-23d7-4227-a51f-849aee16428e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10256e6d-2ec5-4207-aceb-d97271b1a6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b00d24-628e-49bd-b616-a71742d57f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee603b61-0896-4bb6-9589-7fad75542d85",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d32214-4d8a-4cef-a815-9fa564d69724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f575491-580e-4475-8838-bbda7750bc59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22f9e57-0d2e-42e4-adb9-e443a4ee01a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a99d876-d09b-4311-bec2-23312366c132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011633c0-0e4f-49a2-94ff-4e315f10fae8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb73501-3644-4b57-adb0-3d5f4e13b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae19650-d506-433a-939e-d7418de70c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41882d3-d229-4915-992a-a130f0eacb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c51066-2579-49ab-9df5-131cb8efaca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3e58d3-b21f-4dbb-a258-9c82e9c5c0cf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3efb67-96ef-4ccc-9b2b-ab3e694db90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1390d4-4b83-4f05-8e85-25497d3f77d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2d109b-1f48-4cce-b6da-e39411d83659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298b204d-a464-44b3-a995-74abd48895f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448e71c7-55a6-4fc7-98a4-435bad8ed54a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce8636-bf0a-444c-8840-4bf56d604cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0899e2-01a3-4f48-bf4d-3fef5fbae248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d2217d-7c03-4ad2-9d4e-1f46b6eed3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc397689-0074-444e-84cd-2a890db631ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc50f0d-e2e1-4e9d-85a0-627d3bed99e8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1200fd-39f9-43a4-bf3c-15313526340c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a8c5fa-e9a7-4f58-a732-27f950fc20f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0a9da3-4ab3-4dae-8a3b-342a919a50f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4478e2e-68a6-49ed-9739-4eee67013d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e5871d-c1ac-4803-bd5f-d58b8577d5eb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff6d95-f443-46e5-8a86-2c86eb6c8b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a91d6d0-b5b6-4ca8-8905-bdcaae5410eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa424b3d-adcf-40d3-9545-ddcb1a67fac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f946a95-47eb-474b-bb1d-8b1d6f721e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a4e4b0-7e25-473c-94a9-3966ec6fecde",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c47447-e42f-4f3a-8e27-cc0d983800bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f83d77-4ccb-430b-9000-9a3cdf7557f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a0bc38-c03d-4afb-b1d2-bba9dd4a3a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad8f805-097a-4b8a-aa18-56f04ada05c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112be62a-6c2e-4aa8-a630-296573f39f1a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65385025-c995-4609-9ebc-bd4c80dc7b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2174ad-bd7f-4858-9437-3b1cdfc1c441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1969efd-52d7-4347-8711-992ec348746a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e2dc4a-aca0-43c3-97a6-6fabfb0defbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57737c05-cdd5-4962-94b8-183d547a6620",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8ff291-8bf1-4efe-8c58-8e3ff4437bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f10a4a-1131-4712-afd4-ab7947010f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eb8b32-4ff4-40bb-bdb8-3da0162ea89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3773fa44-a4cf-43b4-a9cf-71484959d36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e467fd5b-1757-460e-86c9-a35ae0ff03af",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702e0ff-2b7e-4238-9fde-94d3958445e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9a8b3c-dd7e-4b43-aca9-568a46c53aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a9cdf-b1f0-4fd6-b232-89034b0276da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb2a1b9-a86a-4390-9834-65ffd0fdfa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27f4a02-e85f-47eb-914d-5e25b697bc34",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23293d1c-6b30-4ae5-9912-4025714da249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6b7eea-9bb3-40d4-85d5-edceeced32f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63b477-756b-41bb-a5fc-675df4afd1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea5ec1b-c566-43bd-9813-4cbda9764b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719f0b5-8bef-49bb-acd7-4e4eb1896424",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba23b2a-b536-4f12-9eaa-9ae6b150bc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab00a0e-2146-4752-9c63-2190e367f46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f6ed39-9978-4133-8cbc-1d4371c7e6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf894b7-4b14-45f6-a4f5-b2008267f7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda4922d-f657-4973-b6ba-9019a80429e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123b16d0-0125-4984-8225-3f75abfe87df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5788ba2-31b6-4bc8-aad4-fbf8270da224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e362ff-e4d5-474a-aee0-85ee9bd6e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eddf36c-a814-4630-894c-edc68a0accba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0cdc42-57ff-4bfd-8dc1-b7bda7d44790",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf9ea31-9c56-41f4-84b8-1260a404964a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b327eea7-1748-4aea-bb27-f0215b258ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd4812f-1aa3-40d5-8332-fd81a9e695bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc2ff77-b5b0-42a3-91f3-ef648cb2963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2968214b-c390-4f29-9cef-588885c783f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81414ec0-8fa8-4bce-b814-735ab4a3aaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a39afe-b60b-4b97-987e-e39ceee3dea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5a8809-e7a4-400c-9a4c-3be9813becb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856d0f66-3209-4b49-8ae9-89e74df87df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba74943e-b48e-48a8-87b6-c9dbb9f08661",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077ffa02-cc66-40b4-9c55-dc3a9b1e68d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa086d82-86a2-4c2a-adf2-51eb7c31f0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03dc1f5-0794-433c-900e-2c650c37355b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c91e27-c776-4d4a-be24-935d6067b9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d27229-c62d-4ab9-a12b-db757dc02dd4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e2a52d-34bc-40f8-8580-910ac1136068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa6c766-6b07-4cba-b7d6-87d23b0642f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303ab0b9-e659-4749-a197-328b9eba4665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf060f3-abf3-45ab-b2c7-0e8509ad8516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f309e3de-90a6-4548-b484-98de7da61132",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631cee9b-5e8e-4312-91d1-c1b89921ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27efd814-2aa0-4645-87a9-86a5008b9b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c25879-0a7d-4ae2-bf4e-c08f25aa5a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e43987-3379-482c-a2cd-745dff8414a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02155bce-e690-451f-9232-f07d4e1eb7bd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd4f6a9-1ba1-4777-903c-dcc18c82d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "315a953f-ed51-48f3-8129-e8fd78314990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c361f0f5-7389-4e31-a8b1-ec66f50a7a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01514c2e-674b-439a-9caf-c34188c490f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ee6c9-e3ff-4362-84bc-28720c890cc9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5857ed35-3986-4d4e-878e-7bd2ba5b804b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a615030-e3d6-4d20-a163-6c46bfcf032e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d419b7-07bc-42c4-b525-1325c5aa492b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eada3a-1c62-4fc3-8cd3-bcb21082b4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e557f5-4b03-44c6-baa6-d593ab31b5cf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d8c997-5bb0-4d4c-bd6b-cc7a35857185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407397c4-460e-44b0-8273-7159a7af7e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cecd14-97c6-450e-957e-d7e1801b9832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d12b95-6a14-4144-a7fb-2ba0719f1b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f4f806-b1a5-4744-b7b8-41b47abdc8df",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f753b0de-7f1c-438e-aa16-c2658da768dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b24cbde-746e-4244-ad07-484d13692b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325ce674-2d3a-41bf-9a4f-33853682d3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84894d0e-d563-49ca-975f-9631119bc958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad86ad19-d47d-4058-8c0e-9dcf5ef398b4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3bad14-6b47-48a2-8806-abadf8f4bf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0a953a-248f-4940-8add-3e628216fbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02404b2-8cc0-4188-8e0f-5005d8a1865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11564e1-43fb-4113-9509-39913fe148ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6666c6-7164-4129-bae6-9a71a90c083f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c99d7-30f5-4608-8317-0f0bf0c549da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69721820-1b40-4f48-a348-8d17a667aa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919956b1-a23d-4cfe-9861-59b3e3c59ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c548da9-1ca7-4d50-9a0f-678d19353e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eaf7f1-b383-4287-a8e8-43612098fdd7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ffdf51-a588-4c5a-9bf1-ffab3968b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b27b7c-566c-4b8a-b36a-7d2aaba198a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7c9291-8b4a-46e2-b8c3-87adcb4e704d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3e2c99-4e68-4df1-892d-3ab8be1f750f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86138d9-46fb-43c9-b8c1-c5587081e7be",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20287412-d4a5-466b-9f94-309f4d89806c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32503d85-1448-4552-8f31-76c7b2fe2224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826eeb6b-947d-4a58-ac42-64abcb016250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b29ceb6-ce2d-496e-bb04-c9f8871f4ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a782d1b-0afe-45b6-9185-1e307dea7a94",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cbd0b2-65ab-4a69-8b5f-d646d337021c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb92688-a3f2-4b9e-8cf5-3184e1202ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77350670-610c-48d3-b9d2-b5971c37a1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b1e2e7-e730-4266-9450-aa634124ffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3681d0b0-7298-4e12-83a7-6cfddd94e5e9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44a0cd2-a4fd-4a5f-ab1d-27f458ad2782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ec3708-7bab-46fe-b9d7-3548267ab794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e55609-148f-44c7-bd05-fbf59fd6f19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f478f651-a625-4652-aead-a1d4dc709de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7c2f4b-2361-4d99-8215-3ea340b32cef",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736f5d17-2a36-4594-ad3e-8090dbc90e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dcb543-28ad-440c-a93d-602a5bb390e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601bcb45-e32a-4af2-ab22-e522d5fcc2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b01796-1d75-4696-af69-ac967b66d901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487d95cc-b820-4abc-96f5-ed3d58445ab7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22c3473-de80-48a9-87e1-cda097bf03f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc06642-157b-464b-b8c9-0e436048c6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7203ca-cc71-4690-9b02-b582eccbfc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896d4591-b0eb-43c0-8929-1da5c73f9558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5156df-e3a1-4b80-ad55-81887082355c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bd543d-4625-4835-93b3-a7754e1044c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee30d526-d0e1-4ee2-8250-c0276d676828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1850f1c-57ec-4f83-b92f-8841edc444e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de908d29-9ac5-43f6-b626-ca0e7aa27d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87ae74a-3955-41bd-9754-1ddf03b22282",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc517d-ec32-4e3b-bf31-3f231430febc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b4cc6e-5488-4660-a983-28f48fbd50b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca2098b-0a1c-4f82-9f1d-b2002ebeb82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50109a7-b4f1-4756-8a8e-f624e191f10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96db3e2-39e2-41ec-b1c8-5b3657b8136c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430d6d85-1191-41cc-879d-04fdacae3069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d2836d-0b2c-4ac5-bf38-ec9b1d9ccd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5ef26-5822-49b7-a383-cef4e64184b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c00ba2e-6328-4d20-a78d-cdf06a38862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ae6f9-d616-4401-9e29-454a5ae5d341",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72d8078-5319-4132-82b0-a3cefa39a22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa21807-30b9-4912-b17a-c502606092f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1793592d-1a53-4a41-9559-f7102b1b1dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa34bdb5-53c0-42d1-8f28-9336188f9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f957a6e-b2c9-489c-ad68-b416aaebfa15",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248f74da-d98a-4555-86c3-1605823b19e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43689be5-8f02-4f81-b453-34816f314a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d186be3-4451-47d0-b8f0-a44cef7cb5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6232f947-c124-44df-b4f4-3fbe4a526add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103c07f3-3a3a-42b6-984b-584be350624f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9487a023-6436-4cb5-a803-902ff0e96079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564ab391-2d1b-4819-a0bb-4609ae17b48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6d56a6-5069-49df-a8a2-84ff76361144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3bfb4c-2152-4bb4-8a05-b93b2e82ba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbfbba-8633-4720-84b0-42be7ba71ab9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1c805-56eb-4bc1-8055-632cf5526c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c52cab-a3b6-4cd1-9cce-56e50b6f3163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039b07d9-e083-4f7a-bcb3-8417f3f67afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab991b6-c908-4bbe-af28-103a82fbc1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef231e7-dcb0-450b-a4db-6e02af8c814e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3813ec-a4dc-49b6-9874-6abda16bf314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c41ce4f-ca5a-4eae-9261-b387a122e78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bcc1dd-cdce-451c-b9a4-5b246e17cb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8869323f-c420-4e18-a639-cebe917c55e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbdbdfa-b206-4fb2-b17f-2a476a096c26",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7677df6b-fa0e-4fbf-840b-4b068ded88a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246dd24a-57f1-400d-b822-46dea0bf06cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9002daf-0ca5-48b2-a8e6-d802a60999a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbaef84f-6388-416a-9d8f-c40b65938ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab799d75-3ab1-4491-8171-6cdbd09067dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12d186-6539-471e-ae1c-961cf13a9f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63900fe6-e016-4695-be12-ac59ad4e69e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129f37d-89fc-4521-b29d-fc1300ff25fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd4b718-63d5-428a-b2d9-d4f5457f658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc176fc-9ff7-4300-8c38-f43c61238f2b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9398220f-da75-4a40-8aaa-6f4cc3e54446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269acf07-353c-43df-b1ff-75d4c709cb77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c551d813-af7a-42f3-bbe7-17e12ddc862e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de70cd2-e061-4158-ac93-ca0886c9e5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7bf4f4-28e9-4aa5-837a-5c1c31588977",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f48f83-2b6e-4398-8343-180aaabccce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12ac7ba-9880-44c6-b566-b79e8950d96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9894980d-6258-4a30-93f6-22171071bf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacbf0f8-7cd1-4d0e-ad7b-c6d6f36f5fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a664cc1-4d27-4da3-b170-9e7760876967",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31d502c-898b-48af-bb9d-153e2a094c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824d73db-75a1-4e67-8a12-922d07577f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bc2946-3199-49da-ae97-840beac7eb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ea588d-67c4-48b4-ac8e-0d56c7f346ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483ba39f-ae07-4ad7-94cc-0c17c9d8ca60",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10c3a0e-adce-4986-94e0-ceb338640d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdffbba-a1eb-4100-bff9-697e23368daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8356700-8caa-4fac-b2df-ae16035f7236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83166ae3-e324-4042-a8f5-6d15c97cd097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510f6552-2931-47e4-8e09-4a124112ec7c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97579b-2e3f-4d43-bd7e-042f9b47b444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37801a31-7e17-46d1-9427-b7ae2b9e6e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae66899-33ef-456f-aab1-2c9149b4848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2286f979-7620-4211-9a06-29067c5a096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f485bb0-9b1e-4bd0-841f-41a831060bd0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee13b14-8cbe-40ed-8f9d-64a2ed161fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec846d2-5de3-4452-8572-bd2a1284b434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a7208-0733-4f87-a295-089e2cc9c82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9e0445-1847-414d-b949-44e7fab51a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406c0f5b-1de9-4cb9-b2d5-410c0fd448b9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9353b8d4-3a4e-4a71-8c7b-54eb8d9c9be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b3a4ee-ef79-4e6e-a4ab-b6b73b7512ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765e6d18-4b07-47ad-aa35-0e0823249b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bad48df-9380-41a8-be26-87fd34f44508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af920a2-b8fe-43d1-b6be-5d6a6d706164",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820af1b6-f0a5-4489-9d21-6c6c3e7f5113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814a12fa-c860-4c0e-b4c6-c0689e71f5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00593d1e-c5b5-4d60-9f1f-3eb717666993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bfabe7-7079-413e-a49f-609cad85f6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c04e6f-5d0f-474f-9371-2191706b6c5b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69fcccf-14bf-48be-8711-79074e364f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e907f78c-8b26-40d9-861b-7b7cb65a3130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85266b-28a0-47e5-9dfe-5c66a3be7143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81053af4-1d13-4440-8a8e-32164cf12af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3747d1bb-7407-4d13-8548-e76cd7423984",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6682ac06-116d-4fd9-8138-63dea2e166f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28420b9c-e425-4201-b158-9e843c072752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43a26e9-aeac-449d-a21d-39c90b30a1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25539f11-a6a6-42f9-8042-f90adc942656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bc8631-f9a7-4de1-adbd-f126c2887502",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a913d66a-2fb3-42c6-a6d9-35ce649db4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f0d583-851e-4b36-9433-d3efe81b1b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5524a755-1468-4e41-b3e9-713ea1075d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6eb7ec-81ab-4e3e-a412-22916e4e1c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74626d5-dab1-41b2-9c31-051be7c4021b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b98644-23a5-4cde-9a9b-3a1a346592fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddeac13-94ca-4724-8b9b-dcc8e611ebc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca695305-d322-4e86-b23b-8d7f01a153cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e8c023-a03f-4aeb-a36b-16f2d828bbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816e950-cd12-41f5-8ab8-b48a783515ab",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc3f21-779b-422c-938a-350cd0e448ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d5aa50-4abe-40d2-80d6-4d8f596bee2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd8cc8d-e46b-4d1c-8a44-09cf62ff47d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30e4ede-635c-472c-85a2-ba0fe329ddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d684c0-23e0-4ef3-a94c-73dc08d6a4ec",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2b0433-a0f0-4247-b936-98f73c2212b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ba6a77-fd80-40f4-817b-2ad581a61e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aafefb-f4d8-4c4d-a9b3-28993185dd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5450f0-aad0-4ede-94fd-5aa7e75f15bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9095191f-29ed-4ca6-8dda-716973e35b8d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e190a42c-b645-4970-b02a-3afb384df96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bba8b1-9e8a-4335-a15b-7b71429767f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2df259-6d99-43c1-8e4f-4437f9de4e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6182d3-e1b3-4a69-b100-711235437cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2786d9f0-7e48-4645-9ded-13b03866ea68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999990e8-8d04-4d25-b809-8c7812a7c1f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039dcb45-8db4-420f-8e35-4f101d4bdd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f784b07-f7c3-4958-92ad-8b4c52460fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3c064b-31d6-49f3-8763-b26a1b2afcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c06daa-4daf-476f-9517-37116f2964a7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35d6b8c-74b4-449f-8cc8-d942fa3cc767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4368fa8c-033d-4554-a719-2ae264c56a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46fa02a-88ca-4d4c-99b9-02d133ce2921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e53f2f-f4f0-4cb3-a25e-923016f3ea53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f83442-1b26-4587-ba0d-f23d218a5f85",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13faf9e0-4541-4112-84eb-4efe3dc312e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb525765-9853-415a-994e-f41764deb6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062f55fa-3f8f-4d38-88aa-0fc4bbc950d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01598218-d952-4164-9137-0961e019056e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e741d1-ce5b-40b2-8464-2b0f0e554a38",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032f8c1f-c70e-4b56-bac9-b5e363f53011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aec3b54-4934-4117-9d71-3573fe48c397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac9642a-7211-4810-a7be-fb4110b237cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3877a7b-fe52-4c51-b46f-f424b6a43bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ed26d2-cdc4-4a77-9ebf-75179a6c129d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d836e9db-2d83-4b25-b992-eb32d1898d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f1b1732-0741-4879-ac36-743c13ef0623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514084c7-5700-49aa-a191-4e6f911ab6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932ac77c-df99-4605-b0d9-8ca3ab61ea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f23c944-ea7a-4122-b03e-4e32e0092d7f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df601e7d-31c9-4b3b-975e-5f1a9b80bb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d7353b-3abc-4559-aed9-241d95a6024b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f9a62b-bfda-4f1b-a59a-a9a683e973e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301f1dcc-7d7c-4a57-9bf2-2dfd1c7093e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f90bf98-5dab-4276-a4b3-b1136d476d49",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af262793-e6d7-46c0-a721-2e94aaa733e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b473b921-9951-486e-a181-22a1d06db92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e95ad66-11ad-4753-9fdb-214719b6ebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ef3afa-d131-4856-a2bb-e901479ba6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9362eb-163a-4f24-8f7d-f5686d8c6151",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d52118-7fe2-4d55-92c5-bc0eee81d387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230dbbbb-aca0-411c-b415-36ef0ef7b030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc06c0b-7278-4126-bf80-5cfce049bfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe807f36-2eb2-49f2-b7e1-7497dfd37e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a58a758-ce91-4042-8b90-685489db4043",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7dcddd-d6a7-4ec6-9393-4e66affa0344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9cbd84-5752-4959-b946-1f960d1c7286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ec242-a465-4ada-8c8d-a6bb7318a223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1912cffa-614c-4ea3-92cf-ce7d782b3194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c35b685-4dd5-4a09-aedd-437e257d2444",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08003d-337a-40a5-a639-e3aaf017d7ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4779e02a-8abc-47b6-b0a1-7933da80b89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf039c6a-f320-4931-bca9-8638efa9cfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495605fe-efac-4d40-a268-1c53a512febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc08dc5-e2a4-4e26-9847-fb9a837e176e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b6a49-2882-4c1b-a1b8-57c4985d4814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0025fc01-b10d-4e19-83c2-b66813f61b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe9ae63-ee9f-460b-b686-732b1690bcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3357ecf7-fcb8-4f60-83d3-ed8ea328232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157469ac-0527-4962-8120-5b92200b42ff",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7264ff9-afa8-4d5f-a2b8-d8615f55c427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5fe31a-eee7-4f20-b5d8-19e8d386471f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00a18ef-6705-4ba1-849f-5f81ac2b0aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38246c05-eb8a-4b46-af7c-b189c23d97c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c660c523-cd96-417a-acb9-02361978331c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d46b046-4a0e-4397-87f2-a0edfe169225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01c9503-ba98-4ca6-a981-f1d2ff791080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f769bae6-e6a0-4eae-82ca-0044d5086eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2b3d78-fd9a-44cc-817d-dc1d86e0bab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ba6e79-65a6-43d1-bcb7-9e6453bfc7d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7970b8c8-5c73-4ec3-8829-1e22e51fc99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5494441-991f-4e14-82b2-7bef77e6e686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ff05ae-3f53-4abc-9328-c28a79905b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b27f4f-3580-47e2-8319-26e02846d234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324fd32f-3157-4a9e-ac73-f38180e58b89",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f93f66-647f-4e2a-837a-c1f2d9264793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d09abf-1572-46a4-9f0a-9f0e131b5b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b756731a-fcfe-4d90-8ba5-a14c566df7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac98091-de1e-4783-8704-45076a4a4cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f747e95-8209-481e-a9d4-dd4478bb57c0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598ee169-13d2-4efc-8243-7593330eaea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ce72fe-45a6-4859-b28d-62f6ab70a21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbb0a61-54ca-4496-8443-20e5d5522e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a6799f-08f0-4137-981a-0fe623db885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2c6a2-9d45-4eca-acbc-13927e7b2f68",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ca6b2d-f7cc-471a-9f2c-3f83947131b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5458a979-d04b-4d87-9592-1432d673cae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadb937b-c664-4f5f-bd9f-a3b12c0aa491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6ed26b-6dba-47e8-9cfa-9360d977e596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f97581a-d65d-4232-8d27-86a91e51e417",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca1e345-4835-4574-8ae1-8368ce4730f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f03039-84f4-4f1e-aecc-f45458bee084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43c467b-695e-4e60-bcf0-b821f1adcb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0210536-83a3-4250-8057-b1272cfb0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6a391f-271a-423b-a385-a05326c72a4d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcd90d4-2550-4778-8b2c-b89bdf976abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2dc8843-4e5c-4fcf-8bde-2ae9552d1656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb174fec-1a6a-4036-b334-9884be1a950d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b5c0b6-a03a-4348-817c-a6c2b61fd38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ede2d-9997-4e30-99bf-72f21569c046",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b62d497-655a-4ca6-80a6-943f4fcf148a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77381cc4-9a95-4451-b4b6-055951edecf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9341d1ee-5118-4446-8c31-165b841fbbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46f38bb-365d-4bd3-af87-c07d1c2c01d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b022d61d-4eee-46af-8da8-e5e5933d72e5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f473b8ea-c9ad-4f68-b5b6-ee46a43b53ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd0cc91-3e75-4e66-aa0f-e38e94d0464f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe400f5-d30c-4ebf-b814-b759db73ae06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0925c227-4c4e-409d-b10f-f134cbb294e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a003931-45c4-4b81-986b-00d3f2d43eef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c388b614-daac-477f-8e3d-a73ef3fa61ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e9eb2d-eb45-4c65-a910-ecb39fd875e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8cdd0f-0e3a-4a35-aeaf-649e6f1c61e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0820d49c-7a02-4754-8f3d-969d4b33a517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2376863-10a2-41ee-8f2b-6d5927f9f910",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d6d5b5-40f2-4b60-a4f2-b8a5c02deb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1a93e8-78be-429e-9266-58234ca90357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29ef1c-c6a1-407f-906f-6e2e7b60b232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb2b75d-9fd2-483f-a7ab-b6d667c49102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eb0e87-707d-460e-ac85-2f656906324f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38645ea-c49d-4ace-966f-0a6b8e219655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db93b655-71ba-445f-9dc5-bc91f73d5a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942268ce-97b1-460d-8501-28ffc4478058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e7ec16-49dc-48e9-b20c-a84084f24dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93ea551-ea9d-4ed1-88d8-9250bc2e0870",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5354bc-36e9-4a4c-bb72-ffea18e036fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c58ccfd6-68c1-4a97-92cf-5a512aafe57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64076c4-72c7-4389-a253-cfbc9b307aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e1daeb-ba43-4641-b50f-5b33aad87ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3466e36a-caa0-4fa6-b256-10e53b42e480",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af88893c-3e49-4e07-86f1-b530b65b6598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86a08ab-ef43-4786-86c3-51a3a800eb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b345936-7771-4c7a-abb2-596675d99d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affe0a03-748a-4f0e-a9b7-55c0767d40e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99b97b-3e64-40fa-a139-63ec102f11b2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4509b7e-c124-42a3-a1ea-e1237c3b4894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd89d46-b82e-4876-9e10-c812069463ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e797abe-bb95-468c-93b9-4ae644b6e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda67711-f8cf-42e6-99a5-d8cd7e7c83c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677bce7d-b0be-4a21-8416-13c760a94828",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b828b1-cd73-487c-ba9a-abbd5a2cd070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e57b7b98-68aa-499d-b40e-b35fa2c522a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8965af1-8a49-4865-b7dc-e253e01dc478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314a528e-2c87-4de3-a4ba-17fba848b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e21057-2a53-4b81-bb81-40881b2af128",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e21704b-8d09-4e91-a147-e3e1196819fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7688ae-22e0-4adc-b511-bc4a6af82961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a7e9b0-3418-43d2-a554-5031cf5b1200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eea2cd4-a264-453c-90c1-5b11a88d5284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e707659-8ade-429c-92da-0990999d218a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7170a0-426b-492d-8ccd-1c27d51b73e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace4fc0e-d88d-4a11-ad3f-eb1edbe7be46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b49c4d6-4e0b-4355-93d2-5dccf8dc8a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a29797-0b5e-46d0-a709-af00f4332872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18846e29-2603-4254-ac1a-50d306cce1a7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d19ca6c-8426-4331-9843-16fd12d53848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54f9e26-177b-456d-bb45-ab2e64f1726d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d9939-9e7a-4f8b-ade2-31a363efa556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfda528-d448-4570-befa-1691b66fc48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f7110a-2402-4d54-beb1-fde13e9b97b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8b18d9-d7df-4aba-9acd-964cd107fb83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff4af94-5eec-4f8e-b808-8172ac4c80ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560d0312-f59a-40ce-a6fd-778a8d53fb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68daa12f-8f1f-49b2-b81c-fb977ee005a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b290be-ef00-43d7-b983-f73d8c6ace30",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f46005-2cd3-460d-b8df-4345d8f3b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a97c6ca-3bba-4166-8278-ec5baa9ceb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4732b0b8-8778-4157-8453-7b31dbe2448d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f470fb5d-a018-49dc-97ee-1613ece6efa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e4df7-03aa-481a-b049-7a0db7979eea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7e4efa-d5df-4225-8937-164153132fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbf138f-2e1c-44d5-b7bd-1babd0551472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4bf11f-624e-4952-9d98-7c1b88c32f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad4f9b2-4fd3-4aff-9585-d4024028be8b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "963599ba-9c70-45a8-ad52-f733feb04c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e255a10d-f679-47bb-934b-92f7126dc961"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c6ea55-2078-4d4b-a611-b6471e008a06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e654ace4-eb1d-4024-8d53-6bef2f8b9e01"
                    }
                  }
                ]
              },
              {
                "id": "6b5a75bb-14a3-4fd0-91fc-4e4be58295b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b9acec9-4881-44ed-b6e5-91f99c53a824",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d7eaef-5d9a-4bb5-baf1-025826dd05aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9946699-15ec-4ed1-ac32-628fabeeae7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59706396-8409-4c9b-9e87-af914d83c25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f53e4ce8-4129-4e22-bf29-ed9aac617106"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16e96124-53bc-48ec-85f7-f53cabc65521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d6fc9b-9112-478b-afb2-59f3c71bdb64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95692bfc-bb4a-4d10-8bf9-b73939dbdd20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee4b1567-0ce3-4a93-a1c3-d7793da700b3"
                    }
                  }
                ]
              },
              {
                "id": "2d5783c8-b451-4b06-bbfe-526767f7413d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a2911ee4-b81b-4b57-8d8c-3585b8fc55af",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde7f584-cd8f-494d-8a71-638fb3a1881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "55c0f600-2f3f-42be-8114-61e620461aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594f85e5-7edf-41cf-8e4c-715d6a61b75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fb77df-c0df-4fc0-9b99-282ff6476489"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e603279a-8708-4fde-b915-d5e2faba5fc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c234aa0b-3362-4202-826a-d6f4436428a6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c636de48-c167-4d05-851f-e3389ab7563d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d4bffda-b16b-4a07-97fd-e268fdd4a58e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11bd2484-7f8b-4bae-b8ac-22f93e41c273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aaeafac-adb5-43f7-b4c9-b30b2e361ec4"
                    }
                  }
                ]
              },
              {
                "id": "942f6b40-adc5-4288-b9dc-65f85c1f8078",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63b08baf-f2d9-4d49-8294-031fcc01f082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95991f5d-eee8-4f71-b853-832da08770bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d4d6b73-9edc-4e42-8c06-67efe099d7d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc73c6cd-f783-4d0b-9ac6-823f44b4da94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5deebb43-e968-461b-84c2-97b12da012af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8cd9cc4a-7293-46df-a5d3-3c57bef02135"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3873fce-886c-4f88-bb86-866a03d53692",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e160802c-83ae-4e5c-85a8-9a0f8e84ddd6"
            }
          }
        ]
      },
      {
        "id": "f29c158a-17fd-4556-b1d9-d768d89fd77b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7de71148-d8dd-490a-958e-948fd5ec3de9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9562df4f-978d-42e6-b69b-c1fb74e3bf10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcc48ead-1b29-48a5-8d96-e49398857e30",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cda6e47-d57a-49af-8e99-21cd0203098a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "07384cca-d96a-4e7b-b46d-d3d73f4ef08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01dd1b6-93b8-40ba-89aa-767293df5051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e1a5f34-e243-450e-88ef-4b5e79088800"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a72ffc8-6faf-4a52-ba37-a1342a5ea3bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d74bced-78ec-4abe-b4eb-5e9f8ab1e118"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78a1a1c5-2dd8-4889-ab88-cc9c76d9899c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cc1e7a3-b94c-47f5-94d6-eca6a6e8175b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79ecc82e-6e8e-4330-8625-3d4710157198",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "38e00cfa-5669-43a4-ab15-52182f6e0cfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0447ce5b-5837-4cc8-a914-fd6c0d340743",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bcc187b-d6e9-4dea-8cfb-8e3b64b0cb4d"
            }
          }
        ]
      },
      {
        "id": "7a7340e4-a76f-42dc-9954-7916d4da56b0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "77601cae-a638-46f1-9afd-6a4e3f4a38a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcffe05c-d94d-422f-b1d4-1ad410356a55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcef9db0-1969-4fa9-882e-e0fb73489537",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322fafd1-b16f-417b-9bf4-87c30a4a252e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "035776a1-faad-41ac-9a01-9fd3db4d0fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f31a8-1d49-4596-9986-ce4f4922b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e27999a-70a8-4587-a1c3-b7102af5bd12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "367f96d6-2823-49fe-842c-55f21d31624a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "285ed48d-d5ed-4292-80ac-5a1b275b47b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb151efe-c155-4b8f-8403-4512d1a9734c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf18ca6e-0762-446b-bf9f-ce842eaa1777"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5acb20d5-f337-47da-8af6-5f76f86182a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebcc5d1b-da4a-4f1a-bb9c-4611f570de6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcab8c32-bef1-4ce5-8b49-0ab195588ca3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7f0e32e-248d-4393-a2a2-c2e2f08bdf6b"
            }
          }
        ]
      },
      {
        "id": "7f95729f-53c6-4d2e-a1ba-eecb83497479",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "694e41f9-9c1d-4872-9d89-5ab6d02889b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ca55454-d5f6-49ab-b8cb-c14c0c3d3a8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9764f94f-361b-4d7c-91f2-3762db678353",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7f9337-86d9-4d38-bafc-8844a67145c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caa170f3-82b8-4de1-82df-88ac37866289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc787a1-b660-4c6a-8a7d-5ffb48696cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26601d75-26c0-4386-8835-95a49e1e603c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "162b0600-4476-44dd-95d0-29f27b6b1a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96403003-d624-4d13-b2d9-0ee099d706b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f63a54-87f7-4c2d-9f76-26cf0fb10a07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edd6f845-1f67-449a-aa55-fad28d2a90fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe1f7481-7720-4d65-88c6-478a946368a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c893c651-a61b-4eba-b01f-b49bbee86a6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78cd7597-5eec-4160-9f87-0995a9535898",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b958957-dc11-4f13-8e35-628fede70ce9"
            }
          }
        ]
      },
      {
        "id": "9ed25edd-07ce-46ee-8914-79ceed2b74be",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9eae3696-a5b1-43c6-8561-7ffbacb92196",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d11b8194-d8df-40d1-8ec3-7d1b449d8c3e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5e95ddd4-4289-410f-bd41-e4a27d355bfe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d0ba13-f4ae-4319-97b2-c2b279688bd4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d61c0da3-05b0-4743-9007-410595a2b3af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 410.58596491228053,
      "responseMin": 7,
      "responseMax": 11718,
      "responseSd": 1434.1973550165083,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697848337630,
      "completed": 1697848467066
    },
    "executions": [
      {
        "id": "4e4369f5-5aa7-4bf6-9af7-24af88678d0e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "814e9651-1bcf-481f-9311-d7f2a778538a",
          "httpRequestId": "0b31136c-b24d-45ed-a67b-8430f034153f"
        },
        "item": {
          "id": "4e4369f5-5aa7-4bf6-9af7-24af88678d0e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "25aeb9d2-6e39-450b-a770-31c97eed3a91",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "eb6241db-b197-4e12-864e-23c31c4dcb9f",
        "cursor": {
          "ref": "09511b13-f74c-4d32-ba21-af1781a327bc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc3b0391-5cdb-4a2b-b944-3f5ebda517ef"
        },
        "item": {
          "id": "eb6241db-b197-4e12-864e-23c31c4dcb9f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "82b2ef4d-fa5f-42b8-a96f-72b6fcabfbbf",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a10cce80-d9e4-4026-a2fa-c44b1e5078c6",
        "cursor": {
          "ref": "cc19e076-d273-403e-b716-b918f0f691f0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b322b61-ba7d-47c2-bca1-5a37b84578e4"
        },
        "item": {
          "id": "a10cce80-d9e4-4026-a2fa-c44b1e5078c6",
          "name": "did_json"
        },
        "response": {
          "id": "7e5967b3-9ffd-43eb-88e9-64bbc3728927",
          "status": "OK",
          "code": 200,
          "responseTime": 1743,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd5912-e9e9-4483-a707-6bb107e71af3",
        "cursor": {
          "ref": "330beecf-90b1-4079-82b2-803f27d3f057",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81434d5f-4177-473f-b85f-ef133916974b"
        },
        "item": {
          "id": "b5dd5912-e9e9-4483-a707-6bb107e71af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "63fc00d0-cfed-45e1-8288-21b04ca1c104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd5912-e9e9-4483-a707-6bb107e71af3",
        "cursor": {
          "ref": "330beecf-90b1-4079-82b2-803f27d3f057",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81434d5f-4177-473f-b85f-ef133916974b"
        },
        "item": {
          "id": "b5dd5912-e9e9-4483-a707-6bb107e71af3",
          "name": "did:invalid"
        },
        "response": {
          "id": "63fc00d0-cfed-45e1-8288-21b04ca1c104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8027eba-5644-44c4-94a0-8f9cac04aa82",
        "cursor": {
          "ref": "e6ed2b18-6f89-4534-8345-af3a8f8ee4a3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0febb066-47e5-41ff-9214-1d4c85b5a988"
        },
        "item": {
          "id": "c8027eba-5644-44c4-94a0-8f9cac04aa82",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6b80fa1e-eda3-4f0f-9a46-700a2d1bad5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 400,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc36c6f2-682e-4d94-9aa3-bd648b58360a",
        "cursor": {
          "ref": "d5aec44f-f7fa-4189-9bbc-0c03a6a4fb0c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "31e2cec7-2cba-47eb-ab04-efef41c5078d"
        },
        "item": {
          "id": "fc36c6f2-682e-4d94-9aa3-bd648b58360a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2fc6c27d-5c94-42ae-b0a3-f8477518b4e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 250,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cc3d53-8db0-4020-a879-231a661e1481",
        "cursor": {
          "ref": "d8af56ed-872f-4060-8f8d-c99da6a34c90",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b7033f87-459b-432d-813f-667a023ec23a"
        },
        "item": {
          "id": "07cc3d53-8db0-4020-a879-231a661e1481",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8bd90a2f-1de7-4413-8607-6b93ce477e65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3985a7-84b7-4537-b80c-f4e57667c353",
        "cursor": {
          "ref": "fd794c8a-3f12-46be-9c80-1e248ad94aa1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0fdff3a-e9e8-4a24-af23-158e83722b54"
        },
        "item": {
          "id": "5f3985a7-84b7-4537-b80c-f4e57667c353",
          "name": "identifiers"
        },
        "response": {
          "id": "149582dc-5209-4884-9d98-95de1b95cae4",
          "status": "OK",
          "code": 200,
          "responseTime": 1686,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c625f2-e99a-46fa-becf-ccfbbe154637",
        "cursor": {
          "ref": "2b589e1c-0e11-4ebe-8395-af8aafbbe584",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a55b6875-3103-47f2-b178-6e4366728082"
        },
        "item": {
          "id": "a9c625f2-e99a-46fa-becf-ccfbbe154637",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3b83c8a-1653-4bd1-927c-001b06c15733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb2f225-52d4-4839-b732-4a287c49adaf",
        "cursor": {
          "ref": "0a180f47-34c6-414d-9e94-4a894d1a373b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "53b45a6b-b2d4-4a53-9d60-b748e0e040aa"
        },
        "item": {
          "id": "4bb2f225-52d4-4839-b732-4a287c49adaf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a019ba66-cb98-4919-9b84-ef6a0702240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65bd747-52a8-491e-936e-ed947669d708",
        "cursor": {
          "ref": "4329c0c1-db99-4ae7-ac81-10be91c550f9",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc13fc28-f393-4e80-981d-f34e7fb8f930"
        },
        "item": {
          "id": "b65bd747-52a8-491e-936e-ed947669d708",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0523154-5f5f-4d58-ae73-e94595430602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5730b2-8b68-4832-9861-caeb144701e2",
        "cursor": {
          "ref": "3a53d9e2-6ec3-4141-9d21-c83ba284f782",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d5507069-af87-4a80-a922-c87026b0699c"
        },
        "item": {
          "id": "4a5730b2-8b68-4832-9861-caeb144701e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7903c6e-c96c-4106-b522-5be8bc56cbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254f635-75ec-4668-804d-64529d5317f2",
        "cursor": {
          "ref": "7d34d3ab-7fed-46c7-8f67-448bc7d596b8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "397f0eac-7287-4ac7-b77a-a458c24572ec"
        },
        "item": {
          "id": "b254f635-75ec-4668-804d-64529d5317f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d9be2427-27eb-4c5d-8f2b-71aceabb73eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9748d9-a7d5-4de1-ac99-ec2e869c5eea",
        "cursor": {
          "ref": "8ec7f036-6eb9-49cc-8199-10a5b4de8474",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4cc69d58-06df-4362-90b6-397414a32e18"
        },
        "item": {
          "id": "0b9748d9-a7d5-4de1-ac99-ec2e869c5eea",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32f4be3e-45a3-42c8-96da-d4d91d690773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52407e4-16be-4cda-99a3-17713ddea3ae",
        "cursor": {
          "ref": "ff29dad5-530a-4374-9a51-169465316b0d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bb21dfeb-76b8-4fb7-a418-84a7824d9280"
        },
        "item": {
          "id": "f52407e4-16be-4cda-99a3-17713ddea3ae",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "80dfcb16-dd9f-47ad-9736-2da9e5591bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e146ef0f-304c-44a9-bb53-92f0ee3196f3",
        "cursor": {
          "ref": "6d6140ae-691a-4f48-9e7c-50dd782c7bc8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f61e5496-07b0-4337-a577-7a74e58b7e08"
        },
        "item": {
          "id": "e146ef0f-304c-44a9-bb53-92f0ee3196f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f836c4f9-3406-48f6-b63a-8234bdde2130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3b44e-fbc2-4138-b724-93fcbb5765d0",
        "cursor": {
          "ref": "e448cdf1-70ec-4a56-82b8-71063d6c2e9e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "49ef2869-35df-4941-b5d0-8487e7696b45"
        },
        "item": {
          "id": "3ea3b44e-fbc2-4138-b724-93fcbb5765d0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23c38168-e9f3-42cd-8a5d-c5f39516f10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0b00af-6fa9-4b8a-b16a-6e607007e590",
        "cursor": {
          "ref": "fdf9422a-0f4a-461c-8170-209d77054a0d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c928efd4-b1d0-40b4-87af-4b01d315efbf"
        },
        "item": {
          "id": "9c0b00af-6fa9-4b8a-b16a-6e607007e590",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d4cb5e8d-3ba9-406e-bd6f-c34d9c2e1565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0137a47-3bc9-4e08-814c-4cc2fb1d7ac0",
        "cursor": {
          "ref": "cfc6ad24-2393-4390-b216-e1d37b34cf75",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "603a3d10-1fba-4acd-bfe7-08779ca80858"
        },
        "item": {
          "id": "a0137a47-3bc9-4e08-814c-4cc2fb1d7ac0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a087d5a7-0989-4163-a1bc-29a6c052e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0bef7f-3f7a-4831-869f-06970584dbed",
        "cursor": {
          "ref": "ca7b9eb5-e4e3-4749-bf06-3cc6ca15c0ef",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e144878-d9d1-4a67-a12b-2c5c9e45d37d"
        },
        "item": {
          "id": "9e0bef7f-3f7a-4831-869f-06970584dbed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "998b7f44-0180-4486-bb8b-129c34634f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81673adc-8ca8-465c-8edf-1c29ab85f6c1",
        "cursor": {
          "ref": "28a19b8f-d682-4460-b72f-45ca4ac01916",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "390b4045-7742-4c14-bbae-404370a018c5"
        },
        "item": {
          "id": "81673adc-8ca8-465c-8edf-1c29ab85f6c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6266e325-7edd-4bd3-90f4-d168a40c06fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9851bece-ab62-405a-84de-6a7a06f454d2",
        "cursor": {
          "ref": "1037bb58-13d0-4931-afdc-25200cf25bdf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8378e932-895a-455c-9488-3ceed89c8b99"
        },
        "item": {
          "id": "9851bece-ab62-405a-84de-6a7a06f454d2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad1ba03a-9999-44ac-afc2-67c75922d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45441b3f-5f2f-4344-9cf5-a4c38e18ef7c",
        "cursor": {
          "ref": "5b48d2d7-ed24-4ecd-813d-04758f1f8008",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "53845e96-03f7-4b97-aff2-e3d61bb939b4"
        },
        "item": {
          "id": "45441b3f-5f2f-4344-9cf5-a4c38e18ef7c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eef0af16-8f3b-4472-88df-c99129b774b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa6c99-8aab-43a9-94e0-c305f9b79be5",
        "cursor": {
          "ref": "415e6cae-6014-44eb-bd46-b5b3348c9b4f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "abc8ced7-90db-432f-abde-c18eb31f4d18"
        },
        "item": {
          "id": "0faa6c99-8aab-43a9-94e0-c305f9b79be5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db87e418-a3f5-44f1-adf0-bb65a5308422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b91b93f-c8bb-4af2-8700-c8c37204d171",
        "cursor": {
          "ref": "17afe32f-7187-4cc7-8c75-6a8adbe93c0f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b4c9e6f-d8a9-4370-ac68-f13dd50fbc1a"
        },
        "item": {
          "id": "3b91b93f-c8bb-4af2-8700-c8c37204d171",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "519b0653-7047-4445-9519-d0ef76a5a369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f21a79-0afe-4d31-9322-d55846ad8f36",
        "cursor": {
          "ref": "e5dd925c-d8bd-458c-a045-e876f8a4fee5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "982128d8-5711-4287-8a5c-bb999ee73774"
        },
        "item": {
          "id": "c1f21a79-0afe-4d31-9322-d55846ad8f36",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "06130087-4a65-4324-b659-34775c74c33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7efe6-62d4-40f5-b6d3-2e4e47ac15be",
        "cursor": {
          "ref": "83808dea-a3d5-4f2b-97e1-ea012571862d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ee766114-7d66-4de1-8026-c6833a5b011e"
        },
        "item": {
          "id": "12b7efe6-62d4-40f5-b6d3-2e4e47ac15be",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ed5fe5e-f6ea-4dd6-9cd7-6f36fb5f0fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b63cef-c664-4523-bd15-9a115555d1b0",
        "cursor": {
          "ref": "86117510-af38-457f-a4b5-011550e1d23d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5f4f0871-71be-4bc4-842c-43a8d2edecf3"
        },
        "item": {
          "id": "98b63cef-c664-4523-bd15-9a115555d1b0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b8b3da3c-3b53-4952-97b5-a25ef591625a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fa47eb-995a-4bdb-83f3-8e1e4a63aa4b",
        "cursor": {
          "ref": "cfd467ee-c76e-45da-9a73-d115ed266947",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7146cb9e-d0c0-4145-b879-5c3cc9c5da7f"
        },
        "item": {
          "id": "f4fa47eb-995a-4bdb-83f3-8e1e4a63aa4b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "000923a4-79b4-43a4-bc42-c0e0973ba41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22597918-fd46-4ef5-a7b1-01f5d918733b",
        "cursor": {
          "ref": "9dd6a929-ded9-48ef-8037-e4537dc0b5f9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b1cbd0d8-14a6-4ee1-98ec-40c063a3918c"
        },
        "item": {
          "id": "22597918-fd46-4ef5-a7b1-01f5d918733b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db713bae-b446-4471-b7fb-c5d4e3c465a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b60d053-9cb3-4608-80d5-298ee055db56",
        "cursor": {
          "ref": "728a1d81-4d1b-4d0e-840f-aa56d5929e72",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "22ab2677-c24b-4301-9b7b-4518ae8bab28"
        },
        "item": {
          "id": "8b60d053-9cb3-4608-80d5-298ee055db56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e581af6d-0441-4644-baed-b4c653b904c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860e440f-78ef-435f-931b-66681bdd01e9",
        "cursor": {
          "ref": "b2a2451f-5ad3-41c1-bbb9-3746230871e7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ba4258ef-0a7a-408f-a56a-bdf18a36cd8d"
        },
        "item": {
          "id": "860e440f-78ef-435f-931b-66681bdd01e9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f9db8b5f-c58d-4586-9826-f4039aa9a22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8282e15c-5c27-4597-bff6-f24f5661ae62",
        "cursor": {
          "ref": "b7506b1f-e4d5-45a2-99ea-c27e96a20e36",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "efac6aab-b736-41ef-a11d-f868b8c66fac"
        },
        "item": {
          "id": "8282e15c-5c27-4597-bff6-f24f5661ae62",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e0afd419-58ba-41a4-a0e7-eaba7e7ed330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c450d2-4b05-4993-84d2-1b35251540c5",
        "cursor": {
          "ref": "761e487e-431c-4d70-a0e4-d6f1e068f0e6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b587aeaa-7753-43a8-ba88-9ffbc12cb857"
        },
        "item": {
          "id": "66c450d2-4b05-4993-84d2-1b35251540c5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ee2201c-be66-4d00-83ea-8b2223d3ace9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74a10a2-c4a8-4ed2-81ee-ce7a212648bc",
        "cursor": {
          "ref": "c81de785-2d31-40bb-a457-e7602ef1862e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "54a537ac-1ce1-4a63-8b96-9a048435904c"
        },
        "item": {
          "id": "a74a10a2-c4a8-4ed2-81ee-ce7a212648bc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fe63a1e7-cec8-41dc-8bbb-d41b2d742987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88010dba-32a4-4296-82c7-c2e16bf4180c",
        "cursor": {
          "ref": "dcd2b587-6220-4c62-9139-a571198c1351",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b475762f-ff46-45b5-857d-25a7aaa23b5d"
        },
        "item": {
          "id": "88010dba-32a4-4296-82c7-c2e16bf4180c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "86b162bc-dcf0-40d3-8ad5-2f24761e1a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9529b4cb-a422-458a-804a-19488b3c967c",
        "cursor": {
          "ref": "fd1520f5-65a1-44b8-9a26-d979a9cdc5af",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b58734eb-39b2-44eb-b161-694cec60515c"
        },
        "item": {
          "id": "9529b4cb-a422-458a-804a-19488b3c967c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b98b6a8a-0033-457f-9245-b55fb2a74dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01de7565-032a-4a01-a6c5-e5c4c2375fc3",
        "cursor": {
          "ref": "6a9717e8-d552-4523-941d-8fbf0861e697",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eb7c778d-e65d-429b-900a-cfd7b9409d17"
        },
        "item": {
          "id": "01de7565-032a-4a01-a6c5-e5c4c2375fc3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "03c5f3d5-5e51-4301-ac75-8facd771d6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22394045-11e6-47d4-956b-fb276134c584",
        "cursor": {
          "ref": "2ea708aa-b817-4922-8981-fa296a57812a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "38ae3d51-7371-44a2-b6e9-28696133c05f"
        },
        "item": {
          "id": "22394045-11e6-47d4-956b-fb276134c584",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "15f72a8f-a094-425a-8ff9-ac220ce78147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690969d-c9d0-44d3-a1a8-eb840939b115",
        "cursor": {
          "ref": "bbefd2b5-6835-4dca-911e-aac21153351e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dfeb2e20-3ac1-43d4-ad29-420984e28fb9"
        },
        "item": {
          "id": "0690969d-c9d0-44d3-a1a8-eb840939b115",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d223f6e4-f457-44e2-9798-43691a006265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9160f57a-530c-4c09-b06e-7a3b822a5e14",
        "cursor": {
          "ref": "e219e290-4b73-498c-9137-e1146b933f33",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e1bd012d-a90c-40bf-8e83-ee66a7a17661"
        },
        "item": {
          "id": "9160f57a-530c-4c09-b06e-7a3b822a5e14",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ad08b7b-3b68-4c93-a083-e812e0cc334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd00cb1f-1201-4304-9f10-7c6b87eb8df7",
        "cursor": {
          "ref": "2fb16cba-3bff-4ace-94e9-25900a208913",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b2b309a3-7f77-437a-bb93-c50ad22bcce9"
        },
        "item": {
          "id": "fd00cb1f-1201-4304-9f10-7c6b87eb8df7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6df45902-0f42-4444-a823-f32065f5181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470b0c41-d0e4-4ac7-b028-601ae026da58",
        "cursor": {
          "ref": "fd746fb6-4265-4c59-b99f-31a11d2b2900",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4d56aedc-ca90-4b41-9f92-d3a181d0b432"
        },
        "item": {
          "id": "470b0c41-d0e4-4ac7-b028-601ae026da58",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "11f8d04d-c572-45e3-a1ce-7b2d60dcb40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6697ced-b109-4d5d-867b-2b0248c05a7d",
        "cursor": {
          "ref": "bd669b3c-0f23-4e3f-a6ed-3ceefb3d150d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bd67f502-0e26-4872-a29d-b3b9a7cd7623"
        },
        "item": {
          "id": "e6697ced-b109-4d5d-867b-2b0248c05a7d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e57dd2a6-ba0f-42e3-b024-ac7e91f0f1dd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2330,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756b9ce5-77a3-4965-95e5-cee869bed79e",
        "cursor": {
          "ref": "e3e08ec0-d7d2-4c13-9af7-5314779ecb35",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a7f6dd1-2272-40dd-8ec0-c0eff3b56f09"
        },
        "item": {
          "id": "756b9ce5-77a3-4965-95e5-cee869bed79e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e1c4e267-89ac-4496-931b-47821ec7b025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb83d31-d2b1-4bf1-8ea3-53c57521bdba",
        "cursor": {
          "ref": "7721d114-937f-4eaf-8ce1-5ac402d43b2c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "943dcbb9-2e1a-4c71-9dce-9082ec1e6e06"
        },
        "item": {
          "id": "1fb83d31-d2b1-4bf1-8ea3-53c57521bdba",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b515d594-0e74-49d7-a771-0a28acd42cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b25c37-0aa7-42c3-9492-0e8781a84e54",
        "cursor": {
          "ref": "c01ceca2-8a74-4ac5-8c69-2d5dbaef46f9",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5457f80d-41c6-4615-8ee4-06f99f5d055f"
        },
        "item": {
          "id": "e3b25c37-0aa7-42c3-9492-0e8781a84e54",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0f2ac113-a884-4ed5-8804-7cd36304c8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0790c6-4ae1-479d-bb25-a5637c0a356b",
        "cursor": {
          "ref": "8ecd6a20-b20f-4f33-8125-3e45f885b405",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8c6578cd-4f42-491e-97a4-04ae5f03c155"
        },
        "item": {
          "id": "6c0790c6-4ae1-479d-bb25-a5637c0a356b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "552036dc-5844-4be8-ad91-1b8bd8282f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780b855a-9957-479d-8955-01bbe0b86f49",
        "cursor": {
          "ref": "47310fc7-711b-4ddb-9369-3481da18402f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c97314b4-4920-46d8-aeb2-19335df846b2"
        },
        "item": {
          "id": "780b855a-9957-479d-8955-01bbe0b86f49",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "50ca8ddf-f95b-4e50-bb6d-d332ba268855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a171ad7-b991-4442-9e55-4b8c11ee9e31",
        "cursor": {
          "ref": "3f29ff24-68da-40ab-a43e-54fbc8d97e7c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dc0d600a-6266-4bcc-b428-0949c90eb593"
        },
        "item": {
          "id": "6a171ad7-b991-4442-9e55-4b8c11ee9e31",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8b772af4-4192-4e26-8f92-b7e62c169f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb32d4-688d-42be-9dbf-03c92294d758",
        "cursor": {
          "ref": "63453656-4d15-487d-aadc-fa940d970dd5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7b685980-503a-4bba-81fb-13be22a88799"
        },
        "item": {
          "id": "54bb32d4-688d-42be-9dbf-03c92294d758",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7a0dca2a-694f-45d6-a4d3-70a9f2a97920",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2330,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360c588c-d6b6-4724-ab38-abf4c719be02",
        "cursor": {
          "ref": "a74ef351-7cee-432f-91c7-6c0af2a1eec6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8f2d0a81-88a1-4089-8f13-8094dfab92f6"
        },
        "item": {
          "id": "360c588c-d6b6-4724-ab38-abf4c719be02",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "464cc1f6-7b9f-468b-9c18-44b343f68a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5174f8c-6ede-430f-b404-7685cc1d90bf",
        "cursor": {
          "ref": "d4b42e3e-cbbd-4234-b86e-dbdd39a20645",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0bc7bf79-81f9-4479-aa74-29bf0748d841"
        },
        "item": {
          "id": "c5174f8c-6ede-430f-b404-7685cc1d90bf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fcbbb593-87cd-458a-a2a3-e793d0ee30ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b865a3b3-6f56-416f-b519-5211fb525d2b",
        "cursor": {
          "ref": "7f9cfb70-9930-41f9-b946-00c2f5441e8d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f145e843-f53b-4958-b0d8-bebdd3de160a"
        },
        "item": {
          "id": "b865a3b3-6f56-416f-b519-5211fb525d2b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ab83e85-2f7d-4d41-b129-031d9c45302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdedcaaf-5a67-4b3b-aefb-0efd99064d7d",
        "cursor": {
          "ref": "19ddaa83-0d2c-40e0-9995-1c3242bebbc3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f226b6a1-dfe5-46f0-b6ad-0507d9c70f80"
        },
        "item": {
          "id": "cdedcaaf-5a67-4b3b-aefb-0efd99064d7d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2623e135-6b0a-4d58-a1b7-fddd7e4b2bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45adf960-1e12-4106-993a-2a39f4841655",
        "cursor": {
          "ref": "01f9bbd8-2023-4d99-87d5-fa7c66cc808d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5a7c8230-b988-478f-966f-27b042834c54"
        },
        "item": {
          "id": "45adf960-1e12-4106-993a-2a39f4841655",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6d7e83cd-8ec3-44a6-b577-0571a8a679a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803459e8-8fd4-4c19-95f9-98ce23767f79",
        "cursor": {
          "ref": "0138306a-edb6-469d-b8b4-bc6872ab682c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7b32e3ef-d335-4f5c-8f14-601b8844d5b7"
        },
        "item": {
          "id": "803459e8-8fd4-4c19-95f9-98ce23767f79",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "480a5ad0-715f-495f-b254-7be98dca8fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb4da3-f420-44ab-aec7-b5970a7a3e9a",
        "cursor": {
          "ref": "a8c0fe7f-2673-4cb3-902a-0c90731723b6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "99a6858d-cd7c-4bfd-b24c-6f0ec62fe1e0"
        },
        "item": {
          "id": "dfcb4da3-f420-44ab-aec7-b5970a7a3e9a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e382b873-6089-4a89-b312-d6339db8f26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92af0b09-986c-4efd-8433-37f79ee13e19",
        "cursor": {
          "ref": "abf8b722-be74-41f5-b763-32cba04fef5e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3169350d-a666-4811-8721-edce932ff74d"
        },
        "item": {
          "id": "92af0b09-986c-4efd-8433-37f79ee13e19",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b69cd134-21e8-4396-9c67-0f81849bd978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151bd433-2e70-4bfe-9b3f-36052c85cba9",
        "cursor": {
          "ref": "fe5ae783-5c71-43c4-b137-d64014894540",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bc0b9704-2490-46ba-bd4b-6acba5b2bbbc"
        },
        "item": {
          "id": "151bd433-2e70-4bfe-9b3f-36052c85cba9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f52a7d3f-330b-41bc-8980-1ce9e1b361a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae0074-a493-4a07-8bcd-14552f84204e",
        "cursor": {
          "ref": "bf957423-eb15-4d5a-ae40-39d18640aa37",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "deed2c5d-97dc-4af6-bf2c-25a8d0144f0e"
        },
        "item": {
          "id": "c6ae0074-a493-4a07-8bcd-14552f84204e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43f59b77-5a3f-41a9-b887-080117900dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abf39b6-4fec-4dfd-b127-b6d28da9a6b7",
        "cursor": {
          "ref": "c034fa97-6df5-44cf-906c-4d63fa5ffd11",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "29b64806-5fe8-44b7-911d-e27732297134"
        },
        "item": {
          "id": "9abf39b6-4fec-4dfd-b127-b6d28da9a6b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "84e8482b-8f27-4290-9c09-8b01f001ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f01a87f-835d-4d97-9272-430a364d9da7",
        "cursor": {
          "ref": "90bd6d3e-b419-4e37-b6e4-9e181ac772d2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "72b8b301-6028-4471-b238-267d015d5687"
        },
        "item": {
          "id": "2f01a87f-835d-4d97-9272-430a364d9da7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4521ca44-3162-4456-9b00-2ec31f5be3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe6e97-50ac-4486-8d72-b010140086dd",
        "cursor": {
          "ref": "4708cfea-e566-4866-967e-752fe658eaaf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7c5a6166-1ee8-4e56-a297-cba74228e346"
        },
        "item": {
          "id": "cabe6e97-50ac-4486-8d72-b010140086dd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2ed87c44-c169-46a9-a948-99850ec8d5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd41ec-9baa-41ae-980e-a53d1e6c8d36",
        "cursor": {
          "ref": "443ea5bb-1826-4b0f-b4ca-0bde9990138f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d7979732-3561-4969-a92f-31589d482076"
        },
        "item": {
          "id": "6edd41ec-9baa-41ae-980e-a53d1e6c8d36",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "77660153-3b92-4df6-9d22-2b6eebcfad10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d27c9-57ee-4ead-b6c0-661cba821954",
        "cursor": {
          "ref": "137e6b1b-1bea-4f2f-a678-c4bf0bb0efb3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "782ea7cb-5ac3-4098-aeb7-cc9825c1d8f2"
        },
        "item": {
          "id": "173d27c9-57ee-4ead-b6c0-661cba821954",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4c5bdc21-b787-4ee2-be4c-8dba1df3b433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12a97ec-1160-4af8-bcaa-1c82af0f2c6e",
        "cursor": {
          "ref": "2c6ba67a-2caf-4f49-8c72-9c714591a358",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "64130551-d5ec-483c-997f-5dc77c0424f5"
        },
        "item": {
          "id": "e12a97ec-1160-4af8-bcaa-1c82af0f2c6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c378fc70-c338-489d-b039-b9581a88ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb2643a-f68e-4787-b460-0334fd3dea17",
        "cursor": {
          "ref": "01f810b6-a55c-475d-a6fa-6a54c4f37955",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "809352a5-715d-4391-a58e-34f682c87437"
        },
        "item": {
          "id": "1cb2643a-f68e-4787-b460-0334fd3dea17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "db5054dc-a510-4c0c-bf69-339edaa95a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a744844b-207b-4837-88e2-c1c83eb6379e",
        "cursor": {
          "ref": "b6a33a76-0133-48a5-ad4a-54cd5eb4d50e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "67a7baa4-9421-4226-8a24-283bdc3a8dc9"
        },
        "item": {
          "id": "a744844b-207b-4837-88e2-c1c83eb6379e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f1e267c1-ec1c-4229-a2a7-73077e23d787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806a1ba0-74d2-4f47-b1c7-cb70d509bff4",
        "cursor": {
          "ref": "32dd794b-1d01-44bd-8a24-c88e46abe850",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bcdc7d45-a679-4b76-9be3-4c60d640a57a"
        },
        "item": {
          "id": "806a1ba0-74d2-4f47-b1c7-cb70d509bff4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "62d483f0-f9eb-4efe-af9b-fc5360d15ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197cdd7f-e48b-48dc-b23a-277544a24b38",
        "cursor": {
          "ref": "d49c0b19-83b9-4acc-bd1d-29bc7b990d13",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "65e7dbf7-5786-4583-be6d-021151c819f5"
        },
        "item": {
          "id": "197cdd7f-e48b-48dc-b23a-277544a24b38",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0726ccc3-4945-4861-98cd-93aa5c8698e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c95d93-cf9a-4e0f-8011-72bceb0ac5b5",
        "cursor": {
          "ref": "b16858db-e431-4163-bf55-20f1b4064b4b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "157914a2-e2cd-44f6-83bf-f4c42f1f3670"
        },
        "item": {
          "id": "15c95d93-cf9a-4e0f-8011-72bceb0ac5b5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "65cc643a-6791-4557-bc75-7e7e3434c299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f59487-b6f2-47ec-9d77-4b4dacce816a",
        "cursor": {
          "ref": "55fc8c89-1330-4bb5-99d3-d13bfba7d705",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "766b883c-a23c-4e1f-9f22-ddec5d04b580"
        },
        "item": {
          "id": "69f59487-b6f2-47ec-9d77-4b4dacce816a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a6e169e8-be9e-4b72-bdfd-2f9b2f5bd2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d2b8da-abae-48b9-996c-0adab848231f",
        "cursor": {
          "ref": "5ccd5608-8793-4e8d-babf-c8cab88c2f3e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d48b164a-7810-40f0-a6b6-7b2ca0d14b57"
        },
        "item": {
          "id": "f6d2b8da-abae-48b9-996c-0adab848231f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a34079b-5025-4e79-8eb7-ee31645f274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cc82ea-bcb7-4f56-a532-8c6f44b9688b",
        "cursor": {
          "ref": "e110561f-02f3-4705-9dca-d968b1c8b3d2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae1dbe44-4809-4b4b-ac6f-b5971712ab56"
        },
        "item": {
          "id": "21cc82ea-bcb7-4f56-a532-8c6f44b9688b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c25f8d49-413e-4863-8a48-23047c8098f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea72e393-4542-45c7-b1b1-5b029c288625",
        "cursor": {
          "ref": "b469a570-a3ee-4882-bd4e-dd97bef6d46d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "767fd7c1-2087-4d0c-a199-1a71a9ea7700"
        },
        "item": {
          "id": "ea72e393-4542-45c7-b1b1-5b029c288625",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bb0f0287-e907-46d0-b420-c21ae373cd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b680d0-b8b8-40ef-adf3-733061f46b11",
        "cursor": {
          "ref": "42ef81cf-e139-498e-aa05-6a23198c7477",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "486443d3-4b8f-408e-851a-4f0538ac598a"
        },
        "item": {
          "id": "68b680d0-b8b8-40ef-adf3-733061f46b11",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38f1b1d5-c17e-4de8-8977-02162346138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2101e37-0f46-4e8a-a61d-fbb5ed18db98",
        "cursor": {
          "ref": "9fb7507d-5700-4495-a27d-3aaf5eb256a7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "443833fe-9647-4dda-8b48-5d6ec4492bc7"
        },
        "item": {
          "id": "c2101e37-0f46-4e8a-a61d-fbb5ed18db98",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7a59da66-6d29-4e62-98a5-f33f663bf790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e16e702-0072-48d0-8df5-6c0dcf956b76",
        "cursor": {
          "ref": "d7c2d000-fe09-4f31-b37d-f6c50ccd352e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6077303c-b41f-4f15-b315-0fb3e25d7e28"
        },
        "item": {
          "id": "5e16e702-0072-48d0-8df5-6c0dcf956b76",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "89dcd1b6-9e4e-4d8a-a02f-67932a523482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707c9246-1b75-47ad-8be1-00617d3f2bd3",
        "cursor": {
          "ref": "6fd38d9a-54dc-4b41-8a68-3565a3371099",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5c5a7916-826a-45db-94b9-b28a34435015"
        },
        "item": {
          "id": "707c9246-1b75-47ad-8be1-00617d3f2bd3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ac9b1dd-f0f0-47ff-9791-4bd56d0f3146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc0fd3d-020a-4b50-a350-46b2f7db3b5d",
        "cursor": {
          "ref": "c0b1724b-6dd2-4de5-a2d1-f5a3ea3e9460",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da4fa7ee-8bf3-4c55-acd6-822f0c295607"
        },
        "item": {
          "id": "cfc0fd3d-020a-4b50-a350-46b2f7db3b5d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f9ffd8e7-1bf4-40ca-92de-846325b3088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792f5dd-4bc8-407c-a2ae-21f93c293806",
        "cursor": {
          "ref": "d8b255b9-abde-48de-a42f-badc759d8ead",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3d3b56c-a2f0-4fb6-bdc9-d54ee179f7c7"
        },
        "item": {
          "id": "d792f5dd-4bc8-407c-a2ae-21f93c293806",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f914fb90-9b85-4937-afda-e04fb6104a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90354d63-2fde-4dc8-974c-6499c65c490f",
        "cursor": {
          "ref": "618f8845-863d-42a8-8c47-dace8e233ac1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ae8d9b9f-9f91-4266-98e3-e5cfbb6c661e"
        },
        "item": {
          "id": "90354d63-2fde-4dc8-974c-6499c65c490f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "447e3e2f-6f1e-4d92-a02f-2cef24f47102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c660c520-8c2c-496c-a38e-d33aea7d5aaa",
        "cursor": {
          "ref": "c0829b9a-2286-48d7-a773-1ce88b2eb8ba",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e42d523c-9158-4e4e-a6bf-629036d4a6b4"
        },
        "item": {
          "id": "c660c520-8c2c-496c-a38e-d33aea7d5aaa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "af30bb6d-05ea-4009-b7c7-7c18aae519de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583a874-d9a3-4062-9ffd-f13788d90ab8",
        "cursor": {
          "ref": "d5f85c3d-cd33-4b7c-8a79-d448af6d0e6e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "96fbb9b7-70f5-4fcd-90a0-495c0d431d25"
        },
        "item": {
          "id": "7583a874-d9a3-4062-9ffd-f13788d90ab8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2693a91f-6d6f-4f08-8a3f-7e65fac48a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d54611b-2bc9-488d-a1e1-689f9e6e5815",
        "cursor": {
          "ref": "bd4f00ce-f0b7-4c59-bb26-b4f8342f628f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d4f1427a-8006-4688-93e6-22ee1d7a27a4"
        },
        "item": {
          "id": "1d54611b-2bc9-488d-a1e1-689f9e6e5815",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bb5c58ae-15f9-4fe0-80ab-9ecd56f36196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec28b036-afff-42b4-b5c7-13a9c1dcf4b7",
        "cursor": {
          "ref": "52f9585f-3078-4853-953e-1f7e5d19fb2f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a69a8252-06c3-401b-8c25-066ff3b71612"
        },
        "item": {
          "id": "ec28b036-afff-42b4-b5c7-13a9c1dcf4b7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "deefecec-b564-49f8-aebd-05cc975c80cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f2d8a4-1614-4de8-81af-14b82a51ec88",
        "cursor": {
          "ref": "be308f95-68c6-4823-b825-899dfc7413a8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "417ca037-c734-4450-b35c-18486d3c0685"
        },
        "item": {
          "id": "36f2d8a4-1614-4de8-81af-14b82a51ec88",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c3698d64-0e9a-42be-9343-2b991793593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba4d406-e31b-4c32-a55d-a67ba73f5e90",
        "cursor": {
          "ref": "243d51f3-6f17-4c5e-8928-3f3166184d19",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8ea308e4-657b-4bac-9ce4-c65ec17cd2e3"
        },
        "item": {
          "id": "7ba4d406-e31b-4c32-a55d-a67ba73f5e90",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a8ffe1d7-7666-4339-afcb-c92c9a28d072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce620d93-ef25-49de-8cbf-eb81b627a926",
        "cursor": {
          "ref": "c8899ba9-7ae8-4c3d-8017-62c049f0234d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "071c3457-7093-4d90-bfb5-2cbf69bc450a"
        },
        "item": {
          "id": "ce620d93-ef25-49de-8cbf-eb81b627a926",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7d1166bf-9a0c-4777-8ab1-5902223aa663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500c374f-e502-49b8-ba9f-fdf4a5413466",
        "cursor": {
          "ref": "b304a656-cc31-4bf7-8f14-9f2874f7248b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5cbbe222-ebcb-46db-847b-cf79be976a8a"
        },
        "item": {
          "id": "500c374f-e502-49b8-ba9f-fdf4a5413466",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7fe69e0d-9fda-4a49-bb55-a7b6ccef57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81aae760-9e73-4a6a-be5d-2c68487e4b4c",
        "cursor": {
          "ref": "01c13ea3-a5df-4078-ab1a-c04c24cfc5dd",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ac9a6a4e-f9dc-4b30-9a0d-83694b4bd9f9"
        },
        "item": {
          "id": "81aae760-9e73-4a6a-be5d-2c68487e4b4c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3947d881-1051-4da6-8f94-8f47f0572d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a92c04-5cae-460a-9e6e-c43c8b907f6e",
        "cursor": {
          "ref": "49de01a4-e71a-4fed-8854-2c1a591b7573",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "402b0637-e074-4701-ad9a-0c613c9b3c79"
        },
        "item": {
          "id": "71a92c04-5cae-460a-9e6e-c43c8b907f6e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0157f6a8-baae-426a-a65a-62e767fa6e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad734ef-d098-4f37-a277-85b81f8f21ad",
        "cursor": {
          "ref": "0758799a-8565-49ed-9463-f4a4e7d7a9cf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "307201e5-52f2-448d-aa7a-292a23218f52"
        },
        "item": {
          "id": "cad734ef-d098-4f37-a277-85b81f8f21ad",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1f92cfbc-13d6-40a9-8d96-46224c629857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f829824-0d56-4052-b0ed-59ca19c3fc76",
        "cursor": {
          "ref": "e1777686-f84a-4f9c-a882-24c7e633c857",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f98dab42-5e81-4b1d-afd6-2bd402e56d4d"
        },
        "item": {
          "id": "7f829824-0d56-4052-b0ed-59ca19c3fc76",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cff55c5f-fae7-4649-b0da-03b22dc55fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37082bec-eecd-4c6e-9e5d-87015d09dc0d",
        "cursor": {
          "ref": "72e70026-6e57-4285-869f-716de2b508a0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a6423dae-c627-439b-953c-0b67ab48a43b"
        },
        "item": {
          "id": "37082bec-eecd-4c6e-9e5d-87015d09dc0d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "33a05de3-ac70-4ae5-b0d6-859e31d339af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5295413-ca44-40b6-b5e6-de3b3a42184c",
        "cursor": {
          "ref": "c04fd481-b798-45a6-ab93-7ee4328d14ac",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e97dd4bb-0c8c-4e2d-9fe9-0d887f631a27"
        },
        "item": {
          "id": "d5295413-ca44-40b6-b5e6-de3b3a42184c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "940a13c0-966b-4112-8cc0-f84d33b8a549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7df9f7-2ff2-407b-ab0e-1ad5097c7daa",
        "cursor": {
          "ref": "50c40acd-9248-42c8-888d-71f014c11974",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d014c353-230e-42de-8727-06c030dd038f"
        },
        "item": {
          "id": "9c7df9f7-2ff2-407b-ab0e-1ad5097c7daa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a29ed56-5477-48af-aab0-abff78bff761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e75d47-d7c1-42ce-8985-433ec97b936b",
        "cursor": {
          "ref": "bd0feda3-80c7-4e3d-8866-5a589cf5088c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cd0a7963-1e18-4c7f-8025-a7bf24591e3e"
        },
        "item": {
          "id": "52e75d47-d7c1-42ce-8985-433ec97b936b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f3af2aa9-f761-4ab7-b788-3adcf2fd9d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036cf4ee-9023-420f-9e64-b52b232e9eac",
        "cursor": {
          "ref": "b14c03de-ac0e-462c-8f3b-9c96d3a47e9e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6dfbd480-a566-4100-9f9b-1d35a3f091e2"
        },
        "item": {
          "id": "036cf4ee-9023-420f-9e64-b52b232e9eac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "98c6ea92-bb7e-44c7-a467-57439d552853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22bcfbc-b88d-45a1-8ed1-c53451526270",
        "cursor": {
          "ref": "5ce43699-f616-4927-98d0-1c11bfb23f90",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bbab6533-2016-4241-92cd-057c8a61e88c"
        },
        "item": {
          "id": "e22bcfbc-b88d-45a1-8ed1-c53451526270",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1cf0da25-bc83-4e98-a5b7-05819f404f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1efbf9d-faf3-429a-ae43-aa891d078b3b",
        "cursor": {
          "ref": "da2072fd-0d00-48bf-8cb8-0473450e576c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1686fbc5-4456-41cd-aa1f-99a660c89a58"
        },
        "item": {
          "id": "a1efbf9d-faf3-429a-ae43-aa891d078b3b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cf3d9ed6-84a3-4394-8c7d-e4f770f1d885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "81ef0378-2ec5-469b-bb60-46e61b3d6f3b",
        "cursor": {
          "ref": "4a295aa1-fa83-442e-a5f9-db0f5cffe20b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dfea66d5-ddfe-49db-8e6a-e06a5d900458"
        },
        "item": {
          "id": "81ef0378-2ec5-469b-bb60-46e61b3d6f3b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b1fb8832-ad88-4408-bab0-3bd41619d09e",
          "status": "Created",
          "code": 201,
          "responseTime": 11718,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "df69f153-69a5-4920-8608-7de2afe8974f",
        "cursor": {
          "ref": "7d78a91e-3ca5-4f25-a8f0-2737660911bf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1d3dc08c-7d84-4772-9f9f-bce8cc0708cf"
        },
        "item": {
          "id": "df69f153-69a5-4920-8608-7de2afe8974f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b8225f3f-badb-4e14-a7ad-cbdc1662b14b",
          "status": "Created",
          "code": 201,
          "responseTime": 10941,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca79360c-d1aa-4f19-8dc1-3e416607afd6",
        "cursor": {
          "ref": "317c6f4c-54cf-4045-b610-2d2fd858e240",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e285f37b-0027-4bf2-b88b-1519cf4d96e3"
        },
        "item": {
          "id": "ca79360c-d1aa-4f19-8dc1-3e416607afd6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1ba7a5b9-9bb3-44d0-9402-e09e1a9e1c67",
          "status": "Created",
          "code": 201,
          "responseTime": 10217,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "517a17d3-4d70-4a13-9958-804cac66ca3f",
        "cursor": {
          "ref": "a530fff1-6aa4-4e29-a120-b6ce6ecd42c7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1e2ac8aa-3f6c-4370-97e4-cbbcb7be79d8"
        },
        "item": {
          "id": "517a17d3-4d70-4a13-9958-804cac66ca3f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ffefa0e0-6724-4f15-97f2-8875f2e12119",
          "status": "Created",
          "code": 201,
          "responseTime": 10274,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e09ca8-40f4-4007-926f-281623c6412a",
        "cursor": {
          "ref": "f4058eef-b2c0-4a9b-90cc-c4230130afb3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cd9f9f2a-f9ea-4f47-9d6b-a384994a5d67"
        },
        "item": {
          "id": "c5e09ca8-40f4-4007-926f-281623c6412a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1eeb71bc-04e7-46ad-97ba-246636c88a9c",
          "status": "Created",
          "code": 201,
          "responseTime": 11388,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4264ffb1-051b-4e33-bba3-b46c57fe84e2",
        "cursor": {
          "ref": "a07c0a1e-6d0e-4cec-bedd-5ff685189048",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "55f39b6f-99d4-47e7-b776-e1cd55d1deaf"
        },
        "item": {
          "id": "4264ffb1-051b-4e33-bba3-b46c57fe84e2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dc7af70f-738a-4082-a900-ff0c4f8c5c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e1836664-dff4-4990-83cc-c4da8f87947e",
        "cursor": {
          "ref": "4504af23-70ce-4607-a338-2e1991f1dfaf",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a81d9547-d781-460b-b2b6-f525213bc497"
        },
        "item": {
          "id": "e1836664-dff4-4990-83cc-c4da8f87947e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e2b3d89a-2bf6-498c-bcfc-bf15c8ec6805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2a2ec8-412f-4d2d-83ea-6cb0cf9ffebe",
        "cursor": {
          "ref": "b6a4b10b-5813-40eb-a552-aa80adc2eb1f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f6aaffc6-a0e5-42f3-bd7b-971394a71d69"
        },
        "item": {
          "id": "7f2a2ec8-412f-4d2d-83ea-6cb0cf9ffebe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9a795b7-ee58-4c43-937f-d4dfff391221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fefec4a-ffee-4db3-89c5-504b5439951d",
        "cursor": {
          "ref": "08514e0b-04a3-474b-b7eb-2d5b74556c99",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fdfdf10a-c802-4602-82f4-5694a66a9426"
        },
        "item": {
          "id": "8fefec4a-ffee-4db3-89c5-504b5439951d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a0492f70-60e9-4fd9-a581-ad42ae3e0753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fd21a5-bcc3-41b9-b913-a7c59541057d",
        "cursor": {
          "ref": "0bca0049-8928-4f6e-9e97-31c1ad9f653c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0d4e02d4-2f37-478f-a731-5d5772e3a27a"
        },
        "item": {
          "id": "f4fd21a5-bcc3-41b9-b913-a7c59541057d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3e5d2829-f066-480d-add6-06cfe0c4a469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46641148-dda2-451c-b500-14979c185c3d",
        "cursor": {
          "ref": "e8421742-1c38-4753-bfb8-b5b31a30728d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8558d893-a58c-487d-8492-2e77d4000189"
        },
        "item": {
          "id": "46641148-dda2-451c-b500-14979c185c3d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8c1a1eac-09ec-4e42-a190-879441b7b164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30424f9c-78f9-4d5e-af86-70717b1321ec",
        "cursor": {
          "ref": "48e81d00-642a-4916-b470-8416f3dea977",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5b30ca1b-cc01-4e5a-a057-0adf51a6f362"
        },
        "item": {
          "id": "30424f9c-78f9-4d5e-af86-70717b1321ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d3754491-2875-4d54-b1b3-af6de34cd1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8213e60-fb14-4fc5-bbca-9c0015063d6f",
        "cursor": {
          "ref": "5ef5d5f2-d153-44c8-bd28-24ae773b2bec",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c8ec232e-b40d-4883-a51c-01ee2f779d5b"
        },
        "item": {
          "id": "b8213e60-fb14-4fc5-bbca-9c0015063d6f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e89c4d3-2edd-43df-8d43-ef9327031abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd7d0e6-9d73-490b-bcd8-18d79c2af1ad",
        "cursor": {
          "ref": "64239635-df56-4827-98fb-3f768db5ba21",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d5ff1ae2-6d27-4c30-883a-9efe1feea8b2"
        },
        "item": {
          "id": "0fd7d0e6-9d73-490b-bcd8-18d79c2af1ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6d63f170-60f3-47bd-97a0-995cd8ef1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b35ab0-acc7-4baa-ac1f-003982abe7a7",
        "cursor": {
          "ref": "c731e37a-19e2-4cb7-8b8f-833bca62dbd0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8d3c8255-7efe-48a8-b36b-50574029d441"
        },
        "item": {
          "id": "35b35ab0-acc7-4baa-ac1f-003982abe7a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b830a15-1853-4378-b0a1-784b8092f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c56cac-52f0-4d08-b8d0-193bc9ed0d92",
        "cursor": {
          "ref": "3089ed21-2ed6-42da-ba2d-bb6f395cbf08",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "18be79ba-44dc-4da8-a434-e0ccdc4fdf5e"
        },
        "item": {
          "id": "17c56cac-52f0-4d08-b8d0-193bc9ed0d92",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0baf2c3-86bf-4fb4-b7f5-b8d3fc22663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ab8664-52fa-4266-9bc9-f7a97090eee3",
        "cursor": {
          "ref": "3774af05-fdeb-4f3c-8f85-2a8eabaf7947",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "85f8dc55-7e2b-4e20-915b-908a450404d4"
        },
        "item": {
          "id": "49ab8664-52fa-4266-9bc9-f7a97090eee3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc1a3cb1-7e47-42e4-92e7-b3c720723721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83cd07-bebf-493b-831d-5ac3f5fb048c",
        "cursor": {
          "ref": "a50de1ca-b638-42be-80d8-580d6b102210",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dd429012-88a7-4f3d-9656-7e05f2b4ba44"
        },
        "item": {
          "id": "2f83cd07-bebf-493b-831d-5ac3f5fb048c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "35ebb553-ea42-421c-8027-d1bfdd3b3e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0905ff2-3dd4-43d4-b9c0-863c69f4ad21",
        "cursor": {
          "ref": "8ccfda79-1a37-4246-b8b9-db81acffc7b5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bfce474d-fd9b-4b1e-8847-82e220059839"
        },
        "item": {
          "id": "c0905ff2-3dd4-43d4-b9c0-863c69f4ad21",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ec61c39-7478-40c4-94b9-14330556aacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b092e9e-5c3d-42c3-b79e-e972d92d6330",
        "cursor": {
          "ref": "b4002a5a-0071-428c-a31e-7188768168bd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93560322-8205-4bfb-944b-aa43e3e02ae3"
        },
        "item": {
          "id": "8b092e9e-5c3d-42c3-b79e-e972d92d6330",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b05834cf-289d-4e59-931a-94d74fd68165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeccffa-dd7e-4c4a-80f2-0a5b984dd599",
        "cursor": {
          "ref": "a9656f0d-77e2-46eb-b2c6-99bb562b8335",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cbd818df-df8e-4fe1-9da5-ad2b50f19e57"
        },
        "item": {
          "id": "bfeccffa-dd7e-4c4a-80f2-0a5b984dd599",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c16e2888-816b-453a-8681-845d7d71f577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7afdec-92e2-4c82-9f19-110871e07364",
        "cursor": {
          "ref": "cfe93919-36b6-4e15-b675-b6479e9e1129",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4ebff2a8-3d02-48bb-90c7-39d1854eeadf"
        },
        "item": {
          "id": "bd7afdec-92e2-4c82-9f19-110871e07364",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "05c18ff0-c4c8-42cd-8440-baff7a7d24fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4200d6-7678-4cc9-b392-736591733fc6",
        "cursor": {
          "ref": "68e7ee73-145d-4719-8450-06217a3c305e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f6b9a2d0-4edf-42cf-a87b-16cee46e07fa"
        },
        "item": {
          "id": "bd4200d6-7678-4cc9-b392-736591733fc6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81b288a7-2d10-4775-b65a-04edad9948c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa337783-b895-4300-8ad1-68907eb65aee",
        "cursor": {
          "ref": "abd68ebd-f9e0-474c-924d-718e7cfbc8a9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bfc4eb5c-2759-4e97-9b5f-364617f75d25"
        },
        "item": {
          "id": "aa337783-b895-4300-8ad1-68907eb65aee",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00271baa-829c-482a-8c97-656748e16263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79c0f04-a4fa-40d2-8e27-b36d625a89df",
        "cursor": {
          "ref": "1fd416e3-8715-49a1-b9c5-cb8e499dd70f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d377218a-03cd-4094-b361-fbf06a11599b"
        },
        "item": {
          "id": "e79c0f04-a4fa-40d2-8e27-b36d625a89df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc74283c-23a2-4844-a01e-b29656d13ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c73b6a-a51d-40e9-b54e-93f6f636f672",
        "cursor": {
          "ref": "8cbbcab6-cf3f-443a-8d8b-0d1d263729bd",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "beacc141-fd85-486f-8f46-daf7e955e668"
        },
        "item": {
          "id": "43c73b6a-a51d-40e9-b54e-93f6f636f672",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dfd7af05-425c-4a87-a3ed-ca61891e112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d37f70-9d3c-460d-89e6-57a805c4add6",
        "cursor": {
          "ref": "24d7605c-ac80-4ae3-aeec-4fba2c890138",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "873a146d-a27d-4c2e-a652-e986038b8c9a"
        },
        "item": {
          "id": "73d37f70-9d3c-460d-89e6-57a805c4add6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7dfbbf0a-ed82-43eb-b138-0333b7585470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb11085-cc3c-4c43-8118-e00cb6a77120",
        "cursor": {
          "ref": "0a9c3bfa-6aef-4fd5-80a6-5b91091deb58",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d23ae94b-91b3-424d-ac9f-0742d955121c"
        },
        "item": {
          "id": "5eb11085-cc3c-4c43-8118-e00cb6a77120",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a3793923-ddca-4bb5-8afc-25065ffc9a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811384b-79ce-4ee4-8e0f-930e454ddab0",
        "cursor": {
          "ref": "41ffcb06-65d2-4414-bd2a-a2261bfb9233",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03cf37d2-3c36-4a6c-a990-7bfbe4c9af52"
        },
        "item": {
          "id": "c811384b-79ce-4ee4-8e0f-930e454ddab0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cfc557a9-e58d-4bdd-b8f4-669222fbd380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0ebd88-0d3a-42b4-b9f6-2510c1b0f504",
        "cursor": {
          "ref": "c9dde78e-8cbf-4e59-8f1f-2ae5a377fd4d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ac454547-badb-4ac7-ad32-e8c3757f71e7"
        },
        "item": {
          "id": "6b0ebd88-0d3a-42b4-b9f6-2510c1b0f504",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "806b6a1b-4498-4960-9c24-e819a24651b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c98ca1-1208-4572-8796-ab0720d4bd81",
        "cursor": {
          "ref": "6059acc2-bb0b-44d5-9c98-eef2d6352d47",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a50a99fc-3810-4793-8bb9-091dafee82ff"
        },
        "item": {
          "id": "62c98ca1-1208-4572-8796-ab0720d4bd81",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f2a9d24-9179-4709-bacb-05d007abd1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3d9c63-af0e-41c3-bfe1-b30e9cc99746",
        "cursor": {
          "ref": "b7c6c88f-36f2-49a6-b684-5c1b595a9467",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd45c14d-3b0c-4f4c-a41c-33cabf28ca0c"
        },
        "item": {
          "id": "cf3d9c63-af0e-41c3-bfe1-b30e9cc99746",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9f0ecf09-f25f-4826-9d35-add1ea2d4f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3d7674-4b8e-478b-b414-b9249f9c61e9",
        "cursor": {
          "ref": "51dc1640-77a1-4b5e-a586-1dabecaed7e0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "021b4867-915d-47f9-b1ad-8109f7b5ee95"
        },
        "item": {
          "id": "de3d7674-4b8e-478b-b414-b9249f9c61e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b48cccd8-a803-4b3e-b477-c66f8d0a251e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedac6cf-466b-4df3-a918-b6e68398693c",
        "cursor": {
          "ref": "625cb0c9-1825-4aa5-9c23-7004f847e7df",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b462a005-948b-4145-ac9b-7bddd9db3d74"
        },
        "item": {
          "id": "eedac6cf-466b-4df3-a918-b6e68398693c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ab6a44d-99cc-4736-92ec-e5243f90f21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7abd5a-b5eb-4a1b-9465-1155d763324b",
        "cursor": {
          "ref": "91ad87d8-bff5-47e4-b0e4-8d83cee05a7e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c818dddc-e093-41ec-87d8-33aa4d698d5a"
        },
        "item": {
          "id": "4d7abd5a-b5eb-4a1b-9465-1155d763324b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee53c321-c803-4520-a983-efb759ad7d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff4dcc-d534-454a-972f-5ba2f5c4065f",
        "cursor": {
          "ref": "da1bd422-4d01-4e73-b695-d629511bb81e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "912db5bf-78ac-45f0-a276-7119052a4f7c"
        },
        "item": {
          "id": "9cff4dcc-d534-454a-972f-5ba2f5c4065f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c2c04b1-279c-44ee-aa12-9883ae0ef0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d09eb-a8c0-4a55-b249-14e197903efd",
        "cursor": {
          "ref": "017e912d-0254-4c58-b9a9-ad1272ea8ccc",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3ca86779-65ed-49f9-bbbb-8dd57813beed"
        },
        "item": {
          "id": "910d09eb-a8c0-4a55-b249-14e197903efd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c0c9e86-5991-47bd-94e8-eaac857ee974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30583872-4a60-4c09-b0cc-a8963a33416d",
        "cursor": {
          "ref": "97ed31de-5e58-42d4-a1cd-806f513f2eaf",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbe390df-e1eb-4b63-9d57-a0d036be85c3"
        },
        "item": {
          "id": "30583872-4a60-4c09-b0cc-a8963a33416d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7b2babd6-c05b-4a5e-9f22-f71deffd1fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83765511-bd41-4afb-bf79-bdf5e19901c3",
        "cursor": {
          "ref": "5f191130-6aac-41c6-b8d8-ba4e794aec36",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "062bec1e-b0dc-4710-9049-010ac8f48aed"
        },
        "item": {
          "id": "83765511-bd41-4afb-bf79-bdf5e19901c3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a60004e-e171-4f24-9038-920afb0c297e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a52d4f5-00ac-489d-b06d-415d3d62796f",
        "cursor": {
          "ref": "b7aeb557-16d4-4828-b570-d1baf2030466",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "267d1f0d-0491-48b8-bb32-1acb67c7a8a8"
        },
        "item": {
          "id": "2a52d4f5-00ac-489d-b06d-415d3d62796f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd5b1b9f-da27-4b5d-b399-44045a37af68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b3b078-07e5-447d-9463-e4b33d9f4c98",
        "cursor": {
          "ref": "f74b551e-f123-4a5d-b279-439fed06dc29",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c330fc15-237b-4b91-833e-5ab452417398"
        },
        "item": {
          "id": "31b3b078-07e5-447d-9463-e4b33d9f4c98",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f8b604e-883f-446c-bca0-ec4823f19f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7039c33-a811-459b-8ba9-ecddd090a6ac",
        "cursor": {
          "ref": "ff9184ad-f4cb-456d-bb95-d20fa74ba5b7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9c9a1b12-f46e-4b92-8e6d-e61f68d7d3f7"
        },
        "item": {
          "id": "b7039c33-a811-459b-8ba9-ecddd090a6ac",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0469b25d-cedd-4bad-ba78-a10e546c9beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527462bc-523d-407c-b7ac-be9abe7db2ed",
        "cursor": {
          "ref": "be19ab81-ed03-4d9d-961b-5749470b1615",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4eb5057f-3634-4a79-b48f-bf13edaf38ec"
        },
        "item": {
          "id": "527462bc-523d-407c-b7ac-be9abe7db2ed",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dc61751-9045-488b-991d-ac58bc9ceed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aedcdb-1fc8-4829-92c7-638768323aa2",
        "cursor": {
          "ref": "0cf4d592-3e6e-4146-b312-23a0efe043eb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0f4abafa-e2ff-42d9-acea-89ab4b0d3cac"
        },
        "item": {
          "id": "a2aedcdb-1fc8-4829-92c7-638768323aa2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "26b3bb22-8781-4e33-973c-d8cb90d90d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c039076-f4ec-408f-a232-1d71e0e08bd3",
        "cursor": {
          "ref": "48439654-54ba-472e-8df0-6747cc190bf1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "67c2e502-44b8-4aca-8ef0-f726a2bbf57b"
        },
        "item": {
          "id": "7c039076-f4ec-408f-a232-1d71e0e08bd3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4972d1c-2be3-45dc-85c3-191306957ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0bdcc3-fa00-4874-8be2-2626352961d0",
        "cursor": {
          "ref": "d1062f25-fc8b-4998-867c-dbdb91bde31d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "26a75e47-d302-4caf-bd75-debf3a23ae5b"
        },
        "item": {
          "id": "cd0bdcc3-fa00-4874-8be2-2626352961d0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96abeaf2-6f22-42a2-bd1d-43f2b5803d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccbe615-c25e-42fe-ad65-10a310ee4c14",
        "cursor": {
          "ref": "41070b1a-90b0-4311-9b6b-bc04f1361030",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d3b23520-795b-4009-b6d2-7dbcd75c2748"
        },
        "item": {
          "id": "8ccbe615-c25e-42fe-ad65-10a310ee4c14",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f8b05dc-e4a5-49a3-a413-69ee44577f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1109a469-43a5-4e93-acc3-b12c5a9bfdc7",
        "cursor": {
          "ref": "b113222b-f951-4b10-a745-0323dc963574",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "af3a8694-049a-4502-bd18-50f61d609764"
        },
        "item": {
          "id": "1109a469-43a5-4e93-acc3-b12c5a9bfdc7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e009c0eb-5aa1-43b9-b5b3-fda862f2d2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ff144c-a9e5-4e9a-8999-66e70cc29b7b",
        "cursor": {
          "ref": "48656a54-dd16-4db8-8811-25728e0a8a17",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7da22e1c-0cde-4d9d-9742-43c3057460cd"
        },
        "item": {
          "id": "b7ff144c-a9e5-4e9a-8999-66e70cc29b7b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9536f01-1758-4db4-8307-2ede6047caa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3cccfa-566b-4646-912a-18301c2e7581",
        "cursor": {
          "ref": "916f130b-1c6a-4029-8f05-1d098bea5c4f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "05e7e0de-1052-498d-9e58-89ec2220c31f"
        },
        "item": {
          "id": "cd3cccfa-566b-4646-912a-18301c2e7581",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6242c8e0-a8a1-4ed1-ba2d-cf51dc1f5eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807915fe-c770-44e7-9fa2-8f3009e1b81d",
        "cursor": {
          "ref": "6ec82f04-f66e-4bb1-8da5-97cf352f85d5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5b79d87d-4db2-45d3-a47e-bdd3b68a56a6"
        },
        "item": {
          "id": "807915fe-c770-44e7-9fa2-8f3009e1b81d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e3a56bf9-9915-4117-962b-f4383251fd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f72d6-3043-4c62-b961-631c9a6227e4",
        "cursor": {
          "ref": "375e7f9a-aebc-49c6-90c7-3eacc7971d28",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4d25d0a8-f683-401c-8d98-86d090b50d13"
        },
        "item": {
          "id": "794f72d6-3043-4c62-b961-631c9a6227e4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "50fb31f6-7cd5-40f6-a514-48c15cac7945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36be6f77-68da-4118-b75b-c036f17d05da",
        "cursor": {
          "ref": "b7650f65-1299-4d98-8d8c-97a0f77311c1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1512245e-667b-4f3c-b938-2d1c6b20b8e0"
        },
        "item": {
          "id": "36be6f77-68da-4118-b75b-c036f17d05da",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3741d688-1c09-4251-8271-c7aa52dda99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b94626-dec3-4505-ac8e-6d66adfebe08",
        "cursor": {
          "ref": "063fa295-d1a3-459b-85b1-d58046fb87eb",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ee09475d-3d2b-46a2-8b73-277bf2bb795f"
        },
        "item": {
          "id": "a5b94626-dec3-4505-ac8e-6d66adfebe08",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45bc4d00-d44c-4b97-bbf0-c96b4d3da963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b71ab8-bd6e-4df9-a8b8-98bf59e839e0",
        "cursor": {
          "ref": "7f620923-ba61-4a44-8e74-a352a9cc272b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9c686635-9cab-4399-a2cc-da88c2094e4d"
        },
        "item": {
          "id": "24b71ab8-bd6e-4df9-a8b8-98bf59e839e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "26c44526-417d-4b23-ba2f-19d2c3c318aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12537438-e12f-4164-8cdf-b5ffdb8cbc98",
        "cursor": {
          "ref": "57e42bb1-9770-4870-88a0-c015028fb178",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5940e2b3-d654-435f-b558-fe172a6b8d25"
        },
        "item": {
          "id": "12537438-e12f-4164-8cdf-b5ffdb8cbc98",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "24dedf98-8f1e-471b-9ab0-2ecee19de745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821d5876-9b91-4b7b-966e-ba0803af45af",
        "cursor": {
          "ref": "ce5ddfcb-1702-4b0a-925a-68d3487aa632",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98d6b56b-6537-4fe6-ace2-ffc29e08ae32"
        },
        "item": {
          "id": "821d5876-9b91-4b7b-966e-ba0803af45af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9417f92d-7383-49a3-a720-b6c64d98acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0f928d-c2c6-4825-a584-bfc8e638af9c",
        "cursor": {
          "ref": "4bd7e64f-e0ea-4d08-ad20-cfe845ad3f6c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d3d61f8-a6cb-4650-b488-b2e839eb1181"
        },
        "item": {
          "id": "0f0f928d-c2c6-4825-a584-bfc8e638af9c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93001640-d328-4a38-bfa2-8174b0793297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ba5acf-21da-4617-a6c2-6f8bbd890588",
        "cursor": {
          "ref": "97a682e4-6d9e-4efc-a089-723ae5543d3b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1965c4b0-8b18-4f62-93cf-8c05f47cea18"
        },
        "item": {
          "id": "70ba5acf-21da-4617-a6c2-6f8bbd890588",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2fc58115-0c1d-49c6-a2bb-fb9998527047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc161c8-3597-4aaa-909a-121d46db8b7c",
        "cursor": {
          "ref": "b816abbc-c42d-48e0-b231-2bd7ec610cc6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da83a159-7359-4631-be21-dc96ae0ea891"
        },
        "item": {
          "id": "6bc161c8-3597-4aaa-909a-121d46db8b7c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d31a791-08aa-402c-afb7-80776701940c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162fe14c-3bd5-4154-a7ce-1503cb57dcf5",
        "cursor": {
          "ref": "fb1ba1fd-f5af-425f-8f34-93b0b6cc0e70",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01e9e208-e09c-4047-86f2-ccbeb2571594"
        },
        "item": {
          "id": "162fe14c-3bd5-4154-a7ce-1503cb57dcf5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ae373aa-878b-4e71-80d8-4f940a6efc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5999c1e4-e570-44d6-a84e-d7b468108eba",
        "cursor": {
          "ref": "f7e40df7-f3bc-4ae2-b98b-d30156ef9a99",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b867e80a-4cad-4f49-86d4-e9c5b0252d1f"
        },
        "item": {
          "id": "5999c1e4-e570-44d6-a84e-d7b468108eba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d20433d-0568-47ef-82d2-38c3601043a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a233197c-6ede-4610-8261-61957ce58b4f",
        "cursor": {
          "ref": "27a4895b-7a09-4af0-8f51-353babc9e68c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f0b1b3a-ecab-4235-89be-5d4d089066f0"
        },
        "item": {
          "id": "a233197c-6ede-4610-8261-61957ce58b4f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e1015359-ffe6-4e0a-9ee1-fa1904315783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa31e17b-5998-4bfa-b6a0-9d4c59c8a38b",
        "cursor": {
          "ref": "36af1c62-45cf-4881-85c1-d395d59e2f0e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8ec4d630-b3ea-4f57-8562-4fdc34328d1e"
        },
        "item": {
          "id": "aa31e17b-5998-4bfa-b6a0-9d4c59c8a38b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c30bcb82-3305-4f3c-9b88-986ddb0f3c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21239406-21a3-4e89-a604-ed2e4304c930",
        "cursor": {
          "ref": "4251435b-c5df-4144-86a2-171ee58cb70c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c441a92-a875-4c71-9224-48f9b5feaa0b"
        },
        "item": {
          "id": "21239406-21a3-4e89-a604-ed2e4304c930",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b1a88d8-64f4-4821-9369-700a65cbd6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65bbff-46e0-497a-90f0-7d8dab7b8c0e",
        "cursor": {
          "ref": "e9d3cf02-ad14-4346-8406-a622032e2d57",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1e54bfcb-bdfe-4b67-9aa2-da878d049647"
        },
        "item": {
          "id": "8f65bbff-46e0-497a-90f0-7d8dab7b8c0e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "71b50998-aa93-4585-9e0e-f1c9fe99cf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc0b8c7-0378-4202-a2bb-ac13496abd27",
        "cursor": {
          "ref": "b3ce07f7-cef9-42a2-a114-610b0c70efea",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7cb18e41-76b3-48e5-beba-ddc0cbf94ead"
        },
        "item": {
          "id": "5dc0b8c7-0378-4202-a2bb-ac13496abd27",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "77f9cd0e-1770-4bce-9127-9d4877dd40d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9261b54-5d80-4476-9968-87412462377f",
        "cursor": {
          "ref": "08d65a6b-5c12-4520-b0ae-92dad825ffa6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "091ffcb0-9aae-4a81-8734-32fc52ec75d1"
        },
        "item": {
          "id": "b9261b54-5d80-4476-9968-87412462377f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98db94d7-18f6-4265-aee8-ef398c105d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203375dc-4251-47a2-acc7-8a9e49785cce",
        "cursor": {
          "ref": "23b88446-9f6a-4da7-9c34-dd65c2443d82",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b8cb15a1-c44c-4df5-929d-124188c2c89e"
        },
        "item": {
          "id": "203375dc-4251-47a2-acc7-8a9e49785cce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cdeabc69-d464-4e86-a980-3d2d982769ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9d3148-763d-49c5-bcba-b5defbe3d40b",
        "cursor": {
          "ref": "77f2c25e-f9a7-4d48-ab32-3ac2f80efd93",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "59667ed6-4251-430a-bccb-428fbb029465"
        },
        "item": {
          "id": "3d9d3148-763d-49c5-bcba-b5defbe3d40b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9d8dc44-fcf0-4f9f-9220-32814db04b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aaf4b2d-82f6-4cdf-b89f-a34476909a35",
        "cursor": {
          "ref": "2fb6ab1f-dd15-46a6-8b0f-27ae0ce7bc49",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83a16bdb-779b-4c9f-9152-353c33452c90"
        },
        "item": {
          "id": "1aaf4b2d-82f6-4cdf-b89f-a34476909a35",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0d461828-c622-437d-af38-f768532d6252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7695ef10-75af-47f1-9c6f-7ddc7db753b9",
        "cursor": {
          "ref": "ac13b06d-cdf6-4462-ae4f-a850a5884e41",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "60643a3f-5545-40f0-a502-c0a2ebe103d4"
        },
        "item": {
          "id": "7695ef10-75af-47f1-9c6f-7ddc7db753b9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fd579250-2f82-4d31-b104-81d7dd316d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faf3b43-5137-425b-abb1-b57420835c92",
        "cursor": {
          "ref": "09e2155d-9c65-4247-90af-3dc1ccd2a282",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2701433e-73ff-43f9-9b64-92ce362d05cb"
        },
        "item": {
          "id": "3faf3b43-5137-425b-abb1-b57420835c92",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0030817e-96db-4059-a878-500f26c0ef96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781b8373-9def-4291-8e12-8d699d0ce9f3",
        "cursor": {
          "ref": "2a092f2c-705a-44dd-a3d7-37315d8ab894",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7f1843f2-90ae-4259-9b6d-1176d6878e0d"
        },
        "item": {
          "id": "781b8373-9def-4291-8e12-8d699d0ce9f3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "981766a4-9632-4687-a4e2-364e50d4bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b680b6ef-5dca-424e-9041-0130a499a2de",
        "cursor": {
          "ref": "f3dfb6eb-3505-4d11-b3fc-4e9bc0f58c39",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0ba50572-4096-4155-9eb5-b1136f4c2241"
        },
        "item": {
          "id": "b680b6ef-5dca-424e-9041-0130a499a2de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "78df9f4a-07bb-464a-aa5e-bd5d3fc028b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67292d30-0944-4079-a807-f162acf8fcb2",
        "cursor": {
          "ref": "f03b88eb-9126-409b-8d1c-d988c6613ca6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a08f0488-f571-470f-a92d-f1b71c29c5c0"
        },
        "item": {
          "id": "67292d30-0944-4079-a807-f162acf8fcb2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "deea2365-87ed-4026-a4b4-a7f928db3d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0db19ec-51ab-4d9b-a395-0da86dc0e4f7",
        "cursor": {
          "ref": "01bc69f4-737d-4b26-8964-c7b818df2546",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a4301c90-dddb-4e9a-9eaf-a8b624ddb08c"
        },
        "item": {
          "id": "f0db19ec-51ab-4d9b-a395-0da86dc0e4f7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2f86ff8-d125-4c3c-bba3-e767d4782c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc50248-94c6-41ac-948e-d668c3ec1341",
        "cursor": {
          "ref": "41499599-2153-408f-b9e4-9e9b0b8864a7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e64b425e-a864-400c-b415-212f8e7219c1"
        },
        "item": {
          "id": "6dc50248-94c6-41ac-948e-d668c3ec1341",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f2452c2-55c3-4465-94ca-62b77c2577f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bf70e3-f3d7-4922-a893-eec37455ddbd",
        "cursor": {
          "ref": "3cfa6772-c864-4ab2-92bc-6f0d739ca5ed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "abf985a8-622b-4ebd-b84e-c8f73939ab05"
        },
        "item": {
          "id": "24bf70e3-f3d7-4922-a893-eec37455ddbd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "de4d482d-20d2-4053-963e-5843b86620a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf7743e-0071-4f3f-8fa9-e127e08c6f2f",
        "cursor": {
          "ref": "f3baf851-eb3b-4e63-ab22-c1bd1a628221",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d7de5c7d-4a0e-43fa-bc4f-fd69a605c7bc"
        },
        "item": {
          "id": "eaf7743e-0071-4f3f-8fa9-e127e08c6f2f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "928e649e-ce0f-449f-b1a4-de1072356319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398e037-5c6a-4eef-b001-66fd74ecd116",
        "cursor": {
          "ref": "54181cdd-6b00-44e7-b14b-b3ccc095f71c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c6bec70c-2851-4547-8778-1e8acc7016f5"
        },
        "item": {
          "id": "b398e037-5c6a-4eef-b001-66fd74ecd116",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "358e9aeb-bab2-480c-9e41-c37217beec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ac3a03-284c-4796-ab45-71eeda49077e",
        "cursor": {
          "ref": "cc1754b5-a027-4365-a64b-07fee1364ba3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc398d8e-1fae-4ff2-b2f4-1843dca31056"
        },
        "item": {
          "id": "94ac3a03-284c-4796-ab45-71eeda49077e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c5b6f20b-829d-4aee-9de3-fe2515a86e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6568245-320b-4a43-ab54-9bbc0f8d5e7d",
        "cursor": {
          "ref": "7d10587d-59be-403d-929b-401181c87b2a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0a2c2ba7-d4b2-4637-bc59-c46e0a3a6d30"
        },
        "item": {
          "id": "c6568245-320b-4a43-ab54-9bbc0f8d5e7d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "173c8bba-1527-46e1-9db8-39287efa96e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0512e518-ac41-49fe-9a73-95ce8abc178c",
        "cursor": {
          "ref": "c950918d-c8d8-4af4-8ffa-7a34efa3204e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6edcee65-ea1a-43a7-9ee9-ece01977aa26"
        },
        "item": {
          "id": "0512e518-ac41-49fe-9a73-95ce8abc178c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5bbe7e28-7847-4458-ad32-340822bec9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9e7b14-9f11-4c11-bc86-4bee02d20465",
        "cursor": {
          "ref": "b4b4adaa-2f45-456a-9a00-37cffc64cf6a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8e8ac7cc-f005-4204-9e5b-17c774eadacc"
        },
        "item": {
          "id": "9e9e7b14-9f11-4c11-bc86-4bee02d20465",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3097f6a5-1551-4319-bbe7-f9dd6e0c34f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee603b61-0896-4bb6-9589-7fad75542d85",
        "cursor": {
          "ref": "c5857c4d-b9c1-4f2d-9b1f-b642e6ad7cfb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "85580ce5-d5f2-4f5e-b3c8-31a1f18852bf"
        },
        "item": {
          "id": "ee603b61-0896-4bb6-9589-7fad75542d85",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c73d9a70-0413-431f-975a-4584d1b7dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011633c0-0e4f-49a2-94ff-4e315f10fae8",
        "cursor": {
          "ref": "90003165-704c-4117-8e30-f51d70f765e1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d39fe599-6ea2-45d8-8d50-fb329666afbf"
        },
        "item": {
          "id": "011633c0-0e4f-49a2-94ff-4e315f10fae8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "745d4c33-1dec-4816-9d94-25a16ebdb857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3e58d3-b21f-4dbb-a258-9c82e9c5c0cf",
        "cursor": {
          "ref": "11bb5d65-75b1-4352-b61b-d5fdf72d565d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "028bcd0d-4e48-4186-a94a-60fb207f0db4"
        },
        "item": {
          "id": "dd3e58d3-b21f-4dbb-a258-9c82e9c5c0cf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42a45c2d-7138-41e7-ae6d-1ee468fc6103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448e71c7-55a6-4fc7-98a4-435bad8ed54a",
        "cursor": {
          "ref": "e583d7ed-89eb-4341-94a3-c57a434f32f2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d42b82b6-30bc-4f49-b27a-a97c06589f17"
        },
        "item": {
          "id": "448e71c7-55a6-4fc7-98a4-435bad8ed54a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e3983a0-e62e-4b4c-acd8-d454b2b4c15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc50f0d-e2e1-4e9d-85a0-627d3bed99e8",
        "cursor": {
          "ref": "cace493d-bc27-4c46-a257-44d8ac45c1d7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c21dd070-4c3e-42c6-ac9b-1005d6e3485f"
        },
        "item": {
          "id": "8cc50f0d-e2e1-4e9d-85a0-627d3bed99e8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "78aa9800-a4bb-4aeb-83d0-b6587b28e52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e5871d-c1ac-4803-bd5f-d58b8577d5eb",
        "cursor": {
          "ref": "d2e057d4-288e-4266-a335-db5b8fe36024",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "68814d89-7994-429a-b16e-0eb85a1a860c"
        },
        "item": {
          "id": "a3e5871d-c1ac-4803-bd5f-d58b8577d5eb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a057855-42d7-4be9-8124-88ce22ef2ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4e4b0-7e25-473c-94a9-3966ec6fecde",
        "cursor": {
          "ref": "d2f2dca4-2fca-44f8-925e-2a12172222ac",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "367cd097-7cd2-4da1-b8d9-11602ebd8340"
        },
        "item": {
          "id": "c3a4e4b0-7e25-473c-94a9-3966ec6fecde",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "64441f04-db51-455f-b123-05b511ef7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112be62a-6c2e-4aa8-a630-296573f39f1a",
        "cursor": {
          "ref": "408f2a52-b1f6-4313-afcf-32cfe1cd2827",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bf131564-92ec-4e7c-ab9d-80725a83d2ca"
        },
        "item": {
          "id": "112be62a-6c2e-4aa8-a630-296573f39f1a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "81b9c76c-1c13-4b01-a498-372ec2ea9dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57737c05-cdd5-4962-94b8-183d547a6620",
        "cursor": {
          "ref": "a0247247-530b-4b7c-a5c8-878e35a66bb4",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f3b8c5b4-586a-4177-b19b-0d085c0f48f0"
        },
        "item": {
          "id": "57737c05-cdd5-4962-94b8-183d547a6620",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6337bde0-a9d0-4de1-ba89-dfdffec22a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e467fd5b-1757-460e-86c9-a35ae0ff03af",
        "cursor": {
          "ref": "d01ba50c-236c-4859-97a6-b52607dddfa0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3d29daca-ca0e-4fff-9e78-ec2c7560fab5"
        },
        "item": {
          "id": "e467fd5b-1757-460e-86c9-a35ae0ff03af",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f25df17a-e332-43fc-9e63-41d613287b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27f4a02-e85f-47eb-914d-5e25b697bc34",
        "cursor": {
          "ref": "f80b773f-30d4-4827-9396-8cf4bece964e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "09bb8a68-108c-4d39-a481-8c7c84994861"
        },
        "item": {
          "id": "f27f4a02-e85f-47eb-914d-5e25b697bc34",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "265ddd8e-7a36-42ed-987b-b1a5425a33d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719f0b5-8bef-49bb-acd7-4e4eb1896424",
        "cursor": {
          "ref": "9d80b27c-3e79-4e9b-bb6d-f20ce5ce206a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "857877c5-72aa-44a9-b1a7-4e3a08081e5e"
        },
        "item": {
          "id": "6719f0b5-8bef-49bb-acd7-4e4eb1896424",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d5eef484-5e50-41d2-bc4f-160fd5393057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda4922d-f657-4973-b6ba-9019a80429e8",
        "cursor": {
          "ref": "d783c3d3-8a8b-48aa-93fb-3002addb6fb8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ffb830c3-5c3e-4fef-b266-f1ef3bc3a5b2"
        },
        "item": {
          "id": "bda4922d-f657-4973-b6ba-9019a80429e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a34d2942-e311-450d-8474-bf57c3afba77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0cdc42-57ff-4bfd-8dc1-b7bda7d44790",
        "cursor": {
          "ref": "8dfdffed-eb40-42dd-b26f-61f68385cf5e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c36bb9f7-bfd2-488f-bee8-4d7128485602"
        },
        "item": {
          "id": "ee0cdc42-57ff-4bfd-8dc1-b7bda7d44790",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a0c718c7-9384-4e8e-b6a7-200adb42ab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2968214b-c390-4f29-9cef-588885c783f8",
        "cursor": {
          "ref": "de1dc0e6-2bb1-4866-a20c-5b4438a55a2d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "245bce09-3769-4762-a424-440d65583b1e"
        },
        "item": {
          "id": "2968214b-c390-4f29-9cef-588885c783f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6d771288-9357-4a57-93f7-873ace805443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba74943e-b48e-48a8-87b6-c9dbb9f08661",
        "cursor": {
          "ref": "02a21e74-5222-4d19-9428-d0fc4e0ba173",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5970f3bb-01a8-40f1-8f2f-f63e4743a48d"
        },
        "item": {
          "id": "ba74943e-b48e-48a8-87b6-c9dbb9f08661",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0460980e-b8aa-44da-b277-e5906b95855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d27229-c62d-4ab9-a12b-db757dc02dd4",
        "cursor": {
          "ref": "74615caa-4b31-4858-a89c-2e12b68e603a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "92e17d90-eb46-458e-b419-9cc61432381e"
        },
        "item": {
          "id": "41d27229-c62d-4ab9-a12b-db757dc02dd4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e9d3f7f4-67c9-43f0-ba0e-be1af0bc3879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f309e3de-90a6-4548-b484-98de7da61132",
        "cursor": {
          "ref": "b893e190-cd13-4093-9754-e215d4627085",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3bf0ffec-ab3c-4279-9465-d0c8d36a6f39"
        },
        "item": {
          "id": "f309e3de-90a6-4548-b484-98de7da61132",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27579ab3-e543-46ec-a310-7d4c40865983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02155bce-e690-451f-9232-f07d4e1eb7bd",
        "cursor": {
          "ref": "5b10b04f-b915-441d-82c1-e541a2e2aafb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b57860ec-303f-4d1f-8e96-e0962af1a12b"
        },
        "item": {
          "id": "02155bce-e690-451f-9232-f07d4e1eb7bd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9fc4200f-b8f6-4e05-be25-6a577c679cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ee6c9-e3ff-4362-84bc-28720c890cc9",
        "cursor": {
          "ref": "ac5b3746-1523-47a5-ac04-dcb0e9c25cea",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "84a41f2d-02bb-41ff-8c54-2c37b7eaaf40"
        },
        "item": {
          "id": "837ee6c9-e3ff-4362-84bc-28720c890cc9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5732db9a-1c24-4962-af95-bef5dd004736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e557f5-4b03-44c6-baa6-d593ab31b5cf",
        "cursor": {
          "ref": "6dcc3ee0-147e-47c8-aca7-eaf7c563e64e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5b3863fd-4560-4ad7-b57a-4fd275122cc4"
        },
        "item": {
          "id": "b2e557f5-4b03-44c6-baa6-d593ab31b5cf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e0168af9-7570-432b-878f-77b025a6b211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f4f806-b1a5-4744-b7b8-41b47abdc8df",
        "cursor": {
          "ref": "388c2492-53a1-4936-9f57-483b0df4607b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ad0df071-3586-4d07-b02a-afaa510fdc9d"
        },
        "item": {
          "id": "83f4f806-b1a5-4744-b7b8-41b47abdc8df",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "77804651-67a8-44b5-88dd-081660e0e4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad86ad19-d47d-4058-8c0e-9dcf5ef398b4",
        "cursor": {
          "ref": "5430dfbe-a357-4133-b9b5-52f092fe86b9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "abd2b10d-57b1-4b87-812f-deff26ac6a74"
        },
        "item": {
          "id": "ad86ad19-d47d-4058-8c0e-9dcf5ef398b4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "391595d6-3eb0-4574-bee3-5a1ad3d82db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6666c6-7164-4129-bae6-9a71a90c083f",
        "cursor": {
          "ref": "ef70ccf0-1c07-48b9-b83a-9efffa94a3df",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "54652669-1301-4865-823d-e0f7c0b7ba10"
        },
        "item": {
          "id": "7a6666c6-7164-4129-bae6-9a71a90c083f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "49d9dbc2-7c2a-4aea-9eb4-ee4b1c779284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eaf7f1-b383-4287-a8e8-43612098fdd7",
        "cursor": {
          "ref": "2dd814c2-0f70-4f98-a2e8-78a6bc17a4eb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3dc309e6-94f5-445c-8834-873369f3b46b"
        },
        "item": {
          "id": "29eaf7f1-b383-4287-a8e8-43612098fdd7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a1a5f305-55f9-4833-86f4-bf635fd8c345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86138d9-46fb-43c9-b8c1-c5587081e7be",
        "cursor": {
          "ref": "fb660c94-2713-4824-bad0-4d512b27ef47",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b9e4818c-1e21-42c1-b5e6-6b647744a3ab"
        },
        "item": {
          "id": "d86138d9-46fb-43c9-b8c1-c5587081e7be",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bbca3527-85c7-4047-bfbf-1d01210c3db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a782d1b-0afe-45b6-9185-1e307dea7a94",
        "cursor": {
          "ref": "cae7c3a3-99e5-459f-951c-4de204369f2a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b71eaf49-dbe7-456f-921f-399b0330c26c"
        },
        "item": {
          "id": "9a782d1b-0afe-45b6-9185-1e307dea7a94",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3bfbcdaf-a08c-4a2e-9bd1-c21411aaedcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3681d0b0-7298-4e12-83a7-6cfddd94e5e9",
        "cursor": {
          "ref": "bc31e13d-95ca-447e-a7e9-892f7b4cdb5f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2ca6157b-1f88-4368-8d83-72258d8b68b6"
        },
        "item": {
          "id": "3681d0b0-7298-4e12-83a7-6cfddd94e5e9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "64766913-84f3-4db9-8fc1-c2c8277ff578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7c2f4b-2361-4d99-8215-3ea340b32cef",
        "cursor": {
          "ref": "623a3f60-c450-47c3-aed3-eb0e8a09d0a6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b1ac9684-f8a2-4fa5-8683-8e8d8aaab7bc"
        },
        "item": {
          "id": "cc7c2f4b-2361-4d99-8215-3ea340b32cef",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0f3930dd-1e3b-4f93-b77a-8f34faad4842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487d95cc-b820-4abc-96f5-ed3d58445ab7",
        "cursor": {
          "ref": "6c681462-fd66-459d-bff0-24b180a4f146",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "80c7f8ce-2826-483b-b7db-d188bfb468f4"
        },
        "item": {
          "id": "487d95cc-b820-4abc-96f5-ed3d58445ab7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d9526cb-2a79-4bb6-9eaf-3e5c0bcde9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5156df-e3a1-4b80-ad55-81887082355c",
        "cursor": {
          "ref": "eebbf014-ac1f-486b-8df0-deccb3d900c7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "323341b4-8629-4a64-a735-fb3385c9e3a6"
        },
        "item": {
          "id": "ff5156df-e3a1-4b80-ad55-81887082355c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94ce617e-4628-45b6-b909-adc6712f3c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87ae74a-3955-41bd-9754-1ddf03b22282",
        "cursor": {
          "ref": "67b9b848-5aa1-45a7-be9d-f54345b3689d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fdbf6166-3aee-4f96-acf1-d7f57d3182fa"
        },
        "item": {
          "id": "d87ae74a-3955-41bd-9754-1ddf03b22282",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2ff4b87-8386-4869-b0f3-c14a49f53587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96db3e2-39e2-41ec-b1c8-5b3657b8136c",
        "cursor": {
          "ref": "9c29913d-87bf-43bc-86cb-ec942ee29bd8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "612132e2-623b-43e5-b16a-e6c7e3c37277"
        },
        "item": {
          "id": "b96db3e2-39e2-41ec-b1c8-5b3657b8136c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6224762b-fde3-4db1-8f96-3081ab830a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ae6f9-d616-4401-9e29-454a5ae5d341",
        "cursor": {
          "ref": "5d6248ea-74bf-4414-9bf3-57247725ac05",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c94e5e24-15a0-4544-919c-0c3c80d178bd"
        },
        "item": {
          "id": "9d9ae6f9-d616-4401-9e29-454a5ae5d341",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "096256e1-d760-41f6-9785-188be5e1e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f957a6e-b2c9-489c-ad68-b416aaebfa15",
        "cursor": {
          "ref": "bba2eb17-7870-447e-92f6-10f7528670d2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b1c81cf0-a9f7-479d-839e-7fa6e6095083"
        },
        "item": {
          "id": "8f957a6e-b2c9-489c-ad68-b416aaebfa15",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f778955-3dac-4f45-bb4f-13b3ff851cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103c07f3-3a3a-42b6-984b-584be350624f",
        "cursor": {
          "ref": "45792dd3-86c0-4a55-8ce7-6f18f4e3d65d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0adf3d90-a505-4888-b8d3-80bffe34d5c2"
        },
        "item": {
          "id": "103c07f3-3a3a-42b6-984b-584be350624f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b7433b5b-6d0b-48b4-b77a-7ee991443ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbfbba-8633-4720-84b0-42be7ba71ab9",
        "cursor": {
          "ref": "36d583a2-90eb-4057-a32d-22290b85a720",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1bfa0cda-f9ab-4ce3-ad22-1339ef6549f5"
        },
        "item": {
          "id": "9dfbfbba-8633-4720-84b0-42be7ba71ab9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "37f12791-e72e-4a77-89cf-b353fabbf52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef231e7-dcb0-450b-a4db-6e02af8c814e",
        "cursor": {
          "ref": "b1efeeac-7b26-41fc-acfe-43c348a45ebb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0db8d84e-77d5-4cab-94e6-a1666c8b5652"
        },
        "item": {
          "id": "1ef231e7-dcb0-450b-a4db-6e02af8c814e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c0baca44-3dc4-4869-89b1-fbca611b007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbdbdfa-b206-4fb2-b17f-2a476a096c26",
        "cursor": {
          "ref": "1e4e83dc-cc81-47bd-8636-188acd837b7b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ac15d864-133c-4172-9ccd-e3875d554454"
        },
        "item": {
          "id": "ecbdbdfa-b206-4fb2-b17f-2a476a096c26",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3ec1d36c-ec41-4aeb-ab26-012d3cfadbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab799d75-3ab1-4491-8171-6cdbd09067dd",
        "cursor": {
          "ref": "b034e0fd-cebf-4c85-b8a1-0d2f4e7cfd82",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1679193e-149d-44f4-965e-ee6a90d312fc"
        },
        "item": {
          "id": "ab799d75-3ab1-4491-8171-6cdbd09067dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d0f32c3d-0952-415f-9f9f-9d39885eed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc176fc-9ff7-4300-8c38-f43c61238f2b",
        "cursor": {
          "ref": "0e676735-7e25-4c58-b205-5fd21354cf9b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9e2019f1-bdd1-4541-be2c-0ed932d08a20"
        },
        "item": {
          "id": "3dc176fc-9ff7-4300-8c38-f43c61238f2b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "23fe7fc6-8380-4810-8625-f436fd87c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7bf4f4-28e9-4aa5-837a-5c1c31588977",
        "cursor": {
          "ref": "11a35782-aa38-4f78-88a4-14eb8b81e83b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a843663c-17ee-48ec-9ba6-1f0df61dd0b8"
        },
        "item": {
          "id": "ca7bf4f4-28e9-4aa5-837a-5c1c31588977",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "77326b8e-f75b-4aa3-8bee-1be42da13fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a664cc1-4d27-4da3-b170-9e7760876967",
        "cursor": {
          "ref": "fa22cb20-50bf-4a3f-90d5-31fa3a240fbc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7d3e14c-43e9-4fc1-bb88-82f2efcf8296"
        },
        "item": {
          "id": "3a664cc1-4d27-4da3-b170-9e7760876967",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "feaa855d-a9f8-438b-a291-01ef171b7d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ba39f-ae07-4ad7-94cc-0c17c9d8ca60",
        "cursor": {
          "ref": "3efc88eb-50f6-4085-8a28-93a7821837dc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d58d6894-06b0-4fb6-924f-98d027dde315"
        },
        "item": {
          "id": "483ba39f-ae07-4ad7-94cc-0c17c9d8ca60",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7641100a-f9bb-4946-b88e-dde45ee420b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510f6552-2931-47e4-8e09-4a124112ec7c",
        "cursor": {
          "ref": "6da0da10-71e7-4af7-a697-4af9fd7c4d8a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f098ece-fb7a-4753-acee-72e3a1387124"
        },
        "item": {
          "id": "510f6552-2931-47e4-8e09-4a124112ec7c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "939d6c86-ec3d-4b8e-b9c5-f45c7fea9452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f485bb0-9b1e-4bd0-841f-41a831060bd0",
        "cursor": {
          "ref": "16a7ee2a-3377-42ad-b2f6-2df46bf74b1e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c2df31b6-6032-41cb-966b-c3e706281709"
        },
        "item": {
          "id": "2f485bb0-9b1e-4bd0-841f-41a831060bd0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cf2371b1-2f92-4948-8601-99292dbdf09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406c0f5b-1de9-4cb9-b2d5-410c0fd448b9",
        "cursor": {
          "ref": "05231cd5-ecb6-4bea-8057-280499f5a6ac",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef62cd19-dd3d-41b3-bf70-c399a8dbe93e"
        },
        "item": {
          "id": "406c0f5b-1de9-4cb9-b2d5-410c0fd448b9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0cce335f-9e6b-468b-bf13-1fefd9d56702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af920a2-b8fe-43d1-b6be-5d6a6d706164",
        "cursor": {
          "ref": "97de50b0-4a7c-48b1-ab22-b10805d0f89f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4272548a-73df-45aa-a239-ab20f41e42b6"
        },
        "item": {
          "id": "5af920a2-b8fe-43d1-b6be-5d6a6d706164",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2e9dbef7-eb24-4481-b06a-a7ae9e34f716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c04e6f-5d0f-474f-9371-2191706b6c5b",
        "cursor": {
          "ref": "19a3cbf0-edcf-4f74-964a-3642439f2e64",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "92dbcdc9-ca12-49c4-8579-2365aff0cfdf"
        },
        "item": {
          "id": "59c04e6f-5d0f-474f-9371-2191706b6c5b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aef07f04-bf90-41a7-80e6-3da10ba1a7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3747d1bb-7407-4d13-8548-e76cd7423984",
        "cursor": {
          "ref": "6599000d-bb0d-4856-b946-0c8f9733cdb3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1099f49c-13d7-4194-8b32-f057b2b04282"
        },
        "item": {
          "id": "3747d1bb-7407-4d13-8548-e76cd7423984",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e66dfde-2535-4e4b-a094-833e0586e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bc8631-f9a7-4de1-adbd-f126c2887502",
        "cursor": {
          "ref": "5fb98e3d-87f4-4ed2-af86-add419a712fc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "787dfcc3-a02a-4f45-8b9e-ef427d2b1f55"
        },
        "item": {
          "id": "29bc8631-f9a7-4de1-adbd-f126c2887502",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "302aa72d-cdc5-49aa-b23a-b2c4d2c4418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74626d5-dab1-41b2-9c31-051be7c4021b",
        "cursor": {
          "ref": "51aa70be-84b7-46c8-a485-ce3539cafb6b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9fad582d-605f-4a48-874a-a021d6fcfe32"
        },
        "item": {
          "id": "e74626d5-dab1-41b2-9c31-051be7c4021b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c681228f-5ea2-4490-9dc4-e4e1f134127a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816e950-cd12-41f5-8ab8-b48a783515ab",
        "cursor": {
          "ref": "e60e7c3e-ae1d-470c-98c4-8e47152385f4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d037ca6b-d790-4951-9be8-c92e259f2993"
        },
        "item": {
          "id": "7816e950-cd12-41f5-8ab8-b48a783515ab",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d89e30a4-d682-4087-aea1-2c1cc67ab345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d684c0-23e0-4ef3-a94c-73dc08d6a4ec",
        "cursor": {
          "ref": "5bce6f0e-2735-427e-bc80-746159ddbcdd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3efca850-c4bd-4c46-8a34-5f0a6d0f3c44"
        },
        "item": {
          "id": "c8d684c0-23e0-4ef3-a94c-73dc08d6a4ec",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "576faa72-6057-4d01-9379-3905b8abfa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9095191f-29ed-4ca6-8dda-716973e35b8d",
        "cursor": {
          "ref": "980f7d73-dbb9-4398-8746-a3e77d35b3bc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "164df169-a309-4db0-871b-0b9932bb3850"
        },
        "item": {
          "id": "9095191f-29ed-4ca6-8dda-716973e35b8d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "83dc0a6e-c3b8-4331-8ec7-b5fda5a3d85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2786d9f0-7e48-4645-9ded-13b03866ea68",
        "cursor": {
          "ref": "f8e4cffb-54ba-47bf-9f4c-5eea3118c4f9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7d2887ae-91f8-4a64-9e2d-2e3f38e53ee8"
        },
        "item": {
          "id": "2786d9f0-7e48-4645-9ded-13b03866ea68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe203814-4d4d-4e2b-a561-1b7fa6a8b35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c06daa-4daf-476f-9517-37116f2964a7",
        "cursor": {
          "ref": "dc708c31-e479-4a4a-862c-1585e1ec589f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4a2f5aaa-de09-498a-bbf1-2fdf7110ca31"
        },
        "item": {
          "id": "b3c06daa-4daf-476f-9517-37116f2964a7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f511f561-c6f8-4eb9-9029-1cff63ebc222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f83442-1b26-4587-ba0d-f23d218a5f85",
        "cursor": {
          "ref": "ca364dfa-3b00-429d-91ab-fed4ae0a976a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7a9e5d59-1d78-4de3-b036-8c47806f948a"
        },
        "item": {
          "id": "a0f83442-1b26-4587-ba0d-f23d218a5f85",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "04c927c8-431e-44ed-b206-4c85c858eed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e741d1-ce5b-40b2-8464-2b0f0e554a38",
        "cursor": {
          "ref": "c105b77c-056e-4fe1-b8d7-1977fd709f72",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c659917c-f163-4b7a-b07e-35555fe75474"
        },
        "item": {
          "id": "50e741d1-ce5b-40b2-8464-2b0f0e554a38",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9644f1c0-2766-45e4-9ded-b4b7fcefcac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ed26d2-cdc4-4a77-9ebf-75179a6c129d",
        "cursor": {
          "ref": "89d23725-8035-4fe0-9b7c-c4e0a59c1e29",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f500ca4-60ed-4372-ab68-fbc2dd8c3c1c"
        },
        "item": {
          "id": "d0ed26d2-cdc4-4a77-9ebf-75179a6c129d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e4d824ae-2887-47cb-8edc-0ece93215d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f23c944-ea7a-4122-b03e-4e32e0092d7f",
        "cursor": {
          "ref": "047aac30-152d-42de-a529-5af1cfe56aaa",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e6a091d-1726-42a5-8631-8954680ee1af"
        },
        "item": {
          "id": "3f23c944-ea7a-4122-b03e-4e32e0092d7f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7e9c37c2-2353-4e2f-8e25-1cf4421abc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f90bf98-5dab-4276-a4b3-b1136d476d49",
        "cursor": {
          "ref": "3f167a47-f795-435c-afca-2673f8b2b1b6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "143d6470-91e5-4baf-add2-bbaaa341366e"
        },
        "item": {
          "id": "6f90bf98-5dab-4276-a4b3-b1136d476d49",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3b19c6d9-e4ff-4121-aa09-1204ef7a2cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9362eb-163a-4f24-8f7d-f5686d8c6151",
        "cursor": {
          "ref": "1d606ad0-3930-49ff-9f4c-9d63bcd0d32d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d1fc2fa8-3295-4e4d-bab8-a00aa0da49d3"
        },
        "item": {
          "id": "3c9362eb-163a-4f24-8f7d-f5686d8c6151",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "efa3cf61-1e2a-4276-a56d-cac60d87599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a58a758-ce91-4042-8b90-685489db4043",
        "cursor": {
          "ref": "e642d1a7-be46-460d-9bfd-fdf0563670e6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9e34c416-dc3e-4709-a28f-def2c50a2be9"
        },
        "item": {
          "id": "5a58a758-ce91-4042-8b90-685489db4043",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "65701c4b-ca5c-49bc-bcee-03ec7600e969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c35b685-4dd5-4a09-aedd-437e257d2444",
        "cursor": {
          "ref": "7ac21379-c33d-4de3-a94e-1b3534904237",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a0a1a180-11d9-4e29-9630-0939b580ef1f"
        },
        "item": {
          "id": "9c35b685-4dd5-4a09-aedd-437e257d2444",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ccdc0813-9c6f-493e-8943-a658e328e8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc08dc5-e2a4-4e26-9847-fb9a837e176e",
        "cursor": {
          "ref": "8e94e94d-e294-42e3-90c5-7b0b8c3917d8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6598d553-8fb4-43f4-ba1a-e3bfcc5a9c8a"
        },
        "item": {
          "id": "7bc08dc5-e2a4-4e26-9847-fb9a837e176e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c34344c-345c-4a3e-93cb-51c769b6dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157469ac-0527-4962-8120-5b92200b42ff",
        "cursor": {
          "ref": "df85974f-fe00-4ece-b78f-3b18080b9a8a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5be27eee-435a-4cf3-b5c3-5ca08dc47784"
        },
        "item": {
          "id": "157469ac-0527-4962-8120-5b92200b42ff",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "28d86bed-6619-4beb-9be3-cefbad26157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c660c523-cd96-417a-acb9-02361978331c",
        "cursor": {
          "ref": "b0a9cc4b-185d-4d91-b3de-1c93911c57ea",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "17435e4e-3635-42f9-a51c-7959a4872f9a"
        },
        "item": {
          "id": "c660c523-cd96-417a-acb9-02361978331c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9e5ce6b-7bd2-4b8a-a463-15b350fbb7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ba6e79-65a6-43d1-bcb7-9e6453bfc7d6",
        "cursor": {
          "ref": "e38439fd-0011-4b3c-9d6a-b90e0fb23383",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "395c5d8e-8d98-47b5-a232-3b88caf65bb1"
        },
        "item": {
          "id": "67ba6e79-65a6-43d1-bcb7-9e6453bfc7d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "44e7001e-d445-488e-bdb1-a6fc88fb4eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324fd32f-3157-4a9e-ac73-f38180e58b89",
        "cursor": {
          "ref": "a9603759-30d3-48cf-9beb-8be005f54718",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5d576d61-6771-439b-81b3-6ae6c7bfaef0"
        },
        "item": {
          "id": "324fd32f-3157-4a9e-ac73-f38180e58b89",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7e493345-c7a1-4499-99e6-d92507d4e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f747e95-8209-481e-a9d4-dd4478bb57c0",
        "cursor": {
          "ref": "1dd13aa0-caa0-4902-9d7f-748ee6665c55",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "393a39cf-fd33-4f08-83a1-6e17a070ecac"
        },
        "item": {
          "id": "1f747e95-8209-481e-a9d4-dd4478bb57c0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6ad36977-2f95-4257-8af6-b3809bf8b2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2c6a2-9d45-4eca-acbc-13927e7b2f68",
        "cursor": {
          "ref": "b0cc7423-6e87-4495-9818-0879633988aa",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "024a93d0-6245-49c8-a4e6-c299497771e7"
        },
        "item": {
          "id": "e3c2c6a2-9d45-4eca-acbc-13927e7b2f68",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5fa6fa67-9675-4928-b1ce-b46c887221cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f97581a-d65d-4232-8d27-86a91e51e417",
        "cursor": {
          "ref": "55f2ce5f-41d1-4b29-bb8c-65ff509c018e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "417f270a-9ac5-4d9b-8fd7-da081327d1ca"
        },
        "item": {
          "id": "8f97581a-d65d-4232-8d27-86a91e51e417",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c0b30e2c-619d-4bc8-be0e-4a8934c4123b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6a391f-271a-423b-a385-a05326c72a4d",
        "cursor": {
          "ref": "c56e3b3d-c8fd-458b-a38a-1c70420aa816",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9cca5c9f-919b-4be8-b97d-623ac2a418f6"
        },
        "item": {
          "id": "bc6a391f-271a-423b-a385-a05326c72a4d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3c7aa38c-7aba-44c6-8ef5-b5efc145920e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ede2d-9997-4e30-99bf-72f21569c046",
        "cursor": {
          "ref": "8c0b53e0-c4c9-4965-9a72-7449d9936e7c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e53934bb-bee4-43e1-99d3-e7ee2f67bbfa"
        },
        "item": {
          "id": "952ede2d-9997-4e30-99bf-72f21569c046",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4df54f38-1107-414b-8a5a-330298e7dbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b022d61d-4eee-46af-8da8-e5e5933d72e5",
        "cursor": {
          "ref": "eabc0cf9-50bf-4ec1-a105-7eedc8d4744a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "28339161-1a31-4772-81a7-673ef6da618f"
        },
        "item": {
          "id": "b022d61d-4eee-46af-8da8-e5e5933d72e5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7527712b-687a-425f-b0eb-658ccdf1992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a003931-45c4-4b81-986b-00d3f2d43eef",
        "cursor": {
          "ref": "1bd2f418-5751-4a64-887e-eeb8b993248c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d1a035ab-5c1e-4091-bb85-6eee22b00d69"
        },
        "item": {
          "id": "9a003931-45c4-4b81-986b-00d3f2d43eef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "685779b6-17bf-45fc-8e41-ffbae5993343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2376863-10a2-41ee-8f2b-6d5927f9f910",
        "cursor": {
          "ref": "f5b4b184-bafc-4a77-b58b-36293eaabc6e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0be0091d-5935-40c4-ae60-c5ff766165fa"
        },
        "item": {
          "id": "e2376863-10a2-41ee-8f2b-6d5927f9f910",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "79a822c6-a8bb-4cf6-b684-13fb3f4f90b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eb0e87-707d-460e-ac85-2f656906324f",
        "cursor": {
          "ref": "7369a4ac-a295-4143-b205-3499209f5fd3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "85148bf9-34da-4c3b-9e7c-93fd80014eab"
        },
        "item": {
          "id": "a9eb0e87-707d-460e-ac85-2f656906324f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8f69499b-76fb-48e4-aee5-5d513705300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93ea551-ea9d-4ed1-88d8-9250bc2e0870",
        "cursor": {
          "ref": "c62c1d7b-5e5e-4337-95c5-856fc4ba95da",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6c9a6823-de97-4f00-983a-4e88fdc76cb5"
        },
        "item": {
          "id": "c93ea551-ea9d-4ed1-88d8-9250bc2e0870",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "25a88474-b2c7-427c-a206-f3b3b63f81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3466e36a-caa0-4fa6-b256-10e53b42e480",
        "cursor": {
          "ref": "637c7696-543d-4313-9040-b0308e61041c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "16588a15-9c37-48a4-8b7b-2968b609f018"
        },
        "item": {
          "id": "3466e36a-caa0-4fa6-b256-10e53b42e480",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8868e487-69ce-41c0-bea1-94a654cd2c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99b97b-3e64-40fa-a139-63ec102f11b2",
        "cursor": {
          "ref": "9633fd79-5fcd-42f5-b60f-55bd0566e058",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "696fe0ab-1ea7-4314-bbe4-bd880dac47a6"
        },
        "item": {
          "id": "cf99b97b-3e64-40fa-a139-63ec102f11b2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8032465b-03bc-410d-a115-07084635da30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677bce7d-b0be-4a21-8416-13c760a94828",
        "cursor": {
          "ref": "77fb48e8-1336-4877-b30d-1d43aeb06936",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfdf6ad4-0b3d-46fd-ac6d-b1c8f88bd1a2"
        },
        "item": {
          "id": "677bce7d-b0be-4a21-8416-13c760a94828",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ad4f2b65-3b15-4d2f-9916-48b4fd1e3c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e21057-2a53-4b81-bb81-40881b2af128",
        "cursor": {
          "ref": "8f4633de-1b79-4a27-85a0-24d15c7f2b17",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "85ab799d-7010-4b6e-b7f6-a73ff29227cb"
        },
        "item": {
          "id": "d6e21057-2a53-4b81-bb81-40881b2af128",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ec656d08-34ca-4fec-8791-5660e369c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e707659-8ade-429c-92da-0990999d218a",
        "cursor": {
          "ref": "b9237659-71e5-46dc-86e7-ac77f5a82e3c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f7d019c4-6be3-4ecb-8096-f0c7519ec502"
        },
        "item": {
          "id": "1e707659-8ade-429c-92da-0990999d218a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0fc91af-17c9-4ecb-881a-7bb039cb0207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18846e29-2603-4254-ac1a-50d306cce1a7",
        "cursor": {
          "ref": "54c94f00-06d5-45cf-86e8-64d80dfbb44f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e3f2620a-a17a-4af3-b276-924eb1779414"
        },
        "item": {
          "id": "18846e29-2603-4254-ac1a-50d306cce1a7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d33ce658-9e9c-49d9-8bfd-327c50c208b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f7110a-2402-4d54-beb1-fde13e9b97b1",
        "cursor": {
          "ref": "cfae8c52-6553-43a2-82bb-e921de28b8a6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8a50a06b-ceb2-4984-bd88-6dc540dac69d"
        },
        "item": {
          "id": "14f7110a-2402-4d54-beb1-fde13e9b97b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "37860551-5edf-4f04-bfd4-4df3c121e523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b290be-ef00-43d7-b983-f73d8c6ace30",
        "cursor": {
          "ref": "b9a90420-460f-4ae9-988a-b4352fc1fa63",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d92af8c8-e7b5-4a7d-b33a-41214d6d9f8f"
        },
        "item": {
          "id": "81b290be-ef00-43d7-b983-f73d8c6ace30",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6e79de02-5537-4ee8-b2e4-1a9330b023d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e4df7-03aa-481a-b049-7a0db7979eea",
        "cursor": {
          "ref": "6dab5e84-4a7a-46cf-9019-18bb305b2982",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4de6d1ce-3ac2-419d-a483-9191e537931a"
        },
        "item": {
          "id": "6f0e4df7-03aa-481a-b049-7a0db7979eea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5c3a1495-5bf5-4a84-ba3b-2bc67628c8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9acec9-4881-44ed-b6e5-91f99c53a824",
        "cursor": {
          "ref": "941e23ee-ae40-4ba3-8f06-f7735d7523aa",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a8e010e4-a74f-4791-962d-2c3845b362d2"
        },
        "item": {
          "id": "9b9acec9-4881-44ed-b6e5-91f99c53a824",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d870355-6e56-4989-9e35-75a542de7cac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2911ee4-b81b-4b57-8d8c-3585b8fc55af",
        "cursor": {
          "ref": "584c9b61-68f5-4e21-968f-62beb6ef1bcf",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "522c64c1-926d-4980-88cf-562e2e0bd57c"
        },
        "item": {
          "id": "a2911ee4-b81b-4b57-8d8c-3585b8fc55af",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dbb3c7ea-5693-470a-8ff0-808935855a41",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c234aa0b-3362-4202-826a-d6f4436428a6",
        "cursor": {
          "ref": "85f38587-986d-4487-b497-6f8bff3ba980",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b6fad23f-5343-43cd-9573-3bcb808b6326"
        },
        "item": {
          "id": "c234aa0b-3362-4202-826a-d6f4436428a6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3319c9b9-4703-48f0-b939-24b16d67ef01",
          "status": "OK",
          "code": 200,
          "responseTime": 1942,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "942f6b40-adc5-4288-b9dc-65f85c1f8078",
        "cursor": {
          "ref": "cb5bffbe-ec2a-4448-94e6-b9fd98d248af",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "06f93d86-8236-4d13-83cf-3bc70daf1634"
        },
        "item": {
          "id": "942f6b40-adc5-4288-b9dc-65f85c1f8078",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f3410e98-268b-4682-aa8a-767d4729a998",
          "status": "OK",
          "code": 200,
          "responseTime": 1548,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc48ead-1b29-48a5-8d96-e49398857e30",
        "cursor": {
          "ref": "3214b546-1d84-4274-8ff5-f013f5b55e6e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2d2edbf7-5fad-447e-8f47-e52b14da48c4"
        },
        "item": {
          "id": "dcc48ead-1b29-48a5-8d96-e49398857e30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "292307f8-c61a-420d-99b7-845ef7b611e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc48ead-1b29-48a5-8d96-e49398857e30",
        "cursor": {
          "ref": "3214b546-1d84-4274-8ff5-f013f5b55e6e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2d2edbf7-5fad-447e-8f47-e52b14da48c4"
        },
        "item": {
          "id": "dcc48ead-1b29-48a5-8d96-e49398857e30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "292307f8-c61a-420d-99b7-845ef7b611e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcef9db0-1969-4fa9-882e-e0fb73489537",
        "cursor": {
          "ref": "f49a31bf-c464-44c3-8594-8dd81b01d2fc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9390c736-76a5-4fab-a116-571c6fcc98a2"
        },
        "item": {
          "id": "bcef9db0-1969-4fa9-882e-e0fb73489537",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e5099ef-05e3-476d-9ed8-3799a81d43ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9764f94f-361b-4d7c-91f2-3762db678353",
        "cursor": {
          "ref": "5e8b0bc7-c8c7-4b8a-a569-0af0708bc8dc",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b9ad032e-0f8f-4546-ac55-d8c00b0f107c"
        },
        "item": {
          "id": "9764f94f-361b-4d7c-91f2-3762db678353",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "440b4051-aff2-4354-a42e-829660774f77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}