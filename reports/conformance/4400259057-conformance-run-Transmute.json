{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1504f5de-303d-49c1-9a75-4aa3e35b6e5c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52bf2d2b-825c-4fec-b8d8-e8869fdfbd70",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d08cf9e9-8e1f-49f8-953c-b2dc1be45352",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed58f8bf-73cb-48fa-8368-e7e7f0987f4a"
                }
              }
            ]
          },
          {
            "id": "05f22f04-8d01-422e-b5a5-3df676d45bbc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67606cfd-fa1a-42a6-b82e-145721cf87d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9559f7f4-9bd7-43cc-be33-8359c278286c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63bfbeb6-90f3-4ede-886f-05d1dc7563e9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c8e3b631-0f40-4ced-bd17-e3413a081672",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea9f17e0-ce1f-4735-8f81-7c9771cc7c3b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ffb9278-6e49-4098-ba55-58febb13ba01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27edeb24-d2a2-43c4-9e0a-5adef8843200"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e216b294-669f-4981-bd8d-a1792d4541a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b172c05a-f7f4-475a-b11e-c12e3e2f801b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab1b54fb-8ee5-4205-8b2a-eb37b80935b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e493d5a6-3235-40d1-a03f-163c571d6547"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34d37b22-25d6-40cb-b951-174f0812b288",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2502b1b1-6482-4999-8c63-73492269cc26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccaa82d9-4c30-43a1-975b-8bb5256b6440",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4ab449b-4474-4014-865b-b0df76c3cec9"
            }
          }
        ]
      },
      {
        "id": "9b0be8da-ef3d-4b36-a966-fe86f1c61f03",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3ec7d149-3cc5-4a48-af3c-93f4e6ea0e32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b29e1143-8082-4260-8a28-0beba91e7a62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb34b2ce-3d0e-472f-86a6-b33034c0634a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4075e9-4a63-4c94-956f-cfe994466c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf20dce1-e216-4ea7-a92a-8f43f7f018ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe150e-9767-47bd-a4ff-5f1ad670898b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481de664-e8d3-49a3-837b-5803eeb0463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06170874-87e5-4e09-967c-0e3fefebf760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1692e1-3a73-4a7a-953e-526a9594884e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ea600f-207d-4f9b-a0a6-76b8f1bd861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c35d3113-e64a-4248-b5f2-ca634120bf9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d70bdb3c-e7fe-4e65-a64e-c5ac65c8e61b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75e6753b-d975-4775-a82b-9880e051ca35",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad45930e-46ad-485a-b72a-dfd633071e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee52080d-e67b-4817-b1ec-6b3f2bbcefaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ec95f-68a2-4396-a4e6-5ef39ede1f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e9f14d-28d1-4edd-9ea3-683774925b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcabb71a-e71a-46c5-93f6-26a26f325ef0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f3337-362d-4ae3-9499-4fdeae8e195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "342ab4d8-da5e-4526-aa80-9b78221ca699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa367684-a3f9-4981-bc51-748e8475aa29",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a0c7596c-3539-4245-9183-4404afbcce27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38ac6801-cd37-4e1a-b4cc-0662a6905671",
            "name": "Positive Testing",
            "item": [
              {
                "id": "290c5dbb-d030-4bae-814d-fc2220cdab2a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f193767-3a61-49a9-bbc9-3d78b2c5f86c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5fb2b72d-e95e-4b93-9074-4d89418f5ef8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fb0c802-480f-4758-840d-4cc63cc2a825",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "651a8178-d81b-4415-b1f0-2498f312eb69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7811ab78-64a6-47aa-acc8-31ef56c5eeb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddbe8941-8e39-4dc5-839a-fee4a8797313"
            }
          }
        ]
      },
      {
        "id": "352dfcc1-466d-4b11-9fcd-72c8e10e72c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de8a0ef4-00f7-411b-8e63-6b07c8ba6949",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb3f1ce7-059d-48b0-bc1f-786e15992091",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7499c871-6d80-446a-ab47-7299a48e387b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6533dcc-6330-43b3-8139-94113f1cd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5b925-0b5a-47b1-830d-f3985989d3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93ec0e1-5819-4311-8239-624f1a698e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "973cc552-b814-424b-8773-c96ca653c139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e73e3b-f909-438a-8331-adf6f0cf9e99",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6989b1ef-67d1-4718-999c-84b16ae2ff4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05deb8dc-9ce6-4152-a4cd-2c772fd6e933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c1715c-802c-4528-9889-d85ae7611a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37b13a34-9865-4f13-bcd4-b763af7c7e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7649b443-fcfe-4be6-b312-ef6530436da0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0a47ce-1466-4ff8-8d7e-cc79a193c10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7591c125-f019-4dca-801d-e11c277a622c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b924b711-9690-4e5b-b85d-6cc68889c4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a986b0-9527-488c-aead-6a60d22f01bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216c07df-0ca1-490e-8c62-cbb3594865b7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8313a14a-e053-46df-a2ff-53e45549afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0f374e-853d-4840-a54a-b7e30e7f9ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68829baa-b226-4a70-8bd2-60ddbed596f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a03734-cfa3-4b92-9d24-b0db10764cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2edcb9b-8c12-4a50-982c-812597dafd92",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ecde92-5952-425e-b309-526d81faf39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4fa8b9-d83d-4049-aa60-9634025f3862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b39a5a0-f9ad-4de7-a061-759e9719e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445e0060-7c42-4425-a5cc-94dbf7eced44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71de6bc0-5232-4361-899a-a78503824e6d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c1874e-8d63-41d8-a6b4-87571ca591cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95898aa-0630-454d-bc5e-7bced7760dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814a171-6f73-4e84-99ca-e5a6818b32a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25894427-76b4-465e-bcca-b8c522320ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc10fe5-e3c2-4e87-be5e-70cc5a354a34",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1974492-b326-413e-8ef0-00f78c441a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b93232-8641-483d-8846-c04064e182bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c718be63-5d8e-45a6-8952-6646c89fb6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b83ff6e-6b80-45e1-83b9-ca0611147ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dc5f77-fd97-4859-b129-612b19779d1c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c748f-777b-40ed-841e-be28d5069de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b800f888-9979-4fa6-9eba-fa26b43a73f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12312487-d891-4ab4-8b34-06a238589d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66f914c-b64e-440e-bb33-614be6cfacb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b20d067-7828-4261-b3a9-971ba1749857",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee86414-27e8-4a74-ab4e-f0a46f3fb01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5e0975-d8f5-4642-9f84-f345c0d301d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7818964-8299-4f84-9d56-b06332e1be75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d14ea931-d673-44a7-91e0-a16035e34d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec38853-1ec0-4cf5-b40a-8115dc90fd4c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f8d758-b8c2-47af-ac8b-cf166aaf4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5ac968-97c3-4239-8add-e6eb3ad009ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89972785-9316-4b89-b1b8-4ea4a9f7ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26b919b0-b136-4c48-a27e-cee3938823a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0b1c39-1651-4e19-9629-2742ea5d4279",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0570b64-56b2-4c46-aeba-cb7a282bdf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4782db6-acb2-4ba3-82d7-261bfd695404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1827a466-75af-4238-a962-f55e862187be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "044e8be0-235f-4ad4-b071-d5043938c839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9ba058-5cc5-4b49-8537-b68d7951a85b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9302203d-c025-43ab-b1e1-972450eef068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17494d0-954e-4fcb-a25b-04629cbb6f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18075af2-9489-4ec4-a752-84b40a9fd27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e945145-0431-48c1-893a-5cbb04e96fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42613b57-304e-4a4d-a767-bbd98622a4db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36179b52-b85a-4274-9b01-e0113d5b79a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1756c192-0a31-4b14-bf67-13347dd04a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f077ac-9f35-4089-9579-0e0f5b0cbcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3efe19c6-5425-47e0-8c9b-65f2f4d00e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1e4970-2266-4c5f-bf95-c9f29b9d74f0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba066687-1218-4a28-878b-18d6429ea88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1058fc60-897b-48d1-b479-5497b05492cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef137add-288f-474a-b67e-939b1161cb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2093cad3-b91a-4795-9a42-db66c79d678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b331a7-3787-4e55-a1fd-4ebe2a9fac45",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dd3ce5-849d-474f-8817-88cec83165cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4527722a-c47f-4ad5-a4f0-ed9cb1da3a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f16662-f830-4b3a-a6d0-1af92eb18b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e193da-db42-4faa-abc3-add09c8cfffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dbc217-7ccc-4f5a-aeb4-472a0d7a8349",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d3a13-cf4a-44e1-9392-452db07d2a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c36ff65-a443-4e6b-a370-3221c529661c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b806f4-6a03-4215-b50e-f7774bc02279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9725e53b-a159-400f-8080-dd34b0596064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3147aa-cf1c-492d-8b26-e984430b05db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783eef7b-3699-41d0-8584-e279f61437b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464d9b3c-1655-432f-8e9b-7572aa0ade47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f658e011-0a56-4f2a-9126-916815975726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a7c798b-3a17-4b1f-82a2-cca2ed4b8e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c78d038-ddc2-4a2d-88e3-ad3efc9ab391",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19550e1-bc9c-4b25-90f4-aa5725fd1f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1b15c3-f784-4206-8d64-9d31969bfbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f261a44-6be1-4862-a81b-1dd9a373d14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4741baab-d5be-43bd-b902-1f22c3ccaf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a241999-882a-45d6-af36-0b2e3ddcc3a8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f69be-1ced-4c3c-af4b-54d0d89ce600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30134ef6-9e46-41e7-a520-3852a436f195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6faa3f8-aa7c-404a-ac3d-e7157cff6aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6400b9b1-3093-42ea-a318-58ebc1ad264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46efe5e-c5ba-44ac-a010-8eb2df1b8276",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832b3c4f-22bd-401d-95bc-2fb8373bb109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7d18e7-5731-4dbf-b3b0-129b607201f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca3c39-a923-4f5d-8382-056ec4b5693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c2cb14-6069-470f-be6e-d6cc765fa274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b82192-41ee-4129-83f3-743cdfe496a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df418c0d-1118-42ac-8feb-b79b16d06ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b87e00-b380-470b-a103-6085892d5629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02266c3-ca23-4778-af86-08beb4720fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca4fdab-3dc5-4d38-8918-9a00d74b4bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5e0c04-94d7-4a15-8a3f-e150b6ed8c7c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b18848c-9ec7-4cf9-8dbd-0dcf6a9952a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deaa1ae-1839-4899-8239-163e0fc2f3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932f621e-806a-42a2-8b98-9d962502fded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebf92e1-0bd9-487c-bb3d-0370b0648cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4971b-0e4e-4cae-9d94-0bac28f82bd2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b5bb18-8e3e-4b3c-b8b1-dc1e69fa702d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5199fd74-912f-4127-94b5-e0b3b7e9e32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be387c-9cc3-47fb-a967-559512a623b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e480ea86-51d4-4c0f-823b-5686a9b1bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7c6944-1231-451d-adb3-87369740b35b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d06ee1-e711-4407-8844-af329a8ebb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb219ca1-c7f6-4484-a3c7-8d77a83ceaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938c13b8-da31-4ae6-bca1-5e17eda567b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49d1b13-04d5-4fa0-85f5-c790bc94b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41df1410-1bc5-46b3-9521-84752828747c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bf3da2-505c-4654-971a-d41235780bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375e8a59-7329-4ba3-bdce-53369a4748fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cf580b-7444-4e92-addc-5affd954a8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a804665-01fb-4404-b506-523cd5b49f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84e49aa-855a-44f5-b518-6b7824eb17cf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ce0350-4b63-487f-a2e3-2d79f4268d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ea5f3a-57a0-4a14-b805-fb01c0a46e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c7d8b6-ddaf-4f43-b245-3fbc32e54e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a81024-cd0f-485e-a9ab-126ae96ec412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3694a34a-29c1-4ce9-91d2-31ac812dc82e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a381ee0-8efd-4984-acb0-48d1a6abdc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa3a0cd-1167-4814-88cd-cef0b5478576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39629b-4fd3-4600-a21a-1a71aca78cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4930c077-ceb4-46da-82b2-97e866b5a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc73eb1-e6ff-4b39-96b4-ec7c6c9e0723",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76968ecf-02b2-4921-9331-34dbd5f30653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d244f96f-9d0d-4dd6-b45f-3ff29d5100a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accec0c5-11e6-4561-af6d-60b19e980a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8363a5e4-6085-4cef-a209-4c18b34c7f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7916d-9498-4d36-a8ca-5cc672cb4253",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2eaa57-cedf-437c-bace-c44d9bbbf8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba947ebd-db80-40a2-8faf-71cfce75d7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f26312-cc85-45dd-8539-71ef593bb899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e7bc38-634c-48b6-a66e-2307573b02a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e4e2bd-3aba-4d20-a23a-7b8229d53ff6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c5e982-074c-4e12-9d1e-dda0b32eb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71668948-13f2-4e4e-b6d4-a68c25de2f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46112136-52b1-435f-83a2-1b47f5a94cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15c3254-8766-4423-8b12-aad000549528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c767a-d6b6-4423-8382-a0f4425bbbaf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73778de4-233a-4b04-ab2b-dd9146d77c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deca5dc9-524d-4501-8df5-95fff938f9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c067bcbd-2ad4-4144-a201-37e08213c367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b62f47-46b4-4353-8915-4b78d0b200d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8beb218-a72f-40c5-8730-12b85c211811",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd3c4ba-5465-4d39-b0ff-06c4bdfc94c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b11cefb-2dc8-40a3-a364-301dedcbd9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19c588b-bbb9-43e5-8259-1be34b3e6fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac735f5e-fdc6-40a8-b6d9-548faf76de47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01fffec-d5fe-4a46-b299-76e4e46e5696",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee13438d-687b-40ea-a809-fbc59b45d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07858d9b-64d2-483f-b4e6-c5aeb4ae9577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ad089c-8fba-4a9f-b089-7b52b32cc366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8940141d-9068-4add-886d-98ec8edcd68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714787fc-6bed-4290-91be-d412da509070",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906dc4b1-deff-456c-9dba-61f660377e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda5b1b7-c809-47e6-b8d2-46c564bd03f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7737d4d-048f-4c9b-b8e0-e3b5366c4add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ec541e-fdf9-4596-8488-ab4b0c7bee7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539a92c-845c-4edc-89d8-2f4fe7506281",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750446b3-76a5-4dd2-96f8-497f4e8ed8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f9ea3c-04ad-407c-93b3-d61cf4215fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43310d9e-bedf-4b98-b69f-07b308c1074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a54dfd-9567-422a-b020-e3e0e77b2e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12903b7-0866-4325-83bb-99b18d88f37c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6667a38-8716-4c44-abad-f3997b202d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "426d6bff-9aa8-4d1c-861c-8b83c06edcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9279b12d-309c-4a44-b9f0-3f222b7c6b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2ef606-7f28-4fa5-8230-af61e5f8c8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e3d38f-d0b2-4406-8279-5ed580b034d3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516883b7-e909-414e-ba7b-a8fda1f6d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c92d9f1-057f-4300-af17-94dfcead964b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569c62c4-8f64-4700-a1ad-b55da93606a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1990399-7ad6-4222-b5c5-8ff84ad967af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834f88f-7ceb-42b6-ad5e-03cf1e2130e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c141fd-c54d-4f6f-a5a9-caec73a36d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7393e87f-8116-49cc-82e6-9c2cad52c745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55f6653-6ab9-46a0-8c9b-8a3954fa8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef7d34f-cac3-4a26-98b5-fc00e36019cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af776001-472d-4e94-8cfb-83b34342f940",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5173dd-9667-4e48-b4dc-97463f6671c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f93a11e-0b4c-4548-9365-30a2a8b4342a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0151ff-b7c0-4a37-b105-67c9f72b7b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fa92bf-1586-4289-9f3f-d4aee314bafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974c7bb3-ffd0-4cf1-9817-c5e796097496",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dcb00a-7563-4313-8600-72f72f2f2e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd7ce1-fbfb-47de-921b-f95f71c4e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8fed68-6032-4ad0-a6a6-b5e0aa56d9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb862d70-0002-421a-b35c-02c7b4d8e666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4912bd-0b14-4d32-9490-89014af095e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0973a0-61a5-4037-a706-8d62b35116ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c84f12-dfa6-4613-af80-c6c899f48d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f70ce-acd4-4d6a-b96d-7dccfbeb698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6a9023-6eff-4321-8e70-ae918a3fd930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818180c6-6c37-43ea-bcd5-1f1798882398",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af71f86-72d3-4511-b86d-85669c4cb8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261a90c4-4536-4426-89f6-067f8b3cd234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cf1f08-e8b6-4c5e-80ae-cc830175c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "111cf901-ed31-4819-8686-316dd39bac28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f5fe59-7225-4a08-be81-6986a8387f63",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e2c092-22a8-4e3a-8743-35d8d52038d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfe1789-7e10-4f54-9815-e1513c7eff4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f64aece-9587-4319-9066-52ee0fa80e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecdb77e-253a-4768-9493-80db49dfcb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3204cad7-9a44-48e8-ad90-0c49a6513c25",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07672324-251c-44fa-9ff1-c6af512add26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76618be0-304b-4f83-ab9e-208bc437c5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b35458c-4de4-4180-840d-d95e6a49688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "47574cc3-5d88-4e04-9da9-dcceb41591d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206c4634-9bcd-4af8-b133-e4c6929f1701",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3206f61e-4c4a-4537-a819-3c61570ed2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2840c461-3f6b-49b5-a533-15d2fdeb1df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f87f55-5f62-459f-af36-6bf92a1085f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35e6cc2-7687-409d-aa2b-1f2e3abd4d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a2a79-c7e6-455d-8fd2-d56dca3795af",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871f0f0e-408d-433d-9602-ba928b152ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5c8c66-3475-42b7-9869-77776444ac15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ea0f07-5e82-49b9-8c83-4d9d8f406f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1bb256-a040-4a51-8f30-63df24f374c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc212bc-a5e7-4de7-b0e1-486877cb3aef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa44239-05ae-488b-ad2c-ad9bdd4f8f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e107e91e-75c8-41fc-b9df-4c9eb29b0c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190f195d-07ad-4148-a395-3baf07dfe381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4920f3e9-d701-434a-bbc2-98415f437920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30e2310-23b7-4c04-a130-2630bd229db8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83e33d-c420-4932-bfa4-954108b6b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e02316c-860d-430c-b560-ede8ba0336ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c8b6fa-3c23-477e-bae5-ead2c29fcf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec7fdf0-8ea9-46b2-8193-edfe42bd9204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587a92a1-2f94-45c5-b48e-033fed70671a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c6825e-88d7-44b6-921d-11eac27624d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b053ff33-09c0-47d9-9b2d-65c4edaa485a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3123646-46b8-4f02-ae85-30d6d3f2de9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85c885fe-fd03-48ca-ad92-45ab94508ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac9aebf-87e3-46ef-8d69-727a30b956dc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c1f9a5-a2b4-43f6-93d4-e92009a68eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cc8369-8c2f-48ae-be58-fb5932906008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d97f0f-7a5a-474e-af64-342e9075d8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "725271a0-676c-45b8-ac75-7e7b7c8f8dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d31eaa-3642-46e9-92a2-4566813f0d69",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770b1319-5fb2-40d5-8cdc-b27e44850209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bbd316-754a-4f01-b46a-e9351b4c1fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112bc3fa-e2b0-4502-991e-eb190df42cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6776f29a-759a-4f74-8bbc-3f2af866c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45670c8-10d5-4a5b-b1c0-e6e3976605c7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a7d55-5103-4aff-8c88-3a4074a99258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b07719-1b64-434a-8640-eb4bd318ce18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa26da0-e0b7-427d-85a1-e4b560449d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22b84cf-8634-49a9-a476-20a8e1f8a550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f53775-c2a4-4aa6-82b6-91d28889efeb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7662f9-f494-4026-b399-1dfdb0616194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1b83c7-3a9f-4acb-8870-ebeb8a9913a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6687c90a-d4a1-4ade-86ab-c1b69d1eddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c3ccd0-8ec1-4d31-857e-45a2655b5cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e777c9d-9f44-4361-979d-96341306a728",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0bfa5d-c2cb-4dce-afc9-a098601e335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8326af2d-6a94-462b-8853-352653e52162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdff012e-680e-408d-989b-2bf54ead0f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fff8c9e-f494-446e-acb9-7e48793447cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f025c75c-cc00-4799-b9fc-c12011635e06",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ae0de4-f869-4cfd-8884-f1fb2334a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed509c2-b2a5-406a-8be1-25a9667d9253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396c2754-da43-45df-ba57-7a45891efeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c75fc4-f94b-4b5a-afff-61f445ad3c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5935a69-c009-46e5-bb7d-fbf02e7c4854",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0c19c-3a3f-45e3-87f3-be97053a1633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0c4144-37b4-4000-a283-89540f84acf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d20cb48-048a-4eff-8f7a-eced607ef448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8e7d8e-7f70-47f6-957a-f4de428cbbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb208dd-c314-4669-8b25-72e053ccf339",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e08d2ac-2264-4842-a4a1-ded9cf045d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd05be1-03d6-4617-871a-286323f136c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4715c8-986f-4843-9f86-7ac603d19c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19aac851-9473-4705-91bd-79cdf7b1ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd1ee7-ab46-467f-9ccf-d4ed282537bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ece95a-8bbf-467a-9eb2-e780b9f7245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079fe249-774e-4b08-a6a2-96f62dec2fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223e298-26b9-4f96-938f-5177c25ade86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62ad2e68-d709-4ed0-ab1a-a904217d1e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ee4f26-a66a-46fc-944c-c28ce4344c27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2000ac5-eabf-4f54-876e-4a79075315db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c481c4a-66e7-42da-a824-29597eabacbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62dc0ca-aa4d-4a17-881a-0137b3ffd93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b87f1ca-3c95-43d1-b7d6-dade966fd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab77dac-5219-434c-8dd0-068230c944c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274eadac-5e7a-444c-a067-76027f30bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210e7abf-7e85-430a-ba6e-38fc2b059326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960671e-dc90-486a-9599-51ec6cbab2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e281f15a-6ee5-422a-a273-a9986fd8468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52622bc3-6a57-4298-a123-7339afdc47bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50bf687-33df-4f4c-bb36-e163569ba24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9f23c2-29ae-4859-bd8a-85b2aa834bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f76a80-d1b0-47a8-b7f8-a62d50357a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcd4b59-bf26-405c-9ada-6d6d8a53fa1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4672a3b9-a2bd-48fe-a750-7122c8ba24e5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982078f5-b33f-42f5-896f-a7de6dfe9417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf66eab-c77d-42cb-9325-5a438dbaad6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703eecc2-43f1-436f-8e21-02ad562ca46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c60dc92a-a20d-41ef-8431-e77ba2f684bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40fcd87-0e59-45d9-8521-12c62071e88b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3df7b8-8384-409a-837e-9411641b6c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf1dbf2-da83-4b2a-a99a-9d45b0818db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62fd69b-9fef-4fa2-a1e6-cdf121d46e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "629f6637-0520-4408-895a-0b76833277b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec8ab0c-eee1-402d-9ec7-6a7b9879402f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c886657-baeb-4340-a383-6975ab90da3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa36fb8-8578-4b11-a357-913608a127b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04c6c6-a61b-476a-9883-8a56ee474728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "987b94b8-3e58-405d-bd9e-4e11a0ca09a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eacc288-a9e0-4af1-8b84-4a386f36b250",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9d3caa-d584-430f-a3ad-458655e403e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705695d4-f873-4db2-b2a7-d73d372efa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6968046-f8bf-4b31-ae5f-afac479295c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84887b06-6e73-4c73-968f-5ab13edd05ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0e8ece-906c-4b21-a99a-8adb2efd7efd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9d4312-7acb-46b8-9d79-d234cf2a84c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37d31a4-9354-4ebe-8834-6b5a4232cda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f09936-ad64-4863-a7ae-a359a6f0f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "380d4181-0959-44df-9861-47524b39e0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339dbbbd-4e7a-41ae-a294-5ad97a3e4893",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7addd3b7-1b82-4d4c-86e1-13c681ad7513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718faa86-501d-4f66-aec9-3bb254d0fe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470cd075-431d-49a0-aa78-05063098a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c162cf3-485b-4331-b19b-59b347aa0ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3376706-0c4b-43ff-a474-846adb4e9196",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f091416-2af8-4ade-9957-50c6945f350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe9859f-d8ff-49a0-9765-cc16f4d2ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e563ff8a-dfc9-48cc-8980-5159d74b30af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c3e432-e9e2-49a3-846c-43f0c8f3d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a407f-d839-439e-a275-345fa8ac8d0e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75772981-d0b3-4f94-8e6b-52ba0dfb31ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246b8698-a5cb-4d54-a2ef-b9a388c817d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870a5aa6-8708-4e20-b2ac-4678f6d8282b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d5b988-94d4-4ac5-b677-e4336360f3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec427c3-e07a-4e06-8cf6-508ce1bdba3b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca3348e-2043-422b-aad1-13486bc8100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05291a92-8be0-4bf2-ad84-0fa1c8e6db09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda66247-a9a4-4d4d-943e-a5e332ed464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d972bf8-6376-4018-a845-7692098b0b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4771ea73-d93b-4e9c-a619-126f4cd4a93a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d966ee-8c0f-47f2-8bed-096ddebbc403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca90e3b2-fbef-4599-a977-f44a373b50cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ccfa5-129f-443d-bdd8-5cb3d8f29e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "421a2886-b9da-4777-8fea-582d84bc8a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fe69b3-c493-4280-b255-eacabe72a592",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299d7f40-eae5-401c-acf2-fdb1e3637873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017ba8a4-e748-4e8c-91a4-7d693615160d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de037df1-1121-4a76-ad3f-4b2b56d9b40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "259c801f-e0eb-4ea8-ac41-df9e020a8edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d205e622-4190-430f-bb75-672de2e16803",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b14e56-3aab-4bfe-a085-eaebc914aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b9c2c-c3b0-4127-aa08-327941a65b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c909ec-a7c2-4f12-b528-1f53dbfe28f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f46fca2-c5e3-4aae-b77a-2743c2e117e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10608f4b-b68c-452e-9727-9faad8affe85",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d43e7e0-f5c8-477d-a5ac-be39cbee5154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb720e6-1424-4af0-9d58-f48a519e90c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060c3445-bded-4b76-bb48-61fa79eb6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72988029-8294-4490-9b15-28901bf830ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec19895-2789-46af-b157-70c0f40df518",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f77f8-21c0-44f8-adee-e60242f833d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e657b7e-72e6-4866-869a-0d3d10b59c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482e9a49-10e2-40e9-bca2-df1d27569fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f92a73-7adb-4aab-8211-3bfbd7bff7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c30fde1-ba86-4394-b9a5-9364d56319b9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51865caf-8ece-4b02-9800-5693158d0aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9e6a5b-d57a-43c9-b272-d5382d3458f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fd9500-2443-40bb-94a4-c1a8b8238751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d59dc3-a164-4675-8a2e-89fa77869962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd86162-5879-4f70-a784-80bcd22448c4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20a457d-859d-470e-aa71-efd69ae56e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1ccf2f-9649-4ac3-b216-1d1081dfdb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6285ee98-e559-408c-91bc-200381cfd497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "084258fd-8191-4f49-84ae-ce6cd0e072e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54326e38-aa1e-4bbb-a3d2-34b4b75a16ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28736330-bcd7-4785-b075-c041acdbbc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddf2e4a-ffb6-4cd8-a486-a7984abf5906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f010eee6-0bd0-41da-babc-417d1d50f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eef421-5574-4f58-8c4d-962a699536f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eed471-6c65-4cab-ab76-25abd0f8c720",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c941274-d885-451c-bf8a-5f353e8f0eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809d5487-a30d-429a-bd07-d6d54aa4f77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50b6c32-17ed-4629-975d-597b7c7f5f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39fac272-2581-44d8-bc10-a31e0a479d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba6a468-dcc2-44c2-8179-5d32dddbdcf1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68508de-8a5b-477a-8669-551bd962d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ec7a4a-61a2-45de-b596-faa8b9a131e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1610fca-20cd-48c6-a221-d8932d4a6930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59d156e1-513f-4b5d-9719-5cc080c998c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192669e-183c-40b7-b354-0fc5b0ff02c5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02f84e-3d9b-47fd-9990-981e840d637e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f8c157-092e-41cf-8eae-02f4e9e712db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48186c3-4553-47c3-94c8-323d326f0247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f64688-adb5-4777-a34e-8b15d7b4269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7966e9c3-c51e-4e5c-8685-e1397242f966",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e77d7d-4dc1-4af4-a488-30bd96fdd6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca168105-ee2b-4d3a-ac86-3acc03d33ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a909ba4-b926-4fa9-958c-0a5a625b1a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bcb2c1-aa1f-42cd-8d27-310663be964c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d465e720-1898-42ee-8c38-17ffc39d5500",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfea1730-31f6-4e2f-9a46-d43ea7ce60bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80aca896-4fe9-4ed8-bbc6-725b61a1df60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e9db8-8c75-49a7-ac49-77e9ba81aaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2def9f02-b707-4036-be6b-85d27915aa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9a5040-85a4-46e4-b70c-324c46be4ea0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb5304a-dd22-4926-92bd-59532dfe4613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7e92c8-8913-4512-bf3f-4ac8dc202766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba30ba30-09cb-4696-b546-75b9fa4ec3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5d1bf4-aaa0-4d2d-a10b-c5e9414f60bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeed771-7815-4a0c-994f-a6017fc184bd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7a6fd5-606f-497b-8e39-952c465feb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92cf719-5763-4739-a67b-6a900d980575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1440e3-ba16-4926-84ae-5d7b8da34721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4babb68-d8d0-4d01-ac50-3011641f8179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23664c6-f612-4ffe-83ab-ce207e4f4a07",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d1e1e8-7903-4269-9d1d-fb86ce4c3606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bdab65-7fb8-4da6-b8fc-77ac03ea5bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843e34e-a5f7-43de-b89d-9ff5c80d2862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed9e25c-8b5d-43d6-8390-1ce6de13a19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb63ba6-1b58-45da-ac95-cfc9d8ac60bf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496526ca-165f-4abd-b8d1-0bc8782b34c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dcb2b5-a765-47a5-961a-55bfec7dbb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e26610-0513-4c3e-8509-3d0fa0277371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bf9fdf-4979-439a-9ad7-e499b0c5ddb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f9031a-b73f-4634-aa42-42bc822e5985",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5232b19b-ef2b-4e4b-bae4-39bcc219102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3367c74-5387-4cd6-879a-f7f1b3c5d248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d99e799-d845-494b-ab52-1b39874083f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7418f655-b757-4f2d-b60f-3f29de54a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f90115-8bff-462a-8d0a-8a10c34c74c2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4c2c91-fb72-46da-89b2-8e19cc7e14cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e7ae91-b4d8-4a6c-b9ca-04631f82b1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e9cb38-b66d-43f9-b82f-f4362fd61d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4727f1c5-94c5-47a0-88db-65727242310e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb0b7b6-b25d-47f1-9e8e-dc3a3e077587",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6362420-a41c-46d9-b39f-e5ee8af0d314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5825196-fc73-4f03-9ab3-79fd02ebb747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74885943-820b-4f13-a51d-ae6805b0bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53758c4-bf12-471b-82b7-1881627cfd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3877440d-e914-4403-8066-4d2434dc353d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940095e-1f7a-4bc6-8940-9bab058b7229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2726faa5-4665-4287-9b1d-1db418aac2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eeb628-a60b-4b27-908e-9f3a13b9ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b2cf58-05fa-47f7-822e-cd31a0b72c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044543c6-e92f-4a4a-a696-87e5be3275d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51712c5-2458-4e8c-a8e9-4502e16ff0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f3b40a9-8648-416f-9ed0-ceeb56097861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72145e35-15eb-4359-a2b5-7465c3d44cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da70bb7-a270-4d9e-8cf0-9d19133d2326"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01f97d46-0193-4e67-844b-6c8807d9ec71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98245e9a-52bf-4ccd-ba8d-88d55fde756a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc4bab-f87a-4138-b567-012a5b247209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a205718b-0de4-450c-83c2-5cd4deb9346b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2049f09-1a1d-4f3b-a52a-68280b611e67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e6f444b-6b1c-4487-8529-02032ea9db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173cc33-42f0-4951-8005-6478fc5701b8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e658ea-accd-4157-a348-b01cfbff70ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94c6af4e-7338-4eaf-8ded-1197d327510a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695673a4-1824-49f1-8b04-6b4b039b7689",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92bfc455-573e-44b0-bf23-946bda7e8ec0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82d6e28e-a8a9-40b1-a233-4dccaf45a8c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c750009d-b79d-4abd-94ba-4b2e231ac4d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ef44eb5-20c6-4bce-ab98-0ecbc0b3c69f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c57f1616-32fd-4b68-a377-2fe51723e8e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ca86534-d8ce-467c-ad34-cb935bd3a44a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d667fe88-4517-490a-92cf-ae62a7787bdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9545582-c1a7-4f4e-953b-ac0ffa4362f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9aac61c3-1fe9-402a-8ba3-da42e074ed0c"
                }
              }
            ]
          },
          {
            "id": "a2cbe826-2709-45a3-82a3-656b5a466f77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9e890bb-2b89-4b7c-bc57-310a61d02294",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "723fdc45-22a7-431d-8064-1bdde9367ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a1a41af-6d0a-4b9d-9543-29b44441839d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1656459-4dfa-4c96-9f68-f23d28adcc59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d92fef5-17b2-4d0b-84f1-91dc877ade1c"
                    }
                  }
                ]
              },
              {
                "id": "e7ab7da9-9021-4d18-8320-a44994498d94",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35c80609-8d3a-4b67-b429-d438b7ce7c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c05bf23-d116-4808-ba61-ace9693d5552"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ccca819-68b6-4ecd-9608-414b0ffdb7f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bef08469-9721-4c03-907b-740cb1d07fc8"
                    }
                  }
                ]
              },
              {
                "id": "eae88de2-bf94-471a-a4b7-93464a6ced76",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58906dcb-13b3-4eda-998c-366e61c3a30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8809cef-86ca-4d3a-bd41-a074698bee85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b73c22-9cf5-4790-9f5e-a6f878d820f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "08cb9a39-f60e-4efa-9b41-e7f3b288d4cb"
                    }
                  }
                ]
              },
              {
                "id": "f227990c-ce01-4837-84f9-fd041720fe4e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "039029af-76b4-4c39-bab2-38207c7fc238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97de27c1-8ada-4def-86a9-eaa9e61be1fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ccbd7fb-05de-4390-8afb-4c85f2907e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca8e3b70-17c2-42ea-9415-2dd1cc17dfc2"
                    }
                  }
                ]
              },
              {
                "id": "3ea96506-1f73-4443-b851-cce59586b621",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92efa971-ecf6-42ab-89a5-01cdcf987350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d71bd5af-9b02-4982-8d9f-0fea81dcb0e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "434042aa-c603-4ee7-8990-90eec11d4bf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d542be5f-41aa-4515-99fa-2de821d66b8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b57b8096-3774-415e-8e7a-4c6c5c5a7a46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a51ff10-4ae8-41c3-8685-16963269f99d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4294a2bf-40d1-4dd0-8a21-597812e21411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11115fb6-35df-4280-808a-4d5cf3860917"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74382e92-ee62-46f2-a02d-5f7e74b7cf41",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6042d73f-6fe1-4fdc-b9ee-a03dad7fcf9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41ad141e-1003-46ff-b149-876f1300264b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "743d6200-165d-43ef-b765-a59b7e1940e9"
            }
          }
        ]
      },
      {
        "id": "e73ab228-ea8a-4948-b6ca-0607c078cde7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c84fb9aa-4d46-4117-8ecf-20d4da426014",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b60b193a-eb84-4b4c-9a81-8e1eecd2ded7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9d4593f-a904-4579-aa2d-947cd675349d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c68a35-334e-4d8c-afbf-d958948bf9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcb1830-d3e2-447b-9717-3d3738fb9a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82305c1-6701-4ce2-800e-45e268171457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef7d239-37d3-4a91-8d9e-9e90461a0d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159fe6e-08c7-459d-a957-8fd76b90d627",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f8e1f-f68b-48bf-9f56-dc3541b25b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7966c06b-c182-44ab-989a-c5c3889cd490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3d81c-94c2-475e-90c6-cfb37d9e4268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ad85e6-528d-4b94-9abd-a7a97fce2f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7e90de-1251-477a-aadb-a02f7dcf61dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f518a20-5296-4fbc-b935-94a66da9e56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702f16bb-638f-41a5-aedc-59ef994641d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649dca2-bf0c-4f3a-ac7a-8d0ff50cf582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0d47b7-db90-4d76-a599-3c27422c67f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20739763-101d-4620-a2ac-b0f06d21545b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921ffa3c-4f78-454e-8138-f5d1b912d2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1f13e4-8804-4997-afda-c96f0769c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9074eec4-2518-4770-8c6a-ae855a75c596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1455eff9-6dfd-4da8-b0d9-9e1ead2318ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c4e944-fddc-4aea-b0bb-4b4eb8927a47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dac7fe-e8af-4ed1-a553-1f03cafb3070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f754dff-0b2c-488b-b128-8e950c211fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd233121-2322-4547-890e-256e11e51b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "217786ae-8142-446d-8cb2-fa0488885433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9482319f-fe29-4d36-be2b-3cb6076889e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68dc3a0-877d-4a1f-b123-1aefbba1d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f8336b-6475-4afb-b1dc-a55139f78ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e66ad6-25df-4958-bd48-ae56fb502878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2b8c77-786e-4508-a09b-2fe8b224a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2cfe0e-1df5-4e49-97b6-d8166652c0d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f94f01-5c68-480f-a03a-4ab067ea4f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb1040c-42cb-49fe-93eb-3ffa666f901c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b2fdf2-1b07-4854-b27a-85d0abe4faec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a68f957-1952-49e2-bcd6-a7c3ffca06d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f89ae3-3d0b-4f7a-a41a-d61654853124",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8879369-4525-45af-89e0-f0da34a56f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c53b13c-85fb-45fc-8c45-2435bf38e8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c28006d-9f8a-4ac4-86e0-caa08e0f7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ac4838-175f-475c-959c-38e5005c6a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f172084-a51d-4c32-8bfc-107864ee065f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa63d7b8-f5de-4ac8-b479-5c42b3df3940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7f09a3-0b20-493d-8196-1d55a90edd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3b514-6970-418e-aa5a-e13a97d625ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1b78a0-fc06-4aa6-8518-e6a65fe433c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad44d621-29ea-43fb-b903-7d1da8515548",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c290d9-0213-4c73-a114-845545ac9313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d8337d-52fa-439b-b992-f1f79f23b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435d9cf3-8519-4cd4-baec-71562271a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a930dc1a-b3f8-43fd-b81a-d161ecba448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab5c655-7c73-4e2d-81c2-98a5b9275125",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db91e24c-157f-4399-aec9-24e3b185ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747ecb9d-262d-45f4-8462-ec1f730b5c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061083cc-f991-4511-b60a-f8c8dd0570b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "94ffa55f-03a4-44ff-9736-7a16c89e4679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba6d8b2-a208-4641-a99e-8f8b6c4d37dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae32851-9ecd-4131-b93a-420dd62cb1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3505055f-6a1f-4134-96c9-abc1a0c91262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864bc40e-7853-4aca-b59f-cfee2cd49118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05139482-fc45-4edf-a7fd-ea4e3c76295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715779df-84eb-4d9b-bef0-a34ea988aedb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a74f60-faa3-4fb6-9648-ffb369ed2ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa677798-05af-4062-8e93-7b65119d13ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f6e1c8-79e5-425d-890c-372836810a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a594028c-92cd-4e68-9111-a20782eddc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f12ea6-2966-4ba7-a9cf-6b1ab03a91e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378ecf0b-0b6d-4525-b371-fe378ed74c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2a0c16-ccbc-45d7-ba26-9a4e84a4eab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8aec63-e554-411c-bd33-8fde9ea052c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e7e823-d8b1-470c-88c6-e017cbe60f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c147df-482b-46b2-ad7f-c51c64d4b4a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae8665e-0a69-41c3-8b58-1e4612f0cd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121634f5-7d91-4190-8436-c9fc2784119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db46b8a6-9cab-4124-aad0-bcb4e9cfe94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f84766e-9398-4b3f-9bb5-f31127cc012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc5f8ce-561d-477f-a022-da72388fce47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2258a227-4c78-4b0e-ad0c-1f1f56d03c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7017c72c-ede3-45f8-afd1-df8bfa52862f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aea46c-0ae8-4403-b14c-eaefd386e4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da923b1e-984a-4d65-ba6e-a25eeefe239d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c3e722-b46e-4436-8e69-8a3904d9d0b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7184a7d2-2809-4dc5-8b86-d0f5779a83de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef0f372-0d59-4810-9ac3-30e1c9073a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01d3f7b-36f9-4fa1-b7b5-c68fe77d67c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec97495a-e254-4eef-833f-da283a9ff581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66af3c-cd44-4114-83cb-2bcf4c51c4c2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab784e6b-3316-4c26-a35d-073d23da4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993bd3c6-ce64-446b-8d74-ea070ac10744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9086b4b7-63c0-48cc-8e41-fdc55dcb90fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e20f822-c99a-473b-8100-13f40e19b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabfd055-d3bc-4267-8099-cf24010ae693",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661fb1b8-63b5-48e0-9f01-3a6ab6fdb1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978a3727-e021-490a-9852-499a9d956950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e232da0e-c45c-4777-9fc1-a94480478a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa2232f-920e-4298-9376-59f2a5fbe9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ddd22e-ae6a-4f80-8463-4bdeda229d8b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fab4ec4-f422-4876-bfb2-b9fb1f2eec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b67a57f-cdbb-4d43-b173-508cfbf88cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911f154b-9b65-4c72-a9d5-e76a81dbb5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f928443-2504-4d80-8877-098850980013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cee622-3516-4b08-91df-5e709b84db1e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a115b83e-698c-44ac-8e57-92a2156d7195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd94a1f-c6a3-46f4-9528-297808fc9304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5ed945-a3b9-42c6-a03c-75a6b59fa8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb97936-3589-43b1-badb-333d4e3f3f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f9b5c9-1146-4e43-a04d-ea3bdfb62ada",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb79abe-a61b-4b79-b9ca-39d79425eb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de333aa-f047-4d15-8bcd-d5a7f9301779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a38fc56-c36c-4738-8087-7acc0f8165d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c076c202-06c1-4732-90f8-88c7298688bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25558bbc-899e-4d0c-b299-71891dd2ae78",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c05865e-9d0e-4bc0-b3d2-8d153d08bdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7443fd-cc7a-4e3b-8b50-563b8cc5894b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24228c94-ae9b-4be9-833f-7df34feb2fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e936bba3-9277-4230-8d21-6afde5bcc1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea60975-c906-4860-8f5a-675a7af73ac6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abf5d9a-baa7-4830-94a5-1cbd5cc9a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6822db10-141f-4e24-b4f9-c458bdde3e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b387cf-b86a-4f09-a2b4-4cb2339b956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7b6731-8f46-44d4-b933-da61c73b7bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811b42c-b6e0-42b0-9a3d-788c606846a4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa170067-f99f-456d-ab28-4af87cef8ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6090b5c-29f2-4c30-9a9d-8d3bc8b27eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dcba78-7f9c-4c69-953c-dea8b1e1d113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed48085-0fb4-4d19-965e-7435cb989a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386bc0f9-11bf-46a4-9bc8-98a66ef37b81",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0237a804-5413-492a-8e50-769421327720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214652b0-48d7-4624-8b4b-c5f9257c96e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdcbfe2-d938-4752-83aa-6e0d5263a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc24ea98-373b-4e26-b2a1-072fd3183021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31324d34-28f3-426d-9d19-0b0032eb44f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d77036-a192-4a4e-a971-40922b334655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff28367-c72f-4473-b102-6b4b8d1ce0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740fc4de-a290-4ae7-9d27-be73a486563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca9bb91-6884-4d9c-bf67-0bcdf5a805e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca19745-53f4-4cdd-860f-4312448873c6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9569b69-cf74-4350-8ccd-5f333ff76031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c53661b-ebd7-404d-8ffb-b3141d74bd5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aa1ecc-81af-4f16-99a8-b779001a655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af6d25b-03e9-4d10-9f32-3268dbc2a49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79bfe61-f8d3-491b-b32d-afa15405e672",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897a2220-1b95-4a26-9f70-9afaf09dbcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e3a2f-36c3-4f8b-8fc2-970a13af0798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655ca4f6-f9f9-48e6-8fe0-b86d052d4d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac60dc11-1799-4d88-9f57-20c91f2482c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0ba68f-2ba7-4262-a8de-b18df18caab5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819c3480-d216-44e8-bc6e-bedcd9559287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8821e0-7e65-4b6b-9b08-0180097101d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0c7a2d-2a0d-414b-9ca3-3b65dbba4c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "557f88ff-3f52-48a6-a536-fd8f56df1cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfd0cfa-5e42-4117-80c6-8f4a12ef4405",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ec4a40-cab1-417e-a780-586ab76a6034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40248414-cf67-4c9b-9d63-12b26cc39158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a589d3-f422-4646-a6c8-7642caa30f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f8a04f-250a-4455-aa18-111fe5fb8c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec41ac-4f5e-4015-95b6-52e2a022716d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b83b5b4-df34-4bb8-9518-7aa1751e67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef9cfe7-d7f2-4953-9e1c-10fe8a293a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c9a33-d0b6-4039-a87c-bb09e7a1683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb22623-86e9-46d5-9704-378b72c7dddc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73990221-33e8-4718-8770-49b8de368cc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fa2c2ea-0d80-46d0-9d78-0a57b7118fc9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61449dd0-17c7-4aa6-9eca-71ddb323c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95dace85-023c-40c1-9a76-96928791f8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8881afb-ae39-4f1a-bb28-cebe9e226319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "522a6da1-255c-4a90-a70c-11299edeeee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16152375-583b-40f2-940c-3375862da530",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643b2b4d-06c2-4e89-99cb-bfe28570dea5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5eb758-8b81-4f00-8827-a2b8a1286341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a61074-7c81-4386-8723-daf044c48b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca43faf6-a3c2-416f-993b-88c3e65db612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33e6a4bb-e1f8-4e72-8a6f-83c6cd36c160",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ffdb82-072f-4350-b494-f1d0141db0be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8ed7bb-6ed4-4486-869e-7ded39d2f53b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a9bce05-bacc-478b-ab61-2600b2073d99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db2c0aac-6434-4dd6-8290-076f785d224f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54b39183-a5c6-4f7b-8f37-fab001c20ba8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18e0c698-d260-4d7b-a238-8adb92a07d89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48789a84-1f18-4197-ac6a-844a3eea65ac"
            }
          }
        ]
      },
      {
        "id": "3ad1341c-9cfd-4c3e-aca8-5b5bf27db3d4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b42b304a-c83f-4e33-abe2-e3e892d5743b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "342457e1-5619-4f00-9aed-241260f40d89",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80a85338-72fc-440e-bb37-3a5bc1d85e04",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df8d3bb-078d-4950-9bef-ac49479aaf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3f0072-0e1b-423a-b9b2-db1256ec1304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ee41e-4864-431b-b7c2-8140cddc9452",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e06c156-2eef-4990-9c9f-86828161e445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cb76ea-1373-4c77-b5d9-93c7ad3de415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760b74a7-c62a-40b4-b497-c0f5b0aacae3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa94e48-e0bd-49ba-aa82-0fba582b92e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fb00e0-9b25-4740-964f-299889888cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46f607c-9dd0-47fa-bdb9-497fa6e135f4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb1bb54-3c41-4370-85d4-06ff2e3866d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70b9410-84e8-4886-a40b-fd80761c2fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14429b13-80ec-46ca-b7d7-9b3f2803ef49",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170412b7-89e5-465c-9954-df18420b79de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa8e342-cf82-4ad9-94a0-99d3d293a0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1417168a-26ea-4b23-b470-6c953de039cc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734b9e22-dd9b-4387-8b90-18f115e248d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5b2a56-460c-4a28-bd96-c95235fdcac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b41ff-e5bc-43fe-acac-838196855955",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d5e2c4-3881-4386-be62-db6d3226e334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cac27f-27eb-4a77-92df-d460712ffe84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16606ed-e05f-4035-9e08-d1e876364f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de50e27-23cd-4c82-a225-0da6e5f3f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad911db-5857-4c3e-866e-01da21ab27b4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4108b378-ae66-447a-a77d-d5bd7e243b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae80ff31-477b-4d29-9cba-82f72758ff8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5862462-3a0c-43ac-98f6-3a29c67e9397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f73af9c-7ff6-40f1-82dd-6bd167919f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26106d52-811a-4806-97d3-df573e3d8ae6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4cf8b8-12ad-49c0-989f-2e76a92a73c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43004af5-1b3a-466b-be65-9c257be5dd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b8cd86-78c5-4102-9669-c33094d5b510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6970b6c9-2fa8-4b65-90a3-f5d5905a6482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f546c58-ccea-4606-8af7-d192e0e085af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a22d770-c96a-45e5-a550-d026590ec316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1522678c-7367-410c-949d-80bfef4e5ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47225a68-a18d-46bf-9fc4-503a1848a38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe5c3ed-baad-4469-a5a2-b9c5da9f5455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7489e9f-339c-47f3-a92b-e3ac90ff608b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8372c7-2ab0-4525-9937-b1d08364d614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071d8266-0e46-4305-a4c4-cd86b08c53e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460d48b2-90ca-4647-8b5f-42a67cd4e70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72316e9-01b0-4800-80cb-669b65c04460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7752cba2-c854-4ae9-b0e9-41393f6934a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6961f388-ed3d-421a-ad28-b30710b03c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d9d0fe-4c59-4b24-acc1-340396be01e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f703852-a6c4-45f1-8ad6-3aa2641cc6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bb81b8-c760-47f0-8fe0-1ee011cf0f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a51d64-d98e-4003-b034-346374443e60",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8920e2f0-3798-4f8b-903d-15fcbea198f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee92a4dd-2770-418a-9b27-4378b4cc2be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac48adb-24b7-4012-a25b-ea6db1e595c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2ca1be-ba14-49bf-8aed-65b612e158dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402b052a-3598-48e1-9155-ae2f04bfa32d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bb86ee-7bb0-4c59-8844-918cbe08d60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96159e4-72c5-4a6e-99da-e56b54dac2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21898f4-71d2-4e61-8da7-e77f7e57671a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e92dfa9-7cbe-423e-bdf8-8d67fbad2889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b60e522-2da4-4aa4-8c26-90cfc5a3700f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bba7f4-26e5-4a28-bc5b-1b99239c87c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85509321-6d69-473f-9386-e4d6f4d3d1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c35a7f-c0c5-4edd-b132-fb59443a76f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bf1258-5a41-40e0-a653-bcc3f3b7b29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35048d7e-84eb-4f5c-a95a-95da6446ec5c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f94c3b-24a1-4891-8f4c-8c3f74da2396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a072f8-1ec9-4f85-9608-f414adf94870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dade479c-e20d-4dcd-8351-0ba003d8cd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497dde52-ad00-4d2a-a176-4a82bdfa54d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7849a9c6-bec7-4edf-b652-7af6d96d5e82",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba5961a-5404-47a0-8576-b38e5cd4eb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2457781-da2b-4393-a65d-a33d52657c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319b0c13-f04d-464d-8917-e59ef78d007a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4329fed-cf1a-4702-bad9-f677fe76cce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfbfcc1-a487-4e6f-b770-00654fb30405",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9f0268-c1f1-4c05-8e50-32e3ca1fe29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0a8573-a16a-4a77-9acb-3544c9eba7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb652149-b919-4f81-bd7a-b2c49f900e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c541291c-13c8-4589-93fd-1c4e05ef996a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f901eca-aae7-4757-bc02-47a443b23898",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a5d22d-5c39-4f57-93ec-e5ecae8feea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8953fc34-0ce9-44cf-a223-93f919de5b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c731b0b-1e05-4a09-a5e1-cd32ecb51675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75d1c6-6995-4dc1-8c35-1acbfc0b5455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecbd252-86fd-4880-820f-a60c8d5a67a3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e17457-593d-4a19-bc63-9fc20e711bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5128544-14e7-467f-8836-0f22db0e9c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2563463f-f969-422b-96aa-b5fcbd9dc85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b60f9c4-0171-4398-8794-09f4375e0581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c54d4f-699f-4683-aa38-111c9fdd16f7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21965700-257a-4ad5-ab73-11d669ee3ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43c6db5-abeb-4426-8478-a715800258fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5197dae9-95ee-442b-8333-3a6367565b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d126cf-342e-480a-b6e2-cf8e788929bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a662be2f-a9ca-4d25-b5f5-b28168c1afd2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a963c7ec-8ddb-471f-9f3a-e16f8fd07a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a551246-90eb-43f8-8bf4-47a90403d3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee863ab-4317-479c-967b-ee60b381a82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f73e2d-670e-4c27-93db-762292869a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eff3db-11bf-4527-906f-bfada0f4984d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c38504-af26-4758-ad53-4a13faff2c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1067a889-faf7-4fe1-9967-c45f99f07d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5dcf5-1e72-4119-b082-4b72ca8d4a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e7fab8-0e05-4f8d-9a23-55b65d8db52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c955f-300e-431c-88a5-d7c043642039",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce6cedf-b4a1-4efd-be5b-08eea16d25a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccdde2d-54e3-4f31-9503-a090f1d2f7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8abd8a-4043-41ee-b5ba-021bb542f92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f26de42-d45b-42cb-84d3-ddf44812f786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2413282c-7bcd-4020-95b3-bb191184c550",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46132b7-8ac5-4f14-8bef-73bec6ec1ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d67430b-b6b4-4f11-8d00-46945272c5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d21564d-64bf-4597-b493-9622e51f281e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4722df20-21bd-4d9e-8588-3870156b329d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a6944f-72ae-40a2-9e62-de54d3c9e668",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007b0f9d-f8b3-4ebb-92c6-3391524f6b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca85a9a-230c-49dc-a84b-031d3d086c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2ce73-9d4f-46d6-9172-c4acaf666c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362ee551-facb-4421-a1e2-d9b10f334d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f831896-ca75-46e1-be1f-e87b2d24a804",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa39992f-4cd0-47c9-8063-ee37a757b6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bae5dff-0352-479b-a259-d7cdd931b827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010f533b-7d5c-49d5-8abd-0c994a31f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f96c4c-6bfd-4d10-a0aa-46f5197d0e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e6be4e-4a70-4c7c-a728-a437d8aeab42",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f81934-2d82-4bf8-8cc7-2b8dcdf2888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f5f840-2e9c-4449-92e6-6b3efe494368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c42ebd-c942-4eb1-9d1a-02612a3b9f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb568a1b-ba39-45c2-be97-ce30f458c23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73294eda-cd96-441a-9bb9-31fd03ba81ff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a7c51f-dad1-4883-9149-e771e1df5a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8341561-3256-4702-9f38-d44054dc6582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948fac5-e4b8-4f0f-818d-bb6db3b40314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d765e9a-3f70-473e-b912-816c439b2f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782b10a-ad8f-4a1f-bdc1-018f7830ffcb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf5105a-5d81-4ee8-88e2-f382a24395d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4751928-0865-47ff-8bc2-37499865d6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bfd6c7-d9c9-4bc7-b16b-bd6065db4406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c5c890-5ffe-4e4d-ac7e-11c781d6ca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50738952-1288-4f56-b1f5-9070142bfd83",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fc0880-5f47-450c-b846-7746ef99bcb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f235845-a401-47cc-92fb-5a91ed4780f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab6d8c-d9c3-4650-b762-72fabf68a459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8f6997-ebf1-4abd-a702-2f459449aaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf8f3d6-1615-4252-97ab-711acf3b65ac",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e5a13c-fef4-486d-b46a-1e372d3a377c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64631266-379c-4dc0-8f9e-9adcc5cf658e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac95eb2f-172b-4498-9f0b-6b8d7e9c10b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f41682-3a62-455f-afd8-b4b864e5bd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7981cb-5b12-405a-b33f-b035468f7c42",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5c0f21-1cef-4921-a5c3-ba6c86ea5070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1466e06-5ace-4f1a-99dc-0873d8dc7a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce91ce1-ffb3-4e0c-8921-7755373467ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30eb8f85-355c-4f80-a033-2929baafb9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec27136-fa2f-4011-9ff7-7d5cf3a893e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d161ca76-9adf-4812-a4ee-9abe3735e676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c31cb76-50b2-41c8-a8ca-43215b2340c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8461dd57-b971-47d9-8aec-14c5311c97a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f2d8fd-d55d-42f7-933e-40a5cf38a0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24eeef8c-bf66-4884-8595-4dca491a47d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c2d4dc-7a02-4315-8c8f-861ed4ffa49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deed6cd8-9ae1-4f71-874b-e8d1c4a9371a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc37a211-a789-4fd5-9729-294b15930987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592ee246-766b-464f-b099-ca91b6f8e901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba1b64e-01f2-4c51-85dc-9af05f8c8ea4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b12254b-279d-43d1-b8b6-63c51d95c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea0d021-4145-4610-9f43-c612f594e939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f43e772-3809-4fb8-b218-2072eef07e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad3253-78e3-415b-90f3-20d58e4503dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7db566-dae3-4d39-988a-eb7025f06d7a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5acf40-e919-4316-a50a-5bc0457939f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2b439c-78c5-4d72-a8cd-e8cc9052d702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06226f4e-5b06-40f4-a86f-7b364c2d5377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6971af3b-2060-45c1-860d-4e61b863d493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeb19c3-780f-4149-9074-71f96e956746",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b307757-a820-4084-b472-7a08c239d46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d7e8ac-8b64-4d88-8dac-f070890b930a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a0b35-467e-49fa-b8f8-3a025d78c99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e22fb36-e9a0-41fb-8a2e-fec8813b13e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e16bd4-9fdf-4662-95d2-46edfc420c1b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75059424-8c4f-4e9b-bb0b-0b8ddfc6a3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913ed32a-f951-4f7d-8ac9-645ba2ffd5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f627cae6-605f-4218-8b0a-d84802acc9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6451f4f-78c4-40d7-89f0-0938c668c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f93242a-3ab8-4bac-b41a-b7837b634acf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583904fe-179f-4624-8721-0d203836067c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88c0955-5e2c-4b89-bf20-228724bd9ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3d32c-7d18-4e32-ab7e-0306e8703087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e70234-a622-4bea-a67c-1c7d7acfe09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9614de2-c87a-4fb1-ac57-1bbafdadd30d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f16c6-992f-4ab6-9952-7f25737d17d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d605c8e4-3be8-4e05-a7a4-6aace77a704b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9cc53d-c6ac-4d34-abed-59adfd7cc26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9925f03-dc77-46e7-a43c-d829654b2f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ea5b7-b1e6-46eb-80ad-b1c8fb6b5789",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5cd0d-49db-418f-a065-35d28ff03686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dce244-7b9b-4db0-857e-19f716ac813f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7105b68-f634-4a4f-b5cf-34ac7926b9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed17392-c2dc-489b-b605-c9b0f5d11679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa87c5f3-a595-41ed-8288-a7eca9728c3b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822924e-e4a2-4711-82f9-8f8af9bc56f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1916936d-ceec-4023-b129-9a28ee0b1734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf45fab3-b74e-46a3-b3d4-252adbbb5fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351479f2-3012-48a0-bb31-0492da2a7005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ed02c2-42da-4e6f-bbb0-339a174623d4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fef1c0b-5bbe-491c-bdba-c45535fc842f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2179e6fb-cfa3-459e-9564-6c12f9c87783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0b47d-e324-4f8d-bbf9-8334ef178c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4d308f-2de2-457f-949e-f298e1a84714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3d3bc8-6443-450a-85c9-a373002d03ca",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dec839-0fb7-4e4d-b63d-68a2bedb30cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f47583d-1db1-42bf-916e-0012687f2e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe9080-6a4d-43c4-b08d-1e5338dced19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd98115-12ae-49f5-a891-4bb5241ac822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a0b951-390b-4f87-8305-a1bb371b9d7a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094a4a19-a090-41f6-bd9d-706a140570a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c4ab03-4fe9-412a-be35-81f918cb8e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d659eada-d698-434c-9361-75ba7202535c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab616c5-3c5b-4790-bd2f-bedca58acded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a001de7-2486-4764-a4e6-7e9a855ce450",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffb2897-f49d-4907-8051-243c2344ac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae509b4f-4daa-4f05-9ecf-99376f695c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f742a1d8-ec3f-4252-acc9-f210e19a35ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f492189-29aa-47e8-9bef-b9af45201bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd4efe7-fc8b-4123-90e7-aa3aa5bb7822",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b1ffde-345e-4b82-b34c-cdda07d81d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb2c716-7d83-4ba3-b179-f736b60ce43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f2c23f-db87-44b4-a5e8-c3fec6d842e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3bd29f-9131-4d76-bfc9-1209d5802b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed595619-08ae-4e9d-8334-045c9fd2e523",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b0f9fc-5248-4d55-9ad1-6d47ea4fd539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11647f4d-f9f8-48eb-9c98-263dee4e5738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff6009-3d86-471b-84c0-e8107527bbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302f2388-d98c-4255-933e-b41dc1268c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04a77af-f3ba-4f8c-bf11-f50eb5676ec7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e18d62-4e42-4a36-b280-b2902e0c24af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1e3061-c9b8-486c-b182-8d15937c60ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855d39a8-ed0f-47a4-af21-b21d53638e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d86937-006d-402e-aabc-b5b10859990e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6e55bb-7ec0-439c-9336-7789d6bb39c9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc4bfb6-5029-4be8-a458-2a8cd378ca96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b6a015-42a9-4b91-86a3-95f467b18313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b7ae7-2c21-4d93-9d96-9ca77a333c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c7db7c-68ea-4664-aefe-6058c4f7a2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff17ef9b-0b68-48ad-98d7-6c64501108f1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceabbe0-8e6d-4331-81e5-68cc77d84c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba7845f-0fd9-40c0-948f-fcdf27c0822f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c22fa-8dc3-4b9b-97e3-6197b0a9f839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e50d03-09a4-4057-9df7-da2f7bc166cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579feead-0beb-4ecc-a9de-d54aa7edfa63",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2820f67-073c-406d-a331-bf2d124cbd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092a647a-57a5-489e-b41e-00c392b5d9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577a1287-55a0-438b-99ba-ff1c0de2bcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c8a91a-17a2-4551-b5b7-66f23ab7376d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c5edd9-09a9-4fe0-9e90-b205b6ceba89",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f393322-5c91-4940-96e4-01e98f05a0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d811ce6-4c13-44c2-80bc-a9ae343a6a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a26ca00-1daf-456a-ba95-1dbfd15927f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5eda11-153c-4ae0-85c7-3cb926a695d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06862e10-429f-4d97-8f08-2474b27ea5bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489e3340-d931-4ee5-b8ca-1ff8289976a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c593f918-2e25-4f63-b78d-4080ed2cfe8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938b71e4-77ed-4fe1-b328-a89e671b444b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af6dced-958f-45b1-ab00-6e3080bd4000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306dc38b-640b-4688-8ac3-9f03f9226130",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d25e13a-0c13-4ee4-b846-af0dc39bd95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a63cfc1-b2db-4ee5-a646-951de1a5fa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae741cc-8aad-44e6-836f-beeba7239d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75074f77-19cd-44b5-a3db-fdea052d484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d379a-bded-43ec-894c-86b3fb8a277c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be879b1-469a-4a13-b90e-a6e17b5c27f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a9be7a-5c17-42a5-9ac4-fed6ddab88a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93487138-f3a6-419b-ad48-6d754714c1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6603b566-482c-4853-a28f-d7f3ab374f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dedde4-259e-468d-8fa3-98eb65734853",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e880bb1-63f0-4845-9e22-8725178a6ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22f3287-d77c-4d18-bfe2-73633f9b8054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f2cd26-318f-4de3-8405-3351c0ebdd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c705cb8-b317-4a5e-801b-f08838108d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7180859-5a1e-4c24-a986-721f63bbf1eb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eea6712-5cc3-4f5b-9900-a3f28b1fc197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b7e995-df68-4565-b9e6-14ef9442cd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c2ed6d-1256-4d00-9467-8b46532ce563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec2f41d-8a28-480b-8cb6-4efdd4dc5a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c0dc09-fd47-4ef2-af25-cb9cd08ddd81",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f959c3-00a1-4c13-91d1-4cc9fc86cfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cbd8bf-9c53-4e55-a8fa-220cf567b589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2825af6-f348-4a1f-bac8-d303b1c8b7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039f88b1-f0e8-42a9-a07a-0063391dd55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649f7d5-ef90-4704-92e5-a4991d040177",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79422e6b-63f6-4b93-9645-ff4a36565fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a20474d-5b37-4acb-b608-1d7b9471a203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932af59c-a0af-49b1-b99d-8451c91aefa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2dac36-208d-46c0-b10d-ae21511635b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ac3e5-7882-42cd-aecf-4b623fe9c72d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02452d27-a4d1-49c8-99a5-bd549f5d1d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0102ae9-187d-4122-b639-84ec73dab15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d100336-cffa-4b92-9e72-77e7f5a389d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae65711-4b3a-4077-b90b-1bcde4f9625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935d80c-e071-475a-afd9-f3818be64bf3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f4a106-68b1-4b90-802f-82ab556a581d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce70cbad-6c6b-413c-8108-edbe463c269d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e042da1-4c31-4501-b46d-04c1a72faa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff017804-7e86-47f3-95bd-dda35d7a3a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0170c187-1342-42c0-8200-c2748c281b81",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb53140a-897e-479a-b985-4128f53c1d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcd7504-e79b-46c1-91df-4b302af0f66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520619e3-a089-417b-a900-44598ec1ca9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bf2738-42fb-4daa-96d9-2c9d732053ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3128daa9-f5ca-4c32-a0bd-c3cf9e941fc9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031e2939-17e4-4b6a-bc4c-4592ffdee3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb51e042-ac6d-42ce-80e2-989b97afa7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c75e31-a6f4-45e4-82c2-7c266008e7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9c6543-cc79-4543-9322-c0986a29102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45aef4-8e1b-45a0-8b4d-831f968dbe7f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbc7c55-03cc-496b-bf3d-da6626f6f632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f7953c-05ec-4f31-9617-3313e543c12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac6bfeb-5647-4bb4-9fb5-f74eaf163ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78d4223-9fcb-455e-9711-9cde4d13a0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a20cd-d68a-4bb1-9b69-fdb2c708fd27",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e86ba82-1307-4ea4-9b04-c35a832ee024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bdd64d6-41fc-4191-b893-f3dcdcd682c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be81deb6-480a-4863-85e0-59b5efa72d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a303507-5047-4ee6-a2da-f2dfa17c50b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7395b3-dd1f-4753-94d4-0fdd4022d94b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d637b9-0623-4cd6-a967-0497a01e080c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d77098-cfcb-4021-b450-969f490be2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee2ca7c-a442-45fc-8204-241db093dc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae061cb-27a7-4f18-8fbc-85cd9effac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db85f34-fff2-4966-ba35-bfbb8ce2d0a5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d035ebd5-9e2e-4c4b-9fa5-1226dbb5c916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e39565-03be-4734-9c40-5cbd6b0b011d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4813aec6-e422-43a7-96f6-3dd62d1af6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb590e5-f184-412b-ab2d-755e37828300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9578d28-cccb-4ee8-8f9f-65275c7caacd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f28e21-1ba9-487e-8e56-b049d855eec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81634f20-dee4-45d9-bc19-e2cfc17c0d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40bede6-27e2-413d-8b04-b04e4ab0455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bcb9d3-fb09-4ad7-875f-d0369574dbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2691b2-0f0b-45e3-bf61-f25d8cb85dee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4944c0d5-105f-4464-9aa5-c622facca939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bb25e4-1608-4607-a59c-7fff7cdb6093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02788cfb-2797-43a2-9b13-1bc6aa192c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc35adf-2090-45fa-95c9-58ff96af766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aedc84-90ed-4e97-a33b-a27f3605cf29",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2befee2e-c03e-4679-b63d-9c82d75e52c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d159626b-497a-4c5e-be1c-5f524a7fe633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2c9dcf-2105-45ef-8444-5bcdc806ce09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db92a1b2-34ac-49ad-8625-4316773a5861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e190f72-5e2e-4c2a-b985-c924f8ccf3a5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01abbb95-1ff1-4932-b75a-6df6c7558b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5922b0b7-ef7f-4df5-a06e-5fbaa08b3df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b1654f-91c4-42e0-ab87-f9905be67ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfb4051-7231-4343-b618-b425770f0350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9743bc93-def0-4d86-8478-944cc917b499",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95865bb6-25b7-4253-9b44-2fc8d76a0670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a9146d-1d4b-40e8-b291-d9c756c8ffc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3da7438-b55b-45a4-9d95-6627937830e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca711ff-19f9-4696-9447-d714f50be612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc61ca9-7c47-415e-9ce2-d118dcaba0ec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3489db78-7850-4ae9-8ef7-d746d5ab8472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d676dd45-03eb-4bda-b502-70d061cd48cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed848d4-56bb-41ac-a4ad-8859dbe76b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd571f1-5e47-4a98-8548-725f57d42764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d3739f-13d6-4c33-babf-7b8fc834c2db",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2105572-ac16-4985-9ea8-d843a318f1de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93863595-affb-47b9-a075-ec3545632f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e93553-f5f1-4666-8535-80ed97f941f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2aae7a-8303-4b55-a4e0-85d51a5ae883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918c52f7-874b-437f-97de-8c08a1146c23",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd4d098-e2c3-4ef8-809d-c1a28f021291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb12530a-aaea-4899-a047-79155313e7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0514e-1652-48d4-802c-e0fc690fe9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8401498f-152d-404f-b334-b10c98b3cbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5982119b-d851-47a2-8767-e88fe8f29876",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d44a7d-a8cb-43d6-987b-2d8acf8c1f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b0c8aa-5c6a-4df8-a917-c9bd068f0952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b58e2-bed1-461b-8903-a34ff8f03a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69c9221-31db-4342-91f0-1b98a1aa3f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a64f8e-8e06-4d7b-9910-b7b3a25f9bbe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafb911d-31b9-4fdb-845e-18ad5da5f7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ad31ba-c3cb-464f-8145-6e2717261c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff49c54-6ed3-41c9-921c-4edde2434f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce844c20-c458-41d1-ad6b-049c5fdebdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f9b998-9988-4ca2-91e8-a37e7c30f68c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36edd926-263e-4e3b-99be-bdf369e8842b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e2c1e75-bcc8-4156-9ef3-6ee4ed4af510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3173f98a-b922-4ae5-85a6-242586646e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49ec914-588f-4634-b320-d6939fe98e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5253730b-4b35-4c33-a6c6-992b61a555f3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37158af9-52fc-4ae3-b9a4-f3a1c19b3dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebcc9ba-1107-40f7-8298-e8a212c8ec5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda8dbc-af35-4b62-a7c0-377089e34aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013326bd-1067-443a-a6de-451a28915fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c628a1f-93d6-4f3d-a0bd-45f2679a03d1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89be511f-9c76-4afd-b7c8-0c3b1f84befc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c392aa9-2bc4-4eba-8ab5-26c7f98ac721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbc59f-e447-4395-a42a-fbca1e450719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ee75a0-2217-47d5-8109-2764c6b2d7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c688ed84-bfec-4e14-9adb-03ff916168d8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6b01db-6596-4ea9-b78f-fa33ac49f132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a34b52-debb-4dc3-8089-5b539c38106c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cd23ad-2aa3-4fe5-87d2-053a9f9c03a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d70422-7afb-4fa2-a6ff-1a1b9a87f7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66360d91-55f4-4a6b-a4b3-619af3af1fcc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ceb014-061f-42ee-9f1a-f4e68f5b2dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95b1e42-f5e5-4cb4-9568-daefc40c871f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5fe0d4-999e-48db-b98e-53cd8daba395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c83e882-f8f9-4625-acb4-4e9638e8910c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390757a5-1eb7-46d7-a53d-e6c1e00feabe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e0bff6-e3b2-4e57-9ecb-2a2b6a34b642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5345d193-efc4-4e70-9659-3d96a58eb3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a0d23e-3d39-4334-b509-668ed2c8e13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08534bfe-79a1-4e7e-8aea-0624b09e2816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b738145a-ec4e-4d41-bc57-0f8c6c38e2a2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b265fd-e2af-458a-9391-d565f253a864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45442d28-09b9-4c15-99fe-4a8b7717c7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf331b-000c-4043-8095-229ca94f6d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699fa1a0-22d7-43b0-9be6-ae42a0787a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6122a95-b79a-4a14-be3d-3367eecc3b41",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ed0e15-5f89-4f6e-9ed1-b4f4f2b16fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee32352-1cb4-4192-8f04-913b404c2ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2ac22f-77e7-41ef-8774-61eeba802c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b928415-4042-470a-a638-3a183018e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0740d1-4af2-4bf9-83df-c14971d14f7f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68226124-7992-41e2-91d4-cce6a16e1a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b8fd10-adde-4047-9949-17232d17deac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683326cc-f2cb-44c1-947c-a5b7857a9671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb6f84f-6f0d-43d8-970d-a45539399b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9718be2-3f60-44c9-82d3-970dafabfe02",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62850531-f06c-4b92-ac11-6af047b9c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89428f1e-21f8-4fc0-aef8-a9b19e317da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ace034-829d-4ea9-866d-09fa481afe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404b2986-e9b5-4163-8734-b8e9b5b2cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048cac92-2300-4bd2-8901-e14039f71a96",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f46b997-ed11-4a80-b44a-d8af5c5078ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30242f00-5d54-4f1e-9c66-3f1c8862b3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651c37e0-dc86-4d2f-bf8c-d04ab710f6f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69160720-1ae5-4dc4-9d6e-93d7d5dfbc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb820666-8470-40e6-807c-348fd2b51a56",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a206919c-8222-4478-a402-26ff4aa4e660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a5a305-e0dd-474a-9915-0fdb557803cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a174dd47-b27f-4408-a2a1-b8697bc7b55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdb9abf-d033-47e3-9502-1673ae73f1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1453d2c3-f619-4d2e-aec1-f4d420cb8e3e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184b26db-d78c-4637-af6f-d7472d686d9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f21add-6cfb-430b-b1c3-64aabf5c5ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34715cb3-6842-4fe1-b794-7cff390b95b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c439ab77-e6b5-4804-ae7f-22cf88612477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945317d-3099-4ee1-8d43-48361d0ca10b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e7bc7d-1d8c-4abc-88b2-35c1b7e75ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5264be-56b9-4aa7-a30e-2460742b8db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c351795c-4a0f-4255-b3db-dfb7ca242b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e92c85a-b4d0-46bb-8985-21a08b1983b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb693e4-d1b5-4a00-9445-8d43f5295f6a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935ddef-d0c0-4351-a1bb-5502b20cbaf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820957e0-b8e0-43f0-b404-3c994cef99f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c899443-eab8-49ce-a3c3-524c1cca78e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed27980-649f-4aef-b0d3-d999e69092c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e7028-fd30-4c45-ba7c-44263af14eb1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f25a34d-dbf8-4149-9f44-3665a1c293e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f7a750-2484-4049-8254-03868cf63542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37afcefa-6951-4971-8ff4-2952a56f8323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411b08c2-cf52-4b9f-8c86-7ccb5e7e6b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21038657-9980-4e21-8bd4-be8ef4bba055",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0653d148-85c8-4a81-a857-fffcc868fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b25dff-8136-4674-83ca-1c492423320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81cedb2-b6be-465d-8baa-26c43996f664",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36531396-2d89-442f-9ad2-faaf87cdb7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcee4bb6-e665-4c3f-83ee-948de19582b0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1ee1bc-4f15-4a02-af47-0c79cb32d345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f418fa93-05d1-4bcf-bdca-099629887234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577f1a9e-9d35-4b82-99bb-aba9a8cc692a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80129e15-3782-4f45-a91d-a1fa1a68aa6d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82247d77-ec49-4960-96e2-858eb47daa60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb03be26-a888-48cf-87f4-cbff152c3eab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60fbbd47-9866-4b33-8b45-899725aa546b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed23d328-5328-4a1c-a7ea-3519e461f308"
                    }
                  }
                ]
              },
              {
                "id": "69acf400-02ee-4bd9-8b12-5c393a94693e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0c9dcea-f217-4bcd-978f-1488145c0a05",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66298ab5-3c3f-446a-99ff-d0544ae46d6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c453b846-6c23-4406-8b8a-36d80ff1187d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c252342c-bca7-4a7c-b34e-0b1720c3dad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27398835-853d-4df6-8f68-e029b953f651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb2d9d-af33-44a8-944d-b09c8d1281cb",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90017c6-fa71-40ab-9d18-0eecbfdd5614",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e66e167a-444f-4013-81f0-9a97ca201088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4766e7c8-2526-4d6c-afb2-4e576b55193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bef2eda-7cc8-49a3-865f-e7ae826fe531"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "738c34fb-cd88-492c-944b-28593395d2c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d603bb73-64e7-446f-9b55-8db12c667e27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b37dcee-bdcc-40db-9740-71dc68e6e0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "521128f0-554d-4af9-8f85-f8f9d13f6a9d"
                    }
                  }
                ]
              },
              {
                "id": "8f53bfca-8b26-4045-bae9-5cc8efde1f07",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6569cc0b-852e-4039-a761-fefd0e280adf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cb6838-27b7-482f-849c-4717e6fb5459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fe0889cf-a7f1-4d13-b186-b9377eb26fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9808149-5182-40f0-a740-1a2d967c4ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7242c9-dae4-49ad-813c-ee2ca063b5f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6b073429-8ef3-4a44-86c9-603f7bef0e56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "992cf4b2-3cd5-4ba2-9d09-93185f278b27",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04efd64d-bb0a-4b7b-bc7d-02a08d58244e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f8456f3-8526-4526-b34f-84cf43d838ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "814e3aa8-d4e8-4ddd-94ae-ea2ffc7be2b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe65cb75-d1d7-404f-9184-640d17629476"
                    }
                  }
                ]
              },
              {
                "id": "1453ef7b-11fc-4323-aeef-604871ded5ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2aeaf1d-bd4b-4d02-9a3e-cc3be1d8c5b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eea69707-f462-4d50-82ed-42a3d2aefacc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b457f3d5-d6ac-4c51-8801-8d0c932f90dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e63b6ed-2f1c-4a50-ba95-0857eb562a32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07b1997c-a471-4074-b9ba-1c9e67e5a52e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0cd2a9d0-2111-4ec9-8689-4d65bd4c8e76"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b0e958-3b9f-45a7-8ad1-ddff8daa5d3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6492347-1e80-47aa-9e73-82bc4e726b1a"
            }
          }
        ]
      },
      {
        "id": "9cfd47f0-a9b7-4694-98ed-c6e22478583a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0f5bd457-707b-42e5-aedb-a2adcb1c15d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e78966e6-8bec-4a87-82a0-e65eb5a6e4b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281d6fa3-0cff-47b3-98ea-289ac8c70bbe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3c02ec3-45ae-41c9-8596-c1d4608d134e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185915e3-f81a-4247-bc65-3c7f7ecc041d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87a7ee5e-8689-4c39-98ee-b4d343f879a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07c7203-05f8-4595-9acc-8a4a9a468263",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66754d4-f49e-4d74-8546-8c8960f26466",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df11ce28-1dd5-429f-9878-420d88d91983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabb55de-665f-49be-b305-fc4e571c177c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4050c235-1105-447c-9c48-581d789aa6bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "596a87e3-d515-4380-b5cc-f6bb2c6b718c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18a53b21-fac2-4d54-aa83-72d77ced5785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f619de-961e-4d88-9721-7a267d1ad469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8fdaa6-2a82-4ee9-84bf-c4f7fa2ff731"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "418ad685-70d2-4237-991b-0ebb76245e25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1d94caa2-dd52-45a5-8cf0-d7b76ba34ae4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fb38994-a4b2-4b00-8c67-1fb1c6f3adf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbf52ce7-de0e-4eab-b3ad-ed45b236d6fe"
            }
          }
        ]
      },
      {
        "id": "0977e238-95a0-464f-9cd4-82b6906e4346",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6a3c0625-1e2e-4a8f-a30e-c23a019c3aca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f1b291a-526a-4022-b733-32022f0e1950",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ae4097d-16d3-4a4d-bbc4-c4bf2fba1485",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad124d8-13b2-40d9-936b-3c8c0b1a7a1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34bddafe-f763-4593-8372-fbd685b6e721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f565c0-a2c5-4582-93e4-5270d633a7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2527e9a-edaa-4276-aa6a-fe4bac450c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a06407-1cec-4548-b68c-9a01bbfc5e30",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c970d9ad-5ad6-4726-9993-8273b9c4c160",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aea0c892-8a51-46af-a66c-fe694a20dd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601435a2-14d2-4875-9c68-8ec6c3ead199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "703d6e62-0f5a-4194-bfe4-0e821798bc0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754654a7-3e84-4191-abc5-6b0f3d4e71ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff3d74e-19dd-468a-8458-80a83a69cbb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf5ab87-be2f-4a50-87de-7ebf14ac8566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdc0bf7-4769-4e40-8f56-b330067ca361"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9271f56-6e4a-4a86-b7f3-b3dab32988c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a85a3d9b-221d-4e9d-a38d-631ba48051df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c180c746-6294-4485-b688-d4c470b97018",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9a74731-e412-43d5-86ee-b35625c61b25"
            }
          }
        ]
      },
      {
        "id": "01991091-31e1-4be9-a2c7-f4ab050bac83",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9ddee344-422c-4021-94a8-a5bff78f6456",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a9a00cd-0fa5-40ac-b5d2-98dfc5693675",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39bb8a70-6743-497c-a0c9-078f528f6e1e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aabf89-6cbc-4d80-a486-684d96ccd558",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3491684-64bf-4ed6-954b-f5dbfa5b83a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6e51d-832c-4df0-ad39-012d19698ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26316929-cc9c-4b1c-97d3-ef60a5cb5122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e895991-a337-4d9d-91dd-43c3254ae116",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30a83f2-542f-4182-af2b-6ca1f895c65a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ad7d8f-d353-481c-9b2d-62247fbc4db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e150376-d56c-4ed1-83a0-9db7327b4d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9806c65e-c573-4efe-beff-3cd7eedeb1cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0d52213-07d5-4f01-bfa9-40cc9749b56c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f49eac-f901-41c5-9c39-da3fdde0a1fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c236c330-2388-47ba-a04e-d3f4cc0bfa51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b003017f-1ee0-4ebf-a84a-fec4fb6a9c9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7603a6d-7633-4f40-99c6-08e0755b3230",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "937331e2-545a-41d5-8d42-f16d892b9cd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d61ff56c-f8cc-4d60-bd60-c0e888913930",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b004251-d275-4a9a-b5e1-03ea396bd608"
            }
          }
        ]
      },
      {
        "id": "144d8f4c-b54f-4973-8255-49077ea21771",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01e33a65-8471-4d91-88ef-74b9e76100fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "241345dd-fe78-4148-b995-c2b62f7a168c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "25ef2eda-6ce1-4a18-a924-64578f597336",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f21575b-20a8-4857-b384-13177326966e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fb16087-6c69-4382-a8cd-abe8af49495d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 648.0077220077218,
      "responseMin": 20,
      "responseMax": 6646,
      "responseSd": 719.9773966436892,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678668020044,
      "completed": 1678668198434
    },
    "executions": [
      {
        "id": "52bf2d2b-825c-4fec-b8d8-e8869fdfbd70",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6062776c-e4d0-4a55-8fc3-b34f664ead2a",
          "httpRequestId": "812187a5-5a83-453b-9408-8b1d0e3258ca"
        },
        "item": {
          "id": "52bf2d2b-825c-4fec-b8d8-e8869fdfbd70",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "49d11f15-f903-4d08-8584-0b6e31e41e7e",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "05f22f04-8d01-422e-b5a5-3df676d45bbc",
        "cursor": {
          "ref": "76c74a4a-320b-453d-a94f-b3530e966b0a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "818090bd-0096-4ad7-9290-cbf787a9ad4e"
        },
        "item": {
          "id": "05f22f04-8d01-422e-b5a5-3df676d45bbc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "08af5a10-3b3e-4f66-b3c6-d8025206f3a3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "ea9f17e0-ce1f-4735-8f81-7c9771cc7c3b",
        "cursor": {
          "ref": "d5fc4af4-a9d1-4dee-9076-bcdd46c140da",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aebd297a-4fc6-4d1c-b79e-33d2f219fefd"
        },
        "item": {
          "id": "ea9f17e0-ce1f-4735-8f81-7c9771cc7c3b",
          "name": "did_json"
        },
        "response": {
          "id": "2c0b2c20-57c2-4bc5-bdee-9c1f17779f63",
          "status": "OK",
          "code": 200,
          "responseTime": 1028,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb34b2ce-3d0e-472f-86a6-b33034c0634a",
        "cursor": {
          "ref": "2ae7f61a-9103-46fd-a125-d00f08e80d81",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c022f548-de3b-4f2a-a4cc-aa24dcc3b08f"
        },
        "item": {
          "id": "eb34b2ce-3d0e-472f-86a6-b33034c0634a",
          "name": "did:invalid"
        },
        "response": {
          "id": "bda06fa0-42c1-402e-80f2-71d892110b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1875,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb34b2ce-3d0e-472f-86a6-b33034c0634a",
        "cursor": {
          "ref": "2ae7f61a-9103-46fd-a125-d00f08e80d81",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c022f548-de3b-4f2a-a4cc-aa24dcc3b08f"
        },
        "item": {
          "id": "eb34b2ce-3d0e-472f-86a6-b33034c0634a",
          "name": "did:invalid"
        },
        "response": {
          "id": "bda06fa0-42c1-402e-80f2-71d892110b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1875,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe150e-9767-47bd-a4ff-5f1ad670898b",
        "cursor": {
          "ref": "aaf2abd1-4d44-4749-8445-16d717d3c6ff",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f94df556-7a39-452d-acec-95448e6465a6"
        },
        "item": {
          "id": "2ebe150e-9767-47bd-a4ff-5f1ad670898b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6af4f197-d350-46a8-812a-1cc6d86f2506",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1345,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1692e1-3a73-4a7a-953e-526a9594884e",
        "cursor": {
          "ref": "97db47df-7074-4897-8dba-1bb93b54400a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b54a02e-cbd7-43d5-a89a-436f67e16290"
        },
        "item": {
          "id": "bb1692e1-3a73-4a7a-953e-526a9594884e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "84ef9c81-13ac-4a3c-8891-bc29c437727e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1383,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6753b-d975-4775-a82b-9880e051ca35",
        "cursor": {
          "ref": "976cab4d-6804-44d4-a9ba-de34ae3f1e9e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bbef7663-1096-478b-a786-1dfb982eed3e"
        },
        "item": {
          "id": "75e6753b-d975-4775-a82b-9880e051ca35",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cde0e1e3-9fa3-47eb-a0e7-7ed6c2d7e57c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcabb71a-e71a-46c5-93f6-26a26f325ef0",
        "cursor": {
          "ref": "3b13e686-8517-481f-a8ee-629e009db985",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c3d091ea-71b2-4b7f-8c90-ee7a2ebbac34"
        },
        "item": {
          "id": "dcabb71a-e71a-46c5-93f6-26a26f325ef0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "89bb8fd9-e904-4391-9104-43ea308ee81f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1311,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcabb71a-e71a-46c5-93f6-26a26f325ef0",
        "cursor": {
          "ref": "3b13e686-8517-481f-a8ee-629e009db985",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c3d091ea-71b2-4b7f-8c90-ee7a2ebbac34"
        },
        "item": {
          "id": "dcabb71a-e71a-46c5-93f6-26a26f325ef0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "89bb8fd9-e904-4391-9104-43ea308ee81f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1311,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290c5dbb-d030-4bae-814d-fc2220cdab2a",
        "cursor": {
          "ref": "d18b0d47-2e79-4d45-a782-6a6e1e6b90ad",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ac1acdd6-545e-4371-a8b7-24aadae74103"
        },
        "item": {
          "id": "290c5dbb-d030-4bae-814d-fc2220cdab2a",
          "name": "identifiers"
        },
        "response": {
          "id": "058e48a0-ebc8-4a6d-94ed-c60702df84eb",
          "status": "OK",
          "code": 200,
          "responseTime": 1026,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7499c871-6d80-446a-ab47-7299a48e387b",
        "cursor": {
          "ref": "8d39195d-fab5-4ad9-a628-cb6257e61bc7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88a4403e-1b71-40e9-8695-98284f3b440c"
        },
        "item": {
          "id": "7499c871-6d80-446a-ab47-7299a48e387b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aa893a02-572c-4024-85dc-276b6a890b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7499c871-6d80-446a-ab47-7299a48e387b",
        "cursor": {
          "ref": "8d39195d-fab5-4ad9-a628-cb6257e61bc7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88a4403e-1b71-40e9-8695-98284f3b440c"
        },
        "item": {
          "id": "7499c871-6d80-446a-ab47-7299a48e387b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aa893a02-572c-4024-85dc-276b6a890b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e73e3b-f909-438a-8331-adf6f0cf9e99",
        "cursor": {
          "ref": "9f6b9ec6-c45f-460d-9a8d-3a9b7fbd1547",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64be51bc-113c-41b4-b1f8-024d98085af0"
        },
        "item": {
          "id": "d0e73e3b-f909-438a-8331-adf6f0cf9e99",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5ca97d66-ebc7-455c-8081-29eb224e6677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7649b443-fcfe-4be6-b312-ef6530436da0",
        "cursor": {
          "ref": "b262a1be-ff10-4736-b95e-1fffecf7e2ef",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6910a057-e86f-4b89-ab8b-027159c2d34b"
        },
        "item": {
          "id": "7649b443-fcfe-4be6-b312-ef6530436da0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b1a0c165-5f28-4905-b728-e0413207182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216c07df-0ca1-490e-8c62-cbb3594865b7",
        "cursor": {
          "ref": "237892a7-099c-4caf-9bc7-eae6ac9dcded",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "38e7506f-6b6d-4c74-a62d-12def5d71399"
        },
        "item": {
          "id": "216c07df-0ca1-490e-8c62-cbb3594865b7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "98ced237-a355-4f77-aff6-1eb7da275121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2edcb9b-8c12-4a50-982c-812597dafd92",
        "cursor": {
          "ref": "6c7b8ab9-4bc2-4de0-ae61-9858a160d981",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5cdb4dc4-2795-42c4-812f-230f263f5c86"
        },
        "item": {
          "id": "a2edcb9b-8c12-4a50-982c-812597dafd92",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "50e0f48d-693e-4197-9e7f-566601ed8481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71de6bc0-5232-4361-899a-a78503824e6d",
        "cursor": {
          "ref": "29f69e1d-aeff-4710-a68f-1f8f0c57f180",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e4a1cb7b-be6d-49df-98c5-56294e49ac18"
        },
        "item": {
          "id": "71de6bc0-5232-4361-899a-a78503824e6d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51d89eb7-1235-4ed5-9f81-a42d3bd11adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc10fe5-e3c2-4e87-be5e-70cc5a354a34",
        "cursor": {
          "ref": "d68d9a1e-c16a-4c7c-bff3-57554b257bfc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0ad75fe1-2d46-45a2-8628-d79b939cf62e"
        },
        "item": {
          "id": "8cc10fe5-e3c2-4e87-be5e-70cc5a354a34",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4f962ff8-3794-42f5-8557-f77afc322185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dc5f77-fd97-4859-b129-612b19779d1c",
        "cursor": {
          "ref": "14725a8e-b69e-4ebb-a253-fa62cd0d7323",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f129836c-ed55-45ed-a6b3-e87c42ea5532"
        },
        "item": {
          "id": "07dc5f77-fd97-4859-b129-612b19779d1c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8b462e20-b086-496a-a764-6dd5ed66510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b20d067-7828-4261-b3a9-971ba1749857",
        "cursor": {
          "ref": "f475db33-6699-4aad-a248-e0f869e81e2b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bdbf7165-c2e1-47aa-aeea-d08a197994b3"
        },
        "item": {
          "id": "5b20d067-7828-4261-b3a9-971ba1749857",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1f968a29-af31-4c91-ae54-c608b10005e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec38853-1ec0-4cf5-b40a-8115dc90fd4c",
        "cursor": {
          "ref": "1f4cfebe-8a39-4c25-b695-f628fb25eb73",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2d72c5b3-7c6f-4829-a849-f59971434eaa"
        },
        "item": {
          "id": "5ec38853-1ec0-4cf5-b40a-8115dc90fd4c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e111a95e-a261-4a10-a3fc-12e087186967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0b1c39-1651-4e19-9629-2742ea5d4279",
        "cursor": {
          "ref": "646d9262-dd44-4e47-b0c9-4790b369d3aa",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef167b27-e378-440c-8c34-d689adeee729"
        },
        "item": {
          "id": "dc0b1c39-1651-4e19-9629-2742ea5d4279",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dcffe4aa-4ba9-4eed-90f6-66399a24d992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9ba058-5cc5-4b49-8537-b68d7951a85b",
        "cursor": {
          "ref": "eb75a3ad-f21e-4803-baea-6fbb46f467c1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3e1ab32b-00b0-487c-ba6d-3bb4ccdc0200"
        },
        "item": {
          "id": "da9ba058-5cc5-4b49-8537-b68d7951a85b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2d8ab47e-7e1e-4b46-946e-a0e07ff48273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42613b57-304e-4a4d-a767-bbd98622a4db",
        "cursor": {
          "ref": "2c0f3d5e-9b03-4ee5-9b84-a0d88c501b32",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a97b234d-f5df-4f41-8717-29b2624a4cab"
        },
        "item": {
          "id": "42613b57-304e-4a4d-a767-bbd98622a4db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "800ae94c-92ab-44c9-9ac6-a05b0659ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1e4970-2266-4c5f-bf95-c9f29b9d74f0",
        "cursor": {
          "ref": "35081dc5-9887-4e95-9d6a-1e7c7f0e0b87",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "51c87fb5-4781-4b74-9f94-6aa948741197"
        },
        "item": {
          "id": "2a1e4970-2266-4c5f-bf95-c9f29b9d74f0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04192e13-4f9c-40df-b3aa-7c281bb1e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b331a7-3787-4e55-a1fd-4ebe2a9fac45",
        "cursor": {
          "ref": "2a55684f-ffda-4c88-ae13-0878d99826ba",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "addd212c-7083-4c21-959e-4ca084870367"
        },
        "item": {
          "id": "63b331a7-3787-4e55-a1fd-4ebe2a9fac45",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7367ec92-4d59-4e60-bfc0-341da6ada2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dbc217-7ccc-4f5a-aeb4-472a0d7a8349",
        "cursor": {
          "ref": "1e2d089f-8952-404e-b785-2b147b4d2ad5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22fdb34b-cf57-4765-9d27-d988f02cfdef"
        },
        "item": {
          "id": "72dbc217-7ccc-4f5a-aeb4-472a0d7a8349",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1f17e55c-8ceb-43c2-9d01-4d6e52d46cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3147aa-cf1c-492d-8b26-e984430b05db",
        "cursor": {
          "ref": "93b46c06-2705-4bd6-b0d6-c1045b39ab79",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e82a621-600e-4fe6-821e-742af9d5922f"
        },
        "item": {
          "id": "db3147aa-cf1c-492d-8b26-e984430b05db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ad64cd76-43e9-4a1c-994b-e11f4f557109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c78d038-ddc2-4a2d-88e3-ad3efc9ab391",
        "cursor": {
          "ref": "98a4fb18-8854-4047-977b-82a522bf090f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a12493fe-3f0f-4054-adf4-84ec57c0fb53"
        },
        "item": {
          "id": "3c78d038-ddc2-4a2d-88e3-ad3efc9ab391",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a8b17946-8088-4156-acae-48f7fef44209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a241999-882a-45d6-af36-0b2e3ddcc3a8",
        "cursor": {
          "ref": "6893f5c3-939f-4d2c-8ba9-7ac19546c35c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7532cec8-8e5a-4428-9638-c660d7cc70cd"
        },
        "item": {
          "id": "2a241999-882a-45d6-af36-0b2e3ddcc3a8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f34abe6a-a5df-40a6-ae31-00f304f64425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46efe5e-c5ba-44ac-a010-8eb2df1b8276",
        "cursor": {
          "ref": "5cae3777-a92c-41c5-9070-062b33eef703",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "249da194-b952-49e7-978a-f69fa1cbeb15"
        },
        "item": {
          "id": "d46efe5e-c5ba-44ac-a010-8eb2df1b8276",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "024d1fea-30f5-4f42-bf97-92d6724c784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b82192-41ee-4129-83f3-743cdfe496a6",
        "cursor": {
          "ref": "073bed32-bdce-49d0-9c18-0c7b9072c890",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2f6bc634-3c9d-40f5-9933-0915b2132a3f"
        },
        "item": {
          "id": "18b82192-41ee-4129-83f3-743cdfe496a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "af110f19-c019-4e7e-8c6e-c2714eca9242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5e0c04-94d7-4a15-8a3f-e150b6ed8c7c",
        "cursor": {
          "ref": "faa5f0d6-63d8-4c45-adec-8101f6c9d399",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8e84528c-61da-4f18-bea9-931e3d2a9b8b"
        },
        "item": {
          "id": "bb5e0c04-94d7-4a15-8a3f-e150b6ed8c7c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91653319-6140-4e9d-966c-02bdf0c71da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4971b-0e4e-4cae-9d94-0bac28f82bd2",
        "cursor": {
          "ref": "66fa9fd0-2c21-4190-9571-663c6e9593ce",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3c337ca-2c4b-4ee2-83d7-17a663009e66"
        },
        "item": {
          "id": "9cd4971b-0e4e-4cae-9d94-0bac28f82bd2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dc1ad8f2-9390-49d6-a7ef-e68a6208c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7c6944-1231-451d-adb3-87369740b35b",
        "cursor": {
          "ref": "b7a769ca-fccc-4ceb-a6b0-869a52fc45fa",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6a73a5a2-cc88-4e9e-8867-260bdff87b95"
        },
        "item": {
          "id": "dd7c6944-1231-451d-adb3-87369740b35b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c69c383e-2a35-4dca-b06c-eaf125c8fbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41df1410-1bc5-46b3-9521-84752828747c",
        "cursor": {
          "ref": "7de0007a-e1df-4bf5-af92-eb8c8f2d0ba1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e3cb89eb-dd56-48fc-a9c7-ade9a1ceac57"
        },
        "item": {
          "id": "41df1410-1bc5-46b3-9521-84752828747c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "84292461-0ee0-493b-8f5b-0cf9b4bb276d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e49aa-855a-44f5-b518-6b7824eb17cf",
        "cursor": {
          "ref": "70d9815c-eae1-4153-b42a-a12aef66540f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3a9efcc4-686e-4477-a3ca-5a0a0c0b4494"
        },
        "item": {
          "id": "f84e49aa-855a-44f5-b518-6b7824eb17cf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d6c85669-74e2-4e26-b476-9c897d555fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3694a34a-29c1-4ce9-91d2-31ac812dc82e",
        "cursor": {
          "ref": "c5979d96-d9d6-486b-82dd-fc603e60826f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "65307093-5549-43d8-9a99-724b58083d8c"
        },
        "item": {
          "id": "3694a34a-29c1-4ce9-91d2-31ac812dc82e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "49360ec6-7f6f-431f-bfac-26acf7d39a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc73eb1-e6ff-4b39-96b4-ec7c6c9e0723",
        "cursor": {
          "ref": "0823db0d-8d4a-4433-9b69-f8ef17155225",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "75f7c6c1-9719-41d8-8679-f90a4cb04e98"
        },
        "item": {
          "id": "0cc73eb1-e6ff-4b39-96b4-ec7c6c9e0723",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8f77df3-d3c2-46b4-8f6b-cbaeba1af1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7916d-9498-4d36-a8ca-5cc672cb4253",
        "cursor": {
          "ref": "5c5fa71d-b44e-4da9-af24-9d41545942bc",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "819109da-d1e0-40a5-b211-6a4e552de1dc"
        },
        "item": {
          "id": "69e7916d-9498-4d36-a8ca-5cc672cb4253",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fbb8f93c-e3f0-4e61-8bb1-dedd69123b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e4e2bd-3aba-4d20-a23a-7b8229d53ff6",
        "cursor": {
          "ref": "be72f9d6-c4b9-4c3d-80b2-1c57eae88d8d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "087fa4fe-a035-41fa-a5ab-e66465cbb467"
        },
        "item": {
          "id": "c6e4e2bd-3aba-4d20-a23a-7b8229d53ff6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8ded0edd-e3f4-4706-9e09-aa68f31da9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c767a-d6b6-4423-8382-a0f4425bbbaf",
        "cursor": {
          "ref": "51eb0a0d-43f6-4d6c-9f8e-a763a4cecfc8",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f95acde4-ca3f-4527-a990-9627acc2f13a"
        },
        "item": {
          "id": "a71c767a-d6b6-4423-8382-a0f4425bbbaf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0d59d990-bd1b-4167-ab56-2764dee25e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8beb218-a72f-40c5-8730-12b85c211811",
        "cursor": {
          "ref": "58615fee-4eec-4443-9488-335b182d264c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6bf73fc4-01fc-42fe-aab0-93a47eb8dca6"
        },
        "item": {
          "id": "b8beb218-a72f-40c5-8730-12b85c211811",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "40876752-70a5-41d2-8345-54ec8c4f0044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01fffec-d5fe-4a46-b299-76e4e46e5696",
        "cursor": {
          "ref": "2886fab9-4694-4ac1-bfdd-65502e0608b2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c1b25749-673f-490d-9e3c-c60cf69436a1"
        },
        "item": {
          "id": "f01fffec-d5fe-4a46-b299-76e4e46e5696",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96dbac2e-972d-4609-b66b-9efdb849f56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714787fc-6bed-4290-91be-d412da509070",
        "cursor": {
          "ref": "51f2a8c9-56c4-4ddd-b12a-9265b1fd38ea",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b8fc98f5-c13c-4df6-bb32-8cacdcf7dce6"
        },
        "item": {
          "id": "714787fc-6bed-4290-91be-d412da509070",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "882be70a-b6bf-4b30-aac2-cd890768e189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539a92c-845c-4edc-89d8-2f4fe7506281",
        "cursor": {
          "ref": "1cfeb0cc-1979-487c-acc9-19d07ffbfe54",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ec6b4420-88ac-4238-b64a-ccaf1a52ca72"
        },
        "item": {
          "id": "5539a92c-845c-4edc-89d8-2f4fe7506281",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "49c42ffc-1b19-42b5-89cb-e2deb7699b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12903b7-0866-4325-83bb-99b18d88f37c",
        "cursor": {
          "ref": "f90497b0-ebf7-4240-9618-a3072cb85830",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7304394e-1af1-4a3c-b483-0ca42fe9ab72"
        },
        "item": {
          "id": "e12903b7-0866-4325-83bb-99b18d88f37c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6b788a2b-03b1-43b9-9ce2-591780e62a39",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 645,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e3d38f-d0b2-4406-8279-5ed580b034d3",
        "cursor": {
          "ref": "633f779e-46b1-4981-b9d7-8c43e0e2085b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0decee92-9c98-4ae3-ad96-0659953467c7"
        },
        "item": {
          "id": "f3e3d38f-d0b2-4406-8279-5ed580b034d3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5194b968-9d9c-42db-afc5-bbd53c6a8466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834f88f-7ceb-42b6-ad5e-03cf1e2130e6",
        "cursor": {
          "ref": "e19909a2-33d5-4228-9cd6-eeaddc48d976",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7e73d52f-42fb-433c-9bad-394dd9a9689b"
        },
        "item": {
          "id": "8834f88f-7ceb-42b6-ad5e-03cf1e2130e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b98a0c97-dd01-456a-ad81-d2656fd82b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af776001-472d-4e94-8cfb-83b34342f940",
        "cursor": {
          "ref": "3ea6f70a-039c-48f1-b7a0-72ed43c61382",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bbd6baa6-0711-4d70-8cd4-ca4f0e67b7f6"
        },
        "item": {
          "id": "af776001-472d-4e94-8cfb-83b34342f940",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "400cb1f6-6bcf-44ea-b7c8-29fabe9ab26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974c7bb3-ffd0-4cf1-9817-c5e796097496",
        "cursor": {
          "ref": "07434620-5cc1-462c-90be-3906323f3022",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "19ffd043-4eb6-45a7-84f7-b9a220dd1cce"
        },
        "item": {
          "id": "974c7bb3-ffd0-4cf1-9817-c5e796097496",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0fa20624-325f-409c-8228-077572431f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4912bd-0b14-4d32-9490-89014af095e9",
        "cursor": {
          "ref": "7efd6765-10af-475b-82a8-9614a751a31b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "77adaa68-a91c-44de-ae0b-4c4b74bc57d6"
        },
        "item": {
          "id": "ba4912bd-0b14-4d32-9490-89014af095e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d1040a5-0c5d-470d-a3e5-47d194514b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818180c6-6c37-43ea-bcd5-1f1798882398",
        "cursor": {
          "ref": "eb2ffd1e-fe1b-4180-a307-8aba09461d21",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fc9060ba-aa21-4560-bbbd-dedca7eda514"
        },
        "item": {
          "id": "818180c6-6c37-43ea-bcd5-1f1798882398",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ddc64dc4-e2f6-4fec-bcbf-da9b4234fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f5fe59-7225-4a08-be81-6986a8387f63",
        "cursor": {
          "ref": "7f376349-d70b-4fe8-a865-4594e7720e86",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c7fbcc8e-0460-4bfd-9b89-f90b549373b3"
        },
        "item": {
          "id": "a2f5fe59-7225-4a08-be81-6986a8387f63",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0e1c9de8-9f6a-4522-8a1e-ae983c83c00d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 679,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3204cad7-9a44-48e8-ad90-0c49a6513c25",
        "cursor": {
          "ref": "8826a450-5329-430d-beec-869fade011ec",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3a3e016d-bbb6-48e5-9f5c-820a6a0d12e2"
        },
        "item": {
          "id": "3204cad7-9a44-48e8-ad90-0c49a6513c25",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b799758-9851-4344-bf7b-cf091432fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206c4634-9bcd-4af8-b133-e4c6929f1701",
        "cursor": {
          "ref": "1f8ad898-9e1e-4e7b-8be0-10c8396fd36c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9a6419f8-ba34-426e-9e03-5dddf9cf96a4"
        },
        "item": {
          "id": "206c4634-9bcd-4af8-b133-e4c6929f1701",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "97f7c631-d8db-4395-b492-9c28598e6bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a2a79-c7e6-455d-8fd2-d56dca3795af",
        "cursor": {
          "ref": "20238daf-96a6-4c54-897b-05a0c37c9ade",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b13adfa-885b-447f-8433-0ca851b7c8e0"
        },
        "item": {
          "id": "f68a2a79-c7e6-455d-8fd2-d56dca3795af",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "87c9cdbb-8be0-4bed-b90e-6189532f0f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc212bc-a5e7-4de7-b0e1-486877cb3aef",
        "cursor": {
          "ref": "b66b0de8-8390-4be7-b984-89c9897f1d5f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a5778ed1-4404-41c3-a0af-2b823b937f42"
        },
        "item": {
          "id": "3bc212bc-a5e7-4de7-b0e1-486877cb3aef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "13720d96-452f-47fb-b36c-f021d92285a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30e2310-23b7-4c04-a130-2630bd229db8",
        "cursor": {
          "ref": "46631711-ff8d-4053-b855-be4cd0645a15",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "56d96920-9365-490d-8551-331be3f89dd7"
        },
        "item": {
          "id": "c30e2310-23b7-4c04-a130-2630bd229db8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a10ca146-8513-4a4c-a8a1-0559acdfe215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587a92a1-2f94-45c5-b48e-033fed70671a",
        "cursor": {
          "ref": "a66c2528-c463-45f3-8ae0-723c1f973c16",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "abe2f492-9361-4c65-aefe-32db724fbced"
        },
        "item": {
          "id": "587a92a1-2f94-45c5-b48e-033fed70671a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fd17dbf0-f8dc-4ae1-81d9-69d870105606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac9aebf-87e3-46ef-8d69-727a30b956dc",
        "cursor": {
          "ref": "02691989-ef4d-4e3a-bbaf-76caebaea89b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a53f921e-f317-4b47-89f3-87954717bd14"
        },
        "item": {
          "id": "0ac9aebf-87e3-46ef-8d69-727a30b956dc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4fb1ff4b-315e-40f3-8f0b-b5373c6798ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d31eaa-3642-46e9-92a2-4566813f0d69",
        "cursor": {
          "ref": "b05b99cc-fa18-4587-93d3-04d50ca7f960",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "05b4f77d-6a98-4ef0-aac3-e1685da23c42"
        },
        "item": {
          "id": "f8d31eaa-3642-46e9-92a2-4566813f0d69",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "540a0ff0-60b2-44a2-b739-c6e0c4452d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45670c8-10d5-4a5b-b1c0-e6e3976605c7",
        "cursor": {
          "ref": "069a6962-4e2f-40a3-a037-8cfaef6029bf",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "46e3fba3-e7e5-4e40-91d8-e5229a80f94e"
        },
        "item": {
          "id": "c45670c8-10d5-4a5b-b1c0-e6e3976605c7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d31be880-45b9-418a-873f-4615924828be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f53775-c2a4-4aa6-82b6-91d28889efeb",
        "cursor": {
          "ref": "1c800510-6eb3-42ab-a548-b6992199b980",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c03c2d6-8cfd-480a-be6f-568cef4dec97"
        },
        "item": {
          "id": "68f53775-c2a4-4aa6-82b6-91d28889efeb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "151cf133-77ff-4453-a4bf-0c656eb16ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e777c9d-9f44-4361-979d-96341306a728",
        "cursor": {
          "ref": "f5c82c56-e914-4528-9029-e17609f20116",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9452779c-7e28-495d-a5ee-a981409bebd6"
        },
        "item": {
          "id": "9e777c9d-9f44-4361-979d-96341306a728",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9f47fd28-a57d-4a6d-8f3b-982e5d27968c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f025c75c-cc00-4799-b9fc-c12011635e06",
        "cursor": {
          "ref": "d886fd4a-4916-4973-b37d-802e01ec8c4f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d25c0aa0-f151-48b4-973b-788c6f470b9a"
        },
        "item": {
          "id": "f025c75c-cc00-4799-b9fc-c12011635e06",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "783c0994-6bdf-499a-8754-1f94a9128f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5935a69-c009-46e5-bb7d-fbf02e7c4854",
        "cursor": {
          "ref": "60a37c74-add6-4b79-82bf-1f65219281ae",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aa1ac6e3-3b25-42c5-8768-575c80aa1272"
        },
        "item": {
          "id": "e5935a69-c009-46e5-bb7d-fbf02e7c4854",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e151f625-03bc-4828-b8a0-0cc01765a91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb208dd-c314-4669-8b25-72e053ccf339",
        "cursor": {
          "ref": "9c092544-7372-4693-9fb6-5448b10cacd6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "36a3ef65-368d-4aa9-8755-11973a72c0be"
        },
        "item": {
          "id": "6cb208dd-c314-4669-8b25-72e053ccf339",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9be67a60-ace8-43a8-a192-d860b76ed7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 922,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd1ee7-ab46-467f-9ccf-d4ed282537bf",
        "cursor": {
          "ref": "e79eee7d-e3c2-4e65-8f1b-b5b323f8d3d7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b7466868-eedb-4531-83c4-d9acc6d4c9a6"
        },
        "item": {
          "id": "d0bd1ee7-ab46-467f-9ccf-d4ed282537bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4cdefb8f-31da-47f2-9db6-75a146cf70d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ee4f26-a66a-46fc-944c-c28ce4344c27",
        "cursor": {
          "ref": "89b73a76-d4db-48e9-adf1-9f2efe96fbcd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3d746b60-4179-4e6c-850a-f614dec46614"
        },
        "item": {
          "id": "77ee4f26-a66a-46fc-944c-c28ce4344c27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "701dfbc0-27d4-45b1-9c95-50e1bd322740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab77dac-5219-434c-8dd0-068230c944c6",
        "cursor": {
          "ref": "63f421b8-2e6f-4e11-bc5c-6697a0d52cb4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be37e0cf-89aa-474b-bc52-c6159bedc004"
        },
        "item": {
          "id": "cab77dac-5219-434c-8dd0-068230c944c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d993b867-fbe6-462b-861a-43a3030246d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52622bc3-6a57-4298-a123-7339afdc47bf",
        "cursor": {
          "ref": "ce356ce9-b606-49f9-8168-ff25f96ae03c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "770c8aa6-98d6-48a5-b89b-e582ad0bed10"
        },
        "item": {
          "id": "52622bc3-6a57-4298-a123-7339afdc47bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9cbe7046-a8ad-4170-b949-cde94d70a594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672a3b9-a2bd-48fe-a750-7122c8ba24e5",
        "cursor": {
          "ref": "24f964a6-b6e6-467b-a775-f0f2aaa6c2b4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9f4f7c8-21dc-4131-a931-3c46baffafb2"
        },
        "item": {
          "id": "4672a3b9-a2bd-48fe-a750-7122c8ba24e5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "40172fd9-10ee-4ed9-b084-b6cea84e3d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40fcd87-0e59-45d9-8521-12c62071e88b",
        "cursor": {
          "ref": "d32e1c1e-90c5-49b0-a377-0165fc5b33a3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41001e54-8dc1-4f97-a721-e5964dc05a67"
        },
        "item": {
          "id": "d40fcd87-0e59-45d9-8521-12c62071e88b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6eaecc12-a664-4d72-b780-564cf118fa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec8ab0c-eee1-402d-9ec7-6a7b9879402f",
        "cursor": {
          "ref": "221029b0-81e1-4405-8630-7c822f39a447",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7b189403-a10c-4d7b-8115-65ffdaf95a97"
        },
        "item": {
          "id": "9ec8ab0c-eee1-402d-9ec7-6a7b9879402f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa26c6e8-1378-4213-9259-ff7366c1132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eacc288-a9e0-4af1-8b84-4a386f36b250",
        "cursor": {
          "ref": "b96108bc-9259-4e6f-87b7-b381dd5d1297",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "da188614-af90-4dca-9fb9-e0e5cc568c90"
        },
        "item": {
          "id": "6eacc288-a9e0-4af1-8b84-4a386f36b250",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "de6f5bf4-92dc-4102-b8b6-f513ddf305ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e8ece-906c-4b21-a99a-8adb2efd7efd",
        "cursor": {
          "ref": "2f2a026e-3a8f-4c8b-b066-4938de4732e1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9e548f0c-d73f-481d-bdc1-2230f375af60"
        },
        "item": {
          "id": "4e0e8ece-906c-4b21-a99a-8adb2efd7efd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "872001ec-6be9-4961-8b35-c302b02911c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339dbbbd-4e7a-41ae-a294-5ad97a3e4893",
        "cursor": {
          "ref": "42647a32-e941-4260-8ccc-151730f9b759",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b5429020-f3a6-436d-a6dc-1ffba95329e0"
        },
        "item": {
          "id": "339dbbbd-4e7a-41ae-a294-5ad97a3e4893",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "07eda6b4-52be-4b4b-b59c-eeca288ecef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3376706-0c4b-43ff-a474-846adb4e9196",
        "cursor": {
          "ref": "63d3d030-abbe-483f-a7ec-529c8e109f67",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b5f1c65-3f4a-4ab9-a1a2-39ca3f236106"
        },
        "item": {
          "id": "d3376706-0c4b-43ff-a474-846adb4e9196",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "328e7179-2f77-410a-a963-d40271f2399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1104,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a407f-d839-439e-a275-345fa8ac8d0e",
        "cursor": {
          "ref": "36756be9-9eda-484d-b0cc-fe9e0c38c235",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6edb8569-d36f-40b0-b657-afce4b15b628"
        },
        "item": {
          "id": "425a407f-d839-439e-a275-345fa8ac8d0e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "87572813-a9cb-4241-992d-5d2b4f349e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec427c3-e07a-4e06-8cf6-508ce1bdba3b",
        "cursor": {
          "ref": "9051c4e9-5fd2-441b-a65a-4f6bd78ced43",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c9c82e4-acb9-4e91-af87-3637ca102f72"
        },
        "item": {
          "id": "0ec427c3-e07a-4e06-8cf6-508ce1bdba3b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1da15da2-641b-4e50-9ec7-5a454bdbfd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4771ea73-d93b-4e9c-a619-126f4cd4a93a",
        "cursor": {
          "ref": "e06942b5-049b-45b5-8280-5cf3b6f81b55",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c72506f3-2d9f-4b6e-9d94-50fa90979930"
        },
        "item": {
          "id": "4771ea73-d93b-4e9c-a619-126f4cd4a93a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ddc2c40-5999-4b5f-8530-22284c6698b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fe69b3-c493-4280-b255-eacabe72a592",
        "cursor": {
          "ref": "9787d012-54a1-4fb4-8fe6-998da2bc0b19",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c3e1b3fa-3889-48f7-bc70-a4fb2fd55ad2"
        },
        "item": {
          "id": "35fe69b3-c493-4280-b255-eacabe72a592",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1cac86d1-a911-4de3-820b-a61f67eb454c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d205e622-4190-430f-bb75-672de2e16803",
        "cursor": {
          "ref": "becece54-3e89-4579-b83f-adfad2b2f42f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3453d54-84e3-4a39-aa5d-bee06110a4f3"
        },
        "item": {
          "id": "d205e622-4190-430f-bb75-672de2e16803",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "66305ca6-1b04-49f4-b31b-43bd3230c7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10608f4b-b68c-452e-9727-9faad8affe85",
        "cursor": {
          "ref": "d9665162-d226-48ea-ae0c-c865cc9527ab",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cc04e177-81ee-49ab-8914-198368466578"
        },
        "item": {
          "id": "10608f4b-b68c-452e-9727-9faad8affe85",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fdec20ed-2ccf-45e7-9836-7fa4a2c35c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec19895-2789-46af-b157-70c0f40df518",
        "cursor": {
          "ref": "809e94b7-c159-4f0c-a10a-b728bf7b90ab",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "07e9e679-cb6e-4531-80a5-1646899c2636"
        },
        "item": {
          "id": "1ec19895-2789-46af-b157-70c0f40df518",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0d257be-47f5-4113-b619-f558cb85e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c30fde1-ba86-4394-b9a5-9364d56319b9",
        "cursor": {
          "ref": "e743d342-388c-4301-8cd9-ee0f73c52a35",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "59a3903e-6e19-40c6-8866-82e057eff382"
        },
        "item": {
          "id": "2c30fde1-ba86-4394-b9a5-9364d56319b9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f22679f9-81bd-4f31-9709-6f2f690717e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd86162-5879-4f70-a784-80bcd22448c4",
        "cursor": {
          "ref": "2e4f78e7-bde0-4327-a695-0bf9ffb16d13",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4fd55c1a-a866-49f6-addf-250a001bb34b"
        },
        "item": {
          "id": "afd86162-5879-4f70-a784-80bcd22448c4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "46faf461-859a-4cb8-be1b-980865865772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54326e38-aa1e-4bbb-a3d2-34b4b75a16ee",
        "cursor": {
          "ref": "d069dd1a-f306-4990-aad7-804d142d4897",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "555ee6ad-6af0-4d9e-a5be-2b80a6197c3c"
        },
        "item": {
          "id": "54326e38-aa1e-4bbb-a3d2-34b4b75a16ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d418696-f596-4430-bec3-8cf050e29831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eed471-6c65-4cab-ab76-25abd0f8c720",
        "cursor": {
          "ref": "366aff1c-1545-4723-8442-b6f861006822",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "db717bc8-d242-4309-b1d8-f3aac22fcbe8"
        },
        "item": {
          "id": "49eed471-6c65-4cab-ab76-25abd0f8c720",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "36b8d1c6-b55f-4f3e-9217-73222a23669e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba6a468-dcc2-44c2-8179-5d32dddbdcf1",
        "cursor": {
          "ref": "43d64a2b-a8ee-4cd5-9564-1b14ddb66f62",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb05143f-2b78-4883-a46b-3cd894bebd5e"
        },
        "item": {
          "id": "aba6a468-dcc2-44c2-8179-5d32dddbdcf1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a829eb35-1901-4c6f-aab7-7cdb07ee3c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192669e-183c-40b7-b354-0fc5b0ff02c5",
        "cursor": {
          "ref": "c288e390-dfc1-4b47-a6f6-9462525c14cb",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c3adff25-2b0f-46af-9035-22f837ed76b8"
        },
        "item": {
          "id": "6192669e-183c-40b7-b354-0fc5b0ff02c5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "16745523-bc37-452f-a47c-23e475872424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7966e9c3-c51e-4e5c-8685-e1397242f966",
        "cursor": {
          "ref": "9d1b0478-d85e-4066-a329-c447e75a18ea",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "84bb5aa7-ca23-44d8-ba64-0b0b599091d6"
        },
        "item": {
          "id": "7966e9c3-c51e-4e5c-8685-e1397242f966",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f00bb8ef-d8b7-4eeb-a484-680ee49da3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d465e720-1898-42ee-8c38-17ffc39d5500",
        "cursor": {
          "ref": "ae9ae075-8d72-4fc4-8aa0-1b5f77b5bd13",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e02f02f1-0ae7-4943-9458-826a050530bc"
        },
        "item": {
          "id": "d465e720-1898-42ee-8c38-17ffc39d5500",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8ec5225b-5a79-4ff6-9ce9-35b3c26b2e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9a5040-85a4-46e4-b70c-324c46be4ea0",
        "cursor": {
          "ref": "c0b49623-e22f-42a3-9c02-9104c465be5b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6a441a0a-281c-465f-8a88-d587ec9b9873"
        },
        "item": {
          "id": "bc9a5040-85a4-46e4-b70c-324c46be4ea0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4b9fe62b-fcc4-4b44-8026-9c741d33df36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeed771-7815-4a0c-994f-a6017fc184bd",
        "cursor": {
          "ref": "7710f8ad-66a2-4bab-bf05-ea118d9a4c2e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "985fdc40-bd5d-437a-ab7d-91f79793ca1d"
        },
        "item": {
          "id": "8aeed771-7815-4a0c-994f-a6017fc184bd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b86aaaf-20fe-4cd8-a269-86d74e763e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23664c6-f612-4ffe-83ab-ce207e4f4a07",
        "cursor": {
          "ref": "ea45980e-422b-4e50-b89e-58af6428857f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6254dc85-a50a-42ac-8a48-640d1ce38014"
        },
        "item": {
          "id": "e23664c6-f612-4ffe-83ab-ce207e4f4a07",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "921d4e83-12eb-4381-8b1c-68a242e5d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb63ba6-1b58-45da-ac95-cfc9d8ac60bf",
        "cursor": {
          "ref": "91ab02f2-e542-4a2e-b64a-baa92bad7f60",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "585f0862-11e9-4f3b-b741-845f74e24021"
        },
        "item": {
          "id": "3cb63ba6-1b58-45da-ac95-cfc9d8ac60bf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c61fd709-2eaa-4a34-9128-93073af8acb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f9031a-b73f-4634-aa42-42bc822e5985",
        "cursor": {
          "ref": "d03290b1-b33f-4209-a9c7-b37dcf4c593e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2586c1cb-781d-4a70-aab5-526411e99f08"
        },
        "item": {
          "id": "14f9031a-b73f-4634-aa42-42bc822e5985",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aeff6551-4692-4206-a3ca-cb2cfd2e0616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f90115-8bff-462a-8d0a-8a10c34c74c2",
        "cursor": {
          "ref": "3f36ab97-c6ae-4a9b-91f6-d86ef5f215f6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a35b5caa-cf90-40cf-a339-cf6ede898747"
        },
        "item": {
          "id": "e5f90115-8bff-462a-8d0a-8a10c34c74c2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "142c36fd-965b-4f4b-aaed-74d35891766f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb0b7b6-b25d-47f1-9e8e-dc3a3e077587",
        "cursor": {
          "ref": "a87b7715-de0f-4e6e-8dfc-0a7857e031f7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0f9574eb-da4f-4a4d-a133-9f4265051248"
        },
        "item": {
          "id": "ccb0b7b6-b25d-47f1-9e8e-dc3a3e077587",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6a2823bf-aebb-41d2-ae9b-009850bf3180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3877440d-e914-4403-8066-4d2434dc353d",
        "cursor": {
          "ref": "f7d05544-8188-44ea-a3f4-e97badcc21a8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "40031e77-93ab-45b4-951a-977cbc1ef0be"
        },
        "item": {
          "id": "3877440d-e914-4403-8066-4d2434dc353d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb76aae7-1f45-478e-a976-98358cc547db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044543c6-e92f-4a4a-a696-87e5be3275d4",
        "cursor": {
          "ref": "87dacc6d-2d81-401d-8936-49e3963b2daa",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7702f309-87bf-40e8-b202-80056b7929bf"
        },
        "item": {
          "id": "044543c6-e92f-4a4a-a696-87e5be3275d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9ed7feac-f793-4b94-a9a9-1db425af684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98245e9a-52bf-4ccd-ba8d-88d55fde756a",
        "cursor": {
          "ref": "218d2c02-5018-4bc0-8b83-626dc69251bc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2038b8cb-a55e-444e-9ff1-39ef71db50b7"
        },
        "item": {
          "id": "98245e9a-52bf-4ccd-ba8d-88d55fde756a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2b4a0a7a-11da-4b2a-a142-07d0c9286e7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173cc33-42f0-4951-8005-6478fc5701b8",
        "cursor": {
          "ref": "42e96a0d-c42e-4fed-a0de-d589cebe3d66",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b32e0b56-178e-40a8-9bdb-cfce1d2d21bd"
        },
        "item": {
          "id": "d173cc33-42f0-4951-8005-6478fc5701b8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3be3f69d-942f-4d10-8070-4ae27810c1df",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 599,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e890bb-2b89-4b7c-bc57-310a61d02294",
        "cursor": {
          "ref": "e714b590-06fb-4198-a6c5-0e81b1caca75",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6493f46c-8d2f-439e-a8de-75f67252e690"
        },
        "item": {
          "id": "a9e890bb-2b89-4b7c-bc57-310a61d02294",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c121d241-8650-40f6-b39f-6d222f7fc21f",
          "status": "Created",
          "code": 201,
          "responseTime": 6646,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ab7da9-9021-4d18-8320-a44994498d94",
        "cursor": {
          "ref": "0db89a17-2c66-4dc4-9074-e567d7bb8a50",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8906a1d7-3fe4-41ef-8fa0-ad5942ecde7f"
        },
        "item": {
          "id": "e7ab7da9-9021-4d18-8320-a44994498d94",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dc7627a1-c04a-4271-b909-b91d83af5523",
          "status": "Created",
          "code": 201,
          "responseTime": 5955,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae88de2-bf94-471a-a4b7-93464a6ced76",
        "cursor": {
          "ref": "9ea7dec4-ef1d-4f91-9270-af5e6644d4e2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dbde4591-a2f5-4aea-be70-80a811d584d3"
        },
        "item": {
          "id": "eae88de2-bf94-471a-a4b7-93464a6ced76",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4adfec45-0dd5-4972-8b51-1f5991e148c9",
          "status": "Created",
          "code": 201,
          "responseTime": 4900,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f227990c-ce01-4837-84f9-fd041720fe4e",
        "cursor": {
          "ref": "739105ff-9e0b-4325-88e9-09ef901b17fe",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f48d831e-8b05-47b5-b419-2bea6e57491c"
        },
        "item": {
          "id": "f227990c-ce01-4837-84f9-fd041720fe4e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "514563cd-3253-4db7-8987-509873125a60",
          "status": "Created",
          "code": 201,
          "responseTime": 4190,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea96506-1f73-4443-b851-cce59586b621",
        "cursor": {
          "ref": "d38e1516-8edd-41fa-9149-a802ece1f9aa",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6884da2a-19b0-499f-affc-aa6737f83ca4"
        },
        "item": {
          "id": "3ea96506-1f73-4443-b851-cce59586b621",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "15e88a5e-6cc4-4f41-a40d-0ba3e4fa89e6",
          "status": "Created",
          "code": 201,
          "responseTime": 5231,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d4593f-a904-4579-aa2d-947cd675349d",
        "cursor": {
          "ref": "5bdd6b9f-d737-4883-93ff-7d280d41e51f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04631d75-11e8-4277-9f94-00b6f49b6f50"
        },
        "item": {
          "id": "c9d4593f-a904-4579-aa2d-947cd675349d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "645aa10b-4216-4dac-8857-217b794effe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d4593f-a904-4579-aa2d-947cd675349d",
        "cursor": {
          "ref": "5bdd6b9f-d737-4883-93ff-7d280d41e51f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04631d75-11e8-4277-9f94-00b6f49b6f50"
        },
        "item": {
          "id": "c9d4593f-a904-4579-aa2d-947cd675349d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "645aa10b-4216-4dac-8857-217b794effe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159fe6e-08c7-459d-a957-8fd76b90d627",
        "cursor": {
          "ref": "2f8343c3-174a-4dd4-89eb-3dfe5bc1347c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3783f075-1565-4144-9d51-75ebecc31b74"
        },
        "item": {
          "id": "a159fe6e-08c7-459d-a957-8fd76b90d627",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83ee58d7-6884-4919-b801-e9a8ede19510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7e90de-1251-477a-aadb-a02f7dcf61dd",
        "cursor": {
          "ref": "b19d03e1-24cf-4152-bd8c-ccf5996a1472",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c74a813-d2aa-4d56-9b5f-b735e685381b"
        },
        "item": {
          "id": "be7e90de-1251-477a-aadb-a02f7dcf61dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d874ba3a-d7ae-42fa-a74c-faac352ba4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20739763-101d-4620-a2ac-b0f06d21545b",
        "cursor": {
          "ref": "86746002-51f3-4b73-a260-4b3d059747a6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "65c2456e-7ede-4fa3-bd85-ccbe18f6a7c0"
        },
        "item": {
          "id": "20739763-101d-4620-a2ac-b0f06d21545b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa50f158-b0a5-49ca-974a-fe553f3195cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c4e944-fddc-4aea-b0bb-4b4eb8927a47",
        "cursor": {
          "ref": "8d8926b0-4554-4930-a1fa-083fd672afac",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ba9ab94-643a-422c-8104-0bb94b7fe445"
        },
        "item": {
          "id": "01c4e944-fddc-4aea-b0bb-4b4eb8927a47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "154e4227-a9eb-4e58-b648-fd6eb3d4d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9482319f-fe29-4d36-be2b-3cb6076889e3",
        "cursor": {
          "ref": "367f5c84-3fed-4d85-a273-1e08b273dc6a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a5de085-f970-48e0-891c-add17fed2efb"
        },
        "item": {
          "id": "9482319f-fe29-4d36-be2b-3cb6076889e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0454f3e-16bd-47ac-81e0-90db9afbf0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2cfe0e-1df5-4e49-97b6-d8166652c0d4",
        "cursor": {
          "ref": "97e0711e-8540-4356-b0eb-f21d8145efb5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68239dc3-dd0e-49a0-a2ef-23a2c537b3bd"
        },
        "item": {
          "id": "9b2cfe0e-1df5-4e49-97b6-d8166652c0d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e2a7a20-49cc-4ec4-b89c-5061020b4865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f89ae3-3d0b-4f7a-a41a-d61654853124",
        "cursor": {
          "ref": "7d81fcfe-bcf0-457b-85f0-edfc3a51d76e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "78848990-23c4-4bf8-8642-e4c050fe28b1"
        },
        "item": {
          "id": "84f89ae3-3d0b-4f7a-a41a-d61654853124",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fc216c8-0e62-4ad1-abbb-9607b2f8850c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f172084-a51d-4c32-8bfc-107864ee065f",
        "cursor": {
          "ref": "d21bc31b-4587-4308-8d94-7e9eccea9177",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "34234dad-84d6-4951-a99b-e02f76f62f58"
        },
        "item": {
          "id": "1f172084-a51d-4c32-8bfc-107864ee065f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c137692c-3bd5-4594-8f7f-5905d4ac4250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad44d621-29ea-43fb-b903-7d1da8515548",
        "cursor": {
          "ref": "c3449253-fe0a-4566-bb06-245a586cdf95",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "893d33ee-9497-4efa-b8a5-52362f7118ab"
        },
        "item": {
          "id": "ad44d621-29ea-43fb-b903-7d1da8515548",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d9be11a-cd5b-43e0-8dad-3406dd7884a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab5c655-7c73-4e2d-81c2-98a5b9275125",
        "cursor": {
          "ref": "9dcf7d30-19ab-4e75-b0f2-6712117d2b7a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eedef177-cdbc-4fcc-bc27-b19638702090"
        },
        "item": {
          "id": "5ab5c655-7c73-4e2d-81c2-98a5b9275125",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "06f1dac7-1390-436b-86f8-14170418afc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba6d8b2-a208-4641-a99e-8f8b6c4d37dd",
        "cursor": {
          "ref": "61b3529d-7c4a-4513-b1ca-e8b26061ee89",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c18d02c3-9e66-4b99-867c-2e83444d48c9"
        },
        "item": {
          "id": "3ba6d8b2-a208-4641-a99e-8f8b6c4d37dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4ace0a1-a56b-403a-92b3-3326d6606bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715779df-84eb-4d9b-bef0-a34ea988aedb",
        "cursor": {
          "ref": "eb11c114-0009-403f-9a2b-b7768273728a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cec6dd7a-f98a-4365-986c-1c0c985c1570"
        },
        "item": {
          "id": "715779df-84eb-4d9b-bef0-a34ea988aedb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "17f2fb17-11d2-4e46-b8fe-e01c7180893c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f12ea6-2966-4ba7-a9cf-6b1ab03a91e6",
        "cursor": {
          "ref": "e8a5544f-425f-4158-b209-0d6e687ef5db",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "33426be5-b65a-442c-b36f-84c5f4f85ef3"
        },
        "item": {
          "id": "00f12ea6-2966-4ba7-a9cf-6b1ab03a91e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a93d7b8-f80a-438b-921a-080a3c344a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c147df-482b-46b2-ad7f-c51c64d4b4a9",
        "cursor": {
          "ref": "9f28c8dd-5696-4236-8b83-e109df47c809",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "eb5bc0fd-9fc5-44f3-a971-394114aac8ae"
        },
        "item": {
          "id": "58c147df-482b-46b2-ad7f-c51c64d4b4a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "139bfbe0-690b-4b67-b45c-ce97032759a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc5f8ce-561d-477f-a022-da72388fce47",
        "cursor": {
          "ref": "210e8b80-8b1d-48dc-a08d-7fb3344f63b8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e44d3ae8-7aa8-4a45-979f-d1e7d6a68992"
        },
        "item": {
          "id": "1dc5f8ce-561d-477f-a022-da72388fce47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c89aab1-f778-4c2b-92e8-ace8fbcb5708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c3e722-b46e-4436-8e69-8a3904d9d0b8",
        "cursor": {
          "ref": "8d5d2072-ef5c-4b48-8bfa-4fc8b0cb14a6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5b351d2a-532b-4252-9113-f0354dc12372"
        },
        "item": {
          "id": "14c3e722-b46e-4436-8e69-8a3904d9d0b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0251ddcf-7561-4206-8865-0fd34c02e17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66af3c-cd44-4114-83cb-2bcf4c51c4c2",
        "cursor": {
          "ref": "565e9160-4223-45f3-9810-e21dae6764c0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a24dcbf-53d1-48d4-a7e3-c785d1f32025"
        },
        "item": {
          "id": "be66af3c-cd44-4114-83cb-2bcf4c51c4c2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fa5f440e-d424-4f8f-87d4-ec19ecf1af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabfd055-d3bc-4267-8099-cf24010ae693",
        "cursor": {
          "ref": "bec9984d-03f7-4c0c-8e2e-50af59a50bab",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a23ba56e-dd97-4702-9a13-eeb7aad46a1b"
        },
        "item": {
          "id": "eabfd055-d3bc-4267-8099-cf24010ae693",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d256ef76-ef47-4dfc-ac24-86255b148094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ddd22e-ae6a-4f80-8463-4bdeda229d8b",
        "cursor": {
          "ref": "fc39f72a-d221-46ab-b94e-eaa6dad385b0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e950dfaf-1161-48ed-be41-3309a7c3fa50"
        },
        "item": {
          "id": "c7ddd22e-ae6a-4f80-8463-4bdeda229d8b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f295752-1f91-41de-9409-36313de2184b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cee622-3516-4b08-91df-5e709b84db1e",
        "cursor": {
          "ref": "8744ccea-086f-42ac-b743-f5e1ccd998a7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "48f12e55-3d52-49e7-bc26-a63dde0bcec4"
        },
        "item": {
          "id": "86cee622-3516-4b08-91df-5e709b84db1e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0db4003f-f0a9-4d04-abf7-9c4506ac9ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f9b5c9-1146-4e43-a04d-ea3bdfb62ada",
        "cursor": {
          "ref": "8330f08d-7643-451b-9023-93c1b5071920",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e61b845-f0ee-4282-898e-02fe7f326e05"
        },
        "item": {
          "id": "a5f9b5c9-1146-4e43-a04d-ea3bdfb62ada",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "167cbf4a-3bc7-4dd2-9a6d-890e9141dfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25558bbc-899e-4d0c-b299-71891dd2ae78",
        "cursor": {
          "ref": "82a609a0-a5b0-4573-9c71-ebbbfe2c8ffd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "82a47c73-3369-4ce9-a335-31280bd50021"
        },
        "item": {
          "id": "25558bbc-899e-4d0c-b299-71891dd2ae78",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "11ef814e-a965-418d-801c-3f4972af6b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea60975-c906-4860-8f5a-675a7af73ac6",
        "cursor": {
          "ref": "f5dd7009-6776-4251-8ee4-dca43f8e82e2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "455d0cfd-9d16-40e1-a33e-c473750562c4"
        },
        "item": {
          "id": "aea60975-c906-4860-8f5a-675a7af73ac6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "28eb6b8f-0a97-4471-ad19-a7ae30356a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811b42c-b6e0-42b0-9a3d-788c606846a4",
        "cursor": {
          "ref": "83c7065a-2b19-452b-a4fb-cde0f6fae26c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5af91a28-8c1e-4abe-a2f9-262e4fcaf5c1"
        },
        "item": {
          "id": "9811b42c-b6e0-42b0-9a3d-788c606846a4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4aea3b8d-d6f3-48c6-821c-58f6d59e964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386bc0f9-11bf-46a4-9bc8-98a66ef37b81",
        "cursor": {
          "ref": "d6e94b51-b16a-441d-b7f4-cfe66cf04b71",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "06521011-b93e-454e-b8fe-7b0c4f7ef8b2"
        },
        "item": {
          "id": "386bc0f9-11bf-46a4-9bc8-98a66ef37b81",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7542cb55-7b07-4a5b-af66-3a4d993ecc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31324d34-28f3-426d-9d19-0b0032eb44f3",
        "cursor": {
          "ref": "4fb5a039-e1ce-46d4-b974-37aadeda9ba8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e0ac7067-f01c-4df8-a502-79ac494353f5"
        },
        "item": {
          "id": "31324d34-28f3-426d-9d19-0b0032eb44f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e12ead6d-cc75-4cda-83f5-489456739f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca19745-53f4-4cdd-860f-4312448873c6",
        "cursor": {
          "ref": "460c28c5-5b77-4c15-87db-fe49e1ab22b3",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f743e05f-3316-427d-b20c-1eb396a5afc8"
        },
        "item": {
          "id": "4ca19745-53f4-4cdd-860f-4312448873c6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b467936c-912f-4e20-9aef-33e547963c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79bfe61-f8d3-491b-b32d-afa15405e672",
        "cursor": {
          "ref": "54794578-9e01-42c0-be65-90bb495ec456",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8cbcdfa6-8cab-4e3d-a866-6128382375e0"
        },
        "item": {
          "id": "f79bfe61-f8d3-491b-b32d-afa15405e672",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ebe8c19a-58e6-4ca6-b19a-e7791d2f8b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0ba68f-2ba7-4262-a8de-b18df18caab5",
        "cursor": {
          "ref": "e6e58442-2020-4971-8fd7-d71e68d3d577",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b8607604-e2e3-4c2f-9ecb-13ffd85c2e08"
        },
        "item": {
          "id": "ea0ba68f-2ba7-4262-a8de-b18df18caab5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c7a3551-345d-4b11-982c-0b936427405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfd0cfa-5e42-4117-80c6-8f4a12ef4405",
        "cursor": {
          "ref": "550b3155-d513-4b12-94f9-b19f3c9786e5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "029262e4-2f89-4c05-9775-47b8ab03cb4a"
        },
        "item": {
          "id": "dcfd0cfa-5e42-4117-80c6-8f4a12ef4405",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "55fae72f-61f4-45bf-85b3-5116c64c2e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec41ac-4f5e-4015-95b6-52e2a022716d",
        "cursor": {
          "ref": "419e6bc7-f31b-4514-a057-02ffb1ccf1ab",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "649f7454-46b9-480d-aac0-c265ca662ec7"
        },
        "item": {
          "id": "47ec41ac-4f5e-4015-95b6-52e2a022716d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "85f63a90-9e36-4c87-9529-e5f057e22582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa2c2ea-0d80-46d0-9d78-0a57b7118fc9",
        "cursor": {
          "ref": "1bd9c245-a5c2-49a1-bf40-f7dc7daec926",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e5a370d1-8b05-4ba8-8d1e-bae446b8e4d8"
        },
        "item": {
          "id": "2fa2c2ea-0d80-46d0-9d78-0a57b7118fc9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fead2516-0717-4654-ad98-d6d02cd69001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16152375-583b-40f2-940c-3375862da530",
        "cursor": {
          "ref": "7a3a3280-95e8-40a2-af32-278b2e7cec84",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2dbfb085-5f96-44d8-a7eb-46eec3e0f1ad"
        },
        "item": {
          "id": "16152375-583b-40f2-940c-3375862da530",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c1a46e99-61fb-4529-a32e-2638d142e393",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 581,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a85338-72fc-440e-bb37-3a5bc1d85e04",
        "cursor": {
          "ref": "75733565-6d08-4a0f-9a1e-60f2a11e921b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d821b42-4fcb-4127-bf40-2a9f275eb45c"
        },
        "item": {
          "id": "80a85338-72fc-440e-bb37-3a5bc1d85e04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d47e2ee-160e-4639-b132-2020f746981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a85338-72fc-440e-bb37-3a5bc1d85e04",
        "cursor": {
          "ref": "75733565-6d08-4a0f-9a1e-60f2a11e921b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d821b42-4fcb-4127-bf40-2a9f275eb45c"
        },
        "item": {
          "id": "80a85338-72fc-440e-bb37-3a5bc1d85e04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d47e2ee-160e-4639-b132-2020f746981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ee41e-4864-431b-b7c2-8140cddc9452",
        "cursor": {
          "ref": "18ead2f7-dfa9-4e2e-874a-122b9366c355",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "63eb9f77-618e-4dcc-b122-aad2ee8ca90a"
        },
        "item": {
          "id": "7c0ee41e-4864-431b-b7c2-8140cddc9452",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a8fb4b2f-e55f-48d9-9c00-338bc342e744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760b74a7-c62a-40b4-b497-c0f5b0aacae3",
        "cursor": {
          "ref": "8771d1c0-d613-479d-858c-4dbf62ebc78e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7ddeb45a-fe7f-4c05-bf08-569f3d29e3f1"
        },
        "item": {
          "id": "760b74a7-c62a-40b4-b497-c0f5b0aacae3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "73cf9db4-a594-49df-8c9d-f9dd317859fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46f607c-9dd0-47fa-bdb9-497fa6e135f4",
        "cursor": {
          "ref": "2f83b4bc-dd31-4204-84d1-25d017e01fbc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4a444e5a-c6cd-4f00-b09d-a09ed74f0b35"
        },
        "item": {
          "id": "a46f607c-9dd0-47fa-bdb9-497fa6e135f4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "79b82a18-22b2-44bf-94f8-cef257b2046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14429b13-80ec-46ca-b7d7-9b3f2803ef49",
        "cursor": {
          "ref": "eb8338b4-d1c0-4d52-960f-7bd864f10f5c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a67ac478-34eb-4573-b2d3-295d20074bd4"
        },
        "item": {
          "id": "14429b13-80ec-46ca-b7d7-9b3f2803ef49",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7844c117-698b-48d1-a3f1-b1cd20e74905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1417168a-26ea-4b23-b470-6c953de039cc",
        "cursor": {
          "ref": "1a5489cc-1c1a-4239-ae9e-007d69304e0a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e6d3a6e0-a78e-4d1a-ac51-c46681f8a3e4"
        },
        "item": {
          "id": "1417168a-26ea-4b23-b470-6c953de039cc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "484d8e19-a72e-45a5-971b-49f7a671d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b41ff-e5bc-43fe-acac-838196855955",
        "cursor": {
          "ref": "10c52a05-9d2c-49a4-8cba-c1f09b3395cc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1efd4e93-a562-4dcf-929e-dd8bb20d527e"
        },
        "item": {
          "id": "6d1b41ff-e5bc-43fe-acac-838196855955",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "176d326f-9ec4-40ff-81c7-f9eb996e96bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad911db-5857-4c3e-866e-01da21ab27b4",
        "cursor": {
          "ref": "78e2e242-f63e-4952-8838-b7e709be8bb0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b6535258-9765-4858-866c-f85b834747df"
        },
        "item": {
          "id": "5ad911db-5857-4c3e-866e-01da21ab27b4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e001d33d-d19d-41ea-b065-55ec977807aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26106d52-811a-4806-97d3-df573e3d8ae6",
        "cursor": {
          "ref": "eeabdde5-2c53-4506-ae5e-480c7f1f18ce",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e70cbdf4-a99d-4242-b6fd-a4d561d4ae4d"
        },
        "item": {
          "id": "26106d52-811a-4806-97d3-df573e3d8ae6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "490b3733-16ca-40c3-985a-3c0238fb9718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f546c58-ccea-4606-8af7-d192e0e085af",
        "cursor": {
          "ref": "e70e7fd1-d6b8-4cf8-a04a-1ff4575a79e9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7589d258-08c4-4dae-aab0-e8d880b9ea3f"
        },
        "item": {
          "id": "8f546c58-ccea-4606-8af7-d192e0e085af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e73b8cdb-c533-4545-aef2-2520d00fbd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7489e9f-339c-47f3-a92b-e3ac90ff608b",
        "cursor": {
          "ref": "48c16baf-c5f7-4c25-91ec-e8b8b0ef6284",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6e080087-6197-411a-bef6-8e017d75fb67"
        },
        "item": {
          "id": "e7489e9f-339c-47f3-a92b-e3ac90ff608b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0d5d69ce-f486-4a7d-92c2-817d9b59d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7752cba2-c854-4ae9-b0e9-41393f6934a9",
        "cursor": {
          "ref": "d1d0a86c-9267-4f04-b1c4-bbc49ae1cb1c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9e0498be-e091-4434-8085-bc80cd116233"
        },
        "item": {
          "id": "7752cba2-c854-4ae9-b0e9-41393f6934a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2fe26c8a-84eb-4cea-a480-14c2fd93fa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a51d64-d98e-4003-b034-346374443e60",
        "cursor": {
          "ref": "09a03b1e-5b8e-49a9-b0dc-c4ef8d19d343",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4047aa6e-b1d4-4543-a053-dfc759e5f885"
        },
        "item": {
          "id": "10a51d64-d98e-4003-b034-346374443e60",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c0902577-c539-4406-8a71-d607ca82f00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402b052a-3598-48e1-9155-ae2f04bfa32d",
        "cursor": {
          "ref": "8ed09927-26b4-40e8-8fc2-3385602fe881",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "70e41b7b-9ab3-4ba8-94f0-4b0cbae5e7b7"
        },
        "item": {
          "id": "402b052a-3598-48e1-9155-ae2f04bfa32d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf298848-8b32-48ff-86dd-deda5df4eb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b60e522-2da4-4aa4-8c26-90cfc5a3700f",
        "cursor": {
          "ref": "9964e7fc-833d-4bc3-8460-bf38d14f42df",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "efedbc9f-18a3-4d35-a713-181276118181"
        },
        "item": {
          "id": "9b60e522-2da4-4aa4-8c26-90cfc5a3700f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "333476cf-b03b-4fc1-9e27-bdd0f18fe363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35048d7e-84eb-4f5c-a95a-95da6446ec5c",
        "cursor": {
          "ref": "196f0ad6-6f8a-4af5-a82a-6ecaf49f2a49",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a04195b-b211-4995-a9bc-2aaebfcc4d89"
        },
        "item": {
          "id": "35048d7e-84eb-4f5c-a95a-95da6446ec5c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dc141732-f446-43a8-9b4f-32d5dfdd9be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7849a9c6-bec7-4edf-b652-7af6d96d5e82",
        "cursor": {
          "ref": "956de7f9-a1f2-4d3b-aaf0-590f2565446c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aed29185-8a91-4ad3-a203-18e6499df5af"
        },
        "item": {
          "id": "7849a9c6-bec7-4edf-b652-7af6d96d5e82",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a59ab92e-beaa-4ef7-810d-bade8f2fbb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfbfcc1-a487-4e6f-b770-00654fb30405",
        "cursor": {
          "ref": "f16932ff-58e6-4d7d-8442-2dbe988833d6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "31538408-d193-4f4b-a583-d711e3ab94b6"
        },
        "item": {
          "id": "7cfbfcc1-a487-4e6f-b770-00654fb30405",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c171745-5af6-48f1-b54f-bb967985b475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f901eca-aae7-4757-bc02-47a443b23898",
        "cursor": {
          "ref": "0010e36f-f743-4d24-8909-07c310009b7e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "20c6fead-47fc-4df1-a296-05fd0729c682"
        },
        "item": {
          "id": "3f901eca-aae7-4757-bc02-47a443b23898",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "751a1ccd-a61b-480c-a4d1-385308b5dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecbd252-86fd-4880-820f-a60c8d5a67a3",
        "cursor": {
          "ref": "706ccb0a-7090-44c3-981f-dd9eda142091",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1e66db0f-780f-4062-b108-1ecaefa46a05"
        },
        "item": {
          "id": "fecbd252-86fd-4880-820f-a60c8d5a67a3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "72001262-5d97-4ed1-8155-c05150873544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c54d4f-699f-4683-aa38-111c9fdd16f7",
        "cursor": {
          "ref": "36eb3eed-e655-4dec-8d5d-2d5c8a27e869",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87b7b473-12a1-4de7-b220-af3414f6d2d9"
        },
        "item": {
          "id": "18c54d4f-699f-4683-aa38-111c9fdd16f7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bad2b71e-f261-44f8-9495-47c5d7696a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662be2f-a9ca-4d25-b5f5-b28168c1afd2",
        "cursor": {
          "ref": "adb4efc2-fc2f-4e5c-b7a1-454e3e14d45c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f455124c-e6e6-4e31-8688-c0282d767490"
        },
        "item": {
          "id": "a662be2f-a9ca-4d25-b5f5-b28168c1afd2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a539b6d0-0975-4744-a433-213dba644f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eff3db-11bf-4527-906f-bfada0f4984d",
        "cursor": {
          "ref": "941f34a8-49e0-4b43-ad83-22bb389e1b63",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4b1a8a13-4cff-4194-b7d3-cc1c8eee1630"
        },
        "item": {
          "id": "01eff3db-11bf-4527-906f-bfada0f4984d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "887921a7-bb2c-464e-a10e-86000e472cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c955f-300e-431c-88a5-d7c043642039",
        "cursor": {
          "ref": "a2846768-78a3-4bd8-ab60-41a1ccf9eafb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "481e0ccd-2138-4fd6-a9cd-ad5a154057b9"
        },
        "item": {
          "id": "5b8c955f-300e-431c-88a5-d7c043642039",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "075178bf-c491-4cc1-81b6-5165eb23dc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2413282c-7bcd-4020-95b3-bb191184c550",
        "cursor": {
          "ref": "d6bc695c-264d-4094-bf09-691791f09668",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4658d51f-dc44-49f7-9708-d9a35d90e8b2"
        },
        "item": {
          "id": "2413282c-7bcd-4020-95b3-bb191184c550",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "10336d12-ebaf-4d67-b547-f62b4036f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a6944f-72ae-40a2-9e62-de54d3c9e668",
        "cursor": {
          "ref": "87e31dbf-e5dc-4fe2-ba5f-c223bd75698d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "246ce8b3-f5fa-4b40-9f6e-783892e5b1f6"
        },
        "item": {
          "id": "43a6944f-72ae-40a2-9e62-de54d3c9e668",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cd68eed0-99f8-450a-8217-405e11536f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f831896-ca75-46e1-be1f-e87b2d24a804",
        "cursor": {
          "ref": "72cc4e36-f870-4b0e-928f-cbf6d68e8c92",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "981e27bb-3290-456c-8169-cf27d187c383"
        },
        "item": {
          "id": "7f831896-ca75-46e1-be1f-e87b2d24a804",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f7ebb743-08e2-4f98-8ace-5eadfd6eece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e6be4e-4a70-4c7c-a728-a437d8aeab42",
        "cursor": {
          "ref": "caf5797f-9c87-40aa-a9c2-c65102b2cb2a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "558dd320-ff91-4a99-b3da-2c2751283060"
        },
        "item": {
          "id": "80e6be4e-4a70-4c7c-a728-a437d8aeab42",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e3ed33a0-a3b2-4f2b-b459-7e923c068757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73294eda-cd96-441a-9bb9-31fd03ba81ff",
        "cursor": {
          "ref": "aaea270a-f356-4db9-86da-0cb32114062b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "98c1936d-5584-4898-a96b-773a33cd02b9"
        },
        "item": {
          "id": "73294eda-cd96-441a-9bb9-31fd03ba81ff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1d1eec3d-dabd-4fc1-8137-e80e5d628c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782b10a-ad8f-4a1f-bdc1-018f7830ffcb",
        "cursor": {
          "ref": "61f41540-6153-422b-9294-f4b5af624e86",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "47f59598-f53e-4a13-997d-0b9cd1f6ea05"
        },
        "item": {
          "id": "3782b10a-ad8f-4a1f-bdc1-018f7830ffcb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab36c1d4-3a2b-4417-943b-1f34bce3a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50738952-1288-4f56-b1f5-9070142bfd83",
        "cursor": {
          "ref": "515d168d-f6c2-4116-8ad8-eeab80adc0e6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f93292ea-c88f-407e-8458-b43bec8e7c2b"
        },
        "item": {
          "id": "50738952-1288-4f56-b1f5-9070142bfd83",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "76ed8d16-e3fa-4a47-b1b7-99b564a1c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf8f3d6-1615-4252-97ab-711acf3b65ac",
        "cursor": {
          "ref": "000bb80a-0486-4da4-b8c9-08b5fde27a28",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "67fce463-824f-4d79-9f63-28763057966b"
        },
        "item": {
          "id": "fdf8f3d6-1615-4252-97ab-711acf3b65ac",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c2e38582-0993-4c70-8603-288241cbb87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7981cb-5b12-405a-b33f-b035468f7c42",
        "cursor": {
          "ref": "f8599849-a5da-4697-bb8e-0409adaf3f13",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7240113b-4888-4a14-9a4b-80e902669e10"
        },
        "item": {
          "id": "7c7981cb-5b12-405a-b33f-b035468f7c42",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "78fa756f-b59e-47dc-a5a0-24ceaf0e0bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec27136-fa2f-4011-9ff7-7d5cf3a893e9",
        "cursor": {
          "ref": "1a77357f-854a-41dd-8eff-4d054364158f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6b1e8fde-7b3c-4a62-9d6c-27ea945ba0b4"
        },
        "item": {
          "id": "fec27136-fa2f-4011-9ff7-7d5cf3a893e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "675f6d76-1aff-4cb3-b795-1286db32fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24eeef8c-bf66-4884-8595-4dca491a47d8",
        "cursor": {
          "ref": "da608cbe-754b-4b47-8d06-a7850ca31f29",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "27081b10-7a13-4fa5-9772-5d6ab103cb2d"
        },
        "item": {
          "id": "24eeef8c-bf66-4884-8595-4dca491a47d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "69069ddf-5665-4944-a441-c243032fc8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba1b64e-01f2-4c51-85dc-9af05f8c8ea4",
        "cursor": {
          "ref": "28fc6190-7477-4702-9400-1c93cdf474d4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c08a019-0a92-4ebb-a9e7-d955fafd5833"
        },
        "item": {
          "id": "0ba1b64e-01f2-4c51-85dc-9af05f8c8ea4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1e20d1ee-d3ff-4694-8271-d02149754d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7db566-dae3-4d39-988a-eb7025f06d7a",
        "cursor": {
          "ref": "3e69fde5-5530-49ae-8c30-2f0586cfe8fb",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "90ada101-1b39-4a80-b26e-6c558cf79e07"
        },
        "item": {
          "id": "bf7db566-dae3-4d39-988a-eb7025f06d7a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eeb22c0d-40c6-450e-9823-c80c8077187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeb19c3-780f-4149-9074-71f96e956746",
        "cursor": {
          "ref": "8efc531b-e186-4681-87f8-1b5443043944",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "621b233c-0d58-4365-9c9c-bb1b74ff8a28"
        },
        "item": {
          "id": "eaeb19c3-780f-4149-9074-71f96e956746",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e95e69ed-10a0-4f22-85fa-fcd033c3610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e16bd4-9fdf-4662-95d2-46edfc420c1b",
        "cursor": {
          "ref": "667f8ec0-f156-4f11-ab3b-acb7a6dc9bc9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "05871504-5f6d-498b-96eb-763b9fc9ff24"
        },
        "item": {
          "id": "00e16bd4-9fdf-4662-95d2-46edfc420c1b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ce673934-ba2c-4427-bcb1-5c4e525ee955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f93242a-3ab8-4bac-b41a-b7837b634acf",
        "cursor": {
          "ref": "ad96eeff-34c3-4606-8b7c-98c7b8a57866",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2557b276-cc4c-44da-8cc7-19432e40eede"
        },
        "item": {
          "id": "5f93242a-3ab8-4bac-b41a-b7837b634acf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "50be0e63-08f2-4099-8ad3-6c71e77c2140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9614de2-c87a-4fb1-ac57-1bbafdadd30d",
        "cursor": {
          "ref": "7125d2aa-307b-4e2c-9e09-6a962f2a49d3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "69485ee0-8a5f-47ba-8b66-7a1f86178b85"
        },
        "item": {
          "id": "b9614de2-c87a-4fb1-ac57-1bbafdadd30d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d1b1d55f-2e6b-482f-9b81-b0fb5598c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ea5b7-b1e6-46eb-80ad-b1c8fb6b5789",
        "cursor": {
          "ref": "3fdf9bf8-f7ef-41e3-b2cd-977ff2ce8b0a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "36d31d45-5838-45e2-a4e2-d2c08fe6cfa4"
        },
        "item": {
          "id": "378ea5b7-b1e6-46eb-80ad-b1c8fb6b5789",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "910990d7-900a-4041-b6ac-e3b1ea453818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa87c5f3-a595-41ed-8288-a7eca9728c3b",
        "cursor": {
          "ref": "2b0bf4ff-face-4750-abb0-a1fa3ee57449",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "83d7b839-fe93-426e-b6d7-4d3d8983a819"
        },
        "item": {
          "id": "fa87c5f3-a595-41ed-8288-a7eca9728c3b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6eb7dc1b-661b-4309-9da7-2255ce0d8930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ed02c2-42da-4e6f-bbb0-339a174623d4",
        "cursor": {
          "ref": "c7288075-ef15-4b24-a956-4414b3204646",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7c5fa8f0-ac1f-4f23-b3b2-9c3ddc475b6c"
        },
        "item": {
          "id": "64ed02c2-42da-4e6f-bbb0-339a174623d4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "79c7546e-3822-476e-bb3c-b19a6ad2ca12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3d3bc8-6443-450a-85c9-a373002d03ca",
        "cursor": {
          "ref": "543a2b6d-80aa-4652-8244-053c040febe9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "92aadef4-6c8e-4ced-8497-daf42d5cad2a"
        },
        "item": {
          "id": "8f3d3bc8-6443-450a-85c9-a373002d03ca",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "341ac537-9c04-4458-af88-702555b6a0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a0b951-390b-4f87-8305-a1bb371b9d7a",
        "cursor": {
          "ref": "fab5725b-17e6-4653-af27-80cf560652cf",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "11beb51e-6eef-45d0-b2bf-c83dc2128f44"
        },
        "item": {
          "id": "b3a0b951-390b-4f87-8305-a1bb371b9d7a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "838f03fa-b90b-4a62-9c98-c0e21c76147c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a001de7-2486-4764-a4e6-7e9a855ce450",
        "cursor": {
          "ref": "3be2e779-8550-4987-8fe1-57bcd94f9433",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "98e3433e-7101-4f37-959e-1261426243f7"
        },
        "item": {
          "id": "9a001de7-2486-4764-a4e6-7e9a855ce450",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f983b32d-b83d-4868-9d28-ae75a6a21a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd4efe7-fc8b-4123-90e7-aa3aa5bb7822",
        "cursor": {
          "ref": "c3a1431e-8aca-4103-acba-db065d054afc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "50728a9c-c799-46f4-8d6e-0317300b430b"
        },
        "item": {
          "id": "7cd4efe7-fc8b-4123-90e7-aa3aa5bb7822",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "89a8f671-0340-483c-ac40-4208ffc12d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed595619-08ae-4e9d-8334-045c9fd2e523",
        "cursor": {
          "ref": "3005bae6-b689-4b60-94a5-32dd865c917a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4629f6f1-4353-46a0-9796-72f7eac3dca1"
        },
        "item": {
          "id": "ed595619-08ae-4e9d-8334-045c9fd2e523",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "effdda65-f112-40e9-81bc-f9df25878204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04a77af-f3ba-4f8c-bf11-f50eb5676ec7",
        "cursor": {
          "ref": "efc944a0-84d5-4270-b86b-813f0df03744",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "da47b7f6-d2e2-4847-a502-08d619ce3211"
        },
        "item": {
          "id": "e04a77af-f3ba-4f8c-bf11-f50eb5676ec7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "40df945c-0e08-4f08-862e-c55b2206eb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6e55bb-7ec0-439c-9336-7789d6bb39c9",
        "cursor": {
          "ref": "b7450573-e6c0-4b4f-8281-db0a88d5b1d9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2c94ecf0-d865-4fad-b8fa-d14e60c00292"
        },
        "item": {
          "id": "de6e55bb-7ec0-439c-9336-7789d6bb39c9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fb1c32d5-eb41-42c9-8011-ac61d86c362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff17ef9b-0b68-48ad-98d7-6c64501108f1",
        "cursor": {
          "ref": "d5e3ca46-94fe-4a08-afb8-f4fef9c04113",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "70ccbe99-3264-47cd-8744-832ff903dff4"
        },
        "item": {
          "id": "ff17ef9b-0b68-48ad-98d7-6c64501108f1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "05f8ef62-c51a-4afe-88dc-fb8b38330eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579feead-0beb-4ecc-a9de-d54aa7edfa63",
        "cursor": {
          "ref": "11610ce7-6b62-4937-a4c8-af76f85ed447",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bac6e6fa-305f-4907-9111-475c64b837b5"
        },
        "item": {
          "id": "579feead-0beb-4ecc-a9de-d54aa7edfa63",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ff46e7d8-fbc1-4629-af4f-2758c3b4b1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c5edd9-09a9-4fe0-9e90-b205b6ceba89",
        "cursor": {
          "ref": "524620a6-6e3b-4641-9e8a-a3486b946d69",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "08d06706-0bab-427a-bce5-195678b7902b"
        },
        "item": {
          "id": "79c5edd9-09a9-4fe0-9e90-b205b6ceba89",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8307c38a-3592-4154-9924-1258c6fc4b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06862e10-429f-4d97-8f08-2474b27ea5bc",
        "cursor": {
          "ref": "5c5b2be8-2879-49ba-9f6d-1a2d26694724",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bc9cf230-316d-440a-99ac-fc18b7426efe"
        },
        "item": {
          "id": "06862e10-429f-4d97-8f08-2474b27ea5bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eb5c12a9-bfd3-4986-8a58-079add6da17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306dc38b-640b-4688-8ac3-9f03f9226130",
        "cursor": {
          "ref": "73019de7-06a4-4e74-8b8c-92e98b551e74",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ceaedb13-afd3-4b36-92fa-cb97c6a395fe"
        },
        "item": {
          "id": "306dc38b-640b-4688-8ac3-9f03f9226130",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8888880-8023-4365-9e07-5c8dd5867007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d379a-bded-43ec-894c-86b3fb8a277c",
        "cursor": {
          "ref": "73e5b3e1-de1a-4426-af27-e8ac2b7d9ea8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f8bade72-9639-46c4-ad11-b1b0c16c7f5b"
        },
        "item": {
          "id": "409d379a-bded-43ec-894c-86b3fb8a277c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ca67b81b-d7eb-4ae3-a48d-dbe8f09a1efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dedde4-259e-468d-8fa3-98eb65734853",
        "cursor": {
          "ref": "b4183bfd-9927-4533-8aac-30c804ed622f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e0852312-0519-429b-9c3f-8f8b4d3c1c8f"
        },
        "item": {
          "id": "28dedde4-259e-468d-8fa3-98eb65734853",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eb39351b-1a83-4836-81bb-c7fb745d858e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7180859-5a1e-4c24-a986-721f63bbf1eb",
        "cursor": {
          "ref": "85f5749a-c0ef-4a19-8df4-f82b338c8ef2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0e7770dd-ee72-437c-84d4-fbb5a52c964d"
        },
        "item": {
          "id": "d7180859-5a1e-4c24-a986-721f63bbf1eb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "be301263-600d-4f21-8aed-5cfc3631e414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c0dc09-fd47-4ef2-af25-cb9cd08ddd81",
        "cursor": {
          "ref": "21cb8061-24db-4bc1-863c-99d07cbe1188",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7acd811a-fed7-4159-bc3b-96ef4803b472"
        },
        "item": {
          "id": "50c0dc09-fd47-4ef2-af25-cb9cd08ddd81",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4dfefc10-7a00-4c7c-bc1a-bd0a3bfe71e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649f7d5-ef90-4704-92e5-a4991d040177",
        "cursor": {
          "ref": "1b5cb296-a223-4cd9-9f27-345e24981e83",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c1a44a9a-3e1b-445b-b4fa-7204264e7284"
        },
        "item": {
          "id": "6649f7d5-ef90-4704-92e5-a4991d040177",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b904014a-e389-4aef-b2d8-0bc11595f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ac3e5-7882-42cd-aecf-4b623fe9c72d",
        "cursor": {
          "ref": "5ead1ffa-5e37-4eb4-825f-1eae28038a78",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3945180e-7fd4-433a-b960-c529ff4b296f"
        },
        "item": {
          "id": "5b3ac3e5-7882-42cd-aecf-4b623fe9c72d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8b28c66-bba0-42ca-baba-fb9a9fd9d232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1330,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935d80c-e071-475a-afd9-f3818be64bf3",
        "cursor": {
          "ref": "8118f099-00b5-486a-a1f6-8d4d9ac1c75a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a56ba77b-7882-4082-9ca2-5d0e80d21024"
        },
        "item": {
          "id": "6935d80c-e071-475a-afd9-f3818be64bf3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "feee4c1d-cc62-41cb-94de-dce7f41ddd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0170c187-1342-42c0-8200-c2748c281b81",
        "cursor": {
          "ref": "b4cbfe94-a793-450e-ab3c-81b13029737d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "161d6675-17ce-4036-963c-0021764eb4c3"
        },
        "item": {
          "id": "0170c187-1342-42c0-8200-c2748c281b81",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "38b75b8e-8d3f-4924-98f4-56be9251ec7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3128daa9-f5ca-4c32-a0bd-c3cf9e941fc9",
        "cursor": {
          "ref": "5fc84b4f-f325-4ce3-adf3-183df09df4b2",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3c41ae3d-1724-45e1-9819-6c0e171db5b0"
        },
        "item": {
          "id": "3128daa9-f5ca-4c32-a0bd-c3cf9e941fc9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4db3ea2d-373a-4b9b-a237-4321d7dbdfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45aef4-8e1b-45a0-8b4d-831f968dbe7f",
        "cursor": {
          "ref": "7c372be0-cc44-48f6-902d-6e251c39446a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ef12a6eb-f6af-4cca-b5a8-565dd0c43d6e"
        },
        "item": {
          "id": "9a45aef4-8e1b-45a0-8b4d-831f968dbe7f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "316bdebb-aa5e-438b-bbda-219af56d6b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a20cd-d68a-4bb1-9b69-fdb2c708fd27",
        "cursor": {
          "ref": "6266d329-7b0c-4f03-ab4f-d3689007dab5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "188f3b88-9eb6-405b-9ed7-23582b32dbde"
        },
        "item": {
          "id": "765a20cd-d68a-4bb1-9b69-fdb2c708fd27",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6adab46d-4f81-45a2-bbea-d1628bcd1a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7395b3-dd1f-4753-94d4-0fdd4022d94b",
        "cursor": {
          "ref": "a4640482-c9a5-4af1-8064-4a864f9a52be",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "66459d47-7bd2-4ded-99c0-79b23a6f2f66"
        },
        "item": {
          "id": "ab7395b3-dd1f-4753-94d4-0fdd4022d94b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8dc15190-3b0d-480a-a7d1-f5162ca0476a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db85f34-fff2-4966-ba35-bfbb8ce2d0a5",
        "cursor": {
          "ref": "29aba63a-8f1d-42e0-9820-802dd676be7a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2d0f8f4b-bb57-4e2c-9350-3e4ce822d59b"
        },
        "item": {
          "id": "9db85f34-fff2-4966-ba35-bfbb8ce2d0a5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1725cbb6-0cdc-45e4-84ed-8099fed66f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9578d28-cccb-4ee8-8f9f-65275c7caacd",
        "cursor": {
          "ref": "79e5a063-5f71-4d6e-8938-c4e2c0b15520",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "18d21271-82f4-4529-8ef5-b5b7345946d3"
        },
        "item": {
          "id": "e9578d28-cccb-4ee8-8f9f-65275c7caacd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c6a61cf7-bab8-4d83-85e1-09b86ee92f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2691b2-0f0b-45e3-bf61-f25d8cb85dee",
        "cursor": {
          "ref": "b4e7a8be-1172-4b66-91f1-2e26815d1c7f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f288f8dd-a4c2-4dd3-952d-b309f19274e9"
        },
        "item": {
          "id": "dd2691b2-0f0b-45e3-bf61-f25d8cb85dee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1be4cd24-5ea8-47c0-bd63-6611ea7e6aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aedc84-90ed-4e97-a33b-a27f3605cf29",
        "cursor": {
          "ref": "59491d56-2497-4ad4-94c5-96cd81a54f40",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1b8d2c5c-f574-4a08-aeb3-66501150c807"
        },
        "item": {
          "id": "b3aedc84-90ed-4e97-a33b-a27f3605cf29",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "85bc06ba-1f7b-41a6-8cf2-7bc1c7b41f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e190f72-5e2e-4c2a-b985-c924f8ccf3a5",
        "cursor": {
          "ref": "315d492c-96cf-4399-8ec5-7941ac5f2dfe",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "73d6a7b9-05f1-4a17-b8a3-e6bf2fe1ed16"
        },
        "item": {
          "id": "4e190f72-5e2e-4c2a-b985-c924f8ccf3a5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ec41367d-f5e4-4ba8-99eb-1dd2d3c6dffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9743bc93-def0-4d86-8478-944cc917b499",
        "cursor": {
          "ref": "b21942b3-4e39-48e1-96ca-e25061acba12",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "54d3dfdc-3f01-496e-aab5-76cfc77227ab"
        },
        "item": {
          "id": "9743bc93-def0-4d86-8478-944cc917b499",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a765c75f-4c4d-41b1-9f97-02e7e06d5bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc61ca9-7c47-415e-9ce2-d118dcaba0ec",
        "cursor": {
          "ref": "1cd4b8e3-70c4-4324-9bc3-69d857bb605b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cac562ab-fb60-4fa9-bcf5-48d86eb088a8"
        },
        "item": {
          "id": "bdc61ca9-7c47-415e-9ce2-d118dcaba0ec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9e230c43-8bd7-4e70-beb4-046155083dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d3739f-13d6-4c33-babf-7b8fc834c2db",
        "cursor": {
          "ref": "5a2e5b19-f2ac-412c-aa70-359972df0cb9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bb9ca4a4-fb51-4973-a09a-99e87526aced"
        },
        "item": {
          "id": "c5d3739f-13d6-4c33-babf-7b8fc834c2db",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bed254b-9e1e-4468-ab50-8512920f3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918c52f7-874b-437f-97de-8c08a1146c23",
        "cursor": {
          "ref": "cbe4fd86-95ab-40de-9b42-01bab8b22fd7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e80e5a2b-2de4-44a3-b482-25a04f7cc8d0"
        },
        "item": {
          "id": "918c52f7-874b-437f-97de-8c08a1146c23",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15252895-f610-4dc8-95c2-11605d6822e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5982119b-d851-47a2-8767-e88fe8f29876",
        "cursor": {
          "ref": "7af8ba09-754c-40a2-9185-721c2e7c3c22",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6587dcc8-0db2-4c25-a5a0-7d19cac94f47"
        },
        "item": {
          "id": "5982119b-d851-47a2-8767-e88fe8f29876",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "44be7d23-7ecc-4e03-8a19-8cc6da699b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a64f8e-8e06-4d7b-9910-b7b3a25f9bbe",
        "cursor": {
          "ref": "150487e0-915a-4356-81da-04a3ec53957d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4457ce89-15a3-4f8b-8a31-a5b3d6c9ea2c"
        },
        "item": {
          "id": "31a64f8e-8e06-4d7b-9910-b7b3a25f9bbe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb0602e6-c16e-4dc0-865f-4388326d5567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f9b998-9988-4ca2-91e8-a37e7c30f68c",
        "cursor": {
          "ref": "246e770c-0e10-4c68-b42b-622e899703fc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b4c3ef10-58b0-4d5b-a0c2-d085e29d5800"
        },
        "item": {
          "id": "21f9b998-9988-4ca2-91e8-a37e7c30f68c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ff3f8979-8002-4a24-a294-ab92fea27b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5253730b-4b35-4c33-a6c6-992b61a555f3",
        "cursor": {
          "ref": "fe6bc252-02fe-42e8-894f-115c26965513",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2826579c-802b-4821-b310-3af801a83e81"
        },
        "item": {
          "id": "5253730b-4b35-4c33-a6c6-992b61a555f3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0abe0394-715d-4349-bb81-e968430007d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c628a1f-93d6-4f3d-a0bd-45f2679a03d1",
        "cursor": {
          "ref": "b8f01768-5cbb-498e-82e7-3af971e5cdcc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4d9fcca6-a58c-49e3-bb22-033fcbaa1b21"
        },
        "item": {
          "id": "3c628a1f-93d6-4f3d-a0bd-45f2679a03d1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb8ba11b-98d9-45e3-8910-fb42e3f4d4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c688ed84-bfec-4e14-9adb-03ff916168d8",
        "cursor": {
          "ref": "4e204a71-4286-45ab-b587-637a700c42a1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7834645d-df00-4045-9d82-e43acf6c554b"
        },
        "item": {
          "id": "c688ed84-bfec-4e14-9adb-03ff916168d8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8ce25250-d0ea-4d1e-b68f-0310dc66c6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66360d91-55f4-4a6b-a4b3-619af3af1fcc",
        "cursor": {
          "ref": "cf56f090-6701-412d-a1ef-80b0f57e3aad",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "176498f5-e3d7-4269-ba21-79ae160f2107"
        },
        "item": {
          "id": "66360d91-55f4-4a6b-a4b3-619af3af1fcc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c6e2335b-9cd7-4a7b-88bf-e72bc2781c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390757a5-1eb7-46d7-a53d-e6c1e00feabe",
        "cursor": {
          "ref": "9e748603-ee64-4ffd-8078-0f98c3c31e64",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1aa8abf5-38d8-4a0a-b6d3-c0ea1401fe00"
        },
        "item": {
          "id": "390757a5-1eb7-46d7-a53d-e6c1e00feabe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9d4889be-778f-4864-9c54-4787a5d61e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b738145a-ec4e-4d41-bc57-0f8c6c38e2a2",
        "cursor": {
          "ref": "d765d20a-01ac-4105-8051-3d9c97fabe57",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "472d94c9-6ab0-4997-932a-b0894cfe681d"
        },
        "item": {
          "id": "b738145a-ec4e-4d41-bc57-0f8c6c38e2a2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "77e9e293-015e-4222-94c3-48b61b9774e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6122a95-b79a-4a14-be3d-3367eecc3b41",
        "cursor": {
          "ref": "ae7944c2-22f3-40d6-8db2-dfbf06f2b92c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ff6afefe-fa01-4be3-8f9d-8372e364c8f2"
        },
        "item": {
          "id": "d6122a95-b79a-4a14-be3d-3367eecc3b41",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "41f09c2f-970a-4cc1-a366-eb71c9238aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0740d1-4af2-4bf9-83df-c14971d14f7f",
        "cursor": {
          "ref": "acce57f9-a921-4c5d-9788-f5332161cb26",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2d367d63-ca79-4b39-b297-8ea12f3cf168"
        },
        "item": {
          "id": "de0740d1-4af2-4bf9-83df-c14971d14f7f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e9ec59cf-5f1d-4c24-874d-e89b934deb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9718be2-3f60-44c9-82d3-970dafabfe02",
        "cursor": {
          "ref": "c8146e8f-fcf0-4147-bebc-f61d3a1ccb27",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5f55889d-c3a0-4ce9-87e7-fdf5031fd2fe"
        },
        "item": {
          "id": "f9718be2-3f60-44c9-82d3-970dafabfe02",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9b3823f5-4537-49eb-9e0a-5f7cf1d98b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048cac92-2300-4bd2-8901-e14039f71a96",
        "cursor": {
          "ref": "4ec175e8-72cd-4206-9f38-e8ba4b4dde57",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c6ab5aac-56b7-4422-9ab9-eba4941cc808"
        },
        "item": {
          "id": "048cac92-2300-4bd2-8901-e14039f71a96",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d4bba5e4-b10a-4280-8af9-a35d50922d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb820666-8470-40e6-807c-348fd2b51a56",
        "cursor": {
          "ref": "12882ba5-1986-4b46-aaa9-6f296f0bf5eb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "488f0807-6054-4c03-b3fe-a9282943062c"
        },
        "item": {
          "id": "fb820666-8470-40e6-807c-348fd2b51a56",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3adaef3-254a-4b37-a90a-b8cb3bb81632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1453d2c3-f619-4d2e-aec1-f4d420cb8e3e",
        "cursor": {
          "ref": "15aede5e-761c-477f-8427-84aa2589fcae",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "99faf43e-6745-4bb2-85fa-08352341175d"
        },
        "item": {
          "id": "1453d2c3-f619-4d2e-aec1-f4d420cb8e3e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d9bb65c5-0314-4abc-b3ae-4c2ef6781d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945317d-3099-4ee1-8d43-48361d0ca10b",
        "cursor": {
          "ref": "34d4d78e-c4a2-44ed-9b69-9bb1846b67b4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5ab256ce-1a27-4d9a-a6e9-31ca6edadcb9"
        },
        "item": {
          "id": "0945317d-3099-4ee1-8d43-48361d0ca10b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0be6c71-1435-4bf4-9b22-14cef0d819bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb693e4-d1b5-4a00-9445-8d43f5295f6a",
        "cursor": {
          "ref": "9921d4b2-acdf-46c6-bd2b-bf37f070f93a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e703b096-0413-428a-991b-792a154e1c14"
        },
        "item": {
          "id": "1bb693e4-d1b5-4a00-9445-8d43f5295f6a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "79c77337-f47a-4559-aca6-b9e6c28dab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e7028-fd30-4c45-ba7c-44263af14eb1",
        "cursor": {
          "ref": "843f7203-2433-481b-92bb-83a91d1131e3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3ff74e69-f100-4c1e-8967-8e3f6087c908"
        },
        "item": {
          "id": "989e7028-fd30-4c45-ba7c-44263af14eb1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6021b3cd-7972-46b8-8bbd-ddbd4704d657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21038657-9980-4e21-8bd4-be8ef4bba055",
        "cursor": {
          "ref": "6c3901f2-e458-457b-a43c-e7c55f99ffe1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c15c6de-6438-422a-a43d-300bf68223a5"
        },
        "item": {
          "id": "21038657-9980-4e21-8bd4-be8ef4bba055",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ef6996a2-43a8-4885-b0fb-e026653d79c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcee4bb6-e665-4c3f-83ee-948de19582b0",
        "cursor": {
          "ref": "b37d47b3-fe12-44a1-9357-8d32d2350e0c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6c9b21a8-87bb-44bc-ab0c-c531f2a25ba1"
        },
        "item": {
          "id": "dcee4bb6-e665-4c3f-83ee-948de19582b0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7126c3ad-1181-47d2-9e8b-f3564fefabf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c9dcea-f217-4bcd-978f-1488145c0a05",
        "cursor": {
          "ref": "3025ddb7-462d-4bc6-96b2-e9fd7a4ddcbb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8879cc82-5cc4-4acd-b362-beb53ee00bd2"
        },
        "item": {
          "id": "a0c9dcea-f217-4bcd-978f-1488145c0a05",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "46e92bab-a2d3-47f8-9d0d-9c1c6e9a538a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb2d9d-af33-44a8-944d-b09c8d1281cb",
        "cursor": {
          "ref": "2d5d5e11-fe1e-465e-8fb0-10cf433e2e9f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47afc4e9-8e88-4a3e-a871-e1bc2e50aade"
        },
        "item": {
          "id": "46cb2d9d-af33-44a8-944d-b09c8d1281cb",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7a01e952-521b-41f9-9b67-473decd5cfc8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 373,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6569cc0b-852e-4039-a761-fefd0e280adf",
        "cursor": {
          "ref": "68fce6e9-f487-4774-9171-d14ec053c7d6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "98c7c688-5f0e-4cc0-9b56-e40a1b65e408"
        },
        "item": {
          "id": "6569cc0b-852e-4039-a761-fefd0e280adf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aeb63e9f-b2b2-488e-9518-6418ec8540a1",
          "status": "OK",
          "code": 200,
          "responseTime": 482,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "992cf4b2-3cd5-4ba2-9d09-93185f278b27",
        "cursor": {
          "ref": "f7d3601c-ccd0-4ca9-a77b-17596e33db06",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61ff5f67-8ccb-452a-b5fe-431445c1f956"
        },
        "item": {
          "id": "992cf4b2-3cd5-4ba2-9d09-93185f278b27",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ead1730-02a4-4d8b-9ea6-cba37b8720a1",
          "status": "OK",
          "code": 200,
          "responseTime": 2108,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1453ef7b-11fc-4323-aeef-604871ded5ee",
        "cursor": {
          "ref": "b81128e6-d26f-4b80-affb-f6dfa5931840",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "28011666-bc86-4900-848e-b3554d224796"
        },
        "item": {
          "id": "1453ef7b-11fc-4323-aeef-604871ded5ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4f397469-b80f-4ea1-b0e1-75beda08b87e",
          "status": "OK",
          "code": 200,
          "responseTime": 1691,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
        "cursor": {
          "ref": "f21806d2-0ebd-46b9-b41b-96dcedde8068",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd3ffe50-cdaf-4ba6-8ebe-0c1142023130"
        },
        "item": {
          "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e34a84d4-b39a-42ad-8497-c3772945147c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
        "cursor": {
          "ref": "f21806d2-0ebd-46b9-b41b-96dcedde8068",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd3ffe50-cdaf-4ba6-8ebe-0c1142023130"
        },
        "item": {
          "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e34a84d4-b39a-42ad-8497-c3772945147c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
        "cursor": {
          "ref": "f21806d2-0ebd-46b9-b41b-96dcedde8068",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd3ffe50-cdaf-4ba6-8ebe-0c1142023130"
        },
        "item": {
          "id": "e6036d39-08fd-467d-a278-e57f89ce26a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e34a84d4-b39a-42ad-8497-c3772945147c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07c7203-05f8-4595-9acc-8a4a9a468263",
        "cursor": {
          "ref": "de9d65a8-5755-48e6-a483-60f93a43e106",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e73078eb-2982-42b8-aee4-740871312e66"
        },
        "item": {
          "id": "d07c7203-05f8-4595-9acc-8a4a9a468263",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3a321535-e9ec-4f97-b189-3c6c03dad7ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 386,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4097d-16d3-4a4d-bbc4-c4bf2fba1485",
        "cursor": {
          "ref": "0557669d-031b-44e4-9b39-c612235bf913",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "41769b90-8c00-4c00-8caf-26ba09eafbe9"
        },
        "item": {
          "id": "1ae4097d-16d3-4a4d-bbc4-c4bf2fba1485",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be063489-3e71-4698-a0a3-97a87d13c577",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4097d-16d3-4a4d-bbc4-c4bf2fba1485",
        "cursor": {
          "ref": "0557669d-031b-44e4-9b39-c612235bf913",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "41769b90-8c00-4c00-8caf-26ba09eafbe9"
        },
        "item": {
          "id": "1ae4097d-16d3-4a4d-bbc4-c4bf2fba1485",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be063489-3e71-4698-a0a3-97a87d13c577",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a06407-1cec-4548-b68c-9a01bbfc5e30",
        "cursor": {
          "ref": "f6ed3ae2-b0e9-4e0f-8bcd-a0d35d43c873",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7cb2f55f-dde9-4412-91f5-49e41890bf09"
        },
        "item": {
          "id": "42a06407-1cec-4548-b68c-9a01bbfc5e30",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e60cfb73-ddc0-4798-937a-fa8fbb02938a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb8a70-6743-497c-a0c9-078f528f6e1e",
        "cursor": {
          "ref": "69e3c67a-ce69-4211-9908-99460cdfdc0f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "883107c9-ad3c-4fee-b6dd-bcdf200afe5b"
        },
        "item": {
          "id": "39bb8a70-6743-497c-a0c9-078f528f6e1e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9975b5dd-d12f-4bce-8ec6-48d2b764fab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb8a70-6743-497c-a0c9-078f528f6e1e",
        "cursor": {
          "ref": "69e3c67a-ce69-4211-9908-99460cdfdc0f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "883107c9-ad3c-4fee-b6dd-bcdf200afe5b"
        },
        "item": {
          "id": "39bb8a70-6743-497c-a0c9-078f528f6e1e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9975b5dd-d12f-4bce-8ec6-48d2b764fab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e895991-a337-4d9d-91dd-43c3254ae116",
        "cursor": {
          "ref": "d0cb0edd-3757-444e-bd30-e31d56924c94",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b2e8210d-7c1f-4da0-82d1-8d9c7dbcdbff"
        },
        "item": {
          "id": "5e895991-a337-4d9d-91dd-43c3254ae116",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "34cbab4b-054a-4e6d-bb8f-39ff19819892",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 578,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}