{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9b802256-3346-42ff-8418-ce1a91490480",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dff32663-87ce-4c40-978e-78bbee4e4ff0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70fce140-da9a-4531-811a-cf1b8b026c22",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "10897b21-fdd9-47c4-bb35-efad978cb227"
                }
              }
            ]
          },
          {
            "id": "61a68269-9ed9-4880-a36a-639114510ff8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1893d70a-f48a-47ed-a5c0-8b92ea9bf4e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a53e3fba-2e9f-4899-9b44-87badd5d02f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0fdb6fb4-7909-4246-95f9-d501bbd38df7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7619db7d-1865-4394-85a3-68cecf6dbe0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9da5963-2757-4903-8552-ea1abe257bf0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2912107d-0fcf-454e-acf2-4870f9253b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1855121-ac89-428b-9bb3-1d56a0ec6875"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94f9dedc-354a-49e0-96a6-c19b3e7f5fde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d49092c-bdd1-4c1b-b169-27b3f6a8ab62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec895fd0-885c-4fa8-aa25-965345a33588",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9742e0a0-63ea-4c49-8d96-1c097ed82599"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f5abea2-f9c0-460b-b4b0-671798cb5f75",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0af6347e-e071-4272-9efa-184f585e7736"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4868652-600c-44dd-a8a2-3db1b92cd878",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8159276f-f3e2-4286-bb99-0dd7ef67980f"
            }
          }
        ]
      },
      {
        "id": "df03cbf5-cd27-427c-af9a-4968c4084263",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e7a54dd6-8a0b-4de0-9f2d-60de8db33b76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0375f5e5-532f-4a83-a21e-c8e0d634ec41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eeec106f-07c4-459b-a9fa-7ea2e8d22589",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8181ce-c682-4230-a856-460ac27e7d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "922e4f7b-3d0f-4ee1-9d39-b5a63a34d9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb9458e-9b19-4b28-91a2-42c4abf1afb1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab60555e-0b38-4aae-a232-9278d0fe6440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0aa288c-6da3-4812-9ab3-13d41db62ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305772b1-e4b6-4543-91a8-0e8735fc67e4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa38f01f-10f6-4d0f-bab7-b022cd56d966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81e05354-9e59-4db3-9158-0981ba8f0ae2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccf193eb-e5df-41e1-9aa6-3eda2d8bc19b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57adc8e6-887d-4947-b54a-70542fcd7f78",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abf5263-675c-4ca1-a6d6-cd323ab128f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7caec0b-e44b-4ed8-88fb-4ff64459962e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a8328-1352-4318-bed3-2352766ac709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cde1aac-1090-45c3-8fc2-9673731159c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01045b1c-d608-4c5a-9bcd-e1bfbcdd69e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a5e8c03-f229-4d57-abdc-a3ecdefc0441",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "517832cb-7f06-4c6f-ac90-7fd5c4bc97c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f7a4816a-6153-44f7-b5c6-17fdde7baec1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca6a6ff2-1cdb-45d7-b22a-e63878c1be1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "70a11065-2d43-4d38-9bf4-38e4b2a0d80e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14a6fb40-20c3-43dc-9381-ac0724161ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63aebeb9-6d24-4473-972f-6a252857b4b9"
            }
          }
        ]
      },
      {
        "id": "1275dc4c-5e51-479b-bde2-a5b6b7ef252a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d975d1af-991d-4d5c-9c95-4a5dff3c0997",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcc424d9-ece3-42d4-a63f-b399fe6315ca",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9b0fc98f-b1d3-4945-85ff-2ed53bd120a3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daddea7-6e3b-49ad-b8f1-1a70bfa9ff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e232d63c-ad8f-4438-bc8c-acccaf3169aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a10d75-b8cf-43a5-a95c-967a3c1e6ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eaab0a0-4dd7-4894-952b-b64db8b226f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778a63a-8dc7-48e7-84eb-d0ed28b77263",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5304a68c-6592-423a-8344-1b9561fb1b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fe8477-9389-4cb5-8f55-843d157ec084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5dff66-e609-4dab-8ce7-08c7466f3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fefa3145-836b-48bb-b5cd-6dd9fb0916ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff6c31b-c223-4298-977e-0e700fbf53d7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80cc4c-c649-46b7-b269-835ef863bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e18a2d-1c85-49b2-b818-5223b3a26310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9cbec9-4bf7-4b27-9edb-844901719571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70e22d61-d63d-428b-b1b4-cad4aad2e3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b398c55-f8e7-488e-842a-f319f8f6e5b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a227239-73b6-43a7-a36e-52eb1d0e4413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c42167-884c-403c-866c-d74e6544be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78396e18-bfcf-4109-993e-586ad6031220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "791165bf-b641-4bc0-8219-dbe69ea1213c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3051aa2-fd7c-4452-9b95-cbbe596199e6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e494933f-bb84-4606-9c39-778f3799bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf0507-4895-4079-ab83-8d6f2735b259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a04af52-df79-4fff-b34f-7457fad315a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999b7234-f385-4b65-939a-3b07c6b839c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec3c2aa-8cd5-4146-9132-72aa9deb808d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8ebd1e-9b84-4fa5-804e-f34c1c269bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d9e3c5-9c27-46f4-8af2-03aa5fa4b16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e43fb-fe27-4c5c-abea-f29f9639b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86352660-4808-45da-95aa-0c140f45cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fd5580-5972-49fb-b476-e57fcdc72b73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46828d7c-762e-4434-a054-b21087da02ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a3557b-086b-4cdd-bc0c-86ef8a731fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0049a2ad-8620-42a7-9172-75bd36907b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e4c6438-71cd-42d7-8f84-6f03c26c7286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73593b54-2ec1-4ca3-a416-176c8276d6f0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6901ec-c961-4f6e-b4ef-e74d91d23093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b24388-7eb6-46e4-9a54-42312ac36caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f4e76f-ece5-4c1f-bf4e-2a1fc075c775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a1419a3-e2d7-4633-b9c4-153c57a24863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7fe21f-cb77-4ddc-89d2-ef53025677cd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7536c58d-54bd-41fa-b231-f488a488f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de2d2c7-adad-42d6-9636-ef5b2624f729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f959e02-7ccd-4972-befd-f0b230119bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ea33b35-75a6-46ee-9972-392bd410d9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb3e79f-abcf-42fd-ba06-019088e152aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84315840-eda7-4248-adb5-f1aa835b164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82bb021-5d91-470c-95d8-a71ff6ddf1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c0e50-c027-4db0-a1cd-e38166138b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68d5d8d4-ab4d-4c1a-b641-e7669c66c39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd329cb8-79e7-4d3c-8947-febede925906",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba848715-b880-4a26-9af6-9741c522ef6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0596c1da-5f8b-43e2-ab15-7fb9ca6f7b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2538b270-ba79-448b-99a9-91f73f9f4a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf59bacc-39d9-490a-8766-863a77223ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8e7616-cd21-4562-91bb-f4a53b707d9e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79104874-f539-4088-baf9-23b5657e42a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf14805e-0a5a-42ab-91d4-9b09721c3dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cad4c0-0fdc-420e-ac20-388ee595be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e2da3e-c94e-4e14-bf17-7285d144b942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5bdcf0-be73-4414-8d24-27179a13f5f6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1080671-92a8-44fc-9d10-6fcdfc12fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3778f5-71e2-44ff-a3e2-7da5f897e585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4635fe7b-3c10-4a4f-8752-acf0ef58bd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cde3fe4e-8429-40a0-9848-1029e7039a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d50045e-5c03-4689-8277-1e965fe922c1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9b459-2141-4641-880a-52f025ef14c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07b3c7f-8a68-479c-8d7f-dd1947d61cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9cf316-acbc-4ff1-aa76-2d4a4646f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f33ecc-4802-4a97-bd3e-80cd4a1f1bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ff4637-0a39-48ea-aff1-986add7b897c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da8d966-2cf6-4cbf-a1fb-3b640497488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afa38c6-51d2-46c5-8478-ad872a7ef7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6d448f-a8c2-435b-a805-21933294b109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5d170e6-c7da-4193-9d09-eedb948da29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e8a8ce-4cbd-426d-b29f-8e7d4d57f0f1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bdc2d1-ac9a-458c-8a28-4eb1564353c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3218931a-9f98-442c-81aa-eaafb74b6468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa7158b-f25f-45cc-bfce-0d74307c08b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dede1e24-fbe5-480f-8b0a-8a895cdc8821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda7cd70-7e8e-4c24-91a8-f1cb09ef307c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2801240b-4d06-4cf7-9e74-e4e2817ba40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9893712-e6f8-40ff-8b9e-c245e796f115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6778fae0-0b45-4a8c-8373-bb5e440d3ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b9e24aa-f95a-48e3-96d7-74169ba16110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4cf3d9-05b4-40e4-ab27-9dcdf34c727b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cb6fb5-423f-4bd9-834a-6d46ce4c9c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c8902d-fed3-4fb3-a13b-bbd1893bf78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c75acf7-933a-454e-9843-d518781d7fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e62921e2-fe2f-49e3-8026-2badc1801619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22a1371-882e-46e3-93cb-e1fd627eafdc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee42cb95-5536-4b9b-9b3e-2daa6c020b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e6962e-5493-4032-8ca3-6ae218ff503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43631126-9f24-436e-bd42-f1fbb32ef336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e64210b2-5995-4486-8c97-f9a09f58f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13c92c8-e4c4-474d-ba74-e877273ab724",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086ac9c5-91b0-4428-92a7-d34826f9425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4854f16-08d5-437b-b7ed-9e5b64042c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b033a25-9dcc-487a-b145-d0524c140b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3494e9c8-b92a-4ad7-b6f5-54b6a7063d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3239cd-70c7-4e83-885a-9eeb2a7760af",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa8cd35-5a01-4a92-8427-eb49cc480ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2564da-9c33-4ba5-a193-bca07462f965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f50b987-3298-4a1d-b64d-52d4b66cae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdb751b-acfc-449a-bb82-633212deb718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98f6b07-fcdf-4b9a-b549-b55189632263",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af3a54a-b7e6-417d-b47a-3146d0030ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69270da9-ffb6-4e62-958c-4d1570d1d6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf7dc7e-7bef-4e84-a1da-c4c5d8c75315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "681ea6fc-9a9a-48fa-8264-1b0bee1996a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a65ce4-1e67-4f38-841b-d6bc12a7f641",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5718be39-ecc6-4a2c-92a8-675c44f8d7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeddf609-ed51-41df-8f77-689f2dca2c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a7993-8d98-4b61-a1e5-e101799e18d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20a0fbfc-628d-4260-9124-243be05e4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0726382e-dded-4ad2-b5c0-a329b4e5acfa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fe05c9-c3a4-4de1-904f-a56f433aab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cecda4-5c76-44cc-b9ee-43d7648fcfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9eb952-cce0-420b-be61-5c663fbc7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1162aa-05bb-4edf-a4b4-378c01c16665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb957c81-3503-4dff-99b9-e4741f124397",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880d448a-b5b0-4157-ae07-76f07abbfdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef430b8a-e099-4c3b-b2e0-d3925bb1ba11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1096e61-f0dd-4f79-ac95-a22895023ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65894bf8-5871-46cf-a797-84921684fe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aadfdd6-f11c-439f-9eef-9f3aff9f130e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4963a76-6bd0-4611-b6b9-6a1cc409d84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2908a792-0811-44f5-b829-81632db73118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b498ede-31ed-451e-97d2-14f8770c237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "299e3226-c8cc-42a0-9e30-1ccf86c75ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ee2a5-e9e6-4730-acef-2af04c7ac40d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589c1399-a920-48f7-beb6-80d0a82a46e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14d74b3-54cc-440e-8869-f535d480c25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4355824-e26c-4b23-b456-e9ea0d729b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa16aee5-19d0-4a66-8643-1948125349c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c067e32-f64d-45ea-9a0e-2c90f0af38ee",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8844abf-10bc-4ae6-8ecc-1189669c84a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1454c32b-5520-41e9-a08d-c829c46a15ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb107ed2-7318-4de5-aaed-90267b472dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "224659da-b928-4c65-8482-36a5030141d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78694f8-8593-44ee-9e03-6efa282fad5e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d5700-9e4d-4bc7-a7d5-c88b42ec1301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decb893f-faf8-452d-b123-c9e6aab31f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4ea526-32d6-45e9-ba49-86cc29c236cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce2748b-13e2-4c47-9566-23c0b3a20ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cadd19-93f5-4432-9578-691480cf693e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fddc84-f492-46f6-85e5-77cad3481379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642e1d01-9aad-422e-a8e8-a1f09cf2a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8147599c-3896-4e78-ab24-f7f91545e6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "743cb644-6d5f-4336-914a-762e08e79e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda881a-839e-4a4c-87da-bfad226970b5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b610c0-257c-42c4-8a5c-c145ebd3dd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e3b75d-2ade-4f59-9dc7-400a10912102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a9b57d-ca4e-4b8e-b64e-48e403afc965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a76642-2bb1-4159-a76e-b6aee66f71a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcb62e5-bb10-4dac-8038-b34c1fb731f8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1936737c-4f02-47f8-9261-cc0263bfd175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f478baa-4479-4feb-b357-3767e4161c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34766fff-70ce-4a96-8f49-e838cb3cd4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9dcf0e-fc78-4c42-8adc-7c9115282abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef45b4f8-1749-493a-b699-e8151641a590",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb87d175-dc36-4bdc-828b-5a7c52004c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5617721-a04f-4565-a2fa-8bf039a9076c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f67328c-63e2-4605-a56f-c80d421a9554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1685b0c0-46ca-4867-b1d1-23531c2a24e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61e1621-1bbb-4896-b444-7a819b8f3da0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddd323d-2fc4-446d-ae90-c189cbe620e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c939e87-4334-46da-b441-fa3223d68038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a4ba09-0f51-431c-8419-c88cb9e96b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d88a52d-1443-46d0-977e-d0d1e66b0e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6414fa-5dd4-4fa0-8d89-801f25969787",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ece654-0881-4b79-8c5e-bb0cc0d59304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d137a13d-e6bb-4b86-baac-f1fc6b7bf544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da07820c-1bd5-49d4-88b1-0ad8f133024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b146b3-682c-4c2a-aa68-fc7e4f1989b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c76aba-b7dc-4c3b-bff0-2bed72126ae6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b00e38-5408-4e0e-8c92-8917926cefb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6bb01cc-28da-4902-b615-b560c391b782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f2a6c-d323-4c5d-a253-e573064019a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420ce676-9688-4659-9741-ef6e2675cf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f4911d-40f2-44fb-9025-ac6732eec633",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd82d1b-6204-4bc8-87d5-c5ba461156b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3691b4ff-3c91-4056-aace-cbfbf3cfa1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72318881-f771-4775-9492-c9dcaaae5410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f566ba0-fad3-459c-80ed-3153d9e7fdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae923a30-8d43-405a-bc9d-e06e159de9c1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ef9b4-06d6-4549-93d7-178703c0fb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91314bbd-761c-4e3c-8ab9-8c127642b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812bfbdc-295f-4358-a230-8f6357d0b7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc8ad46-4cdb-47a2-99d6-fe7ae1341c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4781a2e1-cada-45fe-a5f4-b621aa03bf8a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b952535-5b93-4f88-8d19-d6380ca731ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f6f187-d64d-43fc-9d24-1ec6dfa86d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cca7b77-b7c8-4a2b-961d-7cfcdbb16c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4f4952-0e6a-4f41-9ba3-1b2a65d652a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe88ea0-4f70-4a5e-a3f4-c4b40e5e174e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7662c82-82ef-4434-bae8-504af0f9f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1757a78c-b226-4713-880d-08648320704e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b2c7f-272b-46aa-a1fd-e198e34efbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23996193-4d8a-4efb-a535-6be020b34736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be93fc1a-5964-4a0e-8838-c886da6b207d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedfe572-ca77-44b2-a8f5-1caff892905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5963d59b-df9a-4cca-8a68-b9bcd1d3fd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e14bb3-024a-4c77-aa29-c6db8b770dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5753615a-f52b-4ce6-9387-bbb3316cc135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01482ad0-d9f3-42e8-8e2b-4a954647c2b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec68238-d774-40e6-b5e6-01a2e6b7a30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043c8143-3577-423d-bde9-1defe7cb0a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720f07e-567d-4e2b-9d59-a8f7e87a3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4e825a91-1209-4a1e-b3ff-efb8c9469a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75c0a21-e334-4bed-83f6-39287b08c34b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6c103e-8454-423a-b26c-35031eb529bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c817e280-a361-4bfc-9161-fd0c29ae9ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff346c-8106-488b-8a7e-f071c85cd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "358b9a7d-4b50-4c78-99a1-3044223ccd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a60883-9dd7-4d39-ba4d-2df946678abc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae12362-ed0e-4c5f-8a56-f1c50701dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed77a7d-1ce7-44c3-ab9f-aa258719a96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f0497a-6047-47fe-9f6f-023c5c0a3402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f89ceb-d221-482c-a12a-f93f63ad8efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02591204-366f-47df-ba1a-5f50674a8e47",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a2d8a-7821-4e0d-9f4d-8dced803fea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bd2286-bcd6-409a-95b5-d90076b20405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de80cf8-2654-48de-95ab-44cafade7b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69b510d-4e83-4b5f-bf34-e4e6475f2029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6956d61f-92ff-4eee-8f0b-24ca4dd21a23",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813b598c-a756-4b3c-9a6a-8a69c56207f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ec77a5-ba51-470c-a98f-afce820ab347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc09989-8986-4789-ac69-e4f712582b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0e687b-f4e1-44e0-8d30-d92d81623dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012cf6bf-5dec-480e-89eb-8a9eda420704",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a120c1-244b-4dd4-9388-7223e69cd161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb29b378-6ff5-4a4a-9c3a-2acaad415ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a0eb95-e6aa-484d-a22c-280c8df9aa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "597a90c6-5182-4811-991f-11bd0b19ab77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be00847-29ce-4794-a180-1ea479775385",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a68d4-0e7b-4272-88a8-c51e83750135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962c2be6-7fd1-481f-85e4-1aa3917b5fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e3fffc-2f96-4f8b-ac47-1bcc087a83a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fc7dc5-7a12-41f8-9ad0-a82a64e86f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ec6f25-f36c-4c78-8aa6-c04c1158d801",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa2d6b1-7b1d-454a-818b-2f48770f985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfd4f3a-7599-45f4-9c20-4608b84de774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1af4c1-a0d0-4645-9b2b-c73bf8399bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0599505d-bf1c-4f2d-b636-56bf52f42bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f41294d-c132-4c37-9086-e8bf7ff9b891",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d04615-73ad-400c-a525-06e3a401ce13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6defd2-d017-415d-8785-5bf5f4eb021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c5ca38-0f5e-47f1-b644-41b63fb50865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05d95258-4909-4788-a72e-dcc0a61d8f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c408c-f7ac-4ec6-9c6a-413486ec6763",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b872d25-5400-4b6a-a1ec-2ad8bbff35ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a8daa9-7f96-4784-9df7-0f301991e0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea5d635-37ee-41a9-a6e7-c356fcfcd3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "852ee0b3-122d-4d0e-b4dd-91de20abb658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78745b04-78b7-4f90-ad18-72d918c44284",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517c9da8-7c12-4e88-ba6d-42784369208f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5abe15-5605-4b11-82f7-19e741ba38cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cfe77d-4212-4440-8c99-7d63ed8e5e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8de55c-be1c-4cd4-80c8-6a79dd236a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49da32c-cc16-48bb-87e3-3354af4aa148",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cd444e-430a-474b-9fc1-2ac45928129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566accc7-36b4-422d-8158-22b0e96a2ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd89809b-0dbe-4552-9af1-75b0c27e5dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ce3396-f19a-4ed1-a9b4-e69b69830648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3522ff58-aaf3-4fa4-a690-1601174e6266",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c98cc36-df7f-4de9-8e65-44a8c777225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4230156-61e3-46d6-b226-2c3293f68c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb9b358-0528-4503-a1ea-c5c724da7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b64590-66e9-4a08-8fbc-176f77f41595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6f05c6-9d4f-4ca1-ba30-583cc6f8f1ed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a794e209-449b-492d-a3da-58e73ba7fd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e95eb6-196a-4b91-8da2-c4c9e01b3d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35240ec-3a69-4074-885e-bfd20ffa49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97befa80-a378-42a7-a925-95f9831753e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd25b2c6-291b-4743-aac4-42a026ba1cc1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804655c4-eaaa-46a2-9891-cdb047e95666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad3aba0-8719-4988-bb8a-428afa3a3ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56b4b85-f7b4-4582-8ffe-d1956bc2e7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5851e30a-49a2-495c-98a1-642e1e9663e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a61b39-2877-4664-9a18-2f402bfbc8cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961f67f-4fc2-4ad7-8b64-8c8530c4da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb8e560-ef73-4b03-8c3e-e942d1ee8510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cd6803-d58c-4d34-92f7-c4c9917a1cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6bc370-85a2-4cda-8f85-867c67d569cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7381b1c8-ba22-4a40-9f15-62323986cb05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb1b895-392b-4372-b546-5a070712b01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd117b40-2f9b-46ca-aaab-6da2ad87f01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbfe512-88f7-437f-9f95-8fe90c6fb9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f360bc2b-c3cf-430b-83f9-bc8909f901cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789a90ad-26b0-4ab7-b876-0076c35d28eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72574de-d709-40ba-b91c-e24fbdd40f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7c5511-83b3-4c1b-9a85-d193a75ed037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d7110c-5604-48f7-99f1-ce9d8c982ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b9209d-93af-4cb7-ab2d-398ef50335c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5971308-7508-49a3-a40c-ec7638ab1e42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58116a9e-174c-4b75-9334-d89fd02e7ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab39d4-35ff-4b8a-a92d-292b232622ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fc6b0c-c179-449b-aab6-0c62772acc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7bc350-9af1-4770-b299-22cacd2deabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a178309-454a-4c42-a764-505370c98521",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b6c6d-a615-40f8-a25c-a1b5b999b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346e889a-b1da-49e8-a60b-ee516372394b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e31ff-9c1b-49e8-ae5f-29cac46b881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4fddfe-90b9-4e1b-9442-afec6576d4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b5bb77-7225-4763-b2e3-f3076de05302",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1a037-8de2-40fd-9231-44e6bc97503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc96fdb7-f4f6-4365-b41d-bcc420fb7944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4f8575-0bda-41f1-b2a7-bb27d597bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c95d5f8-2ccd-49e6-abdd-065c7e94795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e8037c-7647-44ee-842d-3e1f72e38a98",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eed58f-3181-4517-9127-5fd7968815ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33852e59-9034-41c7-9657-1d339b3fd1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e80078b-5298-418c-99dd-7a037fddd73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96adba33-c84d-46a7-891e-afed85ded56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd3583-9fe8-4cde-a8ae-480834e1ee39",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d7440-6b9e-4e60-86da-bf1d041179e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8579f1-6bc2-45d9-b621-bb7dea691c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa7fbf8-91f2-4675-abe2-7f3392651eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "278694f4-92f1-4ff5-9d92-cf72f31764d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a768efb3-eb64-4552-a8db-8a211edde0a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d442681-6bab-4576-a21c-80656ad2d39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d5aaf3-5cb6-41f9-9301-5554007b2776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daea0fd1-95f3-46ef-8fd9-c41d35156ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a526d8f0-946a-4512-8d2a-22080f45d175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fcf661-412c-435a-b37c-e7e3c5966063",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152c483e-bc2e-452b-b0b4-2a5ed06f17a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8d3056-4fdb-4c0a-8746-35698fbcbf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cfb202-7c3c-4bbf-a4c0-52e1bbd72e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55cc168-38bc-4598-893f-b051b4d1b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edee8487-b99e-4a73-ae32-28b614dbe4fd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39337fd7-4e1d-4a29-9676-981a63b36448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c8e6a9-69e2-4748-a6bd-f1b1b68a447d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16ed45c-cf3a-43ae-a3d9-b86d758da298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de175ccd-d155-43a6-9ab1-897781b695ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc94d96-de2c-40ee-8133-fc75b6923d2c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf37d50b-5f60-4bd5-94be-9218011e05a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7391f18-f596-4f75-abdf-7dc44a0ec6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5e22c6-b1de-4054-936e-5ea0aab90027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6fe4b5-8cc3-43b5-b390-edffbb41cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c455c8-bf39-40ba-8d30-0f7af9dd635a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c072f7df-db78-4a16-9c8d-f4455476be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d219bc68-4a7f-493c-ab48-55eac2394a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4520f8-a831-4d20-96ac-26d9f4b1262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6507c80d-8784-4a06-a3e8-ae3466f91969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe39b76f-a9d8-4cdd-82fe-8fa48adbf2aa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1970a87-7c47-4626-8601-79fede8ab10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c190cb92-97d9-4a69-9102-f12754d5c49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a0b7e5-3bfe-4cad-8244-e9ba3bce6ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "095c3abc-8f10-414c-a789-6034a9957461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316f3c09-c2f0-4def-b35e-1ed9d7440bf5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107c581b-7952-4c34-b84a-a2b72abacebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01146588-890f-4b6f-afd8-980658b91c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb147fe-3c9b-45e7-a179-bb7b830580f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9456d4bb-d48e-4412-a7ff-822a7a242578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95476e79-4902-421e-812d-6d8a063a4591",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9389947c-f299-4ad1-8fb6-0ec35f922f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091d4d25-3d2f-40e7-b5f2-a8b0825f7291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae5a8fe-86f6-42a3-adaf-4503b76f532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2524d5df-8ce5-4d6c-819b-effa20f3d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7bde42-48bd-4e77-9086-4dee4880616a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb4271-17c7-4c62-beac-97fbffb0158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c261b2-9f78-4f16-9acd-c2f81fc84d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c922f8-44cb-42ff-9ce2-97424999a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a023b349-bd9e-4731-b6df-582b52136109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a296e2-581c-493b-b17c-ac0f63313b97",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37f348-14c3-4049-8cc1-3d320b4e7b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e94ccd-cf84-4507-8d24-4c71611f6b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d038e9e-713f-4b58-98fe-5bf16fca1a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e26451f2-e849-4864-b5db-47bb915b9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9a6350-0366-4af6-9d70-d4c44a5f4f45",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad19b65-914d-4554-8b4f-fb17b69ce7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd049b81-ff79-473d-acea-82e106c9494b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cc1701-79d7-422a-b350-9ad6840fe412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1c163b-cf33-42a8-b7f3-8f08a625ca81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aa5cee-3f55-43e1-8095-54669cf5ff7c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e5f2f6-bde2-40e1-8f35-c8c78c47e0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba6a1bc-cc48-45e2-9e08-90f219670b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533c3732-0ce8-4a81-a42b-53b149a2d5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ec88ea-b6b2-475c-8145-f7c2b3b415a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cb7ec9-a73d-4286-9a47-045401405792",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f490df-463f-4cde-9c31-481a155e0df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e84bc36-1a71-4384-bd24-84b8bab9993d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5536a7a-6cb5-49d9-9401-0a1c5e6b280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae781a61-664a-4da2-91c1-360596c497ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182636c3-827b-45c6-bee1-4bff714886ba",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115f2a9b-5997-4c8b-ba56-84945c59d3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdfb49d-5ad3-4686-845f-ef77b3c3b016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1797626-4e28-4aa2-a595-74131fec8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ca1e07-dea4-496a-b75e-71b5fd9903cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b71088f-d4bb-4b21-b833-fa3be3b47d95",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf54948b-3f19-4b4e-9472-cdb7a6f808bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c10caf7-a921-4e34-89f7-350f90ffdb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140a913c-fce0-4466-8a84-0afc97569848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b10efe-5a60-4186-b45a-4769181d354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca56520-0228-4c4e-9062-b9f06e4ff7d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf71c33-48da-41c3-a497-4f31d4f5e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d225abe-bc46-40df-a175-305ae9051d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fddc9b9-626a-41e9-bae0-d7e6380b354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02712ada-1bcf-4cbf-8ef5-887c2c03d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a76553-fdae-4666-85de-26407c0ad009",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c797481-8b42-44e1-bd15-b2333e7a82e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79373f64-3016-4de3-b289-b8f803a15de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22a0d8f-75b9-44c9-ae97-be70dde25046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be493eba-a9ab-486f-afaf-a8d0a526f072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35ab13d-b5ec-49fd-9a7d-3ec0a039920e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02057d2e-295c-49df-8b94-aa7afa3016aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8713e683-8e13-485d-bd2b-2dd6ee3a761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57f34ca-c617-4395-8022-5269a679d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "076f4c91-64f5-427a-a7f2-c353fa4f2c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79fd68a-3695-4a17-9134-7e619ca9be89",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19f760e-a8ac-44d2-9d5f-994060984878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88770efb-8c4d-4ec8-b413-ced82a098565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8a0fdc-e049-47e8-b72e-2265ca9145d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "327e7838-03b3-4001-966f-72d93dd2f6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60923bc2-0acd-4ab4-a9e3-93e0274e1b0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe668e7-fe31-4319-889a-7615375ffcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e698dc-5ffa-473c-b545-cbd0bc6af196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cff1e5-5fe8-44bb-9c55-a9a53ae0df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6efc767a-6d57-4714-af61-66e0978c98aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a92837a-05dd-4f6e-b401-57e8b4564bca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f526b82b-b9ad-4928-8e59-2534caa2e5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6393d49-0705-4170-8dda-176ae06f9904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bf28fe-3857-4e86-9efb-a9e6984b4058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7af7e2a8-9b89-42e8-b148-b94fb25d5ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c98938f-937e-4fdd-8ea8-490257facc2e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84153fb-4a31-4603-ad37-22a39a01c9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b0940b-991e-4732-89ad-06d528e37292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d69e92-3e91-46af-8949-38c38049acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72cec838-1976-400a-9228-c8079e631836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7238c82-14e9-4d07-9e06-097290fb6c54",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64321aa4-ed72-4db6-8225-053b80ad6862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a5a0e1-b87a-4c1b-b2c5-a3593fed774e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d7a93-5291-4317-82d6-2520b094328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d03fe1a0-8554-4144-b141-8b0f35e27509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2beacd-e294-43b0-88a5-4d1a0732669d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539359a9-f8e9-4d37-baf0-335846921d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9a4be-6133-4186-8f1a-363622ba43e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942dd1ee-b034-43e2-b1c0-cb38580b0e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e86e1a-1657-4eb2-895b-d190299af8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3569a83d-6e1e-4936-86b1-7a0852767f81",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3f6e22-bdef-4359-bca5-5cf391d69254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ca5ca1-c61b-46b5-b15b-fc873000ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78aeed9-ea80-4477-8869-6fbb09b6518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbd0e5f-c638-47e1-8349-fadc04fc3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327d415a-5a56-4595-8e07-65f683a44d63",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6de8c4-fbd1-40aa-8bfd-c6fa77c6e0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a469a-d5a9-4530-ae4d-65e449fa19ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f587c2f1-edf9-441a-a107-ab8297b8e740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa523c7-7633-4bf4-bebd-be2655b77fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59091d37-2134-4ca3-8720-2f5cb72fddc5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce45fdc-8ca7-4800-bf21-bfde95dcd2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e54e70-2d13-445f-847f-b7cf9d501f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118f412-67d0-413a-913a-2b612f4d641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52cc3af7-e22b-45fd-97e7-216d49a368d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c5af9f-528d-43ef-bc46-bec703468df6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb3680b-4d91-4d7a-bd62-fb7be662835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c8acbdd-83c9-4bbe-9f66-d3e099fe6026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39abf946-4823-4372-bd60-1e72d979ece2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "621f85df-300e-4347-8496-0219da874eb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3eae727-dd10-461f-9481-8c34ad85bb4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c774a83a-8149-4a52-b5fe-bfc658c04e9c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226fce9-f35d-4e86-91b2-a8b5e0c4c278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6134b83b-e843-4515-96ad-84f3ffbbe7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f68087a-d100-4f12-867a-2e9cc211e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73617f38-8dfb-4bc1-936e-aeef135c8951"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7a4491c-2e2c-462a-a986-46b89a4e0174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "033b9a61-2090-41d6-88ad-ce571ed1c3aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fccc2403-4906-44ef-8660-3ce98439aa8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d025d6c-04a2-462e-91bc-ef2c26608404"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15083e2d-2c0e-48ec-9a4e-4c31e17cbb29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80eae90f-b919-4998-b19d-71001cbeef8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91526eae-bd5e-4c99-b2b1-3e675082eb49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5db8ce45-f1eb-4b94-8e5d-b67b1bf77ba8"
                }
              }
            ]
          },
          {
            "id": "b681ed7e-2f9a-4b06-a4ec-1e508f24cca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea7ada50-ebe4-48ff-9c18-89c3245915e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db0a3d53-fb42-4dcc-8d1b-706f2da97f44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c8cf715-8ef4-40a2-9c5f-1073cdd79f08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1c7936b-8fe2-4605-874d-d316d48125cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7ebb34f-9f58-4caa-b762-9e0679b71dc9"
                    }
                  }
                ]
              },
              {
                "id": "85caad47-6a09-43a6-8dfb-9fddb6320af6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43909517-9571-4e8c-a743-2c9201aca0e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3fc0cc0-a92a-49a0-a281-a6d59de293b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f929d11f-d45d-45a2-a418-8d0c4e79b23c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad3f2107-7857-4903-b507-ecef12797519"
                    }
                  }
                ]
              },
              {
                "id": "5191d769-e7b4-4517-b830-9dfd01043f50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0baa6a84-29d7-43e7-b9fb-f9047f65ec53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "250caf7f-62c2-4d73-a989-78bd6ff99da5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f91ef0c-7d5d-4000-8656-3f9448a390aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91fc3d8b-471e-4bfa-8791-3cc928882ed9"
                    }
                  }
                ]
              },
              {
                "id": "3efe4c28-d289-4f3a-9c65-47ea0fb07a18",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45d3931-e557-4615-9f50-8cc67ccdee4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8365d7d2-eed6-4c28-8f89-1a2de3ca7eda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1368cbd-4ed2-4197-a0e3-2150dd02e3ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5e154789-62d4-4917-83dc-eb80e2c58e0c"
                    }
                  }
                ]
              },
              {
                "id": "8f40a7df-8575-446d-9088-dd100b1a5651",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61f2011c-e053-4b3f-b0f8-d6b4a11386e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26c528af-7815-4798-8744-1441055cb7a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a717a174-35c4-4834-a1a4-7554d6b8375d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "22775f97-f81c-4f53-9a4f-b441ccc31b9d"
                    }
                  }
                ]
              },
              {
                "id": "e15e8ead-3705-4e59-a445-1a59dff4e4fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9bebf09-899d-4e0f-a07a-ac9a5ec32576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9761f819-4e93-4fe3-8f4b-0b8a1174f6d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdba9d8c-d2dd-4ce0-9526-5df36945b168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a8ce3b1-8f8d-4120-a382-3f27afeb4ac2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c22e6f6f-c904-4eb5-9bd0-ef7149dc4cca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "736ed6d6-0502-4e46-b7c5-9790f98b551b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69eca14b-e3c7-48db-8379-6778c9e60a3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46af7e79-df2f-4819-b692-a5bbd6f6aedb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d5ab40d-f80c-49d4-91d3-fd8224ed3f3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1ec53d5f-09a2-4ec2-9985-e55f76bfd7c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be26723d-555e-4564-8375-0c40cb4ab528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "335e65dd-0201-45f3-9d6e-080d5e876581"
            }
          }
        ]
      },
      {
        "id": "d2464dfa-b2f3-470b-aa49-e956e031a632",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a4122bef-f336-4e79-a4e2-325512f9da1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5055d09e-d75d-4586-95ba-2fe60329e4d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28f35f72-eaa7-4edd-a506-d80f6edece6d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de70b5-7124-4d09-b0ad-fe5181d53f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cde5a4b-71d4-4067-b592-b3c802ffe3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1dbd09-97b6-49fa-a481-e2db64754b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc418200-b4e5-4734-9ee1-229f527c3d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04161ad5-c8ec-4385-ba84-8468b7e70791",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba15c211-ff8c-41b2-8042-b63349422983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f45a2e-e19c-40ab-be6a-38c1a40b754b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84f0e8-316e-4761-b60c-e1b6730af83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf598b05-55fb-4ba3-970f-9fb03f20d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2edd25e-c848-4394-8487-9d39cfad5a87",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28407a8c-14f2-4029-bc21-235198ef4823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0dbba5-e898-4ff2-86d0-a61d61eda37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866a781-c26a-468f-9e86-6875390333f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13b8a16-bd6a-4e7c-b080-8a39dc217eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d373e1-4438-4f1d-ab0b-bd83523859d3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a774569e-96ad-4077-8f9c-fede02b93ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c89d3cb-d99f-4b92-b4e6-a624f5986cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3022f1a-5800-4eb7-8d94-2d6dde9a89c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afbd79c-fcfb-4355-9f95-2aa5df0068f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f997aa-89ef-40f1-bb74-518b80083769",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb18030-f7a7-4c21-935e-0ecedc6ee688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2832039a-6170-498d-b0c5-a8333be2ecc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54109378-a4b7-46d7-8090-10c9592010b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91020de-d83b-4f3c-9882-a7e7b5cba251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40007138-8244-4a68-92c8-124b61c4a87b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5a44fc-3a1f-433a-8238-22f81e23db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e027e600-e9dd-4508-b969-11bbab335a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be93c36c-6bfb-4473-8dbf-800536d2c120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66d2020-1d2b-4580-b24c-ea81c4babdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdb48d8-3e2f-4f22-a8e4-08883128f6b4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f22b1a-4f0c-42c2-a8b6-9401bcf4ba0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e53b0e-f377-4c7e-b42c-f43ec1ae2756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7054072f-b38b-4339-9b12-5ea3c267cd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9baf7b13-7c6d-4387-9b66-1b8983a4fe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80434bfd-ac8f-4adf-9acb-fd21eaf29c61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce099cc-5b26-4578-b1c6-67b3cf0a7fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80b6944-38e8-482e-b3ba-4ed0ff4858f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e01643-ff9f-49ec-938f-f1ad2cfdb19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2ca40f-0f4b-4773-94ba-15cc1c220417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78279237-c8c3-4ab9-8adc-64aeed3f88fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b521ba-338e-4118-bd25-b949306bf515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f14275-b229-445f-b1c6-d4471d385a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde8b3b2-2f26-40a3-8682-09cce987b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e835a86-400c-4c13-8554-5c26c8f974fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e01b21-82b4-4094-aca7-96d14704def2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01e2059-39c0-4c9c-846d-c3ae480f2bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9825dd2-ab45-4caf-881c-3f83d34ae864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532b87ad-70ea-47d7-bd3a-8a6c9fe288fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d248eecc-7a6e-44e2-b0c2-4ac1666c8472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f21d88-ae90-4465-960f-c586317a18ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad98f9fd-ab1f-4c82-a986-96b3af2a4a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5172b2-42fe-4616-9e28-66e571c1138a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585b08fd-11ca-403b-a78c-65d204765ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fead987d-4450-4d05-b972-1dd7a39a5c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3449a88-d29b-4d14-b4d0-61076a9ba68e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b874a8-2a0b-43c7-b66d-4ad8f33a8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a234d4c9-a035-4401-8d6b-6a5266b3c090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11400130-0884-48e8-b677-8e3870d3b6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04bd7fa2-2231-4872-9e4a-8adca818a984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe4af1a-8fcc-4cbb-9314-d8c951b8f53c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb5c5f-ce43-4c38-b8d8-a93eef04f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f69654-9d26-4274-bd64-b0b54f07aff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6105db88-605b-473a-b704-9184e15cdbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c749702-888c-470a-848e-1dc9ce21ce6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fb18bc-8e27-4cab-8062-22718c97748e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d55d5a-cfd2-4792-955b-1cf6a8da466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c859aa-bfa7-4343-83ef-6cd2a0d7a1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f130d5-abc5-4746-b6fb-5dc381f2d876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee1af62-c699-4899-a1fb-1238c30064e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370e092-466f-4b4e-b2f9-c279fd6d02b4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d2613f-0423-430a-a18d-e349e197109f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40f86c1-8013-4b49-9e12-58b52ef3a7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a5ee1e-34b1-419d-a99b-97ca60aa6284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58caf212-036f-4676-aead-282d59f3aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc9af5-736b-4113-a4fb-590b339da0ae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38d63b-4dac-4d65-9bc7-eaae67503eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f02d831-12f9-40eb-a76d-e206ad4fa019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb09c73-61cc-462f-b0b6-9a56612be8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c969d22-2e7d-43c4-9d80-1eb3f7c98435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6f04a6-9574-4386-ac2a-23c1cb3cff9f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fd0767-1dd5-45a0-a2a8-212c3f006842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31a9a7b-e4ac-4685-89ea-a6be8996cf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e879fdc-67cb-4159-813b-0d55064894b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b917711e-062f-4758-b662-e488ef46489e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20b4fb-5c18-48c4-892b-deb5c06a6146",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6abb585-05e9-4318-b9f9-06e22f8956a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf004358-7c18-423c-a78a-cbf765948596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fa98ca-fade-4da6-84fb-96e8cd79e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1704b572-be3e-4eca-b01a-4a53eb63f8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155bc635-f23c-48ff-a423-02a0e25468f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b99f0c-8a1c-43bd-a155-09c223e6aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cd05e5-5768-4fab-a84f-fdb6e1371495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ae290f-7bdf-496c-b323-67f6e7e44ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27aa0cd9-e6e1-4c63-a217-6d55cd2ea1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945babd-9a8d-4661-b2f3-657db6d5d49e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f8985-f4b6-4b9b-867a-c67d20fd2880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c371c15f-0174-4f03-9d14-3ddae5258b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558116b9-01f9-435c-be58-d72d4ef3752b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36fc144d-acf2-4e1a-a9e0-5386d489e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cd83cb-7fc6-4dd0-a7f8-4e493f69f2d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c468be3d-0d8e-4336-8847-f580275d07e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa914f7e-244c-402f-9bb9-bae77d3b714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3976105-086f-4ace-b0ce-22d1a268e23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbe743b-ebcf-4c3e-8dad-cc1f5dcdc165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0337edc2-b1d4-4ebc-a903-7d841ffe5c21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313a443a-4868-4774-af47-4e969642f46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6457c57-0603-4b7b-beb1-21509b55867e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f544c2-562d-4811-9bdd-aff6c54bd5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61dbedd-398f-4c77-a862-b2a5d5478389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6925d3ae-5b4d-43e8-a9cd-161cee35e956",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d5868-3b72-47b2-b046-f00a81967e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2d2c9c-2066-48b2-a4f1-7d1d6164aa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ed30e-9f27-4968-b0f0-1250eac1c117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bff5f51-70d2-4ad8-8ff4-695f443951c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c990af64-7e2f-4c9d-919c-5ef11e242f6c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67774239-734d-4a24-b4e5-da5e129e55ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96902059-3b67-4841-bfb6-0a1d83caf019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e209eb2-88a8-427a-88a7-e5ee7a497834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b27c6f3-8bc3-4e49-879b-ee61376ab9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73702ef2-928c-4ade-a8b3-70fcb1c945ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851469c-48ec-47e5-a3d5-acd336539c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2240773-7b2a-40f3-a251-9292858489fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e672de5-0a93-48e3-9efc-25274dd8ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99cf629f-e25b-48c5-83e6-0f82885ac637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0e3924-4f7d-4c4d-ba1d-37d8c8d3a356",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fade078a-a0d2-4598-860e-ce97447b9923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b38d88-a506-4fac-adda-add24ba5bb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18200570-befe-453f-b5fc-b07b37e8ea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f6a0e3-8aa6-44ee-a2b2-ce8a80e40763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99551f88-8160-4a30-a5d2-862dcf40fd40",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4156a2f-df52-4d34-b13a-e439c88f7759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ec8769-e91e-489e-b4df-422a58dd12f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dfa142-7311-4efa-847c-eedc2a6a9947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b600e2d1-0611-42ba-af0c-334211663aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77da895d-b73f-49b2-9e6b-ad1ee918d868",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4489b02c-d35b-4152-acde-c594690c6b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701a3eee-f98e-4ce9-abac-35ba29fc83d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38219fdd-e5fc-4813-b551-94331a16d71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3a4ea1-b1ea-4fce-9a9b-f6d56b685766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf85ee5-735d-4648-b4d8-46d78a15d328",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b723587-9ee3-4a27-af90-1e3ad7016fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a2f885-642b-4519-93b4-0349dedbc16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406e3e0-dd3a-464a-b9ab-543830b549e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed6ac95-78a0-4592-a205-9f0d24aa9e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ae46b-607b-4e15-97df-10acdc14b71b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f929dce6-304b-4b1e-92fb-b9e1461cdf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31895d6a-99cb-41b9-9b93-21747fe04eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87df1952-02e5-4bf0-a8ff-7641c0bf4c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d24adc-5051-4b0a-b29a-55c8a2f6632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3688ee82-86e1-4e6a-a926-1a569414d1d4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193b6e04-95c1-4a1c-94f0-aeac5643ca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55464d4-b108-4643-823d-abdfe403fca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a433249-2773-485a-a682-4e50c74db54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f76fd7-3a9d-4c4c-b1d4-15a99736abc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea816b5d-cefe-44d5-99c7-8a4ef3d1c246",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901781c0-09aa-4dfa-a693-e0a833b01543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2de27f-7077-460f-91ee-b63cbfc91849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e135de-8e20-4f51-a3b7-5093e58c68b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fd813d-489b-4743-9bf7-c5602c3a4d55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55786216-da47-4a48-b63b-230a8e93db1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3522e3e8-ca62-4e6f-a790-ba1fc39a942e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a90feac-6a1e-4e7a-b568-fda35edda659",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb193ff-d5b2-481a-bf85-e9d8e64a2483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febfee66-9f52-48eb-897a-3c8b6c487d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acf82888-6877-4a0a-8e6e-5323e08a60a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4a75c5c-fa07-4586-900f-28308364a5b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8d1a03a-ed8f-47a2-af31-c399e00e44c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f41e1b-02dc-4d20-a8ed-48a8eb4773fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5afd2cfc-6529-47c6-b445-d7b85cdcd909"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b37a562-1f17-4359-a961-a2ff776ab6ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "054b3751-b6bf-4684-8e68-629809e83b99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b32891c2-41fe-4d9e-83eb-87598025c74a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4035b430-ff38-47a5-a702-6b6d74f87c15"
            }
          }
        ]
      },
      {
        "id": "719f1181-e11c-4fbe-90ba-dc29c0b7e3d0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bcabde61-66ac-40c3-92ee-50c0e7d2ef7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0f4ef29-de52-417e-a000-216318bcbddf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f695432d-e74e-4a3d-aeff-7ca066e942e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9410de3f-367f-4e8d-96b6-7c6bd91bb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecb7a61-dd84-4c2a-8b65-fbf939217b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76393535-689b-4a9a-81a6-c964eaa4f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc15543-3dfc-4383-80d2-139f6a1b4010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f388a280-5e50-4dd8-9f3d-d0830b5e142d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604891f4-04b3-429a-9fab-641c507013f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ffac3a-b49c-41fe-9100-2f749b0867d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160fbd5-951d-41c1-a386-3f004214edf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c016ec3-528e-48f7-a3c4-16d977d9256c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521a3028-458a-4172-b5d4-025f8a169b7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eb66b5-7e2e-4ccf-b455-72a40912559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74558f0b-8549-427e-bd90-ab65656efe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7675142-906e-4cc1-a1d2-aa9310d34180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c44d1e-ed1e-4e28-8d5e-d2e0f2a5ef49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85501f29-e444-4c56-b8b9-4a98476550a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c804e13-4419-4353-9a49-374cc197fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04721f90-cb9e-49d0-9644-a95f4ac5c671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e090a0c0-3c07-44af-ac68-8f8b870a3d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89742422-9567-4d7a-aafd-a89cef8eb208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c05ef-116a-4804-a84d-eeb02f6cf691",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083401cb-4f51-4793-9e6e-223391de8fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb4225-a3bf-4cb9-a51b-ef7f1bc85d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142716a1-6352-4749-a985-8cc51d34f2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "597d5ed2-b780-4385-9aba-882904dc3e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c10753-a486-452b-b894-27942bb29d50",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2e862-a2b5-4040-878f-3a40207de15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fca09d-c7e6-42ca-9a0c-bca2ecb9de2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a8768d-07a2-4a24-8636-f4c84a736d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee3e551-01cb-4c97-a8a8-52fd93078161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924635d7-3c6d-4749-a711-1a90f016bd2c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0a74cc-b2f1-45ca-8474-248082c03821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6b047d-f6c9-4725-89e3-45313b226f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520f9a7-bf33-4478-a5b0-c8fc3953f581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b76b86d-9237-44db-8404-0ef4e5281d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee433ad-5983-46eb-9e54-3a5d8d4ac21a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509d23c7-ab7f-4a83-903d-c2f0ffb0c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7a666a-e6d0-4830-83bb-be0ffb22d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e069b9-1f1b-4a9c-8426-4f82e08ca2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c0e85e-0f0d-4895-80fa-de62967ba377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c96e10d-708d-4a70-865a-1cd74648e317",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c949a2-7d6d-4900-acf8-112991412ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710a6553-56b1-4fb7-9e0b-7ea35919dfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac05e4f-f581-4f0a-8532-35332456194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51485ac9-1d13-4f96-b699-81bf864ccd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1256aa66-aa3e-41ca-891c-299e1847e756",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5983adff-612e-4968-9008-87d399f93ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785212b2-8565-4cbb-877f-713cb57b55ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad71d33a-dc5b-4129-bd50-9d36df37db14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a75498-6a35-48ae-9c05-b0ebc1cbb13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cc0912-e1b4-412d-bc9f-c339182e8c6e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6467b5-7d8e-4155-9ab8-6ee54702b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eb029e-3e32-405e-b3f1-f4824d981483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb4fac8-e3fb-4695-a71e-3e770cd26f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c839ccf2-b2a0-4fe4-91f7-2f7b816b0d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b8f41-edb0-4c0b-b597-0de8dd63b9a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c464d-cc2c-4752-9841-e407e6859c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbeb2239-4256-4f4d-91a1-f05849c0fb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0101a509-486d-49bc-bcb7-8b411cd988be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d86e5971-3156-4a24-8d42-1e6ca411a60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f084612d-6d7d-4df8-899c-6576b63d37a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3e4f0-8296-40e8-a5ef-892946e7f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8549fc24-0883-41aa-92b9-5b207f5cbf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b5d3d9-4d8c-45b4-baa1-9533a36aeb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec98016-084a-444b-9566-cd5065521a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab84373-001b-4ea1-ab99-f474a908c32d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd95153-e68b-4c3c-99cb-027f92eefe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfa5be7-4ed8-4452-8c10-e6a1cd663f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d3210e-0af3-439b-b679-c8193dd2c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa84c54f-7b1b-47c1-b851-1df892f3836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b59e2ea-d879-4640-805a-b8a69a21d74f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8adcba-9d65-445a-a62f-7e6587618c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e44d20-ebc5-4658-9b17-67924490322b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc40ce-b554-4ca0-88c5-ed6e8082d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46c3d0d-04b2-4973-a648-9c35e685e3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcba35bf-664f-40de-a2f7-74e5745ed39e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdbb8c5-a4b2-4a9d-aa23-231c801d8412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42f0b11-34bb-44c2-b5b3-7c3c48fb05a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77369f46-5aca-4e0f-8dcd-9d836669d479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "322d29e9-b813-40c5-8f43-ccb2af9d38af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c158c1-7400-468b-9e90-f66fab372492",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08787c9-73a4-449a-894b-b6a346560f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80723ea-9453-4325-80cb-2d77cda06410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71643889-6f46-4423-b034-cf301b21bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8417a4-b5ad-4b99-ba2d-36cab0447ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95988bb-31b0-4a19-b6ab-ef103c432015",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df699a64-4d2a-45ab-8f5b-e27d8b40345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc17a9f3-f707-4388-91f5-569f928bc976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c89a693-d94b-4c82-854e-f860f19c8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2707177a-5106-4788-855a-ca64d19de361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3e1e62-839a-4332-bedc-4dca25c0f3c5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0269417-e59f-4f37-a6c2-7e82d1122b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577a6d74-aec1-4cae-af9b-34dab47afef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6782880-c2fe-4976-93d0-c15d27f082e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84097755-00bb-4d84-ab98-469e7db8f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801b94b7-1d5c-41aa-8c25-81c0b23d7a0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d3976-be9d-4ee3-96fe-3aef4954649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c1d290-2b1b-415b-b479-1bbcd00c3d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15924d24-21dd-4e1c-a653-40edc476c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5491f49f-43e0-4477-bb19-92e41a39a20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49231cee-5fe5-4031-b36b-26de5f3bf59c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0765b-8bc8-49e1-9b31-bfc2d562b8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6898466d-372c-4fbf-8c52-a53a4019c030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0afd85-8ee2-4a83-8ed2-5358b8f2990b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a55bb2-31ed-43c0-86eb-f68691022f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df50dd82-39ad-434c-8f05-1337ed638d13",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec2a234-883d-41e3-aacc-10ba18b1824b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d47638-02e8-4063-85b5-a0bd47743bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4297b7e-6d91-4ad0-9f3d-3b7569d29066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6afd673d-1db4-454e-8242-b8dbe39b3305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e25f0ef-db9a-491b-8d2d-44fc3a8e975c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addf66d0-2886-438e-821c-fb02a1055708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e566ee78-696d-46a8-86ec-16f5c6c39435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf38a5c-9896-47cd-b933-994a6d5d84e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397904ca-051b-4d2f-a4c0-9010aad5cd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64132d8a-d332-4813-90b7-d5638edd167c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246a358e-ae21-45fa-a673-60c39369a9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99703f25-b739-4fc3-8716-890d3622abaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52961a6b-1379-4c48-b051-ecc919104ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c8c51b-6747-43b4-8b2a-88aae8b4a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c75cabf-dc76-46b2-9d7e-920b2d22a9d8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d568642-b9a6-4ce9-970d-7f5154e2f1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66517fb-0746-448b-9a99-7a7df7db7935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5491ff-0261-42e2-a88a-a158d40d7d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "418e14c1-34d3-4ebb-972e-20e59ad4ad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c736f4fa-3f14-4c98-84fb-5d23608b6138",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fb571f-be70-47ea-884b-7288fe5b3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab36773-40e0-4e2b-9e82-18d767a340e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16036065-fbe0-4911-b56a-9106ce3df0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8660fac7-8c89-4fae-937d-346d5dfb88ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c332af9d-9af3-4b08-81d4-f16ffcb414c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfd270f-16e5-4aa4-a289-94cb4c79dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd03a33-bc3b-48bf-b14e-e2c8628a88f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bffd62-3f60-4e86-b0e8-b6e2029db6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0d3f17-2d0d-46b8-84a8-b65b3ae0cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44951d9-06bc-4866-b080-512f7f5544a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece84a34-17f6-4681-b5bb-1dd7106064b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760d1e20-029f-4bd1-bc9d-55f71dc9e730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9079170c-f3e7-4ac5-bc65-ec5e7faae135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7def873e-3de4-45db-9365-9bf15b300133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee2389b-94b5-429e-b446-42cdf3085080",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02b322a-8a6e-4730-8416-3e1c4edf12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168e260b-76b1-40c2-a217-74c2843d63d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2150f76-df95-4952-b48c-5a7dae7f250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6306bed4-5c71-466c-9210-a18f23b72561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39e676-5197-4b45-b9ed-a800d77cb1dc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea68fa0c-566b-486a-b778-08a18fbed2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bc5977-f1ac-415d-9785-c31302ae2a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a55a04-36f8-4236-b7eb-3bb50728943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6b0d1e-0448-4dfc-bc33-0fce5ac1a405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695b2bb6-8728-4222-8f69-39f1c181311e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d104d678-e5e5-4157-80c0-026ec7872244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b3cf83-d6db-4bbb-a986-feb21e4693f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e05bf7-9293-4b1d-9900-baaf609fac7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7e57b3-e406-41a8-b8fd-81f60aeec6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60733207-45bd-47db-8658-5cd5ac4a788e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d70e0-4dca-4388-8dd4-b1a54ec1a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6f1637-2d91-40d8-bb72-93e9217dd522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf7b957-6080-4810-ad48-a01c2facc7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca891bd7-6977-4ee6-863c-83d9a83f8395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19be327-70c5-49be-b443-d1b03faeb272",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70a458-f8b9-4a22-a48a-3bfc974cf4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a51f1b4-c14d-4fad-a94f-0d1fb22e4a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41f04c-7ae4-4d3f-8e96-4706827c782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21267115-e36d-40e4-8c34-665996a7c915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afcfcef-eae4-48f1-b6dd-00c4619302fe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b67c44-f49c-40cf-88f7-d5e084b80f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c5beb4-5946-40cd-aeea-110cc6a155c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e942666f-2911-47cb-a802-18df05bd32da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b32056-9e92-4a54-8fe1-44c11618aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32df238f-b29d-4b06-a50a-6e5f3320e38b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3712f991-d1b4-44e6-a37d-e0fc1624ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0875ba-60cd-4606-a0e8-b52922419af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5300578f-0510-4342-8295-4d9004a6f66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "193506e1-d062-4540-add6-ab9df43b7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b87bf-7331-4757-9cf7-e3f557c7a42c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d491b221-da4b-447e-b479-d35f40353eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4399185-bfed-45a0-a210-d8683aef9824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2751e4-8850-4d5a-b410-c6c7914d8b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd221a7-168b-404b-8d6b-aa06851e18d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0c5a0a-e2d8-42d2-90b9-7585a28dd23d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1d2c61-a111-41fe-9e2d-6dfd8552492f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3137d3e5-6cfa-4cb0-9753-920a7b6c21c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a8dfb-b6e3-4048-8311-547934c78a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63560ffc-36af-4874-b783-40b16c31de21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c56c19ab-1446-4e8a-ab9c-c6cf0b8977b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36307777-13a9-4d16-93b4-a3beaea25cc3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3d7d6a-688f-44f5-84cd-862e6d54d8bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeee6c6-7e44-480e-9d0b-8d5b939b7e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470878c4-1760-4793-8860-83a1ec901c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a38e32e6-9cd5-49ca-bf72-2189405f9f70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbfd9481-dcc3-43b1-930a-65fbbd308acd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c911e271-0ef8-417e-a793-01ce5b237eca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac1bc72e-8b1e-4afb-b6db-ba8270e04e41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d99e33d-2a62-4fd0-9b4b-41bfea0bfeef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e32e3e94-3bfd-4a8a-8487-0679d54698ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "22d11018-e541-450e-86be-b41affaab362"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "744ace25-83d2-40b9-8db3-6501db34c6b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c5c91c0-9e78-417e-a228-24e306c94bc4"
            }
          }
        ]
      },
      {
        "id": "cc0975e0-cabf-423b-836a-9796a59f6953",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b1db6918-5659-4510-8038-c07591d4c879",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a90b0be-a2a9-4a39-b10c-2563e32d3412",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e751328-ddfb-4230-bf92-68480c5ad726",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ae83d-c9c9-4b1b-b72b-57170ff1e1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf2bb71-57da-4bc4-abef-da29d7497522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585c8b09-04db-446e-b559-3470eddabc0a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234850cc-dd57-4794-90c6-92f14b2b5d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d926796-c22c-4ec3-a592-72ec43713076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6ede26-65e4-47cd-bfdf-51f06ba0a1be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ddb59-b372-4dd0-ad39-a8acc9c4be0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8419d45-3fe4-4d5a-8545-e14a5f5d1eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e89588a-b73b-4a79-ab95-70fc4046878b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19352b9f-8be5-4f68-b0c6-b6324841cfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6710d4c-6913-4a88-81c9-5769bd9ba93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238531df-ef12-4875-9709-823fa101d933",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ec9c05-84fb-4487-a1b6-2478521aef42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91df5efa-21ba-46eb-b470-69682572442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf5522e-3e4a-4c15-a9fd-556fdcabbb4a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04656c10-ae2f-4d7e-a2fc-4a14e3bc81b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32bd9f4-f623-49ad-a5cf-12c951da3a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41322a89-0f79-4ff3-8668-bc9aa753b041",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5208a02-39f1-4147-b006-fc30db793385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c568b906-9335-4d01-b00d-c4cc0b0ab8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c612586c-6dd2-4419-ab16-6798938dfa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc21c054-9b63-4802-84bd-e69bad30bf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70381a4-a7cf-4a39-ad9b-e42a6d6504b1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d4fb74-4d11-4974-bf6b-d3b6ebbc5870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8efff156-6044-4054-a51f-8df426dec3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bfb695-b8ef-4481-84ab-ac52ea4d3495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d74d1a-1502-4b6f-b20d-14edeb5f38d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c80125-21ad-4e6e-8d85-cdf166f033e5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f738a7-3bd0-4a60-a83c-118128459626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c53cf9-ee11-4eda-a5a5-ea32a56f3b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc85498-e76a-4feb-bffc-75af2258397d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be2d427-5d74-4bc1-908c-c0b3f87e0d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c5a22d-d0c4-495c-9866-629950df560b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a910e208-ee07-4b93-8e67-eca942de8d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af91e9b2-6f4a-4acc-83c0-b0f4d8740958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773fe9e9-1d24-4ed1-a541-2a30172935b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52415996-c1ed-49fe-a64b-b7f19c3a1a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b3caa-d839-4559-8c9a-c3b666cf2f8e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab60eaa-a926-4f84-9656-d130c97dba43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e12ea0-1fb3-4049-9942-9bd6eb1fb6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55de44d4-19af-4faa-a3d2-124b07a887a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513222f1-1b6c-4df1-bc9d-904e032b39db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21743d04-6ecf-4517-950e-fc468459f5ef",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248ac5f8-6a86-4cd2-aa5d-d1f60917c628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d7d876-1285-47a2-a20a-208803b0a46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35092d00-7ee7-4287-9ead-e67bd3a18fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd0f52f-3add-467d-ad8d-0d4b2b87a6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519ca301-002d-4f43-bd39-ff918a19fedb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac191e2-1752-4b58-a315-c9e2d7cda477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acca6f00-4e35-49fa-9697-991207dfe3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c7045d-3cb7-45c8-94f5-3bc6e92fe3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccdaa6e-7f43-4d68-aead-2177b33fee84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9a4c3-595d-4f6d-92ad-dd4752613f1f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1573d3-806b-43cd-83a7-fae222ef638c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552cf1e4-1b44-4c3f-91b0-e4740413f39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c6ecc5-f5f5-4f60-b266-72c18e47dc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0cc9e4-e1dd-4f93-8589-61bbf4439574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedba15a-b440-4079-8583-30ef686a5b15",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84ebee4-a08c-4624-ae53-f3fc5dee0517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fc1196-3065-439c-8101-3ea5b24a3ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c77e90-88a2-46f2-81d0-625aa54cff8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaee8225-714c-41cc-9c22-b265ba1b71e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690ee9da-7741-412a-8cbb-436501eefb0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9c6567-89d6-451c-a667-009aafc628ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4fc43c-9964-4869-afce-2ba016683383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a281a6-f21d-4cc8-b2f5-248e97383ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0459b7-a758-4c59-bb69-fad9ca1e5803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc1fcc7-4cf6-48f0-9fea-45332a1bdba9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee7003a-fed5-4cbf-8a57-f6dd488fcf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f816c374-2dc4-491b-8647-76138ded5449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76409c82-a0e8-4b09-be65-b3d17e7b8a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719f959a-f2ba-4ea9-93d0-bbf3d742de5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8ceb3c-9666-4fdf-9aec-10148ef262d6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49f13f2-5913-40ca-b73c-2e4753d6f9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871ac246-6551-43ee-a221-a0d256dbe2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ef9e98-40dc-411d-aa9d-87c2ea9ee573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83961571-7bf9-4028-869d-3c956bdfafad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8e16a-6e19-4ac2-974f-e0d7b6ba8845",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a73cb67-c54d-4552-924f-4f54c9e03c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf831ff-5c59-4a51-9fdf-0ca0e9ac0e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36bfa6-5638-4c8e-95f5-be4134cbc4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c904bb4-d2a7-4bb5-a368-521fa8ee367d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb04aab3-7a9e-4899-b850-e2a6289b7963",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d928f6c9-8738-4f82-8e7b-2142c8f04d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757d03cc-3402-413d-88a3-884799ca2d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a5822-844b-441f-99dc-4954775467d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d80b29e-8471-41ce-add2-47708ea002d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0215d258-c732-4aba-8019-73175a0e525b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d678fd94-f319-441e-93d0-ed52d3318c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fa0216-732f-4d28-bc25-2abb12d29a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178db20d-7bc2-4069-b5ce-bdfdc17dc8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2137e143-f0b9-49c4-9194-cb4d529cdaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8a3fa0-bc91-491a-aae7-57d5eb5e8c40",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5a4c5b-ad03-4b9a-ab71-08aebedfc8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffc7ab9-aec0-4457-8330-d6c0e488911b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4045ebf-c8e7-46e6-87e4-8da11b947cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbbf6c3-6f70-4db2-888c-669519b9cc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e1853d-ae72-4dac-aa55-9e342408f346",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be73b049-68ba-4e14-a490-d77d4ef80b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1286635f-bea6-4831-969f-ebe4edcef976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4707864d-07a6-4acd-adc4-39144f8074a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909a6e85-2927-44c8-a172-3d0539f31d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc59146-4472-4451-b2ad-0b99d95d54c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85d34db-d34b-4e1c-9a95-0c0858e587a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ab76fd-7165-4032-9dd7-79965037788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f18ca30-ee0b-480a-bc3c-6a8a8e2a3d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32abf5a6-37c4-4e7d-9d54-54312413bd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca3c41-c65a-443f-a859-13d88c85f770",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fabc5d-3982-4c83-9f2a-edbff73d2a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7e9a3b-6bc7-4957-8e8e-5e45f9c21b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f564f1a5-8f14-4029-b5c5-082931dec281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3282de5f-99c9-451f-b670-672df070c142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1275bc2f-251d-4a6b-8151-01e0f7b3fa64",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefdfb58-c640-44b9-b159-21ebc0ebb55d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d76f05-57f2-4f26-86c3-e0f52540adfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d044911-c498-43bd-a255-2166b192f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9958a8-9d65-47c8-855b-76851c798184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7279c8d-5dcf-41c2-8bc8-70685d0eb5f4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609f4632-2bbd-44a4-b694-dd120c21ea29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0268be26-8350-4664-8119-82f6e3d61c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7edbb71-b9dc-453d-94db-da96e658abb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0067e2-85f3-4edb-900a-9b7fa7e372fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af74488-d963-4e49-848d-ca9c1156038f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe31a0ac-8e3e-4592-b764-d7f11ecebd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83e08e1-623e-49e7-b566-f6db6bb00959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462e3001-f43b-4893-82e9-d120f7bbf280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2c9e21-5cb4-4375-9142-493f52d3dde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e02a353-0eb9-4d9a-bbdd-cee216f94f96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db1dcc7-b72f-4936-807f-b25e95691be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b72189c-a0ae-402a-a2b4-64fea2eea02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d026920-068a-4ef1-9903-014e8f547871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9baab6b-fe41-4119-a499-2a27b6cfe2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d447dc-1a20-45b9-9439-382b2e1b9fe9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c5d6f3-770e-4cb9-813d-cd2814ec0ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6d5170-e18d-481e-ac16-6de33f74ea3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d96dfd-90a0-4595-a5a2-23f537c80c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b858c4a1-959c-48b2-82e3-bb4b5d4dd805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9957ca-ee32-4c12-8566-bf56e31b0b5e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11cf6e2-ef27-4083-b516-06a01f2ae0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c62620-0185-4689-9472-d04240bed058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11a4620-6750-401e-9669-417453e01d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb174f-eab0-4dfc-8b5b-4f8671f773e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f36f3fe-7106-464e-868a-ae49d1448aa2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5170e5d-53d3-4f1d-936e-202827b92fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d18c8b-102e-4709-af6a-2cc69fcfbd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc53f94-d852-4c9f-8ff1-e71a93dca5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da40d066-41b4-4801-b231-9d6e3d6188b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e036848-3f13-41b1-ad23-d7092706c960",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155efcc-52a9-4255-a790-fcef3eb3d6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e959cf7-12e0-4bab-9812-5066395d8e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c94f444-9acd-4e42-bc54-b404eafe9224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5643b6-200c-4e43-97a2-c4051c6db5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15be201c-0c54-46f5-b17d-e1b3421d108f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ad5665-5832-4c91-9ce5-562f63618a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b24363-2006-490c-8f76-181764879b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9a7a6d-8b31-4a8f-aff9-cd960975d11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2281153e-6c91-43f2-8397-2f9c97cfa6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc7d910-8ad2-451b-8b92-4e7b9dd1062a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a691e26a-43c2-4e65-85fc-6621d6bf96dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c188e9-0b7b-415f-92bf-f3ea94d68795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5f43f8-ccfd-496e-a8da-66fe66d7ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02891556-aca0-4c4f-8d27-3c392d798e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdb0ab0-9b9d-4a7e-9a2f-e6e31ff19826",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29522555-6189-43ff-8905-37139f7c07d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c684bf-021d-4be9-84d0-4619d014cdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb3c0b-b5ef-4474-9ab7-03b6839226a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7934e9b-f9fd-4a45-a313-e30365d4929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7c232a-fa5a-43fb-aba7-129fa4d7315c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11344ba2-825e-437c-aa0b-45c9d9ac649e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686659ca-555c-4284-a830-e2af6c060853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38282a58-573d-4797-88ca-73b949d7e76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557a5396-b2f6-464e-8ac4-9f004ce7cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c664866-a0d0-4001-bfb9-5534ae17e69a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba25403-3782-4e6c-8539-9e3ef35e3afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260b4dad-753e-463e-bf8b-ec4d94a86e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e098505-2319-48e0-ac19-c5e3f6c85d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a422ea50-329b-4c4e-aeeb-636acc6b20ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421e6e28-51f6-4400-a0a3-98996227cbf9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e3e805-10a4-486e-8699-769080b3801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae4cdb4-0432-4896-baf2-26795089d821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e908eb1-492f-42aa-8b91-dbbcd6b45e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e6e9e6-a0d4-44c3-9e78-eb881e1fac98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac5edba-85a4-48b7-9ba9-2c9dfa159a79",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cffb73-82e1-46e5-be82-43d522396f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587ccfde-51b9-44d9-b5e7-908a6ec09c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf263fb-8238-4239-9390-7dbf8c210972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e054fff-9d05-4378-a430-def17b13798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cff223-e5e2-487c-9ec8-84b9b2dc47fa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bab9ba0-6b7e-495f-adfe-aef6728d0ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaaece0-43d0-4a56-8be4-cc518a56e07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a704bbd-54ff-4b35-b7c2-1c10e91a17b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3648bf-9360-4a19-bb52-037c9e29a410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231f7660-fb5f-495c-94f8-5e034b21acd9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff424f5-04f6-419f-af90-dd2a979a7b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f33de-be3a-49d5-a605-3087c110ab14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a0d933-5f81-410d-a65a-ef480fbfa236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136ad0f4-4f4a-4460-9881-b2efa7ddaea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfbe2a1-7b8d-4787-9ec5-b25b486af679",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d582e33-668a-4700-9643-ec4fe1e8b6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1953d505-4891-4631-ba0d-c4824c7d3ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48635c0a-82f4-4d05-9d5f-f4a5a2b30b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5f1b80-74cc-458a-81cb-1b6e9443086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07455ac7-fc88-4a68-a23f-ace8b31b7419",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6609a-1742-491e-96a1-3d8e68c1051c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb4081-cee1-47b2-9bfe-e0f5546a2857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e128c2-0929-4731-96e0-6eaad870b2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c778929-9b32-4007-b833-6f853296b976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b74793e-ed1d-4a0f-b8a1-3993cca94321",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f16ba5-2c27-4a0a-af01-7ad05e1509a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70e26ad-610e-41c6-9c4a-e480e1b845e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353671b9-a692-4660-b3a1-d8bfabdb96aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd9b908-9a53-4733-b28e-600db2a0cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2e9a3a-9729-41b0-8b39-f1d82e6b6cb8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346c2adb-bf20-4b25-b473-a7417717200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea9ea17-fde3-4450-9f57-dfa41b5662a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbc8dbe-6466-4c94-8fa4-10427c2977c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf6f6a9-8690-4995-80de-81ee2ad4243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55770c1-e9a7-419e-a08b-6dd528becce4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45dfe28-e3e0-4582-9b25-5968fd2536fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bc5877-a85b-44d5-a236-d4ca41af37ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e67ca9a-21bb-4fbd-82b8-c061eb9464d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0246f3e-c197-4121-ab03-5b608e669f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e531eb0d-6a3a-4d02-ba14-2cbb38fe3747",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68798f8e-2f23-4694-9fb6-eee3e4b21be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256a01a2-abac-467d-95e5-23b9b47a8afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a5fd2-fd51-4b3c-8a80-f107b7ae67f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c9b74f-0e2e-4f1e-a277-96d1e07c402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe68bff8-3878-4495-9665-585674990763",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a908074-6b2f-4e5c-8641-652c3e1a8720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0231cc0-cb5b-4348-876a-e02f4b57815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd374164-3895-494a-9689-4391a84dfd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b2c72b-9060-42aa-bcfc-d8e4d57c0113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc2225-1698-46c7-8963-b3c94eb36979",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8279c7-e333-4f6f-ac54-45d381eab898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23da525a-05de-4d8d-ba30-82b7c761af56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06e02c0-e545-46c6-a3e7-f633a3545098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0010aba6-75bf-4d50-90c5-b739bb379332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d68fd76-b3d1-44e2-a59c-852801f08937",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3013e15-b07c-451b-9c0f-4a61d80c2c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aec8b4e-6287-490d-bbee-269d45e77d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a00a27-9ea0-45ba-b9d3-a8ca0497bc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc83624f-4609-458a-b04d-de253174db1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661a4fb2-a471-4373-ac2b-1a42358d2713",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dae444-486e-4553-b70b-cbb4ab8f92b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551d74dd-1670-4f84-b160-126d67930ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba6c26e-05ab-4212-a34c-c8845297f593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6294194d-f3d8-4e04-92a5-6298a3c506c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46976dba-aaba-45e4-9bba-4d80c1a7e292",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29fe488-1b0e-4d11-b5e1-01b419a4ed6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f9ecf1-5825-44de-b372-1d31b7c52399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab66d248-b18b-4bb3-8eb8-5f6c65775185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50990f2a-bbd6-4f76-8b25-5f2966e8bce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca688b6f-f951-404c-b176-70516402881a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f33bc2f-b6ca-4d72-bfd5-4375048d78eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82bbdf-cfba-4765-a45a-c34974bee86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7225fe7-cd2e-448e-9e81-02acd8da270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809ab6e7-84ab-43a3-8d39-60b5019e1a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ce75c-6ca6-4e70-ac96-d2b087d3ecaa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfaba57-f812-4b5e-bd3e-02033385c6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a305e291-02e5-408b-8e8b-85dacd16d0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24edacb6-e6d6-44ed-9169-16831062055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab7cc38-3bfd-4590-9e30-a77df6f8bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17debba7-2bf9-4796-bc7e-de34bcffe02c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a518bb6-06a9-434f-9559-7f51e72fffbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4e7f51-b0b0-45f5-bb2a-116b896f7bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d59cc34-b8b3-4966-b0a6-ba4979f240bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad9541d-8ba1-4abc-8674-421f476ec435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257731fb-4a72-495a-879f-dbdf5d837400",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93de045-4a8e-4dc7-9494-8a16a5f846da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bad6cc8-1860-47f8-8350-7ef2461995c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e41ff3-16b6-4b77-97a9-fdaa4470754c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f234737c-c815-4494-bc91-f8f0f89ad6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0112de-f45b-43ed-a099-6c0c001b9b03",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79810347-fe50-42c8-85f1-d81d13b5a511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12225fdd-020a-4fd8-89ea-1dbb25362d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780847d-8437-4949-a3ca-9c7ea0250b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50743bfc-fa64-4d7a-ba6d-f0506016c5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ec7b3-e3b4-47b0-b5cc-36f90ed95715",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc01ce1f-69f3-417c-a473-a91a6460cbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cb3070-5d5e-4f1e-a335-0b04ca98e540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5913d0df-63ed-4c46-adcf-22591fcfc888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fd46ce-0e17-4ebb-817d-82e4a0b29f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e791378-77cf-497f-afe9-fc25a4eb047b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ca921-b169-416b-864d-01793c35cd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced54479-dd6e-4f92-8390-65b82042a73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65eed98-2b8b-48f1-a77d-6f6593fd90fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50be1ba5-a385-465b-8925-c070289e826e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b22107-e05a-46b6-899c-f8ba95e74df1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8841b5-a89d-4d56-9c07-ee3095959c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f84c6ab-25b8-4bba-901f-62ef217fce25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beef333-5b11-4d8f-ab51-861175ddbee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831c7c44-46a8-461a-bdd4-fe29e0de63be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ece8d2-8d4b-4ae4-8cb7-3b3b072446af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e82e7bc-2ac8-4d6c-9448-e8d1c027da0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d810cf-b7f7-4079-b90e-3d5bdd4fad92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189b2611-29af-4889-b9b5-c17c8dd7406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e284f848-9382-4a3e-8c1f-9963bd0c92d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0754550-a532-41e7-ac74-5271eddcfa89",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b71b353-5585-4b3f-a9c9-644e5daec289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f781ef00-8385-4857-9f70-a3d921d429e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c976301-062b-4ea3-b38c-ef465ceee868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892d4fb2-1913-405f-9231-f201736b2d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7cea6a-dbe2-46b0-b4ac-1860c3f8159b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf1caba-f797-4083-884e-a8df072f34aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb61cd5-8a03-46c2-aad3-3785bb9518b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ef08c4-67e8-4628-8709-80c4224b8851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f05606-a29b-4347-a44c-fc447d331dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802bf63f-a35b-4dae-a2aa-a5049037fb82",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e081198-b6f2-492c-aab5-c5e0b0f77db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3daefb-21d0-4cb6-86da-b0bfc0c95f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041fda16-efba-45dc-ada8-7cd17a2dc17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5201a5-65aa-4e9c-8a74-cf4bd58b1fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0570185d-4fc3-4710-9481-d439a57b7451",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c102cdc8-4055-433d-9d4f-6100ca2d7a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb8aa49-29ab-4f11-8a8a-e77633550314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837d31a7-2c97-40c7-ba01-50d07d2d3350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f89393-fedb-4ccc-ab92-b18f90d6c63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f57721-6e44-490d-98c3-bb2214fe7a30",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2b14cc-f8b0-4e10-95cb-ddc01dbf378d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9c4312-45dc-4aa2-a438-df055506efe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d9596d-5983-4f27-9dbf-87666a5341cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e1e796-fcfb-4277-a2d3-99c913235f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffbd1a3-a453-4fc8-b29e-9b5a280cd2df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17308f99-4735-45e6-8818-bd73779179a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a4f757-6b01-47dd-8e17-99a09d1b7fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171bd04e-62d0-4275-a7cd-146c0c7e5e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358d80f4-d5e3-434b-9f52-eb2ee48aa7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7cb9a2-d2e6-4c58-a3f8-f418c347f78d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ae0f0-9c41-4a5f-ace1-8b1394aa9e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98af425f-f9e3-4990-80a1-78e868b70f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b4b1e2-f921-4281-9114-7cfa1b2f2f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763e0b32-fb90-4ad0-b8f3-4f0b967a159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee649ea-ff85-42b5-861c-485a5a3bec9e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70189e9d-0cd7-4162-b7b0-82e529baca4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22baf053-0a06-4556-b6c6-b95a2d9a59b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4601c7ab-0def-47f9-9ee8-900085e8f1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686fcb4c-445d-426a-891a-14d81e1ce0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e75c60-8316-490b-8713-6905f9078aca",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79c24ff-5be7-4a87-bed3-87fb27e9ee41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3392e4e8-70c0-4b01-b5e2-fdd47cb0c7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fe3b2f-e2f0-4152-8ffb-bec6d1dbf0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c55404-6954-4d60-a9fa-12d658704da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a396aedd-635b-477c-b301-e20646e4822e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4990b817-7f9b-48ce-bffc-f94ce6b83207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590b94cc-a4ce-4cb5-932a-ef11d72819ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8268501e-6eb1-49d1-ae22-9326cb3a49a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09ed663-4ff0-489e-b9f1-5f81ad8e672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9df7bd-72a4-472e-9654-4d655b27b33e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c793af-4528-4e59-ae0f-add4e4919248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73bddc5-8379-4927-93ff-13e47a30cba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8810cfd5-6cb7-44ec-b66b-7c8c4ff586ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b11421d-2c3c-440e-b66d-e66a2c71df02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e38da28-b776-45d9-8ae3-3f181689c2f6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af123f3-fadf-488d-a36b-fc79f4d6f51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecc6bf4-f2f0-4a8c-947f-4967a6cd233c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e532130-180e-4a14-bc26-907b2c517b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a20c96a-9cbb-41e8-aa94-ec74980bd2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd911ea-8091-454e-ae4b-921848d4ccc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8972b7d5-0171-461b-9a8b-76b6eaf8b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b4dd33-d92c-455f-9dab-97cdf8bf72b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48be81f4-d1f6-4a2e-965d-f48433280cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6349584e-bedd-4628-90b2-34302d8371f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5dba6f-16d4-46e9-9a12-45aef774d330",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc564f74-bc45-4c77-81fe-3a644abf7add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fecf402-1dc4-4e90-a42e-94657726718c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91bdea5-11ac-4925-801d-4da0641cc6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12047cb9-4767-40d0-8146-a50eede5c288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f438ec3-efdc-439f-af3b-6dc216dceade",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74582ce-3d7f-4a29-bbbd-f73977bcec59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfff3dca-9a24-442c-a2e5-f13524518b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e84b87-f1f6-43f0-ae53-64cc686f3988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96fe492-ca5e-449a-b1fe-313bf9c70963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ae504a-49bd-4850-838e-db1595fe43bf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db55a22-cf70-4028-91c7-c071aeb6322b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ae526c-6b79-4a19-9bf0-3a27aa78e6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcde7d6-0380-4560-ae6d-f76c175cfdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f90245a-d7aa-4360-bc6b-32b0b194d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8743246-2803-42c8-b12b-e5ccc18f0d9f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8e72d0-2c33-44cf-9abb-062cd4d71ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6ab62d-f6eb-4624-b1fc-756600cc96a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbbbcf5-0f36-4a30-a973-21a8e9457991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c39399c-6507-49d3-8ef7-4fbb9be70a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf7cae3-61c0-4ad1-8878-60b3ceebfd95",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77b6225-9398-49b3-8a0f-d474ebf9ca78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670af545-c932-4703-b1ba-144e6468ad94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5027bae8-272b-43dd-87bb-49dbb7433a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d24db4-28a5-4ba6-92b1-7ea31df1b378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd319ce-fd03-4fe2-839a-95f8e51da103",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f97166-1a22-42b8-845c-9a89834d9979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e69db49-a176-46aa-b93b-c66cabc328ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06edd599-daca-461f-9eff-d8cecb2f58e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9255da-bd14-4af7-9409-975af050b691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f7a57e-cb48-4c35-8823-ec6a3d9b334e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0d9d3a-32cd-447f-91f1-1c9a8002cf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c24f5f7-61c8-4627-a563-4647f6524a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40514b9-1d61-4f8e-bc5e-c7ef5beeb459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb43f757-95bd-4db1-b31f-5a38a6c52a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75465743-eff6-46f2-9545-e1a3b9c8da7d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391eba4c-3d58-467f-ab5c-5ca2db454087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06410d49-f1d0-493a-ba4f-2498426bffac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd527a9-bff5-4fed-9f1c-66afe8a19d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f2379c-e276-465f-b0ac-5bf1491f75ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1864b80-ebba-4028-845a-c9cbf4d90b00",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01468271-4208-4e41-a2d7-c5c8d21e0c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f86fea-247b-4b3f-99ef-401bb7e0c708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97f8274-9e02-441f-8050-730cc424329c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea5d97-5506-4d1b-9f47-e78b4ca231bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91188ec7-e009-4127-bd5c-df0d9cdd3cdc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6115acc2-2e88-4828-8a91-fc20504e75b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f2f48b-c537-4fa2-9a18-5d5c72420455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483cd203-5c54-49b0-9d5a-e27b96b0d508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c595a71-fe9f-458b-a1fe-1cf0b6c9de6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e390a3-432e-4bce-8a6e-dab4c29a6700",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac580c2-6f57-4699-a9dc-7c3a36405b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f0fa8f-0c92-4377-aaa2-1e07cd1982a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fda6d88-f8d3-4e7a-bbc2-5552317414aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9f6f98-6a8f-4a3a-8313-7623cb98c7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582e2b7-4e75-45c4-bf4b-24420a62f45d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82da4c4-49b7-4236-a983-cc4dde0e2b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2318058c-4977-4807-8c1f-829bd49112f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e438fb0-bf3d-4456-b23e-7796ad38f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4743b92-134d-4aa1-867d-7ac1f92ad5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d542c7-796e-49bb-832c-8cb55a82ba37",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7d0c1b-7508-4090-933a-c09d8faf7bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba6043d-f369-4b30-8f1f-8281fd7b96b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9d1569-4231-4b88-b097-935bb02406c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22994177-9122-4da8-b7ee-8bd8fa5532fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c3906-56bb-4de6-ab3d-a7387eee9b4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b993b-0dbe-466b-8bc9-c781e0172b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de43c7ad-6f54-4d89-90f8-a7b459e81032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc594849-824b-4d50-b976-d91a3142f7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6cfe1c-2053-48e1-b4c9-dacf95c59445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d14ac5-d542-4700-b449-3c3cb712ab2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977bab7-c494-4227-8129-5350ef5df61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21145e00-75c2-4b03-aae6-554ae46fa142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530a890e-21e9-4f9f-87b0-21357f8ce651",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1638f3fd-da76-4475-b6c1-90146aee5c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d03399-20e0-4cf7-87d4-96a249eb0ad9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d612db-cb84-4838-a536-1836099b7318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c86563-23ba-496a-aa41-4f3e8913e8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea1d38b-f449-4004-b56f-c67825dafeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3792c28-b3d9-46a4-90de-383d1922ec2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746006c6-3fde-4df3-8bdc-e24d09c23d4c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d9ab20-9424-4a11-b54b-aaa41660992a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518ca5dd-f66c-4b42-9366-e67793173d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa33965-ba04-4d25-ad9a-ddfd28f954b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bf8bd2-dccd-4623-b48e-8cee7a87fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da955824-7687-41a7-9356-216b626e75b6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530cc1c-91a7-4d2b-aa3f-c27d67c492a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66120935-0b42-4a81-a8d2-2ae5c5d2e33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cff83c-32f8-4e67-a591-d94db13165d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b844e7bf-dc57-4f92-bbd9-31e654b11e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edea76f-971d-46b3-b198-8db609c23ff5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c80d224-095d-4a0b-84ac-6751407f9588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768d98bc-1d8f-4c73-828c-aec2aae20575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea833c73-c33f-486b-a242-0e8dbc5bfab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2fa1b9-d1c0-43c0-af7f-2f6f22edd390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b7a3d2-edd6-478d-9f1e-5586078ed18c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e058b6-c668-4ac6-8977-d3c8d3b6c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba31d75-75fd-43f7-b3e1-936d05cf9eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef985d85-620b-44e8-8c35-85403c910f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44627c7f-aaa9-4444-b3d1-b2f0e6893ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35da3473-294f-47ed-b0b1-d595131cb8bf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1b5a60-71c5-4d2e-9ad2-1f612e6cfb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69518765-8bf3-495a-b1c3-060ce9367ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269da050-0d6f-4171-84a5-0b5892f5a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667f5c02-ad50-4c85-b954-c6359118b8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59652a0-67fd-4a9f-a102-ff0156baf7d2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad351d50-0c55-416b-b0c3-7f44f5c8584b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e99192a-1968-41a8-acf4-b1e54d357dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3001a0-d3b2-4724-878e-9df81a3cf0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6f9c64-9a9e-450c-94c5-7f88780eaf9f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8180d7b8-7568-41e9-b408-2eead93b3bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e33c1d45-1cd1-47de-bfe1-61048ea7de13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aaa07e5-3a0b-443c-b20d-b2a3946d0793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaedd181-13f4-4df2-95ab-0d32ef6330dd"
                    }
                  }
                ]
              },
              {
                "id": "3ddc0f4b-7151-420f-bea1-37e51903ccd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62c3e967-e557-4ef2-9fa9-018abeae03b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d64eac-a835-42d0-b172-d199035083c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4790b3b9-af19-4d1d-bc45-a408e6c7694f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015f37cf-aee1-4b38-a3fc-c2228ca7fc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b6d776-bbdc-471b-83cd-504b64bc6b0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a43f1869-203e-4c1c-9e39-c67d974a578b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68af8403-bef2-4670-b391-35e4109f8384"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5880458c-4f9a-49bf-b01b-5a135b69a624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3875a3cb-2552-4e70-bf90-c2ab42016ede"
                    }
                  }
                ]
              },
              {
                "id": "9443b6b9-f6d3-4dc6-8dca-e9639f2608ac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8ce03ebf-3c4e-4312-acef-a62bb3bad18b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4311de-86e4-4f16-93ea-dc9ba8787c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a5f05610-37c0-49ca-a4cf-52e388a3f374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820f3685-165e-46d3-94dd-08bd53548c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6615ba-baaf-47f9-8cd5-6fb28c761341"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b0bc6e2-6fca-4c1c-8efe-4068550e1c88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e65a2778-5bf0-4d69-b65a-0e896fec2e2a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74c9776f-0c8c-4188-84b5-561faaf2d6ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e3e5cc3-831b-43e7-a58e-f7f190717161"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad202582-1d58-4728-9a76-b21afe8e4251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35e29709-39d2-485b-a9d1-062636c9273b"
                    }
                  }
                ]
              },
              {
                "id": "93000897-1ac7-44ad-8bbb-36dcb6076ce5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "415ec5f5-dd4c-49e4-9f56-d9ca2260f847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5faa1803-6858-4b7d-8364-1c6ab859dc93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "855591dc-83d2-4b83-b24c-e13666357411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8e09d91-b3d1-4834-8349-ec930b0046a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbdf561a-ae26-460f-8024-a7d5764747c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c3babc07-3adb-493a-9bdf-94f487db9517"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d647e360-fe4e-4209-9e1c-22b8c6ef33e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15ff82cd-aa41-4de7-ab9e-680dcdb10432"
            }
          }
        ]
      },
      {
        "id": "b0926da4-9ee8-416a-b2c8-aa3183d01d33",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "40935315-8d39-46fa-b629-5b37f9c6ff24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "284a92a7-276e-4653-9e06-62fd48899a53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "899c0b00-8424-4460-95e2-b70a56862859",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b83a251-1cbe-41dc-91b8-5faa64758bb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "200f0f6a-56d9-46bb-af16-77816e37de3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3728b42-bf17-433f-92ce-90922e04df5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eb4c78a-7f78-4861-8639-85aa465d6747"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a60beaf0-ed04-4d0f-ab1f-9c3f24008d7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d607bfe-8b3e-4c2d-b477-01de4ca3d7b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba932ff-3c1f-4e42-ac5d-bf9a81546c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e64854e-bfc5-46ce-b42e-016e0f0e3019"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dd7088d-4ce2-4d83-8005-09f00000f5e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7cd60ed1-6b1d-48d1-aa41-bc07bdac82e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48764007-89e1-4e70-9155-e56a08749fda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25b4f8d9-1bd2-4b28-9d59-9c28f9df5f7f"
            }
          }
        ]
      },
      {
        "id": "67fb930d-20fc-4d4d-bcc7-1e1dd1bbf9d3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e1db1804-05d1-4dc4-af63-ca4aa40010c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d942d20-2732-4f53-b948-cc98f028ce73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce9d3501-5f80-4ec0-bb2b-86c8db1c64b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d51869-9e63-413e-bb2e-03809d1ed1bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41a2bae0-7df8-4d66-9bcc-c4fe39c10a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84bf5a-fe56-4ef9-88eb-2f8b24957e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39921d02-037c-4ba7-a781-65bac69e9145"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65bae0bb-beef-4e95-906f-e65e8c31f946",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d923f8d5-dd79-47df-a5f2-1e6d13e96115"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a90f0a8-59a1-4898-b83b-64688c36a258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb9b71fb-346d-4f4d-970c-135048d15fdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd44dbf2-4545-4ea6-97b5-30041e99705c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f14a1d7-cf05-43bb-9020-11f6411746c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dad1f771-0dfd-4692-8845-a5b60e657df3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b953f82-130b-47c5-bde2-c60d256dc267"
            }
          }
        ]
      },
      {
        "id": "7052d2c7-9760-44f5-84a8-d263616f1170",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a3e9e2be-4de5-4b04-a758-bd4540f08c38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a1e7ad6-3e19-4c06-a6d6-5c23018a5555",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e338463e-dbef-4602-be08-be12c253fab7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd591fd8-0022-49e2-aeb8-a19dd585d80c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "581631a0-7910-4516-8e03-85cf6d2e6bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2269499b-be2a-4667-a7b8-063e31ac481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6ab239c-7256-472b-8154-9bdbc9b12b27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d220e16-3df4-4c03-9327-237e0d330510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "517aa079-bd70-428f-9f88-40caa075d07d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e322361-e724-4e84-881a-f582af9ee034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05a205b-66d7-41ee-a3e2-96b9cfab9c8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a26b996e-d7a8-4cea-9047-53073b1f05f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee3c0b8b-cd0f-434f-97e2-19514a3670eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5da0cf09-78d7-4962-9647-08642d75b8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f64316e3-8598-424b-a6db-5adee840331a"
            }
          }
        ]
      },
      {
        "id": "6acb0ca8-b30d-40f2-9dc9-f39f72d6284f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8249540a-3669-4eca-bdb7-e30c6b7b767b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7d06180-194a-4176-8fe3-c22893708716",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ecd4c70a-9225-4994-879d-7dfff1ceee26",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed416d79-cc4e-4101-9dee-cfe129a2026d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cfe3bd5-454c-438c-90d7-470a290a4a99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.64084507042253,
      "responseMin": 13,
      "responseMax": 5267,
      "responseSd": 394.77154815549807,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692405005717,
      "completed": 1692405046662
    },
    "executions": [
      {
        "id": "dff32663-87ce-4c40-978e-78bbee4e4ff0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ef960338-2dcc-48d9-83b7-d815bc98acee",
          "httpRequestId": "663aacd2-3786-4da5-a783-3c186ee8259b"
        },
        "item": {
          "id": "dff32663-87ce-4c40-978e-78bbee4e4ff0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c8a1d6e8-809a-4aa6-be2c-876f83d60b69",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "61a68269-9ed9-4880-a36a-639114510ff8",
        "cursor": {
          "ref": "7d94f6df-80d3-4bc8-b2ed-23cbc6c2184d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19482170-fd51-4936-9881-38cd08efe847"
        },
        "item": {
          "id": "61a68269-9ed9-4880-a36a-639114510ff8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2f248c5d-96f8-4de2-bb2b-eb540195d0d0",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "d9da5963-2757-4903-8552-ea1abe257bf0",
        "cursor": {
          "ref": "37093e3b-6a59-4755-8e69-d23830200d9e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aca83115-58d5-4c25-a036-94fb30bff327"
        },
        "item": {
          "id": "d9da5963-2757-4903-8552-ea1abe257bf0",
          "name": "did_json"
        },
        "response": {
          "id": "e6951d14-eed5-4ab9-bfd7-34bf144f36b2",
          "status": "OK",
          "code": 200,
          "responseTime": 453,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeec106f-07c4-459b-a9fa-7ea2e8d22589",
        "cursor": {
          "ref": "42fb88e9-3f7b-499e-99f1-4ee1e6db95d7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b1aba0dd-06b5-41f3-9006-c66ffbbb8a5b"
        },
        "item": {
          "id": "eeec106f-07c4-459b-a9fa-7ea2e8d22589",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb9d31dc-642b-4c99-8594-51aa936fcaae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 770,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeec106f-07c4-459b-a9fa-7ea2e8d22589",
        "cursor": {
          "ref": "42fb88e9-3f7b-499e-99f1-4ee1e6db95d7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b1aba0dd-06b5-41f3-9006-c66ffbbb8a5b"
        },
        "item": {
          "id": "eeec106f-07c4-459b-a9fa-7ea2e8d22589",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb9d31dc-642b-4c99-8594-51aa936fcaae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 770,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb9458e-9b19-4b28-91a2-42c4abf1afb1",
        "cursor": {
          "ref": "9e1f5ccc-3c80-44aa-aaee-12cc9aa11e36",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4db3959-fa29-4900-b73a-3ed64fafc565"
        },
        "item": {
          "id": "afb9458e-9b19-4b28-91a2-42c4abf1afb1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4a525859-9314-466c-aab5-57e15fe3b056",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305772b1-e4b6-4543-91a8-0e8735fc67e4",
        "cursor": {
          "ref": "3802600c-2882-49e7-9a17-056d71690183",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f119a702-dfdc-4d2c-9f06-2f1d35cb3b67"
        },
        "item": {
          "id": "305772b1-e4b6-4543-91a8-0e8735fc67e4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b9fc516-0473-46bd-8814-dfbd44e60925",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57adc8e6-887d-4947-b54a-70542fcd7f78",
        "cursor": {
          "ref": "15931a46-f6ae-4194-890a-649a2286afa1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b26a6fb9-e459-4b7a-b9c5-97a50676845a"
        },
        "item": {
          "id": "57adc8e6-887d-4947-b54a-70542fcd7f78",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d6d548d-f3b7-426e-b765-9ea3ae904aba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e8c03-f229-4d57-abdc-a3ecdefc0441",
        "cursor": {
          "ref": "d8aaba35-d683-4885-9cb9-269b16812c65",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a4ae596b-88b1-4061-a91f-4f9b1aac281a"
        },
        "item": {
          "id": "9a5e8c03-f229-4d57-abdc-a3ecdefc0441",
          "name": "identifiers"
        },
        "response": {
          "id": "91a776c0-89d1-4d2f-9dca-614c31680d7d",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0fc98f-b1d3-4945-85ff-2ed53bd120a3",
        "cursor": {
          "ref": "7d16a09d-0902-419d-9f6f-a7e45eb3a4e0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa799346-50eb-4f3d-acd9-b1d90ef52bc9"
        },
        "item": {
          "id": "9b0fc98f-b1d3-4945-85ff-2ed53bd120a3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a7576505-0911-4241-949c-5ca2ca05f764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778a63a-8dc7-48e7-84eb-d0ed28b77263",
        "cursor": {
          "ref": "7b332b47-e20c-4409-ac07-f5eabe8e96e3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8a37301-5f30-4846-90dd-b91a65414af4"
        },
        "item": {
          "id": "1778a63a-8dc7-48e7-84eb-d0ed28b77263",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a0db43ce-95fc-4e56-b011-102e55f9de11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff6c31b-c223-4298-977e-0e700fbf53d7",
        "cursor": {
          "ref": "c3b93c0d-7f95-4a92-b721-610c970f7014",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3293d248-3541-42b9-854e-a998e41ac4d3"
        },
        "item": {
          "id": "fff6c31b-c223-4298-977e-0e700fbf53d7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3b92cfbd-2885-4862-bce2-8ef3c59c1aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b398c55-f8e7-488e-842a-f319f8f6e5b4",
        "cursor": {
          "ref": "5cd21125-e972-4eab-8454-9cdd471b19b1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ee38d809-b09f-47cf-973c-ecc239e53221"
        },
        "item": {
          "id": "3b398c55-f8e7-488e-842a-f319f8f6e5b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b1f63aa-3f70-4d5b-9c1a-1bec8e1eb84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3051aa2-fd7c-4452-9b95-cbbe596199e6",
        "cursor": {
          "ref": "a47c8516-fdcd-4511-97b3-1ec99c6cbfc0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fdaef048-7de3-45b5-9f27-a039b417e3ae"
        },
        "item": {
          "id": "d3051aa2-fd7c-4452-9b95-cbbe596199e6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07170fd7-b4e6-4a46-b210-840f1cbf003e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec3c2aa-8cd5-4146-9132-72aa9deb808d",
        "cursor": {
          "ref": "13b8cc12-95d6-4530-b36f-17950a4c38fc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0f989050-6458-4df0-b229-549134913b89"
        },
        "item": {
          "id": "5ec3c2aa-8cd5-4146-9132-72aa9deb808d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "24fdadcb-f89b-4d9d-bc65-9327879dc360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fd5580-5972-49fb-b476-e57fcdc72b73",
        "cursor": {
          "ref": "6e7be2b4-8dad-4957-a5be-2d5acef5f5d5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d00bfde0-ab5b-4225-a4f3-b9909c32fa6b"
        },
        "item": {
          "id": "53fd5580-5972-49fb-b476-e57fcdc72b73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "87f7d0f4-f51a-45c3-a1d3-12971507acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73593b54-2ec1-4ca3-a416-176c8276d6f0",
        "cursor": {
          "ref": "8efc1126-d831-40e0-a631-4d218f5cde00",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f18daebf-4be2-46df-95e4-c42d4e3303b3"
        },
        "item": {
          "id": "73593b54-2ec1-4ca3-a416-176c8276d6f0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2e082e9-c587-42f3-9fc2-0e363ee9b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7fe21f-cb77-4ddc-89d2-ef53025677cd",
        "cursor": {
          "ref": "a57141fc-6cc7-4ca8-a3c6-a2b555f81b6a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c0a35b5-8f2a-41f4-b491-2d1af5a39baa"
        },
        "item": {
          "id": "0c7fe21f-cb77-4ddc-89d2-ef53025677cd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ed8b7f72-94fb-4415-8def-66ffaf2cc261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb3e79f-abcf-42fd-ba06-019088e152aa",
        "cursor": {
          "ref": "21cd09b7-a187-4a7f-8d9d-e9e0833b59d9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4465248-6fff-41da-b555-f3949ea70b21"
        },
        "item": {
          "id": "6cb3e79f-abcf-42fd-ba06-019088e152aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a318d1ea-55c0-409d-b8cf-0b4c113430fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd329cb8-79e7-4d3c-8947-febede925906",
        "cursor": {
          "ref": "717a57a2-49c2-4646-aed3-e1cc118de004",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3420d660-d36b-46e5-966a-09341a0bc228"
        },
        "item": {
          "id": "cd329cb8-79e7-4d3c-8947-febede925906",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "60f40343-5a16-44a1-bad1-49535df03fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8e7616-cd21-4562-91bb-f4a53b707d9e",
        "cursor": {
          "ref": "51c01660-b478-476a-b9df-a79fbe52f632",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "030bfbda-ec8a-483c-a695-2d0c30e75a54"
        },
        "item": {
          "id": "2a8e7616-cd21-4562-91bb-f4a53b707d9e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a75217d8-250c-4f94-bb01-25dabc230568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5bdcf0-be73-4414-8d24-27179a13f5f6",
        "cursor": {
          "ref": "f607d6f6-2b5e-4708-a06e-b0986087b63a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a632b1fb-14a4-48d5-af17-32ad02f357a4"
        },
        "item": {
          "id": "dc5bdcf0-be73-4414-8d24-27179a13f5f6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ecf7679-d54f-4c85-9ebf-3ba211983247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d50045e-5c03-4689-8277-1e965fe922c1",
        "cursor": {
          "ref": "1aa282ad-a4b9-408f-8c65-15419d7518dd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0e9d8fdd-5130-422b-881f-815055555888"
        },
        "item": {
          "id": "0d50045e-5c03-4689-8277-1e965fe922c1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "99c13354-994a-40ee-99ed-67b7954293af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ff4637-0a39-48ea-aff1-986add7b897c",
        "cursor": {
          "ref": "73393428-1ab9-4683-aceb-739ebec84b86",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "756f38bd-6714-4fdf-b15a-21a610ec6e58"
        },
        "item": {
          "id": "11ff4637-0a39-48ea-aff1-986add7b897c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "59c2d353-eb02-4189-a336-f94037ec90c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e8a8ce-4cbd-426d-b29f-8e7d4d57f0f1",
        "cursor": {
          "ref": "905da651-5c0c-42a0-bbcf-ba021eebfa01",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "164031d4-855d-4dc4-94c0-2cc37738a982"
        },
        "item": {
          "id": "f0e8a8ce-4cbd-426d-b29f-8e7d4d57f0f1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "18445322-368d-4cc2-ade3-ff5f33950298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda7cd70-7e8e-4c24-91a8-f1cb09ef307c",
        "cursor": {
          "ref": "d17215bc-b717-4a89-83c8-65809fc0eea8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f6b2efb6-088d-46af-9384-682d742a6804"
        },
        "item": {
          "id": "dda7cd70-7e8e-4c24-91a8-f1cb09ef307c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "054bc71b-1433-4ecf-950f-13320e902531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4cf3d9-05b4-40e4-ab27-9dcdf34c727b",
        "cursor": {
          "ref": "416d0876-a056-4def-8437-b6dffefd36f8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c7124832-c17d-46d1-9e1f-2524786bb5c1"
        },
        "item": {
          "id": "eb4cf3d9-05b4-40e4-ab27-9dcdf34c727b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9775c9bd-a5ea-4a87-ae53-931480a2e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22a1371-882e-46e3-93cb-e1fd627eafdc",
        "cursor": {
          "ref": "2f50116b-aeb9-42c5-8bc0-a7f831e6fa5d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "57eb3a32-2491-487e-a7a5-9cd6c691b174"
        },
        "item": {
          "id": "b22a1371-882e-46e3-93cb-e1fd627eafdc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "12c36270-4470-4e5a-a3b8-ee6b12b4be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13c92c8-e4c4-474d-ba74-e877273ab724",
        "cursor": {
          "ref": "593a4ec8-98f2-4746-ad32-ee8926873fd5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8658609f-158f-40aa-8b64-0229b3424f1b"
        },
        "item": {
          "id": "e13c92c8-e4c4-474d-ba74-e877273ab724",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a7551cd-4662-4a27-9538-9ecb467a15d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3239cd-70c7-4e83-885a-9eeb2a7760af",
        "cursor": {
          "ref": "05fa848a-3691-4233-adfd-a11fd3cee2ee",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e40b080d-cbcf-422c-913e-e38212aa868c"
        },
        "item": {
          "id": "3c3239cd-70c7-4e83-885a-9eeb2a7760af",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0df14fd9-ddc5-4497-91b2-ee65a61c6a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98f6b07-fcdf-4b9a-b549-b55189632263",
        "cursor": {
          "ref": "b923aa30-e741-496e-86e6-5f350a46c315",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "504d3a8d-117f-4377-8b57-a697f1a63563"
        },
        "item": {
          "id": "a98f6b07-fcdf-4b9a-b549-b55189632263",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9d8db186-bf17-4408-b68d-87ad54824b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a65ce4-1e67-4f38-841b-d6bc12a7f641",
        "cursor": {
          "ref": "a4d603d2-c135-412d-baba-184034e79626",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "57721cba-d40f-4891-bb79-b9cff2156ad3"
        },
        "item": {
          "id": "67a65ce4-1e67-4f38-841b-d6bc12a7f641",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "79be899c-2225-44d9-8319-957ca3e8787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0726382e-dded-4ad2-b5c0-a329b4e5acfa",
        "cursor": {
          "ref": "6ba3e2fb-58fa-45c2-aa45-8537c2b0ae61",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3ca42f43-80b1-4c2d-a763-f7a94313d64b"
        },
        "item": {
          "id": "0726382e-dded-4ad2-b5c0-a329b4e5acfa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2be0b997-e5b9-429b-8899-5cda9b6f40c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb957c81-3503-4dff-99b9-e4741f124397",
        "cursor": {
          "ref": "4047f2e5-ada5-4d53-8d1a-e99cf82c2f52",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5dd6122e-a7fe-402d-b2ef-5d5cc14c0540"
        },
        "item": {
          "id": "eb957c81-3503-4dff-99b9-e4741f124397",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f86083fe-4c97-472b-8b99-6b42a14f627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aadfdd6-f11c-439f-9eef-9f3aff9f130e",
        "cursor": {
          "ref": "9b56addf-00f8-4f07-9833-77ee5d70f349",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "83ebb42f-fda5-4ad1-9fb2-21f5d14c59ba"
        },
        "item": {
          "id": "3aadfdd6-f11c-439f-9eef-9f3aff9f130e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "089e017a-0256-4951-b001-bf451c3b367b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ee2a5-e9e6-4730-acef-2af04c7ac40d",
        "cursor": {
          "ref": "7f2e9552-8507-4196-a2ae-e0a49962825c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ce3dfc49-abfd-49d2-b34a-355a832428d8"
        },
        "item": {
          "id": "cb6ee2a5-e9e6-4730-acef-2af04c7ac40d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "51752a58-8450-43b4-b4f0-e1a8a00f803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c067e32-f64d-45ea-9a0e-2c90f0af38ee",
        "cursor": {
          "ref": "8055891c-1520-41e2-bf73-dccc1948f3d3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18a9334f-8c66-4dae-a5bd-a68dd27e6bc8"
        },
        "item": {
          "id": "4c067e32-f64d-45ea-9a0e-2c90f0af38ee",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8fd25a8e-3336-41ba-9df5-105141bb175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78694f8-8593-44ee-9e03-6efa282fad5e",
        "cursor": {
          "ref": "af427288-1fe4-49a5-954f-9d459b9d5e08",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6c1a9301-665e-464e-b28a-6e8235745faf"
        },
        "item": {
          "id": "a78694f8-8593-44ee-9e03-6efa282fad5e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b188037-8656-42ff-a17e-f3f53a551de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cadd19-93f5-4432-9578-691480cf693e",
        "cursor": {
          "ref": "4f68f689-9072-484e-9cc9-f447550d55ec",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5d62204-52a1-4fcc-9c21-fb1a65e60c2b"
        },
        "item": {
          "id": "40cadd19-93f5-4432-9578-691480cf693e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4772977a-693c-461e-8265-137fdc40e1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda881a-839e-4a4c-87da-bfad226970b5",
        "cursor": {
          "ref": "fafda19b-4bbe-49b9-acbd-449da105b891",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "21d1d2dc-b2b4-4e50-94f5-badb9328e555"
        },
        "item": {
          "id": "bbda881a-839e-4a4c-87da-bfad226970b5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "30e195e7-8f72-4e41-af7b-a93200133f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcb62e5-bb10-4dac-8038-b34c1fb731f8",
        "cursor": {
          "ref": "45fcae53-02fd-412c-9cb9-d2d420e1bc31",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "697b4dfa-1bc7-42ba-ad69-efd8ef6a9a4d"
        },
        "item": {
          "id": "dbcb62e5-bb10-4dac-8038-b34c1fb731f8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f8a0975d-6688-40d8-90a3-ed179f4b5da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef45b4f8-1749-493a-b699-e8151641a590",
        "cursor": {
          "ref": "3ba43b2c-c27e-464e-a897-5aafa4ab21d7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb4616f9-24c3-49ab-9a4b-69d09c1d867f"
        },
        "item": {
          "id": "ef45b4f8-1749-493a-b699-e8151641a590",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4521e336-47f8-4fdf-a794-54ce1ba6c567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61e1621-1bbb-4896-b444-7a819b8f3da0",
        "cursor": {
          "ref": "d24931f2-256b-4016-ac94-6833e9e97e33",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d66dd923-2cba-428f-8004-1e9a215629ca"
        },
        "item": {
          "id": "f61e1621-1bbb-4896-b444-7a819b8f3da0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5f9415e4-08ff-42da-8cbd-0dbcc03dda38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6414fa-5dd4-4fa0-8d89-801f25969787",
        "cursor": {
          "ref": "fb8f0814-9caf-4142-9589-1dd925a90a1a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "902c0668-e268-4ab0-9b15-c6524516d078"
        },
        "item": {
          "id": "ce6414fa-5dd4-4fa0-8d89-801f25969787",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c937a07c-3d96-4faf-8eb7-9f8a232138e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c76aba-b7dc-4c3b-bff0-2bed72126ae6",
        "cursor": {
          "ref": "f133cea8-31b6-41d0-b887-3d9963b41b8a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7887bae4-c7b9-4eec-87c6-249ea450abdc"
        },
        "item": {
          "id": "78c76aba-b7dc-4c3b-bff0-2bed72126ae6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6d5c05ee-97ea-43ae-824a-46ce961f1399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f4911d-40f2-44fb-9025-ac6732eec633",
        "cursor": {
          "ref": "bcead2dc-f7da-41fc-bb08-386afaf1b0b8",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5d491df2-5d0a-4c03-8633-a404b1ff09d7"
        },
        "item": {
          "id": "f3f4911d-40f2-44fb-9025-ac6732eec633",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6244cb2c-42b1-4009-bbb7-d35d31803aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae923a30-8d43-405a-bc9d-e06e159de9c1",
        "cursor": {
          "ref": "fbd7f2d2-10b7-43f4-9ecd-b6c7cb4b20c7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "97ce98ee-47bc-4297-bcc4-f7b9c7daa1c1"
        },
        "item": {
          "id": "ae923a30-8d43-405a-bc9d-e06e159de9c1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c6bfeb8d-19a3-45ed-aec2-7be62ffaf03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4781a2e1-cada-45fe-a5f4-b621aa03bf8a",
        "cursor": {
          "ref": "c5b418d4-3303-4fc3-97fd-32c589ce845a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d13a8abc-e883-46ac-ad57-0ad250b1ec69"
        },
        "item": {
          "id": "4781a2e1-cada-45fe-a5f4-b621aa03bf8a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ffb4113e-2629-4a02-bd9c-1cfecffb4662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe88ea0-4f70-4a5e-a3f4-c4b40e5e174e",
        "cursor": {
          "ref": "25e5e6e5-e8f4-4150-bb27-ec7a5a4edd50",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6cc6353c-a590-4847-812c-fc06a7a05304"
        },
        "item": {
          "id": "fbe88ea0-4f70-4a5e-a3f4-c4b40e5e174e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "22095e2f-a475-4c56-9a6a-b5c1fd7af09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be93fc1a-5964-4a0e-8838-c886da6b207d",
        "cursor": {
          "ref": "d1c4d9f3-628f-4bb6-a66e-74aca400a199",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "196d2502-0659-4ac9-b448-9726fc6f1f43"
        },
        "item": {
          "id": "be93fc1a-5964-4a0e-8838-c886da6b207d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88e6f88d-7eba-488c-b0c9-00f9e6bd5a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01482ad0-d9f3-42e8-8e2b-4a954647c2b0",
        "cursor": {
          "ref": "294c5316-f7fe-4d95-be83-1a246402b4ea",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5b774eac-fb5c-42cf-a235-56faec9a1139"
        },
        "item": {
          "id": "01482ad0-d9f3-42e8-8e2b-4a954647c2b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ff516a98-3c0b-46fb-8a30-1f0216ab1b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75c0a21-e334-4bed-83f6-39287b08c34b",
        "cursor": {
          "ref": "fab39ff8-95c9-42a0-9459-13dbe89e791a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77f368d5-c3c0-487b-940f-2d443ffa61a7"
        },
        "item": {
          "id": "a75c0a21-e334-4bed-83f6-39287b08c34b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b8a3ee0e-80f1-41ed-97ed-54f0b8464410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a60883-9dd7-4d39-ba4d-2df946678abc",
        "cursor": {
          "ref": "bdbc084d-4a22-4862-8c7c-a63d65bf885d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4ef83093-5886-4a39-af0c-c74df016093c"
        },
        "item": {
          "id": "10a60883-9dd7-4d39-ba4d-2df946678abc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "20c7ee32-4f02-48b2-9d30-77b13fc5ff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02591204-366f-47df-ba1a-5f50674a8e47",
        "cursor": {
          "ref": "8d29349d-2d7a-4216-9f0b-b614405c6e95",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5acdc858-11b4-4892-88b0-d44ab58a2e32"
        },
        "item": {
          "id": "02591204-366f-47df-ba1a-5f50674a8e47",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e190009e-802b-4bdf-a47e-7fcbbe57d2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956d61f-92ff-4eee-8f0b-24ca4dd21a23",
        "cursor": {
          "ref": "2d91b024-165c-4283-9ef9-0c86cb20cea2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2cca8112-2e68-4fd3-a092-7bfad875a537"
        },
        "item": {
          "id": "6956d61f-92ff-4eee-8f0b-24ca4dd21a23",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "06e60e34-b2b3-4c90-a59c-4f799ab73b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012cf6bf-5dec-480e-89eb-8a9eda420704",
        "cursor": {
          "ref": "16c800e3-a97e-4ed4-9b6b-a1db82453b85",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe2e71c5-84d8-4f6c-903e-ba0dcca0ee5a"
        },
        "item": {
          "id": "012cf6bf-5dec-480e-89eb-8a9eda420704",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eaf941b4-840c-4e5e-bc7d-e597810872d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be00847-29ce-4794-a180-1ea479775385",
        "cursor": {
          "ref": "764d58ad-d8a5-4b00-b064-8e3728e7ec5c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80e4f3a4-624e-4eba-8570-a0a39157bb3d"
        },
        "item": {
          "id": "6be00847-29ce-4794-a180-1ea479775385",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a0ac2b28-a883-49f2-a239-0c5780a5ee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ec6f25-f36c-4c78-8aa6-c04c1158d801",
        "cursor": {
          "ref": "1a06fc92-31b0-4dfd-8084-38d7eca0af4c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "db9cbf47-9150-4687-862a-b1f03074cb39"
        },
        "item": {
          "id": "98ec6f25-f36c-4c78-8aa6-c04c1158d801",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4852f33b-b30e-4a90-b896-62a416ffcf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f41294d-c132-4c37-9086-e8bf7ff9b891",
        "cursor": {
          "ref": "a7cf6b47-c2f2-4498-b5fd-c6a7db67fd3d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fedfff22-c65d-4da6-ae5d-434bc6a14e33"
        },
        "item": {
          "id": "7f41294d-c132-4c37-9086-e8bf7ff9b891",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "582bad7a-8af4-4816-ac13-a032d1a58f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c408c-f7ac-4ec6-9c6a-413486ec6763",
        "cursor": {
          "ref": "0c625b24-98a3-405d-983f-f090271b1c8e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7ec8b346-e838-4bed-916d-0e717dd34d4e"
        },
        "item": {
          "id": "2e4c408c-f7ac-4ec6-9c6a-413486ec6763",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e1e8a904-3837-420c-99c0-8ee8b682844b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78745b04-78b7-4f90-ad18-72d918c44284",
        "cursor": {
          "ref": "8b2496da-4bb3-47d6-aaaf-02b162ff9908",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3c839c74-b8da-49aa-b117-c24f37358833"
        },
        "item": {
          "id": "78745b04-78b7-4f90-ad18-72d918c44284",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cc0061f8-b996-4795-b178-083c7df10c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49da32c-cc16-48bb-87e3-3354af4aa148",
        "cursor": {
          "ref": "3f349b39-e555-4b81-bae9-d786ad256276",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6adbe8f9-4fe0-430d-8103-4c40c9180c51"
        },
        "item": {
          "id": "b49da32c-cc16-48bb-87e3-3354af4aa148",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "65b39b61-1ccc-42b8-b2b1-e89c7c17c360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3522ff58-aaf3-4fa4-a690-1601174e6266",
        "cursor": {
          "ref": "7211922a-5215-4a2f-bd54-ae59a1058e84",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8259878d-5279-4e7c-bc3c-d09001d55582"
        },
        "item": {
          "id": "3522ff58-aaf3-4fa4-a690-1601174e6266",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b8582652-ed40-43b5-b665-8aed47fcb314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6f05c6-9d4f-4ca1-ba30-583cc6f8f1ed",
        "cursor": {
          "ref": "52c43b1b-0290-4822-b07b-c5bd397f4098",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "101fd4ee-219e-4e72-805b-927011e655df"
        },
        "item": {
          "id": "2f6f05c6-9d4f-4ca1-ba30-583cc6f8f1ed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a71b4e93-e6c1-4296-82fa-f42d7952585d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd25b2c6-291b-4743-aac4-42a026ba1cc1",
        "cursor": {
          "ref": "502faaa6-8110-4635-ac85-da162df9ed6b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2de5a61-bf97-44e3-b63e-fa613fe0bd92"
        },
        "item": {
          "id": "cd25b2c6-291b-4743-aac4-42a026ba1cc1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "92d20a71-7b27-4bad-a1a9-8b54ecec176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a61b39-2877-4664-9a18-2f402bfbc8cd",
        "cursor": {
          "ref": "98dcf5e8-c5b3-43c9-b8b2-dc8370e6939e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ecd4f56a-52a7-48d7-bda8-2d3f637b4c32"
        },
        "item": {
          "id": "85a61b39-2877-4664-9a18-2f402bfbc8cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ed7b26a3-5271-4471-8146-74e67ad7c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7381b1c8-ba22-4a40-9f15-62323986cb05",
        "cursor": {
          "ref": "09c879d2-0d3d-4891-9975-173c59825973",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "64de8f42-0e5d-4022-ba8d-ac9747ac28ed"
        },
        "item": {
          "id": "7381b1c8-ba22-4a40-9f15-62323986cb05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "460a4e51-9242-44dc-ae19-997b6f77787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a90ad-26b0-4ab7-b876-0076c35d28eb",
        "cursor": {
          "ref": "d6b0a6cb-e54b-470b-91d8-fa6e40caf787",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "250852c7-0cd1-4692-96fe-9f60da297a44"
        },
        "item": {
          "id": "789a90ad-26b0-4ab7-b876-0076c35d28eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1323f8b2-4d09-469e-88e1-9dd3bc006328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5971308-7508-49a3-a40c-ec7638ab1e42",
        "cursor": {
          "ref": "b58aa577-196c-4d9a-87a7-a31909933895",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9ffaa6cb-b49e-428d-b3fb-4ee3d906371d"
        },
        "item": {
          "id": "a5971308-7508-49a3-a40c-ec7638ab1e42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d2b83af7-0039-4455-883c-8230c466a3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a178309-454a-4c42-a764-505370c98521",
        "cursor": {
          "ref": "b5b81074-2fb3-46fa-ab38-e92b4a60e444",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ce29d6e2-3e53-40de-8f39-714a5b8445b6"
        },
        "item": {
          "id": "5a178309-454a-4c42-a764-505370c98521",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "75f4b3d9-a469-41d7-8743-3615ea7802d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b5bb77-7225-4763-b2e3-f3076de05302",
        "cursor": {
          "ref": "b9998d28-0bb2-4b2e-95d5-15517ec0b9ed",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d303af0-289c-4c7b-a21c-608d0d25b11a"
        },
        "item": {
          "id": "d2b5bb77-7225-4763-b2e3-f3076de05302",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f646c0f-a6f9-46f0-962c-581227f4c8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e8037c-7647-44ee-842d-3e1f72e38a98",
        "cursor": {
          "ref": "0e5cf20e-1b6d-4cf3-ba35-19caf233c748",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "680fd7ed-fbe4-4ddd-b11e-035c4e19c653"
        },
        "item": {
          "id": "26e8037c-7647-44ee-842d-3e1f72e38a98",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bd07facd-d747-4bef-958f-f53018093bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd3583-9fe8-4cde-a8ae-480834e1ee39",
        "cursor": {
          "ref": "b5dd2fa9-cd86-43d1-82d2-449ff6534628",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b1e40d6c-4550-4ba7-a340-e393ed69c19a"
        },
        "item": {
          "id": "53dd3583-9fe8-4cde-a8ae-480834e1ee39",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1183f740-9a96-44e8-bb07-8392a6052d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a768efb3-eb64-4552-a8db-8a211edde0a1",
        "cursor": {
          "ref": "6812934b-129b-4200-beed-1e7d5c8ec062",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "550fccb1-4ae6-4c7a-b526-a89196e77676"
        },
        "item": {
          "id": "a768efb3-eb64-4552-a8db-8a211edde0a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f2529094-8d34-41b3-8045-63286c29c968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fcf661-412c-435a-b37c-e7e3c5966063",
        "cursor": {
          "ref": "2fbc7e48-3967-4111-9d8a-efafb96a447f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "04d3639e-1d69-43f3-be5f-3a66aa4c1213"
        },
        "item": {
          "id": "23fcf661-412c-435a-b37c-e7e3c5966063",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2c1eed28-baf9-47ec-925b-6a58cdb9c4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edee8487-b99e-4a73-ae32-28b614dbe4fd",
        "cursor": {
          "ref": "909fcfb4-15ea-4a81-91ef-eb2ee68bc93b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae108255-c9ad-401d-9de6-b766f264403f"
        },
        "item": {
          "id": "edee8487-b99e-4a73-ae32-28b614dbe4fd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fa389e6e-ff36-4db1-8099-f809396e2d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc94d96-de2c-40ee-8133-fc75b6923d2c",
        "cursor": {
          "ref": "a01cc837-248d-4f76-9d0a-044f79df7467",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8efcb9e8-ada3-41b7-980f-f5f78cdd1694"
        },
        "item": {
          "id": "1cc94d96-de2c-40ee-8133-fc75b6923d2c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fce2e152-26f3-4c0c-9618-43c81db63184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c455c8-bf39-40ba-8d30-0f7af9dd635a",
        "cursor": {
          "ref": "fa18d7bc-431a-43a7-b6ea-607cfbff1731",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b9d10ec8-7cfe-4360-9c6c-0823d93a0b16"
        },
        "item": {
          "id": "b1c455c8-bf39-40ba-8d30-0f7af9dd635a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "01b1d800-a3d8-4f25-a52e-b98515e29efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe39b76f-a9d8-4cdd-82fe-8fa48adbf2aa",
        "cursor": {
          "ref": "0834f798-71c6-4890-bdd0-14fad08ede4e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6605d1d6-9cfc-4090-aa76-ba2523d189b3"
        },
        "item": {
          "id": "fe39b76f-a9d8-4cdd-82fe-8fa48adbf2aa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "542b9638-45db-45ac-adf3-00905faab21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316f3c09-c2f0-4def-b35e-1ed9d7440bf5",
        "cursor": {
          "ref": "9b6d62a7-6900-4e45-8c69-036294c8efd6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "47685a6e-7d0a-4c0c-ad5e-708e7d4126c8"
        },
        "item": {
          "id": "316f3c09-c2f0-4def-b35e-1ed9d7440bf5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eba7a256-8ab4-4bff-b275-ff6e6daf490e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95476e79-4902-421e-812d-6d8a063a4591",
        "cursor": {
          "ref": "adc8cd0c-c3c7-446d-9ecf-f36d046310bf",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e24a16c5-82cf-4d8b-99f1-aeef15f0701c"
        },
        "item": {
          "id": "95476e79-4902-421e-812d-6d8a063a4591",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "763c2f15-8f52-4046-bb35-31f2e1a1dfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7bde42-48bd-4e77-9086-4dee4880616a",
        "cursor": {
          "ref": "26a84881-f04d-44e8-bee5-2aaf3228452e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b8829c41-1a0f-44cb-856f-5eb12706c962"
        },
        "item": {
          "id": "df7bde42-48bd-4e77-9086-4dee4880616a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f4142649-1219-4fe8-a98c-0724a976a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a296e2-581c-493b-b17c-ac0f63313b97",
        "cursor": {
          "ref": "26332592-179c-469e-9f4d-8f956a06466e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d2ff1fa-30f0-4fa7-9122-75a77396e398"
        },
        "item": {
          "id": "a4a296e2-581c-493b-b17c-ac0f63313b97",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c5f114a7-b278-4171-9011-9d3014482725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9a6350-0366-4af6-9d70-d4c44a5f4f45",
        "cursor": {
          "ref": "c0361dfe-0a66-47e9-a27f-df1b6805ca4c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d06377b1-8732-4331-bdbd-4d35a8f7e654"
        },
        "item": {
          "id": "4d9a6350-0366-4af6-9d70-d4c44a5f4f45",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3de4441b-0609-4615-8f1e-150fe547b19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aa5cee-3f55-43e1-8095-54669cf5ff7c",
        "cursor": {
          "ref": "f40646e0-cdae-4258-8e55-efbeb2f9e828",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "56d3b9c1-c21e-48a7-a358-8ece59e1e336"
        },
        "item": {
          "id": "91aa5cee-3f55-43e1-8095-54669cf5ff7c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e44a06c-e63a-44d7-a42d-47fbeedfecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cb7ec9-a73d-4286-9a47-045401405792",
        "cursor": {
          "ref": "b53b236e-89da-4e99-bd36-b8563c20fb0c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "36e7af00-14d7-48d2-90e5-71d2b15c4ce8"
        },
        "item": {
          "id": "b4cb7ec9-a73d-4286-9a47-045401405792",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6884d9e4-d746-4202-89da-d53124cdc708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182636c3-827b-45c6-bee1-4bff714886ba",
        "cursor": {
          "ref": "1c797ca5-e3b4-4fa2-b343-12b0f338bfcb",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5602af34-3c07-460b-8b91-9a45cd6b3365"
        },
        "item": {
          "id": "182636c3-827b-45c6-bee1-4bff714886ba",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cfd4c29d-54be-4576-a758-addc6a6e1244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b71088f-d4bb-4b21-b833-fa3be3b47d95",
        "cursor": {
          "ref": "42977108-a0d7-45da-b804-ded7ed42f7e0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "210dd76b-ad71-498e-a0e0-04a28418c6b8"
        },
        "item": {
          "id": "6b71088f-d4bb-4b21-b833-fa3be3b47d95",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6326312c-ec7d-4ae0-8ca1-46a36fdeb730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca56520-0228-4c4e-9062-b9f06e4ff7d6",
        "cursor": {
          "ref": "973e871d-5c8b-47bf-975e-c1010749d6bd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c5ba0d13-6ed3-4fa6-aa48-ee572d83b14c"
        },
        "item": {
          "id": "5ca56520-0228-4c4e-9062-b9f06e4ff7d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6c67110d-b89c-4711-953e-24104758a9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a76553-fdae-4666-85de-26407c0ad009",
        "cursor": {
          "ref": "1db2c1bb-d9d3-4b13-828c-46bf2ae0f7b9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9d3351a7-f4de-442e-8d50-f0fee06a21df"
        },
        "item": {
          "id": "30a76553-fdae-4666-85de-26407c0ad009",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "564f5452-534d-44aa-b747-80e39315377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35ab13d-b5ec-49fd-9a7d-3ec0a039920e",
        "cursor": {
          "ref": "aef12495-d526-4605-858a-7baed7771b1e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ff4641dd-18fd-4f30-bbca-1cd34b3c3a31"
        },
        "item": {
          "id": "a35ab13d-b5ec-49fd-9a7d-3ec0a039920e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6b64c044-2075-4adb-9f0c-703941aa9bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79fd68a-3695-4a17-9134-7e619ca9be89",
        "cursor": {
          "ref": "e29a6664-06fa-41f3-bad3-1d5aee779156",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "68d9ee16-9a77-401a-ac53-eb78256a4439"
        },
        "item": {
          "id": "d79fd68a-3695-4a17-9134-7e619ca9be89",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5c9f4a64-1efa-4e6a-8218-344b4b77825a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60923bc2-0acd-4ab4-a9e3-93e0274e1b0f",
        "cursor": {
          "ref": "effa9cbe-534e-4266-b63a-d3c10d671b76",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0deade33-4f70-4ff6-bfca-0c6de69259e7"
        },
        "item": {
          "id": "60923bc2-0acd-4ab4-a9e3-93e0274e1b0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ace11297-6dfd-4c08-a0c1-59328f2f0de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a92837a-05dd-4f6e-b401-57e8b4564bca",
        "cursor": {
          "ref": "4a2745b9-26d8-444a-aca3-656ef6239d76",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "17fa2c72-71b3-4f24-8f56-5a56b043783a"
        },
        "item": {
          "id": "6a92837a-05dd-4f6e-b401-57e8b4564bca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cd1a5d7d-63b4-4ff6-8af3-ef30c164004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c98938f-937e-4fdd-8ea8-490257facc2e",
        "cursor": {
          "ref": "6fd7f7dc-5916-4358-bd81-2067c4e1927b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f0ff0d22-8922-4d9e-9e3c-9eb023c32faa"
        },
        "item": {
          "id": "3c98938f-937e-4fdd-8ea8-490257facc2e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "36c891f5-de15-4620-86e3-d0e7cd6f7a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7238c82-14e9-4d07-9e06-097290fb6c54",
        "cursor": {
          "ref": "281edee2-3b5a-4eb7-a255-98dad5646587",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d28d5407-e580-4337-ad94-4b0971f5a393"
        },
        "item": {
          "id": "b7238c82-14e9-4d07-9e06-097290fb6c54",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fbdf0619-97e9-4aa4-9fb2-e07ce6eb82ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2beacd-e294-43b0-88a5-4d1a0732669d",
        "cursor": {
          "ref": "8e5129c2-a6af-4c7d-b21b-480d77f7c615",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f55c1b1c-3bc7-4f0c-9e12-06be6b7e6028"
        },
        "item": {
          "id": "fd2beacd-e294-43b0-88a5-4d1a0732669d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aa6816ac-4075-43ee-b27f-bd822b214259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3569a83d-6e1e-4936-86b1-7a0852767f81",
        "cursor": {
          "ref": "0238b8a0-49ad-45a7-84cd-814fe48ae3ea",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd0cdfe5-29c6-4896-baab-5064de16bab5"
        },
        "item": {
          "id": "3569a83d-6e1e-4936-86b1-7a0852767f81",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3a8bc093-63bc-4eaa-99c9-b43d438203a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d415a-5a56-4595-8e07-65f683a44d63",
        "cursor": {
          "ref": "20d56f8b-12e2-4b13-946d-5953b5926b7b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "caec4028-2378-452b-910a-26ebf90a06b5"
        },
        "item": {
          "id": "327d415a-5a56-4595-8e07-65f683a44d63",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b792fd12-b743-445e-a9c9-453db7094f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59091d37-2134-4ca3-8720-2f5cb72fddc5",
        "cursor": {
          "ref": "48bb41f6-bdd3-42d5-82f9-b500c281b32b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c25bfa09-8c3b-49d6-99a4-7ec0e441f13e"
        },
        "item": {
          "id": "59091d37-2134-4ca3-8720-2f5cb72fddc5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "13f8a256-fd31-43e5-9bcc-0ac265f0e0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c5af9f-528d-43ef-bc46-bec703468df6",
        "cursor": {
          "ref": "ef859ced-c81e-484b-807f-751105177ab2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "718c1c4d-daec-43c9-bc6b-7c7fa8f0f52e"
        },
        "item": {
          "id": "d4c5af9f-528d-43ef-bc46-bec703468df6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "86831ab0-8a14-4a44-86ce-bb5f81a251d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c774a83a-8149-4a52-b5fe-bfc658c04e9c",
        "cursor": {
          "ref": "8f1337f3-635e-4628-8fa2-e5993f03ab2d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1d4350ff-d5f7-41db-9bba-6cd6256f23d2"
        },
        "item": {
          "id": "c774a83a-8149-4a52-b5fe-bfc658c04e9c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "093d1e2f-349b-4c43-b8fe-4edfb8a321ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ada50-ebe4-48ff-9c18-89c3245915e3",
        "cursor": {
          "ref": "3968f471-7ed6-4203-ac53-c4e969db6bfe",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5459a505-505b-4a0b-ab03-a247ee6e3fe6"
        },
        "item": {
          "id": "ea7ada50-ebe4-48ff-9c18-89c3245915e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fcda9456-5304-4dd4-96f4-f8965840f9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "85caad47-6a09-43a6-8dfb-9fddb6320af6",
        "cursor": {
          "ref": "c252915a-eccc-47bd-8585-f28362de0729",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "159e53aa-45f5-4c70-97ae-fe0f2c1d6358"
        },
        "item": {
          "id": "85caad47-6a09-43a6-8dfb-9fddb6320af6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bdd9b66a-f112-4391-b9f3-615c939e6651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5191d769-e7b4-4517-b830-9dfd01043f50",
        "cursor": {
          "ref": "d4bf2437-f765-4098-8a19-d82832803406",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "852b2c5e-9320-4d41-b546-5f47897f17e2"
        },
        "item": {
          "id": "5191d769-e7b4-4517-b830-9dfd01043f50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "92516d6b-f4ca-4b8b-bd37-aef04dccad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3efe4c28-d289-4f3a-9c65-47ea0fb07a18",
        "cursor": {
          "ref": "cc9af7b7-6a28-4439-8d3d-c5b3a8d021e0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8049941-4757-4a6d-a6c5-df87b621951d"
        },
        "item": {
          "id": "3efe4c28-d289-4f3a-9c65-47ea0fb07a18",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b9e11c9-132f-4c93-8a38-65347b75e1ac",
          "status": "Created",
          "code": 201,
          "responseTime": 5267,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40a7df-8575-446d-9088-dd100b1a5651",
        "cursor": {
          "ref": "753d0f28-42bb-42c0-aadc-7be8fb6677c7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5c9f4d9d-1c38-43f7-b7b6-ba27b41447b6"
        },
        "item": {
          "id": "8f40a7df-8575-446d-9088-dd100b1a5651",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8902c747-2165-4448-9c9b-2f128ab5f199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e15e8ead-3705-4e59-a445-1a59dff4e4fe",
        "cursor": {
          "ref": "237b83b3-e5bb-48d1-a91b-a7d5f2da35c7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "332e8755-a9de-4337-b767-adb9995c79e5"
        },
        "item": {
          "id": "e15e8ead-3705-4e59-a445-1a59dff4e4fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4897796b-96d7-4254-b7b2-f7b66de61dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "28f35f72-eaa7-4edd-a506-d80f6edece6d",
        "cursor": {
          "ref": "e54fbae9-d6cb-476c-8a68-7dba7e48fd5e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30208abf-0c0c-4e54-8f6a-d686d8907630"
        },
        "item": {
          "id": "28f35f72-eaa7-4edd-a506-d80f6edece6d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3bc353e7-da37-42e4-97b5-14ffff9ad9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04161ad5-c8ec-4385-ba84-8468b7e70791",
        "cursor": {
          "ref": "b13d6596-a027-4ec3-b40a-fa444497fd33",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "42e5eb1e-bd82-484a-8e07-944a4666e95d"
        },
        "item": {
          "id": "04161ad5-c8ec-4385-ba84-8468b7e70791",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e3ed6200-b83e-4496-812f-34f5ed768061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2edd25e-c848-4394-8487-9d39cfad5a87",
        "cursor": {
          "ref": "c38113a4-1a9b-44ac-8157-2352ca29a734",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d897c8cd-8100-4769-9065-b8d4e848a55f"
        },
        "item": {
          "id": "a2edd25e-c848-4394-8487-9d39cfad5a87",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "67c4edd7-ea57-4a88-bfe8-baa0b5547ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d373e1-4438-4f1d-ab0b-bd83523859d3",
        "cursor": {
          "ref": "510a3a1d-d3c5-42e6-af82-2e247cf89b25",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "20f2c9f9-f76d-4781-ae43-19ac2c214a66"
        },
        "item": {
          "id": "28d373e1-4438-4f1d-ab0b-bd83523859d3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24e84acd-66e6-49e3-bc21-5ae418e35f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f997aa-89ef-40f1-bb74-518b80083769",
        "cursor": {
          "ref": "4c6c6954-a0b6-401a-b318-b94aaed176ae",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "91b52d11-e9b9-4cf2-b223-6346343baca6"
        },
        "item": {
          "id": "20f997aa-89ef-40f1-bb74-518b80083769",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "db661af7-fe1e-423a-8c82-7a291636026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40007138-8244-4a68-92c8-124b61c4a87b",
        "cursor": {
          "ref": "6c6e6ebc-f1c1-4d22-b06f-af05cbf25705",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f311e004-2374-402b-a210-68fa6f9c9cc6"
        },
        "item": {
          "id": "40007138-8244-4a68-92c8-124b61c4a87b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "774d7be4-661e-439b-b881-7570d5a2b2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdb48d8-3e2f-4f22-a8e4-08883128f6b4",
        "cursor": {
          "ref": "6aacaefc-b38f-46b8-85a1-930673dab4bf",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bcaa24d7-45ba-4c45-968d-a9099b6d9437"
        },
        "item": {
          "id": "0fdb48d8-3e2f-4f22-a8e4-08883128f6b4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9b0d723-3792-4d69-81f4-f0e4dd992773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80434bfd-ac8f-4adf-9acb-fd21eaf29c61",
        "cursor": {
          "ref": "66990b76-a79c-466e-98dc-11db28b57871",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8317140b-1118-4375-9ada-74d60ad68aa5"
        },
        "item": {
          "id": "80434bfd-ac8f-4adf-9acb-fd21eaf29c61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4d386d3-4f78-44c4-bab3-9d695f47310d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78279237-c8c3-4ab9-8adc-64aeed3f88fb",
        "cursor": {
          "ref": "97df96b8-038b-4711-9506-0e30edcb1b54",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "841e3982-f595-4353-8406-6360aef96594"
        },
        "item": {
          "id": "78279237-c8c3-4ab9-8adc-64aeed3f88fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0a649dac-154c-48a1-a5b9-71fcbbd6d553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e01b21-82b4-4094-aca7-96d14704def2",
        "cursor": {
          "ref": "fce029cc-a2dd-460c-9133-0ef8384d00ab",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c9d57d9a-f0b1-472c-959c-ab07ab2fd4c1"
        },
        "item": {
          "id": "62e01b21-82b4-4094-aca7-96d14704def2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4849da6f-b8d8-4b19-8e8a-83896a35aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f21d88-ae90-4465-960f-c586317a18ed",
        "cursor": {
          "ref": "8db60735-e39f-4a64-92d7-5a1e611d3bd2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fb6b4f5a-dca4-465d-bda7-6f85c6e8f6fd"
        },
        "item": {
          "id": "a0f21d88-ae90-4465-960f-c586317a18ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "feaadbe9-87cd-48c0-bf28-5e645003e1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3449a88-d29b-4d14-b4d0-61076a9ba68e",
        "cursor": {
          "ref": "d7e1f3e0-7ff5-4b01-b907-b43239e111d8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ee277015-b363-45fa-b2d2-30fb63c55d18"
        },
        "item": {
          "id": "f3449a88-d29b-4d14-b4d0-61076a9ba68e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e2ab33bd-1bae-45f3-8b1b-2a42df1249a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe4af1a-8fcc-4cbb-9314-d8c951b8f53c",
        "cursor": {
          "ref": "66afbc45-b75a-4ef8-9801-017339493e1b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "607f3cbd-9c07-408c-9880-68864da46a2a"
        },
        "item": {
          "id": "ebe4af1a-8fcc-4cbb-9314-d8c951b8f53c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25de7054-cd00-4e23-be8b-11a188e54b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fb18bc-8e27-4cab-8062-22718c97748e",
        "cursor": {
          "ref": "7ac84a67-d22c-459c-aafc-ed7da70f8e34",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "34c325f3-dcf3-4407-b42d-086eca51558e"
        },
        "item": {
          "id": "74fb18bc-8e27-4cab-8062-22718c97748e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d9d134fc-7aaa-43bd-922e-e5bbdd46b828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370e092-466f-4b4e-b2f9-c279fd6d02b4",
        "cursor": {
          "ref": "86501849-5983-4cd4-95e9-c2e5d3186d7e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2f664718-848a-495a-86f9-42bc137f3e6d"
        },
        "item": {
          "id": "e370e092-466f-4b4e-b2f9-c279fd6d02b4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d2a4ee5d-4bff-42f1-a492-d51e40735c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc9af5-736b-4113-a4fb-590b339da0ae",
        "cursor": {
          "ref": "aeb8ed96-cf77-476d-b5b9-145257240c6c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f1519973-2cc2-4d5f-b0e4-fef9d75c9d97"
        },
        "item": {
          "id": "19dc9af5-736b-4113-a4fb-590b339da0ae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5eb5464-6d62-4044-a879-a043c49ce2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6f04a6-9574-4386-ac2a-23c1cb3cff9f",
        "cursor": {
          "ref": "e05da8db-c000-4ab2-a1ef-ea87f35c1ab2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "59a35050-6470-43ae-b29b-bba57de9f3ae"
        },
        "item": {
          "id": "2c6f04a6-9574-4386-ac2a-23c1cb3cff9f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5b0220ed-e766-4b6c-b05f-ee52c7d5511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20b4fb-5c18-48c4-892b-deb5c06a6146",
        "cursor": {
          "ref": "370440e6-8aca-4905-88b9-d9efbccb0772",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "55f4ef00-8581-4bd1-b649-8461da2f14a1"
        },
        "item": {
          "id": "fd20b4fb-5c18-48c4-892b-deb5c06a6146",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12b724c9-ff41-4db0-a867-4aeab12c54b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155bc635-f23c-48ff-a423-02a0e25468f5",
        "cursor": {
          "ref": "17d220ab-ad02-40a2-92be-e329308993ea",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1079a8f3-ee9f-48a4-abca-4fb553e62257"
        },
        "item": {
          "id": "155bc635-f23c-48ff-a423-02a0e25468f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "169cc31a-02fc-4e7e-9d7f-411de0831484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945babd-9a8d-4661-b2f3-657db6d5d49e",
        "cursor": {
          "ref": "0bc5fb28-b626-4e65-8612-d610c117ce81",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "749f004d-3698-4f18-86df-737b61ab648e"
        },
        "item": {
          "id": "6945babd-9a8d-4661-b2f3-657db6d5d49e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e2eceb1-49bd-40b8-af51-b885fa20cfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd83cb-7fc6-4dd0-a7f8-4e493f69f2d8",
        "cursor": {
          "ref": "cd79c743-01f2-458e-a20a-c4510da52265",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f4e6434f-13c9-47c7-b4f2-ff8c27249ec5"
        },
        "item": {
          "id": "71cd83cb-7fc6-4dd0-a7f8-4e493f69f2d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6fee79db-5a9d-411c-ac8f-84adecb531f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0337edc2-b1d4-4ebc-a903-7d841ffe5c21",
        "cursor": {
          "ref": "883cd91f-c3b1-433a-947e-4e722836bad1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0e0bb486-3a46-46bd-81ba-64b93a26ef8b"
        },
        "item": {
          "id": "0337edc2-b1d4-4ebc-a903-7d841ffe5c21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b73cf15a-6468-4df2-9db1-d0c6e8ff56c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6925d3ae-5b4d-43e8-a9cd-161cee35e956",
        "cursor": {
          "ref": "a2c3a5f3-227e-4a4c-a8ea-420a28851861",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8532dec5-b078-47b4-b2a2-8389de334dbe"
        },
        "item": {
          "id": "6925d3ae-5b4d-43e8-a9cd-161cee35e956",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0aa37c8f-c100-41a4-a4e7-97e96c20b579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c990af64-7e2f-4c9d-919c-5ef11e242f6c",
        "cursor": {
          "ref": "50d8fe13-47a3-440d-bb4c-abeb024333a2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e7a7a24e-747c-413b-9177-b1bb84ccd385"
        },
        "item": {
          "id": "c990af64-7e2f-4c9d-919c-5ef11e242f6c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bc3ec4f6-a366-4229-9c6d-f96dac9b001a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73702ef2-928c-4ade-a8b3-70fcb1c945ea",
        "cursor": {
          "ref": "1d999a88-e9aa-4aca-a2fc-19fb62b78f92",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "18db1d29-472c-42e9-ae87-3248b3a8085f"
        },
        "item": {
          "id": "73702ef2-928c-4ade-a8b3-70fcb1c945ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd1cccc6-1086-4a7c-8bc6-36670b1be0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0e3924-4f7d-4c4d-ba1d-37d8c8d3a356",
        "cursor": {
          "ref": "5a9ef331-d787-44ed-b3ae-6255b9c05081",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "46f4b118-43c6-41ae-9c87-378867243985"
        },
        "item": {
          "id": "aa0e3924-4f7d-4c4d-ba1d-37d8c8d3a356",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b2a6cf89-66ba-4048-ac7b-57642f0775c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99551f88-8160-4a30-a5d2-862dcf40fd40",
        "cursor": {
          "ref": "0adec567-a960-4a7f-8894-d1c130596524",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b4613cec-5300-4293-bf3e-d18cfec8e82d"
        },
        "item": {
          "id": "99551f88-8160-4a30-a5d2-862dcf40fd40",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fa379356-a19e-4123-928a-09106caf457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77da895d-b73f-49b2-9e6b-ad1ee918d868",
        "cursor": {
          "ref": "053645b9-f030-4ac0-9ea3-2f381c7e7e8c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6e5e32e1-0d89-4fb0-8d08-aa89ce22fdda"
        },
        "item": {
          "id": "77da895d-b73f-49b2-9e6b-ad1ee918d868",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e82d7fd4-1848-49ca-b22a-c5f566b6595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf85ee5-735d-4648-b4d8-46d78a15d328",
        "cursor": {
          "ref": "c749f3a6-55d5-4678-98c6-1c12320cc2e8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "964a6332-14cd-420c-b7a9-125d50a68aa8"
        },
        "item": {
          "id": "aaf85ee5-735d-4648-b4d8-46d78a15d328",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d2238d6e-649e-4cfe-94c0-8ca45767e085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ae46b-607b-4e15-97df-10acdc14b71b",
        "cursor": {
          "ref": "571a93ce-ee38-4ac4-8431-53f5dae80895",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "15eed983-7f0b-4b8a-b332-28a5f3562d05"
        },
        "item": {
          "id": "6c4ae46b-607b-4e15-97df-10acdc14b71b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e51b711f-c132-403e-b583-d5ba52967813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3688ee82-86e1-4e6a-a926-1a569414d1d4",
        "cursor": {
          "ref": "ca4cf81e-b43b-4076-a04b-e7d31294798e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4a0d1b81-6242-4d87-a3a1-03bb75456620"
        },
        "item": {
          "id": "3688ee82-86e1-4e6a-a926-1a569414d1d4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "55f4bfca-1a8c-409a-8189-4f2c9c3f0089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea816b5d-cefe-44d5-99c7-8a4ef3d1c246",
        "cursor": {
          "ref": "e8da19c8-bde4-4274-afef-76bee18dd9ce",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0e9f9b8e-357c-4c1e-9f12-e109e7f7d848"
        },
        "item": {
          "id": "ea816b5d-cefe-44d5-99c7-8a4ef3d1c246",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2cd29577-db41-4d47-8b35-dfc1fc2ac936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3522e3e8-ca62-4e6f-a790-ba1fc39a942e",
        "cursor": {
          "ref": "74884c8b-c9d9-4e59-b53f-bf857df48a53",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4774c320-7e49-4e62-897c-5af5cdb009d6"
        },
        "item": {
          "id": "3522e3e8-ca62-4e6f-a790-ba1fc39a942e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "85370de7-132d-4397-8f50-aacd9e94f8a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695432d-e74e-4a3d-aeff-7ca066e942e6",
        "cursor": {
          "ref": "27e99423-7ad1-4e00-8dbb-7c63ac1d099b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c1d525bb-0b38-4ae8-b50a-067dafe66fbe"
        },
        "item": {
          "id": "f695432d-e74e-4a3d-aeff-7ca066e942e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cde5ca47-4cbe-4e7f-ba1c-31474ccb62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f388a280-5e50-4dd8-9f3d-d0830b5e142d",
        "cursor": {
          "ref": "62416476-24e9-458a-b58f-39fba0c28240",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5f69132e-b86d-4260-b827-db95fc00c0d8"
        },
        "item": {
          "id": "f388a280-5e50-4dd8-9f3d-d0830b5e142d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ae9ef969-c4d0-4455-9db5-4ea9ba9b20ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521a3028-458a-4172-b5d4-025f8a169b7d",
        "cursor": {
          "ref": "d4e73759-ca8b-4a32-9fec-bb0db30d2fd3",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6e2e0b59-7484-4a37-b34e-7601d3dd75c5"
        },
        "item": {
          "id": "521a3028-458a-4172-b5d4-025f8a169b7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "729b1a11-a96f-4f57-8414-9f7efcdbf845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85501f29-e444-4c56-b8b9-4a98476550a1",
        "cursor": {
          "ref": "71bc380b-4f69-479a-9528-607c8110c5e9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "08a22b41-951e-4a89-bda6-c46e7c2e3056"
        },
        "item": {
          "id": "85501f29-e444-4c56-b8b9-4a98476550a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2356033-d69f-477c-8cbe-9cf6e98ba3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c05ef-116a-4804-a84d-eeb02f6cf691",
        "cursor": {
          "ref": "2cc1edcd-d6fb-4ef4-833a-e17f0676cee1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "92a3cf2b-88f5-44ed-b365-57b8080d6c90"
        },
        "item": {
          "id": "1b7c05ef-116a-4804-a84d-eeb02f6cf691",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "979720af-d145-463b-8e99-e1c2cba1818b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c10753-a486-452b-b894-27942bb29d50",
        "cursor": {
          "ref": "4e75947d-7e7d-491e-b782-b88461872adf",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec3bd342-ffeb-46e2-9dfc-ab73a777772f"
        },
        "item": {
          "id": "c3c10753-a486-452b-b894-27942bb29d50",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a032b70c-2b07-4bb7-a979-33eb3facfaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924635d7-3c6d-4749-a711-1a90f016bd2c",
        "cursor": {
          "ref": "5dc4483c-02fe-4b7e-a7b3-5d1b5ec259df",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "acd7cb65-f6aa-4165-9f79-6b8f99aad88a"
        },
        "item": {
          "id": "924635d7-3c6d-4749-a711-1a90f016bd2c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7b9e8355-be69-4fe6-9f7d-f7b4d45d0c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee433ad-5983-46eb-9e54-3a5d8d4ac21a",
        "cursor": {
          "ref": "dfe361b5-16f2-4231-b164-7ca78c680cd8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a4255149-e6fb-422d-b5ce-fba03de2a8cc"
        },
        "item": {
          "id": "3ee433ad-5983-46eb-9e54-3a5d8d4ac21a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "69811d59-f4b2-4f77-b8e7-c51281d7cd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c96e10d-708d-4a70-865a-1cd74648e317",
        "cursor": {
          "ref": "fd313285-434d-40e4-9422-983293277520",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "565533c2-e56d-4e74-a80e-424f3ea4bbd0"
        },
        "item": {
          "id": "4c96e10d-708d-4a70-865a-1cd74648e317",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a9406d9b-3504-46e3-b321-7f4ccdc10963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1256aa66-aa3e-41ca-891c-299e1847e756",
        "cursor": {
          "ref": "426167e2-1ccb-4f0d-8047-eae3299e34db",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d569083-54e2-4044-97ab-5091675acb03"
        },
        "item": {
          "id": "1256aa66-aa3e-41ca-891c-299e1847e756",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc777211-4110-4e3b-b513-ca78b39235fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cc0912-e1b4-412d-bc9f-c339182e8c6e",
        "cursor": {
          "ref": "a1e4dd96-94fc-4648-a512-0b7af5eae921",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "10392965-092c-4a0c-98c7-def75fcda195"
        },
        "item": {
          "id": "c1cc0912-e1b4-412d-bc9f-c339182e8c6e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9aecb08e-f5b0-40fe-b8f4-32aea26af13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b8f41-edb0-4c0b-b597-0de8dd63b9a8",
        "cursor": {
          "ref": "8e18f897-b2e9-487d-adf7-a85e350d28f0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9fb3d772-f8c9-49d6-8b89-bbd726252d25"
        },
        "item": {
          "id": "7f2b8f41-edb0-4c0b-b597-0de8dd63b9a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b7c610a6-bb5b-4f5d-bc06-6b5de2a55f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084612d-6d7d-4df8-899c-6576b63d37a1",
        "cursor": {
          "ref": "74b1c1ad-d95c-4c5f-ac0a-a781d92434f5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "29a292a9-ee31-444b-87ad-43fc98b5fc60"
        },
        "item": {
          "id": "f084612d-6d7d-4df8-899c-6576b63d37a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "92449fa0-21b1-44b6-8292-6f620da4986f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab84373-001b-4ea1-ab99-f474a908c32d",
        "cursor": {
          "ref": "c7ec4b95-bdd9-4706-ae1f-729f4d44e30f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69d0eb15-1ef1-4ad2-9d1d-0720a32c6751"
        },
        "item": {
          "id": "1ab84373-001b-4ea1-ab99-f474a908c32d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb95249a-48de-4cc3-bfcf-2d59ddf9ea07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b59e2ea-d879-4640-805a-b8a69a21d74f",
        "cursor": {
          "ref": "4a90db7a-d199-4d9f-b829-d209beada0c2",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c696a9c2-736c-43d7-979e-4b644219dd15"
        },
        "item": {
          "id": "2b59e2ea-d879-4640-805a-b8a69a21d74f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "24b5bb1e-6405-4254-beca-189cedda3803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba35bf-664f-40de-a2f7-74e5745ed39e",
        "cursor": {
          "ref": "340a6c42-d1d3-407b-9132-81bae1907c93",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a2ba2d30-8cdf-476c-8e19-7cb322b4ace7"
        },
        "item": {
          "id": "dcba35bf-664f-40de-a2f7-74e5745ed39e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "894e9c84-fab7-4982-8412-f86ceedc952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c158c1-7400-468b-9e90-f66fab372492",
        "cursor": {
          "ref": "8eb03097-d562-45b9-9d9e-c6ed99f95b48",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a81e9ddd-8e0c-4909-b5e0-f13055f0af7b"
        },
        "item": {
          "id": "10c158c1-7400-468b-9e90-f66fab372492",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "604bdabf-95ba-43e6-ac8e-bad69fccdf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95988bb-31b0-4a19-b6ab-ef103c432015",
        "cursor": {
          "ref": "76ba75c2-30b3-447a-8d4d-5e34b1af401d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7968eb65-99a4-4714-8123-6afb3ab04aea"
        },
        "item": {
          "id": "c95988bb-31b0-4a19-b6ab-ef103c432015",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4554d2b6-00a7-4f09-8f74-6c3210627ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3e1e62-839a-4332-bedc-4dca25c0f3c5",
        "cursor": {
          "ref": "2ed3171d-107d-4efe-b921-d11bb50bb3f9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "92b4e302-0aef-45cd-9d04-81dd88de70ac"
        },
        "item": {
          "id": "ff3e1e62-839a-4332-bedc-4dca25c0f3c5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cff8b9b0-b5ca-4505-83a8-68eb61bf646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801b94b7-1d5c-41aa-8c25-81c0b23d7a0c",
        "cursor": {
          "ref": "7c711fc5-c81b-4207-bf98-6d8641e1c560",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "36fbc3c7-b2c5-4772-9afb-9e2fbd8115ea"
        },
        "item": {
          "id": "801b94b7-1d5c-41aa-8c25-81c0b23d7a0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60cedd34-e3a6-4ac2-8a67-c78767848975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49231cee-5fe5-4031-b36b-26de5f3bf59c",
        "cursor": {
          "ref": "fa9d97e1-c637-44b4-bbb8-bf0ee86c1338",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4e211a6e-304b-4ff7-96e7-e25528d1b041"
        },
        "item": {
          "id": "49231cee-5fe5-4031-b36b-26de5f3bf59c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "93ae1f52-d5db-4e9c-a7f0-912997ac88ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df50dd82-39ad-434c-8f05-1337ed638d13",
        "cursor": {
          "ref": "1543dc82-a865-4413-ba82-044b2a25c91e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "25bc6533-7c3f-416d-8411-1c0e5e704046"
        },
        "item": {
          "id": "df50dd82-39ad-434c-8f05-1337ed638d13",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8139e2d2-33a9-4f5b-a25c-4e2316639b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e25f0ef-db9a-491b-8d2d-44fc3a8e975c",
        "cursor": {
          "ref": "c3c05f80-3a93-4f33-b3ba-cd84ef7965dc",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8ad8354a-d3a9-46ef-9a3d-54db4ecff9b0"
        },
        "item": {
          "id": "2e25f0ef-db9a-491b-8d2d-44fc3a8e975c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88fc62d2-af16-467f-9c6e-04c8cf125cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64132d8a-d332-4813-90b7-d5638edd167c",
        "cursor": {
          "ref": "a73ce357-7429-45b5-83e4-d935cda0d867",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e9e50794-58b6-4769-a5d1-62f1e931da9e"
        },
        "item": {
          "id": "64132d8a-d332-4813-90b7-d5638edd167c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b35b840d-6059-4fff-b697-a5a5ac05bb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c75cabf-dc76-46b2-9d7e-920b2d22a9d8",
        "cursor": {
          "ref": "18de6fff-86ea-4734-a595-b5ce61ba47b4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1cf2b933-778b-411d-8efe-d065d1d92757"
        },
        "item": {
          "id": "6c75cabf-dc76-46b2-9d7e-920b2d22a9d8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9ec1138-3eb9-4e94-a416-138b8c3e9038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c736f4fa-3f14-4c98-84fb-5d23608b6138",
        "cursor": {
          "ref": "419c1a01-902d-447f-9d64-3d398106a723",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49abb477-4916-4f24-b6e4-605624f728cb"
        },
        "item": {
          "id": "c736f4fa-3f14-4c98-84fb-5d23608b6138",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "988c668b-245e-414a-ba41-ed51a8fe555d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c332af9d-9af3-4b08-81d4-f16ffcb414c4",
        "cursor": {
          "ref": "5098161a-6025-47c9-adee-a0f467e27f5d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "19a1df9c-4132-457d-8cd9-43cdc4ca78eb"
        },
        "item": {
          "id": "c332af9d-9af3-4b08-81d4-f16ffcb414c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3c83184d-6a55-4713-9310-0767033ffd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44951d9-06bc-4866-b080-512f7f5544a1",
        "cursor": {
          "ref": "2295c305-809e-4ace-9e24-81a3beb9ba0d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9a1180bc-7202-4190-94c9-61fe53fbe408"
        },
        "item": {
          "id": "b44951d9-06bc-4866-b080-512f7f5544a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14893aad-c865-4be1-bcc6-f9ca62905106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2389b-94b5-429e-b446-42cdf3085080",
        "cursor": {
          "ref": "415bf91c-3b9e-4a44-aded-202c61080943",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "34346a5a-b04d-4088-99b0-4917f6d175be"
        },
        "item": {
          "id": "dee2389b-94b5-429e-b446-42cdf3085080",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b0468c69-d667-472b-b45d-1c67e82f9676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39e676-5197-4b45-b9ed-a800d77cb1dc",
        "cursor": {
          "ref": "82b47299-e7ca-4db1-ab24-656720ff3696",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0b7dc64c-c261-4730-a55f-dc8e0cf989d6"
        },
        "item": {
          "id": "dc39e676-5197-4b45-b9ed-a800d77cb1dc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4820d15e-22ff-49a9-a97e-203971ca0c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695b2bb6-8728-4222-8f69-39f1c181311e",
        "cursor": {
          "ref": "d4faa13b-1b7a-425a-af7d-e5de657b6359",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a8020ff-4d76-4d5d-aa0c-068108b3665c"
        },
        "item": {
          "id": "695b2bb6-8728-4222-8f69-39f1c181311e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cad42556-e3a9-40b6-9791-1e0b8ef95a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60733207-45bd-47db-8658-5cd5ac4a788e",
        "cursor": {
          "ref": "05da8390-25af-44f4-8c12-a41bd2421633",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "befc6d74-91bd-4a15-8e09-deb038c63bc6"
        },
        "item": {
          "id": "60733207-45bd-47db-8658-5cd5ac4a788e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "52a5b524-63af-441e-94c4-8e9a01430241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19be327-70c5-49be-b443-d1b03faeb272",
        "cursor": {
          "ref": "2ac6a8c9-e703-46c3-a58d-701ba65b93d8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c910e254-a681-4f6f-8059-40c7c71ca268"
        },
        "item": {
          "id": "f19be327-70c5-49be-b443-d1b03faeb272",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dad6a4f2-30a0-44a6-b340-14fc48e2469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afcfcef-eae4-48f1-b6dd-00c4619302fe",
        "cursor": {
          "ref": "a28711ec-5f91-40c5-bf5d-71ab189a81d5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0ffda8d2-6984-4b66-a43e-857881712592"
        },
        "item": {
          "id": "1afcfcef-eae4-48f1-b6dd-00c4619302fe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "08d5cbde-4b3c-487c-aff0-0e5c2cd55ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32df238f-b29d-4b06-a50a-6e5f3320e38b",
        "cursor": {
          "ref": "e2aad5f1-8005-4524-91c1-760197628918",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ceef1454-311c-4429-859e-36917165d067"
        },
        "item": {
          "id": "32df238f-b29d-4b06-a50a-6e5f3320e38b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "10a7a3c8-ff7f-4260-bd15-988e01bcace7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b87bf-7331-4757-9cf7-e3f557c7a42c",
        "cursor": {
          "ref": "9e3681d8-e7ba-4955-9a8f-63a425170c64",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2c39a487-6897-495c-a59d-d66f0ac13e1b"
        },
        "item": {
          "id": "6d1b87bf-7331-4757-9cf7-e3f557c7a42c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9ac1b96d-8f4a-49f7-85a5-bf14b0d65656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0c5a0a-e2d8-42d2-90b9-7585a28dd23d",
        "cursor": {
          "ref": "ae6bf2c5-6e24-4c6e-8b21-15c5d92787ff",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "67feadad-369b-4495-963a-49200ca5f341"
        },
        "item": {
          "id": "5c0c5a0a-e2d8-42d2-90b9-7585a28dd23d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bcad75a1-48f0-4237-8658-48b966810c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36307777-13a9-4d16-93b4-a3beaea25cc3",
        "cursor": {
          "ref": "8615d6ee-3bec-424c-b327-e9feca12463d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6331820c-c865-45e2-bfe0-21015939ad1d"
        },
        "item": {
          "id": "36307777-13a9-4d16-93b4-a3beaea25cc3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6063afe8-a044-4b93-895b-bbeccc657609",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e751328-ddfb-4230-bf92-68480c5ad726",
        "cursor": {
          "ref": "def92849-bd5f-4cd3-b847-28209f21450d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "510cc9bc-e27b-4aea-b844-a2e687f175b7"
        },
        "item": {
          "id": "2e751328-ddfb-4230-bf92-68480c5ad726",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "686bdc3d-eb3b-4a83-91a6-25de665803cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c8b09-04db-446e-b559-3470eddabc0a",
        "cursor": {
          "ref": "b73cda85-1405-4d7f-bc0a-e51c058403ba",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1bf85546-fa2f-4e40-a22d-fe85ee36f7f0"
        },
        "item": {
          "id": "585c8b09-04db-446e-b559-3470eddabc0a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2bd01031-1653-4cd1-ae4d-6e90fed7b16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ede26-65e4-47cd-bfdf-51f06ba0a1be",
        "cursor": {
          "ref": "f0496282-cb1e-437b-99bb-e423f7a9aa0f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6cfe6a34-0cd7-4c70-8e66-667d13839287"
        },
        "item": {
          "id": "da6ede26-65e4-47cd-bfdf-51f06ba0a1be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cbee991b-6933-48b2-b6e4-4c5b1bd0b792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e89588a-b73b-4a79-ab95-70fc4046878b",
        "cursor": {
          "ref": "3932478b-9974-4e81-9220-f3ba4794f04f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9229e8b1-489f-4dc0-af65-d90198a5232a"
        },
        "item": {
          "id": "9e89588a-b73b-4a79-ab95-70fc4046878b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "58f155b8-4e1f-4823-9ab6-d07a200dcf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238531df-ef12-4875-9709-823fa101d933",
        "cursor": {
          "ref": "a7ea0318-52fe-44b4-af89-68ddc059e77d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7f928165-8a2c-4cb8-a08c-095f01ac438b"
        },
        "item": {
          "id": "238531df-ef12-4875-9709-823fa101d933",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9f6fa8d7-ff09-4ee3-aa51-28e90fe414e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf5522e-3e4a-4c15-a9fd-556fdcabbb4a",
        "cursor": {
          "ref": "aa59bffd-e664-4293-ad84-5d37896fe1cb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "685460cd-497c-4557-8cac-3b3db62fedb4"
        },
        "item": {
          "id": "faf5522e-3e4a-4c15-a9fd-556fdcabbb4a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3359cc7d-391e-4fe1-a9d1-87c121567537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41322a89-0f79-4ff3-8668-bc9aa753b041",
        "cursor": {
          "ref": "7e4d3a42-2ca1-4081-a819-69e88caa31db",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "892b07af-0115-4530-9dab-d2feaa26910c"
        },
        "item": {
          "id": "41322a89-0f79-4ff3-8668-bc9aa753b041",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d86dd01-a1b3-4a47-aca6-05490a2e27f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70381a4-a7cf-4a39-ad9b-e42a6d6504b1",
        "cursor": {
          "ref": "f8aad47d-784d-48fa-972b-1c5ad08fe9aa",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aea35a91-90db-49a9-9b05-2a93272e500a"
        },
        "item": {
          "id": "b70381a4-a7cf-4a39-ad9b-e42a6d6504b1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "76263948-86d6-4053-83dc-25ea3f4da842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c80125-21ad-4e6e-8d85-cdf166f033e5",
        "cursor": {
          "ref": "565ea46f-34dd-4de6-95af-7867e1e517a7",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b6b8d770-e3d1-426e-b6a0-2c539825e4bb"
        },
        "item": {
          "id": "21c80125-21ad-4e6e-8d85-cdf166f033e5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b3c95d2d-6f69-4c93-b4fd-b8996fac7187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c5a22d-d0c4-495c-9866-629950df560b",
        "cursor": {
          "ref": "a103886b-0135-476e-ac5c-8dd5da13d2d8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2eb9c1c9-ecec-4fbb-8c49-decaf997f3de"
        },
        "item": {
          "id": "89c5a22d-d0c4-495c-9866-629950df560b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "99f52987-1828-42b5-b555-6045aa7b37b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b3caa-d839-4559-8c9a-c3b666cf2f8e",
        "cursor": {
          "ref": "9406611f-4383-4727-bf17-737dbdb6e541",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4b6d98e7-ca5b-4bb8-99ba-40b10c5043bc"
        },
        "item": {
          "id": "f74b3caa-d839-4559-8c9a-c3b666cf2f8e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f42fe220-937f-43a9-a5f2-00ce7a7a7016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21743d04-6ecf-4517-950e-fc468459f5ef",
        "cursor": {
          "ref": "9193ec7e-e841-4ec2-ac75-e8555a33b6e6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2edd43eb-5a87-4f14-8f21-e22b9dd6722f"
        },
        "item": {
          "id": "21743d04-6ecf-4517-950e-fc468459f5ef",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31149849-c8b1-4e6e-b6fe-00b938a56b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519ca301-002d-4f43-bd39-ff918a19fedb",
        "cursor": {
          "ref": "9515d0ff-1059-4bc8-8d7a-4486a65ef231",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5da0770b-cc2e-4a8b-8380-8a3f7c5235b0"
        },
        "item": {
          "id": "519ca301-002d-4f43-bd39-ff918a19fedb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7ddfb41d-380f-4027-90ff-1c43c3c001af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9a4c3-595d-4f6d-92ad-dd4752613f1f",
        "cursor": {
          "ref": "15282290-6138-4cb5-863b-2cb24905addd",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fac6be02-12e7-4b3f-a350-c13590a4068e"
        },
        "item": {
          "id": "4af9a4c3-595d-4f6d-92ad-dd4752613f1f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "366060bd-5f2d-4240-bf67-5a98a1cda8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedba15a-b440-4079-8583-30ef686a5b15",
        "cursor": {
          "ref": "92054094-65f3-429d-926d-8a4f7a66a8f5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "db0ad2ff-a972-45d8-bcd1-c81658dca0d5"
        },
        "item": {
          "id": "fedba15a-b440-4079-8583-30ef686a5b15",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0f5b3c6f-2958-4393-9291-7291694ebfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ee9da-7741-412a-8cbb-436501eefb0c",
        "cursor": {
          "ref": "9c714f76-29d2-40da-aee6-68f3f179821b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "087a4779-8220-4143-9d33-ecce8ed724be"
        },
        "item": {
          "id": "690ee9da-7741-412a-8cbb-436501eefb0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a620f9d0-7965-44f4-a94c-f03385fddfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc1fcc7-4cf6-48f0-9fea-45332a1bdba9",
        "cursor": {
          "ref": "06232eb0-43a0-48c3-b2e1-7ce9b2755de3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5f4d30fa-05aa-4bcc-93d7-64f7b276cd5b"
        },
        "item": {
          "id": "5cc1fcc7-4cf6-48f0-9fea-45332a1bdba9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0d04fce4-81e5-4c37-a462-96862c08a3be",
          "status": "OK",
          "code": 200,
          "responseTime": 451,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ae8ceb3c-9666-4fdf-9aec-10148ef262d6",
        "cursor": {
          "ref": "290acf3f-b8bb-4e9f-9baf-698e55e99aa9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab1d2814-24b6-4ead-b5db-c94f01f3a28f"
        },
        "item": {
          "id": "ae8ceb3c-9666-4fdf-9aec-10148ef262d6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "02cb9541-d9a3-467a-bcac-a2a98a0dcd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8e16a-6e19-4ac2-974f-e0d7b6ba8845",
        "cursor": {
          "ref": "e3c21feb-a48f-4757-a568-f5d1db2d43f2",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b5a8c728-f25f-4bb1-b43a-d51e6d4cbe8a"
        },
        "item": {
          "id": "eaf8e16a-6e19-4ac2-974f-e0d7b6ba8845",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2335ca16-81d5-4f8d-9324-4e3fb5b69b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb04aab3-7a9e-4899-b850-e2a6289b7963",
        "cursor": {
          "ref": "d7ff8f60-c970-4793-8f1c-2114eb4e32af",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "411a464e-e3fb-42fa-921f-7b1d2a32bc34"
        },
        "item": {
          "id": "bb04aab3-7a9e-4899-b850-e2a6289b7963",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c2488d3c-3a70-4a49-ba08-d8e18c13aead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0215d258-c732-4aba-8019-73175a0e525b",
        "cursor": {
          "ref": "52fa8a7a-bb37-4fa0-be0f-46fcd702fbf3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "15d21b3b-77ff-4ae3-b876-d0ea516cd4b5"
        },
        "item": {
          "id": "0215d258-c732-4aba-8019-73175a0e525b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "954dcef6-f7f7-4d1b-b5fe-24628c7c1cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8a3fa0-bc91-491a-aae7-57d5eb5e8c40",
        "cursor": {
          "ref": "e52f16f0-93ac-47e2-aca8-d1ef7b1089bb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8cf90c9e-7996-418a-9397-8fa9779f3aa9"
        },
        "item": {
          "id": "0b8a3fa0-bc91-491a-aae7-57d5eb5e8c40",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "90e1359f-a440-423e-8a3e-0fa5147fc291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e1853d-ae72-4dac-aa55-9e342408f346",
        "cursor": {
          "ref": "0a4ce02b-5417-4811-a8b5-6951cdcda1b9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9f4e9473-4325-4e0e-8458-480c2b2b0423"
        },
        "item": {
          "id": "08e1853d-ae72-4dac-aa55-9e342408f346",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f84809a7-5072-4c71-bed0-7a803f970a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc59146-4472-4451-b2ad-0b99d95d54c2",
        "cursor": {
          "ref": "68132346-0ef1-48e0-89dc-8eb20d0e6322",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "94b14e5b-b29a-48bb-841c-0b513459de81"
        },
        "item": {
          "id": "dfc59146-4472-4451-b2ad-0b99d95d54c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f36c15e5-ca2b-4069-b4f5-190bdb5a10c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca3c41-c65a-443f-a859-13d88c85f770",
        "cursor": {
          "ref": "941e8c9b-d6d5-4665-8eeb-d117d9973a71",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4a48b31-52ea-4ed7-9fb7-085baefae7b4"
        },
        "item": {
          "id": "84ca3c41-c65a-443f-a859-13d88c85f770",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "547c41d8-3345-4cf7-a7e1-a11abf2cfeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1275bc2f-251d-4a6b-8151-01e0f7b3fa64",
        "cursor": {
          "ref": "d96dbc23-3ee0-45c5-ba7f-084559378275",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0466180d-7cb3-402b-8280-89639e1d4d74"
        },
        "item": {
          "id": "1275bc2f-251d-4a6b-8151-01e0f7b3fa64",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dff42bc0-6dcf-41b0-a99f-0841e21bebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7279c8d-5dcf-41c2-8bc8-70685d0eb5f4",
        "cursor": {
          "ref": "f49209cc-bc66-4603-85d7-c81a2fed322b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f10abd1a-f432-4417-8894-009c8742e2a9"
        },
        "item": {
          "id": "b7279c8d-5dcf-41c2-8bc8-70685d0eb5f4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8edcd18c-ec2f-45ef-8d8a-7d45a7d12d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af74488-d963-4e49-848d-ca9c1156038f",
        "cursor": {
          "ref": "c78383d5-cd24-40cd-ab2c-300220ccedb9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c613534e-ef2d-440d-85c8-3cbe53ee8ca7"
        },
        "item": {
          "id": "6af74488-d963-4e49-848d-ca9c1156038f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e13d866b-adf1-4922-8813-a0dc61495a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e02a353-0eb9-4d9a-bbdd-cee216f94f96",
        "cursor": {
          "ref": "85acda07-184e-4f6a-9854-39453d354fed",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2ccc6ecb-10d1-4c81-a88d-245401e47f8e"
        },
        "item": {
          "id": "2e02a353-0eb9-4d9a-bbdd-cee216f94f96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fd96fdc6-b3c8-493e-b558-2cd9c2ebe815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d447dc-1a20-45b9-9439-382b2e1b9fe9",
        "cursor": {
          "ref": "3bc7640b-96b5-45a2-974c-9da00d594ab3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65ce4836-fef2-4d09-8400-f2c86f25248c"
        },
        "item": {
          "id": "60d447dc-1a20-45b9-9439-382b2e1b9fe9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "25cb1e5e-d384-4143-9711-52f9ced3f88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9957ca-ee32-4c12-8566-bf56e31b0b5e",
        "cursor": {
          "ref": "efb6711c-01bc-4446-9789-3e745d61911a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1059e87-4671-4999-a884-113028abb2f3"
        },
        "item": {
          "id": "7f9957ca-ee32-4c12-8566-bf56e31b0b5e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c6a9f9e0-e10a-4265-8bff-8934ba790176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f36f3fe-7106-464e-868a-ae49d1448aa2",
        "cursor": {
          "ref": "8f1970d0-38dd-440c-8de6-445b4162a4fe",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c55aafc0-73e5-4733-9efd-065b3a9eb439"
        },
        "item": {
          "id": "2f36f3fe-7106-464e-868a-ae49d1448aa2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f9b8ffee-9286-4460-8445-359373bdabe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e036848-3f13-41b1-ad23-d7092706c960",
        "cursor": {
          "ref": "e3974c32-6b26-4939-b504-3af80b09af86",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1d7fc930-235c-40a5-b53b-c55c66d9f887"
        },
        "item": {
          "id": "2e036848-3f13-41b1-ad23-d7092706c960",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4e9f7e8-e238-4a5d-84b0-85fab4cb7c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15be201c-0c54-46f5-b17d-e1b3421d108f",
        "cursor": {
          "ref": "e2b0105b-d049-4dad-813d-fe7d4759802e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2ecced98-43f2-4a93-8799-fd19535b08c1"
        },
        "item": {
          "id": "15be201c-0c54-46f5-b17d-e1b3421d108f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "008d6636-9784-43bd-be59-24105baeb4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc7d910-8ad2-451b-8b92-4e7b9dd1062a",
        "cursor": {
          "ref": "e4f89bc8-086f-4f69-a759-c0514b6851a1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20af4dd9-b5f0-44d5-8ffc-7e8d9bc2c008"
        },
        "item": {
          "id": "9bc7d910-8ad2-451b-8b92-4e7b9dd1062a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f51b0a2-2f18-4821-9473-aa1344c52f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdb0ab0-9b9d-4a7e-9a2f-e6e31ff19826",
        "cursor": {
          "ref": "630a3c9a-5929-4319-9276-8c9ce40aabc3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc23bbdd-5407-4087-82be-8565cc2a6c97"
        },
        "item": {
          "id": "2bdb0ab0-9b9d-4a7e-9a2f-e6e31ff19826",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f40fbe2-7666-4673-8d67-85e928d8ce90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7c232a-fa5a-43fb-aba7-129fa4d7315c",
        "cursor": {
          "ref": "9d754f95-02a5-48d6-b5a1-7cf043996ce9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60bf9b4d-c596-4744-bdfb-59620eb32ee3"
        },
        "item": {
          "id": "0e7c232a-fa5a-43fb-aba7-129fa4d7315c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bb5459f4-a396-40eb-8ab3-03993d5c84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c664866-a0d0-4001-bfb9-5534ae17e69a",
        "cursor": {
          "ref": "2079f669-68d6-4f5b-914b-c68bfa61b1b5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "233d74f4-b42e-4223-8298-646982d81c15"
        },
        "item": {
          "id": "1c664866-a0d0-4001-bfb9-5534ae17e69a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0362c3f4-700a-4ae6-aec7-ab4542ea62de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421e6e28-51f6-4400-a0a3-98996227cbf9",
        "cursor": {
          "ref": "1acb04ae-a1e9-4f20-8f75-c09c9d227226",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e893aff3-bfc8-4126-9be6-24a05fa59169"
        },
        "item": {
          "id": "421e6e28-51f6-4400-a0a3-98996227cbf9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "55f14059-2e0e-451b-bfeb-e152bbd478de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac5edba-85a4-48b7-9ba9-2c9dfa159a79",
        "cursor": {
          "ref": "eb4a26fb-3891-4824-879c-f7f8b4eb3dc6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d8c0027a-505f-4548-b49a-1a4b3d3645d6"
        },
        "item": {
          "id": "eac5edba-85a4-48b7-9ba9-2c9dfa159a79",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "55ca1cf1-8324-4ed9-b47c-ffbaabd2eb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cff223-e5e2-487c-9ec8-84b9b2dc47fa",
        "cursor": {
          "ref": "66250045-4ef6-4e89-98ca-46a6a2f1fe6f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6ddaaff2-0eed-451c-bc44-d1c68c37f986"
        },
        "item": {
          "id": "01cff223-e5e2-487c-9ec8-84b9b2dc47fa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "76f0eddd-3c86-4111-b0ca-0a43a2b3eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231f7660-fb5f-495c-94f8-5e034b21acd9",
        "cursor": {
          "ref": "ea1de586-1c85-483f-8ec2-0ff31238e67c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f055b980-5cbb-48f7-8209-aa4cbc85ce02"
        },
        "item": {
          "id": "231f7660-fb5f-495c-94f8-5e034b21acd9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3aa7ba1d-ab8b-45a0-bec5-70a545d1bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfbe2a1-7b8d-4787-9ec5-b25b486af679",
        "cursor": {
          "ref": "e649d249-6bc2-4ed5-b57f-670bd522d57c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "101d2d8e-c9d1-4534-9f21-8cf51a61175a"
        },
        "item": {
          "id": "cbfbe2a1-7b8d-4787-9ec5-b25b486af679",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "904ba478-72f7-44b2-83d5-880a3945d219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07455ac7-fc88-4a68-a23f-ace8b31b7419",
        "cursor": {
          "ref": "05235783-352e-4668-ba72-df357b25351e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d9a5262c-4ac9-4eae-9e8d-819b52c8145d"
        },
        "item": {
          "id": "07455ac7-fc88-4a68-a23f-ace8b31b7419",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5f01c22f-2cf2-490f-b02f-88b05eb59a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b74793e-ed1d-4a0f-b8a1-3993cca94321",
        "cursor": {
          "ref": "75a99ad5-cef6-4532-a263-af4f4c15d1bd",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c1a87447-90e1-4477-9b8a-2e5284357e90"
        },
        "item": {
          "id": "0b74793e-ed1d-4a0f-b8a1-3993cca94321",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "69deb2ca-b7dd-4ed8-98d8-1cbe3a3a044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2e9a3a-9729-41b0-8b39-f1d82e6b6cb8",
        "cursor": {
          "ref": "13f81051-783b-4d5b-96cf-a3faa3449b7a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f0137b0c-fa53-43a0-a4dc-08770fa5d198"
        },
        "item": {
          "id": "aa2e9a3a-9729-41b0-8b39-f1d82e6b6cb8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "50f8e102-1fa7-45af-bf6e-8c28bf58ba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55770c1-e9a7-419e-a08b-6dd528becce4",
        "cursor": {
          "ref": "c9ba28ac-7f5f-461b-b1f0-20a90d58392f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "aa968cae-4554-4849-b4b9-f09bc3460da1"
        },
        "item": {
          "id": "a55770c1-e9a7-419e-a08b-6dd528becce4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "225f8386-9196-474f-83fc-4f3cb1db0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e531eb0d-6a3a-4d02-ba14-2cbb38fe3747",
        "cursor": {
          "ref": "ce0af5cb-465f-4d41-92a6-d182e4242c93",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a12f793-950c-4317-9045-53ff0d277c6c"
        },
        "item": {
          "id": "e531eb0d-6a3a-4d02-ba14-2cbb38fe3747",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3ab2cbd-29d4-4189-86c1-7cb325193a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe68bff8-3878-4495-9665-585674990763",
        "cursor": {
          "ref": "f2562248-ed43-42ad-a5d1-c343c75a392d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a2a1b42f-b304-4da9-b170-607af94cf526"
        },
        "item": {
          "id": "fe68bff8-3878-4495-9665-585674990763",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6a2dfe85-e138-41b7-90c1-a3a492ee8324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc2225-1698-46c7-8963-b3c94eb36979",
        "cursor": {
          "ref": "a00587c7-7fea-411e-b596-41e5e87f7fbb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87622ba3-17a0-4cea-92b3-98efb841b982"
        },
        "item": {
          "id": "7edc2225-1698-46c7-8963-b3c94eb36979",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39ce3c5b-3d8b-4b34-9421-656e9ece589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d68fd76-b3d1-44e2-a59c-852801f08937",
        "cursor": {
          "ref": "58f7e3d5-9165-41d5-aead-a6be1f1d1455",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b21efd53-79f4-4708-8aac-6a91149c04c3"
        },
        "item": {
          "id": "3d68fd76-b3d1-44e2-a59c-852801f08937",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fbfe264b-e662-4fd2-b64a-2e7491b68082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661a4fb2-a471-4373-ac2b-1a42358d2713",
        "cursor": {
          "ref": "10b24dac-5c0c-4c5a-b506-545f35652d8d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "95549f6c-ad13-48e7-8de2-fca0bce8202c"
        },
        "item": {
          "id": "661a4fb2-a471-4373-ac2b-1a42358d2713",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ecb7d952-4460-4d1a-8220-5751d1d52e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46976dba-aaba-45e4-9bba-4d80c1a7e292",
        "cursor": {
          "ref": "9dd02797-a664-437b-bce8-b0c458a8bb2c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ac9e10b-069e-4612-8c96-9945392f80de"
        },
        "item": {
          "id": "46976dba-aaba-45e4-9bba-4d80c1a7e292",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5b422d54-4304-48eb-b69e-c4093dd7d5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca688b6f-f951-404c-b176-70516402881a",
        "cursor": {
          "ref": "d540286a-a915-43b4-b981-05628399a79c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1a571abe-ffea-4cae-ab0a-99d4030a35c7"
        },
        "item": {
          "id": "ca688b6f-f951-404c-b176-70516402881a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ce32d6b4-bf10-48e9-823d-4c71fb90fe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ce75c-6ca6-4e70-ac96-d2b087d3ecaa",
        "cursor": {
          "ref": "a576eb3e-8b46-4e3e-a64b-772b11d30772",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6eedd34-d973-4c4a-9bd1-797e5e1e1a08"
        },
        "item": {
          "id": "568ce75c-6ca6-4e70-ac96-d2b087d3ecaa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bd618793-4f03-41ab-9c10-9f22eb3ecf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17debba7-2bf9-4796-bc7e-de34bcffe02c",
        "cursor": {
          "ref": "5c269235-e690-409d-ae43-43a80eb7ccc3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7a586dfb-47f3-4673-83a7-f4e72d0c7517"
        },
        "item": {
          "id": "17debba7-2bf9-4796-bc7e-de34bcffe02c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85da506a-59f6-4e36-9884-f9c64e114634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257731fb-4a72-495a-879f-dbdf5d837400",
        "cursor": {
          "ref": "94236406-1cba-494a-8860-b293933a803b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "66a08a93-addc-462b-8e47-bdf98a12c40c"
        },
        "item": {
          "id": "257731fb-4a72-495a-879f-dbdf5d837400",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a9530ba-3b0d-469e-9e8b-2faa93156ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0112de-f45b-43ed-a099-6c0c001b9b03",
        "cursor": {
          "ref": "b4fa2423-a93a-484e-babf-87ecf24f30fc",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8c6b400-0662-4822-9b40-1cae96e066d6"
        },
        "item": {
          "id": "bc0112de-f45b-43ed-a099-6c0c001b9b03",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9439cbb1-68c0-4c8b-b347-d2cfb8f36c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ec7b3-e3b4-47b0-b5cc-36f90ed95715",
        "cursor": {
          "ref": "66df74d6-68e1-4062-bd46-328672c8399e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "76b3a258-b933-4c47-83a2-269e7a16703f"
        },
        "item": {
          "id": "925ec7b3-e3b4-47b0-b5cc-36f90ed95715",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b8ae4f63-33f9-4017-b4d8-649690ce793c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e791378-77cf-497f-afe9-fc25a4eb047b",
        "cursor": {
          "ref": "264915e9-4a90-40f7-9e79-78c137909d8c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "08320d4d-8d77-47fd-ae81-f526eb5a74f0"
        },
        "item": {
          "id": "9e791378-77cf-497f-afe9-fc25a4eb047b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c6bbe10b-1f19-4f58-b2cf-c9172070a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b22107-e05a-46b6-899c-f8ba95e74df1",
        "cursor": {
          "ref": "2f8bab7c-efcb-4cf3-9c54-ae7246af1225",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ea02207d-c030-4c8a-880e-31825bf6c782"
        },
        "item": {
          "id": "46b22107-e05a-46b6-899c-f8ba95e74df1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a4e24076-2878-4f55-8c84-eb1893cbd399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ece8d2-8d4b-4ae4-8cb7-3b3b072446af",
        "cursor": {
          "ref": "592c5600-0ff4-4e9f-9453-a417f36a396c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e0757a78-e865-46ee-a83f-a65240a7bf0f"
        },
        "item": {
          "id": "93ece8d2-8d4b-4ae4-8cb7-3b3b072446af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08db57ef-0f98-4802-8ce7-6ad4bc3b9608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0754550-a532-41e7-ac74-5271eddcfa89",
        "cursor": {
          "ref": "cf85aacb-e6f9-4f55-b636-3a13e71dea11",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8822f04e-118d-4de9-ad79-af3123484021"
        },
        "item": {
          "id": "f0754550-a532-41e7-ac74-5271eddcfa89",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7574dff4-4607-4f57-ad8f-0a86dbe8c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7cea6a-dbe2-46b0-b4ac-1860c3f8159b",
        "cursor": {
          "ref": "0e5e4ced-e3ce-4828-b4a9-139d99c73b4a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "978548d6-cf4e-430a-ba01-d620fb4c67d0"
        },
        "item": {
          "id": "aa7cea6a-dbe2-46b0-b4ac-1860c3f8159b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "014bee2e-b20f-4992-8e74-e3fb0fdaffce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802bf63f-a35b-4dae-a2aa-a5049037fb82",
        "cursor": {
          "ref": "0acb7ee0-1b94-461f-8de9-ec38a3774267",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cf1e7445-2dd2-4e28-bc77-136c65a9fb21"
        },
        "item": {
          "id": "802bf63f-a35b-4dae-a2aa-a5049037fb82",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7d64a9e7-3607-46f4-8459-e08183674a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0570185d-4fc3-4710-9481-d439a57b7451",
        "cursor": {
          "ref": "b3bb5630-b4c2-451f-8b2e-f55c0370c66c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e8d47563-d566-4471-8fd6-bbbb1d557c26"
        },
        "item": {
          "id": "0570185d-4fc3-4710-9481-d439a57b7451",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2ade74d0-ef89-4903-a382-426540473ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f57721-6e44-490d-98c3-bb2214fe7a30",
        "cursor": {
          "ref": "51143ebd-a58c-4ace-860a-ad907978d512",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6a8307f2-c449-44a6-8651-625d10c0a9ef"
        },
        "item": {
          "id": "08f57721-6e44-490d-98c3-bb2214fe7a30",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d4972dd5-8662-48a9-8885-0a09ed562f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffbd1a3-a453-4fc8-b29e-9b5a280cd2df",
        "cursor": {
          "ref": "5c3ad053-f110-448d-a275-354674bbac20",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f852b698-412b-49e5-a422-5a263fb4b82a"
        },
        "item": {
          "id": "8ffbd1a3-a453-4fc8-b29e-9b5a280cd2df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6b4faa5d-beb7-47ae-b69b-5be554c81890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7cb9a2-d2e6-4c58-a3f8-f418c347f78d",
        "cursor": {
          "ref": "9467b6d0-437f-4397-9910-ec2cb0eaf0fe",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d6506b56-4efd-4ddd-b227-04bf3e3663d6"
        },
        "item": {
          "id": "cf7cb9a2-d2e6-4c58-a3f8-f418c347f78d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b489275d-e20a-4fd7-b549-7acd1da939fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee649ea-ff85-42b5-861c-485a5a3bec9e",
        "cursor": {
          "ref": "25050a0f-e826-4f34-b2d1-82a80b692a7e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c06a82d4-e608-462b-8f72-82a14b8fb849"
        },
        "item": {
          "id": "9ee649ea-ff85-42b5-861c-485a5a3bec9e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0f4e158f-583a-4511-9d5d-76b25a3affdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e75c60-8316-490b-8713-6905f9078aca",
        "cursor": {
          "ref": "e8033580-e9ba-48db-a1f3-72c6733e5564",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97876456-b291-4952-bcbc-7d1f0bad378c"
        },
        "item": {
          "id": "b9e75c60-8316-490b-8713-6905f9078aca",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "927babf5-bd08-491c-b27d-7c1794b99c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a396aedd-635b-477c-b301-e20646e4822e",
        "cursor": {
          "ref": "7686a8db-3dee-46eb-8c1d-8af556bf2aeb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "33d6d1b3-ca78-4c8b-89dd-ff6b286cc5bd"
        },
        "item": {
          "id": "a396aedd-635b-477c-b301-e20646e4822e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "33e56136-70dc-4f86-b803-6c5aa68e2493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9df7bd-72a4-472e-9654-4d655b27b33e",
        "cursor": {
          "ref": "b9cbb4f0-3b51-410c-a4ef-5d0f0a224269",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d076822c-e653-42da-be59-96943c589310"
        },
        "item": {
          "id": "4d9df7bd-72a4-472e-9654-4d655b27b33e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "48a120d0-8ab3-44c1-b851-a62198bcd1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e38da28-b776-45d9-8ae3-3f181689c2f6",
        "cursor": {
          "ref": "f16b7d54-15be-4cd3-84ea-75b802ed9dcd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6870d523-2bd2-4e14-a50d-435153c4d142"
        },
        "item": {
          "id": "5e38da28-b776-45d9-8ae3-3f181689c2f6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a281d612-8c95-4a91-84f7-0a4423743a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd911ea-8091-454e-ae4b-921848d4ccc9",
        "cursor": {
          "ref": "0af984d1-0fb7-405e-8466-f58bda02b357",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "120f7306-5cdd-4cb8-8198-2307ddfc7e4e"
        },
        "item": {
          "id": "9cd911ea-8091-454e-ae4b-921848d4ccc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6cbc794d-8591-4e69-8d2b-974538b23f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5dba6f-16d4-46e9-9a12-45aef774d330",
        "cursor": {
          "ref": "134c5cc9-9dd2-48f4-9f5e-c98fdf9e18a2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b82ad297-24eb-453b-ba38-5219ec9ffe87"
        },
        "item": {
          "id": "1f5dba6f-16d4-46e9-9a12-45aef774d330",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9be87af9-016f-4261-b041-4ea86fa9a696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f438ec3-efdc-439f-af3b-6dc216dceade",
        "cursor": {
          "ref": "cd773691-26e4-44f0-8f93-825d09c799b2",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "115632a2-c175-43b8-8276-594ba9804100"
        },
        "item": {
          "id": "8f438ec3-efdc-439f-af3b-6dc216dceade",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8719165-b317-4322-83e0-ac4e233b503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ae504a-49bd-4850-838e-db1595fe43bf",
        "cursor": {
          "ref": "f0d0d9b8-b710-454a-9f71-873fb3bac13f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5639ce65-16ef-4feb-8691-563a1a19ef14"
        },
        "item": {
          "id": "c0ae504a-49bd-4850-838e-db1595fe43bf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1ef24963-6ff3-4de8-841c-41438bd3caf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8743246-2803-42c8-b12b-e5ccc18f0d9f",
        "cursor": {
          "ref": "b8b7c846-7f50-4a26-baf6-727b06635107",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fe54d277-72e5-484b-b555-6423b30740d1"
        },
        "item": {
          "id": "e8743246-2803-42c8-b12b-e5ccc18f0d9f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2ea1bf70-ab03-49d4-8bfa-c765808f3e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf7cae3-61c0-4ad1-8878-60b3ceebfd95",
        "cursor": {
          "ref": "c92c0287-a0aa-46ac-9591-bc89a1a456d3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c5ca5655-753e-4c29-91c8-c2f2bf4352a8"
        },
        "item": {
          "id": "ebf7cae3-61c0-4ad1-8878-60b3ceebfd95",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "304d0911-a79f-4d28-99b1-b894a8f3052a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd319ce-fd03-4fe2-839a-95f8e51da103",
        "cursor": {
          "ref": "145356b2-9a2b-4ea7-a8a2-9dcfe883baf1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d5377e07-98b5-458b-8afc-b1faea23f759"
        },
        "item": {
          "id": "0fd319ce-fd03-4fe2-839a-95f8e51da103",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2486673f-36c4-41dc-a045-744c6bfd6f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f7a57e-cb48-4c35-8823-ec6a3d9b334e",
        "cursor": {
          "ref": "139bbdca-66dd-4059-afe0-7c52f077f8b1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6474d838-3546-4bec-9003-beebf42d4fa6"
        },
        "item": {
          "id": "55f7a57e-cb48-4c35-8823-ec6a3d9b334e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7dd9e620-7e5b-4c10-b5b3-55c3c9153123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75465743-eff6-46f2-9545-e1a3b9c8da7d",
        "cursor": {
          "ref": "553acffd-00c4-4d24-8420-c5704df94ae0",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9eb9562f-3db4-4304-9456-8d6525c29a40"
        },
        "item": {
          "id": "75465743-eff6-46f2-9545-e1a3b9c8da7d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31b7d497-e1ba-4afd-a717-f37f0df3bd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1864b80-ebba-4028-845a-c9cbf4d90b00",
        "cursor": {
          "ref": "d90b55f7-6711-4829-8611-6cdb459d8daa",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ff681005-6052-423b-beee-7b288ec3e0b8"
        },
        "item": {
          "id": "a1864b80-ebba-4028-845a-c9cbf4d90b00",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "578f8104-f992-4e7f-b91b-97b7304bed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91188ec7-e009-4127-bd5c-df0d9cdd3cdc",
        "cursor": {
          "ref": "86a1636c-c30f-48e3-ba91-1e6e21c53797",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e8e6512f-006a-48f2-880a-12b275a9261f"
        },
        "item": {
          "id": "91188ec7-e009-4127-bd5c-df0d9cdd3cdc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d8d75a9e-8623-4383-9570-821495776355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e390a3-432e-4bce-8a6e-dab4c29a6700",
        "cursor": {
          "ref": "a1832305-02e1-492b-85de-f156b3cc130d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b9a1f45e-cd75-4537-83d9-f40120ae6d73"
        },
        "item": {
          "id": "d0e390a3-432e-4bce-8a6e-dab4c29a6700",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "210246fb-a65c-4eef-8f06-f03aa1eb7809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582e2b7-4e75-45c4-bf4b-24420a62f45d",
        "cursor": {
          "ref": "54a1962c-87f8-4bc7-9b44-bf63b8d2708f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2bb4880f-b253-4853-af52-4d821052728f"
        },
        "item": {
          "id": "d582e2b7-4e75-45c4-bf4b-24420a62f45d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9a9044db-40fb-4f2d-a2f3-b3532b5d75bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d542c7-796e-49bb-832c-8cb55a82ba37",
        "cursor": {
          "ref": "37ceea91-377b-43e1-b148-bb6b46986bff",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "39a3a001-5d79-458b-baec-423d9c4669ee"
        },
        "item": {
          "id": "a4d542c7-796e-49bb-832c-8cb55a82ba37",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "efb7939a-f495-44cb-8eb1-4ac871aa1097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c3906-56bb-4de6-ab3d-a7387eee9b4a",
        "cursor": {
          "ref": "e7360e83-1d82-469d-9920-91e0ed192fb5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ac3901a1-9363-42c2-abe6-e52fea9c8e24"
        },
        "item": {
          "id": "e46c3906-56bb-4de6-ab3d-a7387eee9b4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bafc4af6-3370-45c2-843b-d3bd2a9d5996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d14ac5-d542-4700-b449-3c3cb712ab2c",
        "cursor": {
          "ref": "63b275b3-8f76-4c7e-b7ba-1acb8729737d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "26339de4-95fd-4250-b53e-3c1b75a94700"
        },
        "item": {
          "id": "c6d14ac5-d542-4700-b449-3c3cb712ab2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "912ed219-6606-4cde-a88e-7c9128746709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d03399-20e0-4cf7-87d4-96a249eb0ad9",
        "cursor": {
          "ref": "87164988-e473-4f75-ba2a-f8c0c40e42c4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "74ffa44c-b820-486a-aa32-2d8f700b871c"
        },
        "item": {
          "id": "b5d03399-20e0-4cf7-87d4-96a249eb0ad9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4ed0aec0-ce3f-41bb-956e-70f3878205f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746006c6-3fde-4df3-8bdc-e24d09c23d4c",
        "cursor": {
          "ref": "751528c3-839a-42ec-a584-41e9d8f06f89",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a926fb25-d7e4-4933-b4f3-160b79159b74"
        },
        "item": {
          "id": "746006c6-3fde-4df3-8bdc-e24d09c23d4c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a1d288b1-44e1-4371-ba43-8cbe3d2165ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da955824-7687-41a7-9356-216b626e75b6",
        "cursor": {
          "ref": "f170b183-f31a-4ef5-baa8-fde33b791a36",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f120a80f-3517-43b6-9b22-8960aec39b3d"
        },
        "item": {
          "id": "da955824-7687-41a7-9356-216b626e75b6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "168cc49f-c6fe-4e24-b594-b8ab3d3e70da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edea76f-971d-46b3-b198-8db609c23ff5",
        "cursor": {
          "ref": "fc62f147-5936-4206-8b85-b555f6c04cf7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8c9f559e-c35a-494d-963c-3939cddafd61"
        },
        "item": {
          "id": "2edea76f-971d-46b3-b198-8db609c23ff5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ae7c700e-cf32-4bfa-803a-8bc3a30e280a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b7a3d2-edd6-478d-9f1e-5586078ed18c",
        "cursor": {
          "ref": "ff69dd48-3971-4ad7-b69a-1f707fc37cc3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "06f936f1-973e-4759-9b6f-0a054fcb64ef"
        },
        "item": {
          "id": "20b7a3d2-edd6-478d-9f1e-5586078ed18c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d675e530-99f0-43d8-8cd5-43c8bad0da15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35da3473-294f-47ed-b0b1-d595131cb8bf",
        "cursor": {
          "ref": "5202a056-d5d6-474b-b870-07c7d9dc2b81",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "30dfaa59-d118-4ae8-9ac0-8bc7111a6bbe"
        },
        "item": {
          "id": "35da3473-294f-47ed-b0b1-d595131cb8bf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "503180ce-c4cd-4662-85b5-f2d8fa416f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59652a0-67fd-4a9f-a102-ff0156baf7d2",
        "cursor": {
          "ref": "d09de607-1bfb-4db6-8df7-7f86fd3b2228",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "84f5f622-6e2f-42cd-9abb-0e12edd6f7ca"
        },
        "item": {
          "id": "a59652a0-67fd-4a9f-a102-ff0156baf7d2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "465516d2-b8ec-4d5e-b1e5-9e88ef3401e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c3e967-e557-4ef2-9fa9-018abeae03b8",
        "cursor": {
          "ref": "bd8567e5-a513-4a43-ad5d-789eb3b06f96",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7d06deba-b561-4027-87cb-17927eda746a"
        },
        "item": {
          "id": "62c3e967-e557-4ef2-9fa9-018abeae03b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ba19e4e9-d092-4041-aea2-672f411b0cd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce03ebf-3c4e-4312-acef-a62bb3bad18b",
        "cursor": {
          "ref": "f2d819fe-50b8-4e98-8a87-bb13821e4dfb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9756473c-dae0-43f4-960a-f32360c888be"
        },
        "item": {
          "id": "8ce03ebf-3c4e-4312-acef-a62bb3bad18b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a7e270a-5c3b-45de-aa86-2a426a177700",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65a2778-5bf0-4d69-b65a-0e896fec2e2a",
        "cursor": {
          "ref": "01259b9d-769d-4148-b765-235b7ca5b601",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6c39197d-a183-44e9-a208-8ba2a7db410a"
        },
        "item": {
          "id": "e65a2778-5bf0-4d69-b65a-0e896fec2e2a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "72a7d9df-0b6d-4742-a7ab-120e57f8295a",
          "status": "OK",
          "code": 200,
          "responseTime": 2898,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "93000897-1ac7-44ad-8bbb-36dcb6076ce5",
        "cursor": {
          "ref": "b7adce7c-3919-4adb-a77d-8b5e531a27a7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e4fc0051-7957-48c2-a621-e56ce82760df"
        },
        "item": {
          "id": "93000897-1ac7-44ad-8bbb-36dcb6076ce5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "44bf8a3f-0a31-45fd-909d-f9d42896937c",
          "status": "OK",
          "code": 200,
          "responseTime": 2801,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "899c0b00-8424-4460-95e2-b70a56862859",
        "cursor": {
          "ref": "c40edf19-7aa6-4ebb-8768-217af6171036",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "782af04a-06ca-41bd-ade0-1d1850b31cbb"
        },
        "item": {
          "id": "899c0b00-8424-4460-95e2-b70a56862859",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71455f87-7383-43a4-8f7b-14ec62676e59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899c0b00-8424-4460-95e2-b70a56862859",
        "cursor": {
          "ref": "c40edf19-7aa6-4ebb-8768-217af6171036",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "782af04a-06ca-41bd-ade0-1d1850b31cbb"
        },
        "item": {
          "id": "899c0b00-8424-4460-95e2-b70a56862859",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "71455f87-7383-43a4-8f7b-14ec62676e59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d3501-5f80-4ec0-bb2b-86c8db1c64b1",
        "cursor": {
          "ref": "3afcb623-4056-4d56-a934-cd783a5420ef",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a632890a-a0c4-4c29-9a7f-7247dce0c869"
        },
        "item": {
          "id": "ce9d3501-5f80-4ec0-bb2b-86c8db1c64b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e203e4b1-f7ee-4aa7-bf9a-abec09440d62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e338463e-dbef-4602-be08-be12c253fab7",
        "cursor": {
          "ref": "1e45ca10-2a08-482f-aaf6-e3302bb3482f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07c26207-4933-407a-a324-92425470a055"
        },
        "item": {
          "id": "e338463e-dbef-4602-be08-be12c253fab7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "65a8b107-6016-44b5-8af6-b85fb56da0ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}