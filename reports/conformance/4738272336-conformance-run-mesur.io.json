{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0097f040-3474-4593-97dc-68ceb265fee2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9f787052-94b7-44ea-826d-d68f75940576",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "855413f7-1822-4d0c-b012-2f5e180142cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9771f610-8ad1-4a9c-8b08-804b982e305e"
                }
              }
            ]
          },
          {
            "id": "252069e8-f21d-4c90-b6d0-6835ae9795de",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd8099a9-cb90-4c2e-ae06-a42cd7259682",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6859de4-5bb1-46cf-b5ec-6c74328d968b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "49c1a394-ea48-483f-8938-f97890023048",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6e5fd01c-bc30-4e1b-9d19-21bd83fe9b95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e62a79a-65bf-43c2-a017-9bf1c35c19b9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c1c3961-f801-44ed-a785-ff8f6e95390c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80b8e67f-5235-4668-b8a0-c5db34532059"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f407b9cc-c1b5-4f0d-bba1-9d77022760eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c82cd90b-b104-4d75-8c83-f843fcab166e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6756160-b206-4fe3-ac91-bab67f85e1a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac386d68-9041-4553-94bb-a28125d9de2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de3a9c31-92b3-40ec-899c-3d430fb07491",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60707749-c936-40e1-ac2f-90ab3dff7424"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4ba26da-4168-4cae-869b-fccf0ecb0c01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b378d7e2-32f0-4ac3-af55-cccbecef9f0b"
            }
          }
        ]
      },
      {
        "id": "4fe6fcfa-d7fc-4b4b-b9ee-4cafc24d29d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8bce0c03-7b36-438b-9bd7-6418b0bef29e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "292b5703-2da2-4c35-ab58-2d8e90eefc2a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a7d222d-229f-48a3-8cbe-c17511790a82",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5c868b-1014-4205-9b02-0c829bd401ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d6cfd21-9232-45bb-86ee-ac795aaf6783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c145b698-9b9b-41dd-9d3a-5f0537b9d8fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a4c92-ffcd-4d46-a71b-f2a789f5866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f91f3a1-cce6-4c3d-a240-486d32f4e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a43fd9-c2ec-4dc5-b6f1-32ef2bbf559b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cc6b0a-012c-49cb-945e-213398019970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e9a9afb-2f90-4e43-9dcd-cd5ac18863d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8acbaac0-ec83-4fea-b4cf-490e634a51a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58882270-c826-41d3-85c7-f2bc6d0d3d3f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5f73d-29ad-451a-8c9b-129739cc21b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42bb6e09-8d21-49f5-a48c-3a419ea9602d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95379fc7-046d-47e2-94dd-7b3f97955d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af651eb0-56ad-4da0-80ff-11ca03db7e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c707b5-c692-424a-9300-00afdfd0d89e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d76244-889a-44c8-bedf-5959e0193773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36e415bc-6f97-4457-abf2-7fd81b1c9a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d84e6d1-dfc0-4fcd-bf2c-c842a7ba720d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ef6080f6-2072-4dc8-9a62-f502c2e7f0db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1212dd2-ef0e-477a-a21a-b4cdfb8cae01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f4c0b19-156e-434d-8c06-a595e470a72b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f64488ce-a3af-4e96-9af1-310c00691c9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a0007d82-be10-41eb-847c-00bdbd236aa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5032ed4f-106e-4d4f-96f7-671e1f3a2404",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1464bf5e-7850-4ff7-b52a-a80849407085"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b761b7bf-0063-4052-8315-d7eb82f39299",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7babde53-4dbb-4e8b-b655-b7e5a81452eb"
            }
          }
        ]
      },
      {
        "id": "e40ff529-46c3-429a-9b4a-fa7b9abe4b96",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c8201506-ec98-433e-88dc-7d8801e88e2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c73959e7-b613-408a-a321-d289313905b9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a6b2a0a2-8194-47f7-a312-20dae3f8a995",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7e6ef9-bb1c-4b34-93a5-e1936bb49d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddba4c72-9695-4699-928b-5ff1ea8cf3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882083f4-6753-4778-879d-257c91c8e030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58a6b717-c0a1-4c94-a8b3-f139182df4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9caa4-4bbd-455f-893d-b91ee2710f02",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf95f12-fb91-4eae-9ada-f96994b1900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef893ce-d4e3-4f1f-a437-e19014c40dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098220f6-dc77-43a3-8f18-ddf8b2142084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa468017-a0f6-4f83-8a32-df3e04c58087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ade7561-2c8d-4a59-9c99-401017584442",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bdec0b-4bdd-4e8b-915f-39b10efcf4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228485b7-3ae1-4b40-b164-014147dd604b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46b96f2-02e0-47fe-ac43-f4a78a6cc1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0e6a12d-8010-4e5f-8d4d-0a7056c4974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4311a8-4a05-499f-ae27-913dce856aef",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ab190-6243-468f-8fa5-84a9da68fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6af1796-eb85-42bb-9e9c-86905b3fb6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42684efc-0421-4300-9028-de9edeab753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1efbc4-d01c-402e-a85b-8863eb22235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3eb076-bceb-4ee6-b536-964464f70bf9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef8ab6f-daba-483d-92f3-80db1a51a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f04cc0-0e2a-4b5a-98fd-4e4daa7cecec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08afa19-938c-4da4-8ae7-49fdc5a61613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad264699-ef4f-418b-8543-94bfc5f345a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f761b9-a79f-4647-8dd9-dc45186dcc74",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01719a83-d767-430b-9c37-8fb5ef2566db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead620ea-b556-418e-b9d6-8e3f19a8a58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92694bc7-2a42-43ef-81c6-d576c853c498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bb76a05-5fb6-42ef-9d0a-09fed4150e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7ded33-809e-4e09-90dd-2eac0cec070c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a809a275-c696-46dc-8cd3-d3181f994f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c6dff3-bf0d-4c1b-9cde-cf0904ad0a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f675a7-2ba3-436f-9cf7-670fc77a7789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7cdcaa0-0f51-4f14-b6e0-2b982301a585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c084a4-ade1-481f-90b1-8945e7fedbac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051f3557-2526-4d85-8af2-219bd915aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7302fc4a-3062-477c-8f95-08c2b7056166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00b9f4e-9e55-4c33-9282-6fe69f6555f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77bea047-19e2-4b24-bc7e-2ba6ef3047b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d0c736-1805-42dd-810b-d77a2810ad0f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb749320-4bd7-41aa-b6c2-719898918bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cef342a-1f57-40d6-a08c-b2e6d6f0416f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35b8c79-9764-4024-89fd-75ed6ffc1223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c275c2-080a-411a-a42c-f15b39b549c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332445d8-07d5-4c31-b3c3-186ce9209d07",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d80e411-a5ed-4e2d-9f11-0c6757627893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faa1859-970e-4e29-9b80-f0187799ee98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3b23a3-4f89-4751-8287-df9c289c59de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db8bd247-f14a-46cc-9cc7-42842733c377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c411c13-b665-4e6a-a51e-3cb34468727c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affc5700-3b00-4232-ace4-e8254516712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f4d686-d5c4-4279-8000-40dd4ba10ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8ea631-74a5-4868-922a-30bd4fcc80dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "990f5e41-5e9e-48de-ad3d-f5eab4c43493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e73e77-684d-4c38-92dc-5699c5a4e14e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf020c5a-1064-4549-a23a-cdea8c1afe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894d4a92-6b02-49e5-9ce0-aca443c5d1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb8d807-97cb-4243-ab5a-dbb20da40729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d342700-91b6-4a35-b7fc-423889ef21c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99e4df4-4e5f-4015-9489-3f9b0c0e686d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80126a52-8cbe-4845-98d8-bf1404645fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3b3689-0c5a-4222-8814-65ba0af14c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6e8d0b-5964-47a3-ae24-30bad63c627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef6680a3-fab1-428b-89cb-a7c4f78beb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88835150-34cc-4c75-a768-77d1109b6b2d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b5576-c8df-4824-9af0-82402f66806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aa7022-81d8-476e-bd2d-972f0e2df210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e836039-26cf-4c89-b7ff-1c8290e32979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a84e54e4-25fc-4477-927f-85ca5398f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbf0154-e583-43d8-ad34-ba147166f8bf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea4fca8-a406-46c5-984b-ad3b5befa28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473b77fb-9ba3-4166-b832-1a1e017932e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae3cee8-ed95-4341-b13a-4a283addaaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8048d5ac-eb0c-4145-92b1-668748554598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25a7d07-fcc0-45fc-9471-7ea2fdb9286e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b539a01-c701-4479-8dbf-c649e0458999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af729fb4-fd22-4eed-a2ab-13623241efcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cd4433-e83a-45b7-84ec-9b2adb718af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1586b0b1-2dff-492d-9da5-8d313c7d0d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3b6c9b-3fb6-4ba5-ae97-4034797ad32d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e034307d-88e8-4491-a420-a5d5b5ffbfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3700e531-173c-42c5-a951-c400a0372fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371c987a-1ebf-4308-bc36-5cb3fe55b6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12fde73-f108-4e67-9ffd-1314bb901edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d34c85-bd08-4120-b9d7-cde69703d902",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463d0016-d99b-4adc-a913-da19fc712a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac21162-3d9c-491a-947a-f75cc220d620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b7d048-b112-496a-8efd-d5b6a7d87967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df320c53-015c-48a4-9603-46c6eddb8689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dfa461-0fec-4a95-ad01-62177e9b08ef",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95ec75f-ee30-41fd-a64d-3ac8eaa0dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d254a9-13ba-44e0-a65c-5f514f912e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea51185-1103-49df-9095-37980a23b264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f141c51-0f97-40d7-b5e6-20670277e7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f040ea-d07a-4adc-bf61-0dd1d79a2d04",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584973a9-c13b-4cda-82fd-fc6303044165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3e7a5e-c704-4275-8e2d-efaeac11ffb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62b28f6-3d5d-44b8-902d-455a2080a90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b7b059-7c5c-4ac8-8998-e66eb273404b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a37fd63-2e11-4538-bfb0-f2658762cf11",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a6657-e21f-4651-812c-1614e1a62d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6242f633-e243-4865-af6e-8d9a9554ec7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad19d2-385f-44a0-8ced-4141beed1661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c4c6a7-b73f-4f53-b956-7299e9824869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb70c829-2f45-4829-95ab-646661060501",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e45e84a-718d-444c-8a7e-893d3329c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da9b4ac-0d16-4994-b4e0-546871da4782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373ca729-130b-4250-94a1-71fabe2358ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "743a764d-5f6c-48d5-8b03-24ad76b9538a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33e80d4-b9b1-4c8b-bf84-9c11c98d781d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e318bc6b-648d-46f7-a22b-858cbdbb588d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956e2558-e952-453e-8774-0243712bdf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7064315-3fcc-40b6-8f2b-5f0971b675e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dca234f-3c8f-4c8a-83cd-40ae50632fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b83172-5fcc-47de-8600-e8590b3d613d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d41d2d-a81c-4038-b65f-80c1dad4acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd3bf23-c174-4f5c-8fe5-6df6615cac8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc470962-2e62-40f7-ae04-81a15c165581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d606a46-c514-44b3-b3a3-bf3640cb17a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61a3db3-511d-4af3-9761-63e8a76f8224",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566b82aa-46e6-4c1a-84ee-aafbbe93ca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6662f4d-ca67-4f4c-8ca4-e87025310a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86face22-c083-4ed2-bd17-c18fbb0b435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "789d1458-54a3-4581-9fec-3cd4d3d29bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209b58a4-e95e-4e63-b8c9-db898fd016c6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944ee21b-2a0d-4a43-b90e-3029dc40047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb1223b-d401-4a6a-bab5-40e4fcb31aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a410067d-bf83-4f3b-b403-4dca2818a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdcaef2-f297-45fc-9de9-bb58094d48e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d8b34c-f2c9-4d02-8360-cdf6252165d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159737b-e165-4000-b191-f596944916c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d0e1b9-1384-4ed3-811f-a5433ff211c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270d75db-81f2-4975-bf88-a0cbf34cb65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a23683-fa15-43d2-9022-be2e3357224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad015c-532c-49ae-b7a6-d2ce89d6d739",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f917e244-dddd-4ce7-92e8-a4aac31c0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebc3f5d-099e-4bf0-b49d-20b6b5e2bd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1610f7a6-eb74-495f-92aa-6ce119b7f514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96c8052-cc61-4448-99b1-e9cdc564ed88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2251992-cfe9-4e33-abe7-f2cc9ac2c01a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a16fe48-4c9e-468c-9ecd-305f0c1c0073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c73440-3dc0-4cbb-839d-ece808e96b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209285ea-ff31-4744-a787-ceaeb62b1e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d284023-6479-43cc-b6d1-3a8a77c696b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1192765a-057c-4bc8-a0d0-8c6b5eaa2b20",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a71dd7-95f1-4ac2-9f73-acb530f0df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a75bff-7629-4847-9b7b-1192fcd901c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0210e63e-32c9-4f3c-bd18-e8e54ea6eacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d18c7b3-f3a2-425a-bc94-1841d80952c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc21a232-c2d6-4ccd-a2a9-1e423e7815c4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4c8dfb-c1fe-4689-8a89-96bf8f5489fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e57439-aa09-4394-a8fa-3b0c95996ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f60d13-a7a8-4bda-b80d-7cdbe3e56907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe863973-2803-4634-ab43-c93728fbd677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7d5345-f417-4e93-9fdb-a24dbd7d4990",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b729cbee-b9da-4d9b-a80b-fb969d2631de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf7bb9b-0050-4642-89a6-8414592ced59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fad3ed7-d898-4cff-9f38-a76192d54916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac47bb79-a810-42e0-9b65-50b1632112db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252f45d-3f7a-474b-a6c1-bdabb56ac4fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02bed77-e3c1-486a-84aa-60dab90bcab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0279d4-4f1a-41c0-b53d-912f9a527161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748f475f-69d5-47fd-9be5-cc3881d50502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8ce463-cbd1-4b53-b60c-14aad5eb6ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4b78a-1900-4c64-a690-811b2aa83241",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b1d781-e19e-4799-868f-135234a0795e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac3af9b-006f-4a0e-8fd3-dacd5b32ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8685d84e-d087-48d4-bb83-942198b3972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d273c44d-9e23-4a5c-8d5e-cdd529f7403c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee85d9a-ca49-40c0-a4f0-5c3216c27b98",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95a6bc2-3794-4eb8-84cf-72a94571403d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32872124-a29f-4389-8cb9-5c1946872e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee5a1ee-f794-4db5-9ff0-0bff5c76fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "56073a98-de3f-42b9-a015-21ab56a290a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c06b9d-cf34-4fad-b021-3669a6a4560c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d154df3-02a0-45ef-a331-d8a9013da2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23d58d2a-c4be-4647-bd59-ec47836daaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfd09da-785d-49a3-8c0e-0be68e65a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59e21abd-c2d4-49e5-bcaf-a44927cce22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d279b3-5e24-487c-820c-c0d583af64c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b942ff25-bf88-45cb-bf3c-f8a0163ad4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a496d79d-22be-4550-ab75-e85c734a5c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c425fa7-1352-49b9-8bce-f9117f9752d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c245f4e-df01-4b24-a389-5d52ca22747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0977cef2-5e17-4658-9010-962896f16354",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060a6ce4-f8aa-40ee-ad61-e29847ed5c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3337226-cb6b-439a-b742-9b879e0a1051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f5fdc8-b5e6-4184-8492-35e5eeff6e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "285b0f38-df60-4a1b-a815-e7264b378bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400514d9-88d2-42ea-a027-e155e474c658",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e6014-6283-4a2d-81aa-2a30ab264fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18958035-915a-4083-9019-d54f0392a74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac871df7-ca42-46d7-bd39-e6392d032a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ea31b5-1b7e-4281-89eb-b4018c5b1922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11958db6-abe0-4a12-b6f7-3aa7125451ea",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd46dc-7d4a-486c-9f7f-5e923b170e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c84398-516b-40eb-8b6d-85689ce4fa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2f3374-2877-4352-99e2-ae627a67fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b50c08-ea57-44fa-a38f-125878c2205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5ad828-5753-4d91-9584-c3d31e4edfd8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6884f8-c4ef-42c9-a5e5-b78936ef9606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ce8ee8-f69b-4c85-8676-b05a1a3a8d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0525b944-8d3b-4b68-8a0f-69d4c6249ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbe7788-0db3-4d1e-b3cd-5eaf083af0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a461de3b-5913-4abf-b7c7-b2d9cfb572ea",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a21ae3-5d7a-45d6-91f2-7dcf9216d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c097b13-a91b-4240-ad54-238c71cac6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f8eabc-8dd2-4208-ba69-e9cffe72b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ddee87-4125-4398-b28a-9d737ba58abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a9c429-6126-4511-9048-ebc7ca96d992",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5853e-f96e-49fe-846c-c77f873045f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534442de-6e95-4f7c-86da-1914b3b470ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278cd7dc-4bdf-42d4-8109-298e9acb1a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a067e3-d11b-4423-b5bc-a6076e437d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15b56e9-f66a-4170-93d4-0399691d8a73",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b75f1b-54f2-4746-9fa8-ada5b051c7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faefd78-4d21-4e9f-accb-04c6e37b55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8c9343-a5ad-433a-81fc-73a2051c6770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b77d956-006f-480e-9896-2d7b3aea1869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230ead37-6178-45e9-acae-e09d2be29ff1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbee70de-5ff9-4c53-98fb-0f129d77520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af701fb-b7b0-476a-acf0-94710a6a760c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4252f0b0-db7b-4c8a-89db-2a10123825a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c005eeed-b317-41df-aa75-85d902022164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dedc3c1-4637-4785-9a56-9f07e3ff1ae2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b8adc-d859-40c3-b63d-93ced08a1ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcc8c1b-11f4-49a0-88ba-bd9af04b705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca06da-0f6c-4ecf-bf03-b8c7d4783e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73bc0f4-b456-4055-a438-20be303e6a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a153c85f-5b82-4a8e-995c-60c6f2056515",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e22587-3916-4831-8042-d5a4ce7b5e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64629682-2bff-4b4c-b13d-176022b5d2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c21be13-1fbf-4216-ad00-ca997283b381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbc27e6-293f-4b19-b64d-f684c7a22eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f06add-fdc3-46a4-a61b-1baeb7da2776",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c780d595-3466-4852-ac96-dfde6f969c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a81c0c-3091-4e3b-9db1-8ec4cfd07e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8b001c-fb61-4db1-94bb-a62256aee015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1376e2-320d-4fc1-8142-1af66692e0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4477514-4f68-4fd4-a9c0-b519ed9eb361",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b67e2f7-f9fe-4630-994d-efe4bffa61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c51e4e1-bf12-442f-8125-c1dbcb10ee35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4c4a52-4330-4523-b2ad-220bf687becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f87988-95dd-440b-bf0a-0873fb02a4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0c92f9-225a-43d4-a76a-990f5476064e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a98983e-cae7-4952-be6e-7aa7354ea069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ce369f-a5ae-483a-970b-e1570b92b1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2a1bf-f7d0-4bf6-945e-3be6bd55d626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca97ca8-b926-4981-bddc-3f54989dfdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a9b9a5-2c7d-42cf-94ec-bd0e4a638028",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97091cf5-1a21-49c2-b6fd-02999cda564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb72d1-b3c8-4e88-8341-e08206ede5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ab0564-3c6b-406a-9a97-9d6ccc7c7c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "530fad4d-45dd-4e8d-baeb-a8dada7fa844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a6a77b-bf61-4605-8cf5-e4d085d05e55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217066b-3ac5-4427-aca2-ba3be72f736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0149f71f-1b24-4c22-b796-7ce5e28ef118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcc58df-1fc8-4427-95c1-f7c676e4957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c8d606-1214-4136-8ad9-765930d230d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4908d00-1394-4e4c-83da-e3e4bde5c3cb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966fb570-0891-4d41-8f7e-ac4ae9a13a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2a77fe-afb2-4e52-acab-2e9b2fa74aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9326d54-7598-441b-be8c-46f4a8a4e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "149b7407-82c2-466f-b934-4b461987c9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16aecf6f-6b5a-43d5-87f0-452ee65cd977",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd07bb0-ef51-4d5c-a8a5-bce8d5adfa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fec0bb-5a48-4188-a435-0073e4b357c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cb3c3e-da87-41cb-b916-757738205e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50b925ed-8e71-4e8a-ad45-80ebfe8d300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5125af-d4f1-4ac7-b558-1aecf4e641ec",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff80d963-d373-4f21-b915-450550462652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd46051-9dc4-4d92-8904-c85c6d203d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01afd4d2-5e14-4ff2-88c9-a90bd7bc8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b0455d-2f95-49a4-be31-8daef96886dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31637f2-b97b-4f06-b90b-8235820c7438",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e4b702-58f8-48fc-b1de-9b2c64b3850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b14ffb-08cc-459a-9e0d-3865decb04ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11333bd4-26c8-4536-9e0e-09143f9cec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "199ebca5-27b8-4f2f-9595-ab050eed71ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df895389-02c3-427d-a8d8-fdf1b0938d91",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630e07b7-3a23-44ac-9987-2cf803c34d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6bb6ad-fe07-4b35-9ef6-6ae8c585c29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30feb78f-185d-4ba1-9f24-61d03a7ab406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41b0d327-a21c-4e4e-89c5-8d30681944dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6ecac1-b26a-4a4d-9195-fd80ef5fe50a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20958e3-5d45-4cd6-b22f-9aaee6afbb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21845e5a-9f5c-4a96-b83f-6eb157fd7220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ba2e1a-9fb8-438e-8d54-9ed316802465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0813c18-05ad-48f9-b898-08fc57896108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598f39f1-0351-4fb6-8b79-710dae9a8687",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411e1d4a-ef0a-445d-8fde-cef6becc2996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba20aa5-2778-420a-9a0b-8f8a471b5160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554048c2-cd2b-4cd9-a267-5a4a5bf80143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29fad830-8041-448a-918e-469cd8b644a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb1075-82e8-4d8b-8278-fe203909d8e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979c4ea9-0097-4ea5-995e-b901a3f1347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8255f723-2fc9-458f-8d61-7bc03a953ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e26639-6362-4657-87be-3b7dfac61160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91347359-cfa5-4bed-bbca-4fa39e3f33ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba112774-70f2-4e14-8167-9597fbe56d8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abac8201-1152-4e49-8f88-cf5ccf842398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6475b5c-ab63-40ad-b755-4b96bc688a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ca0ba-6039-4f82-aa8b-54b41f584cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe43bbbd-989a-4474-be3b-af9c4d7226fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e9e93-4df6-46b0-a098-8fdf3f7a6345",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6676c2de-a695-4a04-a053-c73dccf0c00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac68f6d-b9a5-4af6-a57c-159470cbe52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6535bdf1-08e1-49da-8118-2f53f484c3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae41ece6-08f4-4161-8f92-f04a21c5e7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e495c-f324-420c-90ce-c7ad75b6d6a6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f4d7b1-65c3-42fb-b41b-92ef4dff362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c03440-f6c7-4fad-9582-f7a7f2e607ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d8c467-3ef8-4ba3-a446-4ce9df8a4c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e25b5e-d8e3-4708-b6f1-4b6538e80850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b2a6d-bc94-4c64-8659-17df9fa3ed75",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0875bd5f-10a3-42c5-908b-ac7cd998935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3ce539-f502-4c18-bd42-6d5c936d99b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac50f0-f9be-4976-b0ae-73e07c5f155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3f8be6-f4d5-4e09-b260-d94f83e183f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a59039-5b26-42cb-aec4-608262282a54",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acdcbe5-f3ae-42ca-a923-9b31de9a1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02fc81d-a980-4e65-beca-dda929a5a235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0edc698-a77d-49a4-9b0a-79f0e2bd17ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e413541e-09a7-4b30-b381-cf1739235e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c8f19a-fcd2-47d7-a6ae-87711f31b9a5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f45fd-3713-4b88-86bb-fd0348b18dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da7b8e5-2358-49c2-8eb3-6f6bcf8085af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29079e83-f448-495e-b2aa-f33d8eec4383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdab8456-9a19-4f5d-a0d0-88b1410d443e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde98ad3-a00e-4602-9034-aa28992d587c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c51bd86-4cef-42b6-b727-52da66711105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d43217-8ed0-47ad-acdc-f9662e6dccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73addc8b-3711-4dbd-8482-505fecafa212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9efc2791-1d82-4a9b-8cdd-dffb4fed398d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f07f541-d271-44ec-91a8-fa717b7a1ca3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e23d2b6-a054-438f-8b5f-ffdd9d2b927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24710962-0deb-407f-85a5-b1de3dee5685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27780ef6-287a-4b1e-be33-e7f8c20610f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "40cacc55-b9d4-49f5-8b56-be2ad0142301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a342d9-aa3d-480a-91f9-e6e1309a9a3e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b5e6d4-4fdd-46f7-86a4-da0ad212a8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43de0a4c-629f-4015-a498-d47a0705e5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f71fd5d-41f8-4455-ba83-40aad7244249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c61be2-a9b9-4246-81b5-6ef89ef4e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256384ff-572b-43da-9aac-97bc7037798c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8851e9a0-c08e-4907-89eb-9a68c6a610bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45a523f-0956-4f26-87d0-d452d807ddc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c0ace-757c-479f-a28b-d4e793b5c64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e00ca-01b2-4d2c-9d8d-981a28204388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7b0936-12a0-42fe-8c5b-14373f285086",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2272f71e-a5d4-43ab-b6f6-7b90acbfd19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1676fce-5325-407c-8589-538ceae39e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c12f26b-457b-4721-8548-843f35605bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b111a9a-d2f2-42d0-ad67-09f0bcd00992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af61b238-aad4-4adf-a4b0-a2e4b440652e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2867470-2e04-4c7c-a765-809a2993add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c468ac04-5ccd-49e5-8869-6906b61e0249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cafbff-4433-4648-8790-1e8163aebdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9f845d-e5a0-4ea7-8c91-2e506522adc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb1cbc-4b4f-4c20-9e52-7277a4c12ca8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffbba12-f455-4660-a5cb-2748b155c2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5534f99c-05e6-4d01-b10a-f551ae665037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd913b71-35b8-4443-9b15-34e774638d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5844348-9f39-4bfc-b7fd-c997d45f6c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cba9b53-fbfd-4c66-a73b-e4bc9eff6980",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d9d33f-410f-4b58-9ef4-2a6c6ff8878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aedfc7-46ba-4fed-9c7e-cc65116846ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43317bf6-c138-4727-b593-2927d52404e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e7f187-4371-44e9-bd73-d63f5d8625e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bced73-fa5e-4cbd-9c28-14cd8d969356",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ba5394-554d-445e-a1f1-6d5956735285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d3a082-ff52-4577-a1ec-268bf3e87ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0013b118-2313-485e-8241-c37a89a1a725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aac8e7d-efe7-4b59-bbf1-1abac1fe1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a7c44-858b-4136-a605-5cf7eef0332d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4964fa-f697-4d6d-be9b-58a5626a64bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5928a055-c590-43bd-91eb-f24495e9c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c0a0b2-1ac3-4612-8724-de7fc3d170ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d78ebd01-517f-469e-bc5f-4e7d7c4ccaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c41b9-89d6-47a0-87b8-7b8de12c2736",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b04591-225b-4daa-a891-a9e4cc9cc330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711e4ff9-402b-416d-8954-18a41630facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec2ac70-87ab-43a8-82ce-20f3f3491405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e57844-f8b2-45e1-a439-59861b1ae794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f96c6c4-ffd5-4a2f-bd15-f401e52495ab",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad50ad97-a196-4561-b851-f19694cec40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a9a7ae-af29-43f5-b4c7-e18882ac2e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58059250-097b-43f6-ad09-90ca458e2fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd5dad2-8c7d-47d0-9ad2-a6a4f1c10164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc910c6-c2ae-4268-ba0c-5cef8f79da11",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03746e9-e4e5-4fee-8275-256b1a3cf7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1886b51-ba0d-4f7e-90c0-0797fbf17a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fc27e1-05f8-4041-8759-d64bdc3dc83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c89a02-e2df-448e-a0eb-375c4bb61630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46951260-32d4-4da3-bce9-82b05581260e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0645c8-c023-48ae-adf1-fd3c635b789c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895bb571-913c-4d00-8f42-8f63e425d97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ecde0-af46-43a2-a5d4-59cb11b2e5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7824936-ea58-46fe-8cc3-05900abeb1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10da6e34-c9c5-49ad-8812-706bc43df340",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c78af68-10c7-4a6a-8ce4-5392d7aebf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42b4ca6-f4af-49aa-8006-a96bb19a943f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e012e0e4-00f8-4659-82c8-dda8aa650bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5484ea5f-7004-4706-8bb9-26c2e090ec3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a0eaa4-6a26-4576-9f99-85881a59c2ed",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671cbf32-2a88-40a2-a77a-c7c810d2c36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0c38a2-ddcf-4948-9fd5-4a152579b3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015ff61e-6d00-4daa-a1fc-9a8a93618234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5fdd87-ea3d-459f-9cd6-ca429d8d1f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edeeb3d-2a22-4a34-8acc-8983dffe7f56",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab698f21-d1d3-42b6-929a-aa3349224e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054290d6-5232-4fcd-9a9f-73447969b56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c95cd3-356c-4a24-a206-9978762e5774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65d27a8-8163-42bb-bf39-1092e3590d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a456787d-8725-4bdb-a2ce-f65ed1a6afbb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43330f44-eb46-4259-97eb-59787e1b82ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18e68ff-fcc3-4737-a81b-5924de88b4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3937ea36-b286-4804-b649-ca83fe4ed6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20acce5-454a-48d5-9191-c7a6d326c3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f79c16e-4abf-4353-9639-d0754a7ad710",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7dadd0-adcf-4a42-9363-5b219eb2b3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2fb356-187f-407d-a432-cd76ae6c6337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ae52e-c2bf-4b15-b8ae-c6ef03aee5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0048aae2-1371-4685-a029-5529a65fbbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f54ce4-4abd-4a8e-8f92-c5b73be83858",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b8ca23-5d8d-4d17-8a43-d2287cce4f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136c0aa6-1e76-45cb-afc2-8a1496fdbf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3321b47e-406b-4912-bca1-5976028b9720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79734b60-ca15-4a7e-b41d-79cfa77b6fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4535dd5-a8cc-4fac-acf6-8a6ebafbdf36",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1383b87c-6ecb-4c70-8590-8ed78d070a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f51054-452a-4ceb-a9a8-5f65894f70ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4293560a-8a8e-43df-8a4e-aac858dedcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb40de06-4be1-4750-abf4-521d9d011767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6485a7-97e4-4062-a0cf-a8f330febe5c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05004ef-a602-48bf-b3ca-a833433cb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a48a858-84f0-43a3-a5e7-7eff33862ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3262f74f-b7e3-4b63-ac49-caf074cdb4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4340c184-d0b3-4d02-9257-ce9e7e1f07c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897d1ff1-efa3-4455-96a5-55a649717b52",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900aacd9-05a0-4439-9ab9-8d2f1cb33b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab94e8f-b5eb-4310-975c-6d6f1ea7fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f88b2-c831-4a7a-bf14-b425e5f8fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa9a847-1550-473d-ad16-c3b8fc03bb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6847693-f5c0-4965-8f3a-c17a2b53c73d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f7b65e-2217-43b9-ab75-a6ca5e36dc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2901f1bf-56f7-467a-b872-85daacdc0e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d379bea-c037-475a-b7a7-ed1ec8c61896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2047d8-6233-458c-9a1a-5ab357572ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae66555b-2789-4c04-8c82-3010e38ce5d5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb78b6df-6f86-4be9-8832-5dd8a71fac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d913ff-8046-4014-9afd-9308ab2ca009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91351202-7577-4fb5-8af3-b94345deb29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a927a71-b6e0-437a-a274-f9692418dded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ec0e13-a09b-4ff6-9e34-1919b3e5ebc3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98365682-4bc4-47d4-9094-3938476515f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "52bdb1fc-da8c-4f46-9496-9a6d677073b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a372b0-eb61-4a07-87fb-ee7474c4d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90db172-c90b-4431-99a4-d846bc108663"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db2e483c-5983-4ba9-9d72-961144d38c17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db54cedc-254e-4894-8502-8525d50b734a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c970c707-db92-4a31-a5e3-fc066a543cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7acb849c-96e8-4ca4-a7fa-4c4af526b204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763e14d8-d27b-41c8-9eac-54d78f4ae974",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa4242ef-ae17-42ea-b3f5-9ad8ba6ec7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e8212-e237-41c0-970b-e2bd2067c718",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac42db4-5df0-4f90-a501-b417d36f3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11a9264f-9933-48e6-9236-330851c5942a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdfd6b6-9f2d-4d15-addf-369ec95bf069",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "448eaef0-fdad-48f6-b30b-a1be74a303f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0567882-25ef-4fca-97d7-822921e8ff59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bedee21-a6b8-4d65-a957-c276822363e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29581ff3-a72e-4889-bc58-a3d7a4d2e511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af702285-8875-4902-a255-d2f918b800aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bb3b0ff-47e2-4ff1-8bf8-3b83bbdc4471",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22cbb821-ccd0-435b-9ebb-6fee0d901829"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c496adb9-4fe1-46d6-abc0-06ddfca0aece",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "630da3b1-0b7f-4862-b33d-1a3bc6fe1589"
                }
              }
            ]
          },
          {
            "id": "ea97b797-ef5a-4f12-a838-4e95d8bfc0f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ff3929a-7fbf-4a99-b036-b8bf75b07323",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "998162e5-aa0d-477e-b653-a3a827a1ea46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c357ff8-ce35-4648-8ba4-722448ba36aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "889b599b-c2b2-4d5b-b513-1c72871911a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00ae1908-5a3c-44bf-a2fe-a8a19f5d969a"
                    }
                  }
                ]
              },
              {
                "id": "a690acb6-517e-4c01-ab27-6c048d9e3019",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08ab8f18-d5a2-4be1-9aaa-95e07c2f348d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a89d56d0-bbae-4bcd-9a26-cb26e2145d88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9df1f8dd-1ef5-420d-91a1-88a49eb07413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d43189d7-8acc-4522-92bc-bd59cd2d6390"
                    }
                  }
                ]
              },
              {
                "id": "26f9a519-b651-40a9-a24b-b5986cd307ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4842695f-a684-49f8-92df-cf760bbaf4b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43a56538-87a5-415a-b869-fc6c8ce074f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "627734d8-b8d4-466d-80b9-4d8e5ff47c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18c99e04-d2d1-4379-a0a8-5452b35e8da0"
                    }
                  }
                ]
              },
              {
                "id": "5c7ef214-d20a-49de-a3f6-a8ab46625053",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6437506b-dc67-489d-96a6-e1c2d4c0a7c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c31b59fa-73ad-413a-ae9f-79c6f0ea99b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff24f296-ceba-4f67-b4c6-fd7f4a84cf8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab14d952-e3a1-456f-bbf5-62a7e87e0459"
                    }
                  }
                ]
              },
              {
                "id": "ae7ac2e6-3905-41b2-9c4f-663c018c43d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8252873-6836-4490-b572-02328d312dfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65156bfd-9261-41e6-9231-b7d8a672b47b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b9a8963-0473-4f4f-9a52-ef16db67546c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "21bdf5ae-ecd2-436e-8afa-e94b8fb6ea87"
                    }
                  }
                ]
              },
              {
                "id": "dfcf7bda-4c60-47ab-8ec7-68c6ecf8b666",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80b84e35-f2e2-4af7-9990-d3a532b60247",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c89f7a3-64bb-43ae-a534-5752b7ea7e18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05de6c49-b639-4f6c-85bb-86817199f608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28ff834c-cf3e-42a9-91d2-e6c60602c011"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c933d0b7-fae9-48a3-a447-bc22746892eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce463ce-d741-4f1f-8efe-50199e4a0c2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aa3ac16-3a7d-4f46-ac0a-c474f5fff529",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "629fd45e-b09e-4088-bb93-118f25925970"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "201129c5-2617-4f32-b2ff-4420fdb49359",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "36f13177-c033-466b-ac30-13097db8e1d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4875ff39-ac72-463a-b69b-a2b763ec5a9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13d7e30d-27a4-40fa-854a-b47adb3375d8"
            }
          }
        ]
      },
      {
        "id": "78df817f-f3f9-4674-a9ba-47b10dd3cfd7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0f3b8873-6778-4de6-b473-38734113320f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5dee77a-49d1-46a9-8bfe-ebb8c5a5e874",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c13914a-8c06-4273-99ef-b574771f08ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463e2fb5-e5cb-4b43-8c96-d55c31fb7734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae8eed7-6cd0-4383-93aa-6a6ba9573930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35881adf-6e96-4c39-b2fb-b254ab81c0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8cd122-6dd4-4956-92ef-add7ebea9506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f332b1ad-01a0-4e67-93bf-e47086e9788e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b694a9-637c-470e-acae-06b1968f275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66408966-97c2-4231-ac6b-8ae27a6d229b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41160217-f5d9-425e-8f33-3484a61a6157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cb9a55-52d6-4c43-a0b2-8e6b53652609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e80767f-6777-4cd8-8f13-3623f205a834",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d79ef-5344-4957-a7c0-6656a52efb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1953f0dc-fa38-489b-8aee-b0666a959e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d514fdb-d024-4ff1-988a-060abbc14d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cfb42b-98f2-4d82-a05c-5978db5156d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83796bef-8078-44a1-b00b-1daa1ab7aac9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5111af8f-662d-4efa-a0b6-d798eb655855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d2f758-5fb2-430a-8593-092835e63c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2a1a5-9833-444f-963a-6decd8ac6c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7624f8f-b590-4afd-8c32-715e8a0c97c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3218f69a-2cb0-431f-b77c-6f6c7525b987",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e481f-3fb6-47f6-b921-64edd1a8d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb91c7a-eb79-4c48-9139-b1b736a27e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f24b81-5dd4-49ce-8678-074fb8807ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5eceac8-db46-41f4-836e-610271d4b8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12396802-aa83-499c-a667-f2f49e559d4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abc871-93d1-42ab-bdec-78cc37e1ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18f365-d18d-420d-93f2-db841b4f53f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab6f90-d2a8-48e2-9cdd-e898c445ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "246d15ac-c054-4019-90e4-9d43511ba6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dba4762-1a97-4886-8005-c373eb197791",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1073b5-3071-4235-a586-636c0b12352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011f61f2-d642-4668-b6c0-8a4f867bb26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a3d07a-7d0e-4106-91e8-23c1ba5541f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c47b828-86a6-49f4-af06-cf8687043c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d133980d-e019-4ac8-82fa-f6e0bed85ac1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a6ac61-bb56-44a1-9fd5-b660def4da01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37931fe5-2655-44a5-a822-5be291876d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a9cf79-d75e-4f14-a78d-6968e4bb952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4394d0ca-97f7-42dd-a3fe-24a902c2ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cdaa3b-ad1d-4729-ba1e-8fe03ff11b32",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b55e56-34d8-420e-a56a-b8b604241b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b5a04b-52b1-4dcb-bf9d-a5ebe8888ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bf8482-f554-4207-afdb-b0c23ae661dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cb321d-3677-4bdb-97d8-da847ff6fca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356346e6-99f8-463e-80d7-e3fec6c6fb3d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82593c96-b530-4dd7-ac95-3f0e31797386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54507fee-525f-4bdb-bfea-c6aee1983022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490424c0-e9a9-4e6a-a034-1e962e3a63b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "445c7ebc-5c6e-440a-88fa-6f5d8099633e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfef4769-9a69-40b0-bc0f-4a52db9d72c2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f010fdd7-c3f7-40fc-a1cd-9171a6512648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b17cecf-3b40-472a-a2b4-bb1ce3393b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cf0c04-93f0-417c-b4ae-f629632d3b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c18b7d0a-cfcb-4c99-9f9a-31be57e2a5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5484be7-f514-4fbb-a7a6-92dee9d62b90",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca64bc67-fc60-4d8f-a076-186d063aa0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310c0d8d-2542-4a24-b67f-05a2ff5b434f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b9581b-eba0-4140-b68c-987c8e2abf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee52d0ec-0452-4eea-b3c6-6e0c878e1298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ed61c-fa46-4758-92bc-a5f3c29967ff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e710652-213a-4cec-8b1b-58ca3a2354ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d391c982-81e8-454d-80fb-51d5680d07b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaa655b-a675-4910-a7fd-137bdb6e4afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d31caa-30ca-4955-bbc1-a6baa96caa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820874e-9f7f-4262-b6e1-ba2d63709cf6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abef8c1-f840-4023-af52-490f7f15904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987282f6-f743-42c5-a2a7-cd26890341df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2108554c-d1da-4736-b4fa-38c7d7beff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc313ece-b3ee-4514-a117-6fd54530a686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5fed69-8330-48be-956f-9dbdd6b4cb24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911c1937-f1b5-4763-a4a9-1bcd39304a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bf651d-3706-4113-8de6-6b9f34f05969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc10daf-a4b6-4814-aabf-6f73c2487b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "349f0703-3b35-4c84-9567-69afc0be9ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b6e653-229b-467c-8c70-6c87fa14af7e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f594ea2-756b-4e6c-bb3d-ef44948d8212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1281c0-e457-42fd-9479-10e91dadc0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c7d630-8f69-4e1b-9231-ebd3b187598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b4a4bd-fb9a-42d8-aa16-76434f215fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d253d361-c6c2-4f2e-8662-75cb982b8798",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b83e857-e624-401c-9c25-5ba7eba51b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9daafe-ab8d-4c08-90fe-1b38e04a805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f69f996-6101-4bab-ada1-759ff8883a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "413ba5a7-497b-48fe-a9de-df7c956e1f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7734be-0c9d-4547-a2a7-bd89123884ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3632ff30-dbf3-42b0-b91c-367f608aec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84b9d0e-3321-4d0e-ad65-486ed11f0475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018851d7-cd68-43ce-865a-7944acdad42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "129a0742-c904-4ea0-b7ff-c7928b481d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f300692-334b-4e8a-a2a2-dc241829724e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46db519-0229-42d3-9b15-f571a5fdbae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b69033f-798d-483c-9e9f-afdc5e0b619b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc639f-4171-4c9f-b270-e1981391599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99bd8eb-f709-44f0-8114-2e06fd53259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb9d12-3a5d-4b51-ae8b-06b4ea13cd6d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b239a-025b-410e-ad38-9f1ce9c319df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea90a37-eaa2-429e-903e-4bab214edf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec137e42-f8b2-44d5-9edb-1a5e8946179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0dfab9-9340-48ab-8834-28b3f084568e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a5afa-974e-4622-8a3d-985141ef5e81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d107d485-d341-48c3-934c-237073130d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb564418-7ea6-4808-a752-f9f7256fee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7698ab75-da89-43ed-b688-c7ff68880eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98fbed3-adc6-45c0-92ac-825d74356660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78255e25-1f76-4101-b993-b89bc936af95",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bada044c-a849-4b65-8db9-e0d8c4698b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ffcabb-69f6-4628-adb5-1670d02caef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55ea2a-6010-4556-b220-17e967b239c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd1af51-0d17-4fb5-9029-c1bc232b1f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cbd752-6898-4a50-b857-3861b61bc187",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf5e46-aad4-4372-8e74-85ae49782e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6b1c0-fb49-47d5-b975-a130ba1b3264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9facce-da6d-493b-b06b-00528e5605cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b4c8c7-ac8a-42ae-8c54-5324e7b1ab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638facb-5d4a-4bc8-b983-d8ac595e0335",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32da501e-2740-420e-b8c6-2f6458724d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76650d4e-ea03-4b40-af7f-6a0bb5d4ea4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d0ab02-fe1c-42cc-adbe-25ed277c65f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bb65ba-cce5-47f6-8678-018e83262981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec3ccb2-b1aa-49d6-90c6-c0326dbe34cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642463a-0648-4b73-9bad-11b294deaa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04244884-1de2-458d-b74a-43edb2866bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff76ede-e1ed-432b-b02c-a61c0961da42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9235e258-c5b3-46b6-9531-8f288b6c9edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feef23d0-390d-4c9f-97c2-7d4b08b874aa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66bea5-19f7-4681-aaf7-913f2ed39069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb21359-a374-46bd-b5c2-9f4d84ca6fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a34d3cb-fc99-474e-a6b9-3ff9f7369e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b502df-32ca-4836-96c8-8cbca0ea52d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027128d6-0bdf-4845-af50-2cfcf2baf13c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ec629-16c2-44f9-8ea3-8c886eb6a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c8c8e1-8328-4d58-8ec4-72d3beed2ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43f8c7-154f-4466-a957-c919ef00e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1828ee-2e5f-41a3-9573-269253f9ff69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c786fe7-90e3-4809-a357-a0afb4029c6b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a386232-b55a-43b4-b996-feb1defaee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb972da-adca-4c6b-a129-5169b2614574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5894f941-b661-4f01-acd0-9066637a73e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7258a8d-c674-4026-a08f-b658bee28ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f56529-393c-48c4-b797-ea7e48f15875",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc3636f-2721-42ba-abc1-90f9663d79ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67178e2d-9c26-45ba-a4c7-b816cdacb60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10313d53-2e6c-4724-8aa4-71781acf2c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c11c3e-639c-4680-87d2-d9751b56f2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516c229f-cb40-46d0-a80b-172c8bb53158",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bb2dc6-8ecd-47ae-9e2f-02533231e74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8161aec0-2a65-40fb-be0c-c22d59ca96ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb0e8c2-91e4-476d-b064-82eb68a9ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6e9e43-6389-4673-b5be-39acb3c207a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f2e40d-2b8f-4330-bf31-dc3be49f47b5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765acf05-1525-4ac6-a940-4ec417ebd7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188e4270-5650-4ff5-98d7-77db089e56c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff59f88-adbb-45df-bafb-7a55000bece2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a24486-eb36-4260-a7db-40dc6fcb2ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbdf7d3-d002-4da1-967e-1a6944d0a646",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42849bd2-467e-4a86-9bad-e19ff79b875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c7d7c4-38c5-48f0-b3d1-5522f081e507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dee5ff-b569-435e-afbc-5584ba142494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93fc69b0-0040-47b5-8f63-95b6d41ae74c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f010207-4648-44f4-b3c2-f6d942f9bef1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a7857a7-15ab-4909-aced-49c66b1a3395",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83388f9-c3de-4670-8ac9-a5e084d91f29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "946e9005-4a26-4412-9b9c-d67dd84c7194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd52d4df-c2fb-422a-af7f-37299effc6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a1e654e-bafc-48bc-911c-a26a6ebaddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3474a440-8581-46fe-b5be-96b8217d4be7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776cb462-964f-4818-a2df-057fc5da6ed1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be0f6724-7604-4f04-b501-b4874476d391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ac046a-f060-401f-9230-12673cb21420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeb48fb5-e391-4b71-ae6d-63d9ede28c36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c925e45-3cce-4d9c-a1cb-c4be4ed7413c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3d1e47-8f84-4eb1-9163-66cec37d359c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d8645b-e843-4158-80e6-a79b78fb6735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ee4ce8-70dd-4c5b-a876-e859bddebeb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfe7df13-465d-45ca-979e-1a293b8378ce",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c30665c-acbe-43bd-b847-e8bd08540b2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8cb05cc-ea09-4cba-8521-f466d4c75a7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db2de73f-dfab-44e3-9413-7d0857e35d7a"
            }
          }
        ]
      },
      {
        "id": "f6c6e3d2-1bc4-49a4-9921-490e8303f41b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8d655944-9eaf-47b0-9d6c-4c989cfd70ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fefbba6-aea2-4fe1-a2bb-84f6224b8308",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81cee09b-26f0-4c7e-b994-885705605f39",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28058ee-526f-4004-a240-59617f4c929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b0d1e4-ff87-4fe0-b31e-7c148cc53c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25cbf44-6429-4892-961d-b3c625db778a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b03ce73-94e0-4762-9dde-4b54fddb6b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b22768-b7c9-4401-a4cf-554b80dc8975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ff8fb-d837-42f1-bb1b-d0318a264c2b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bba82c-a1c4-4107-8ee3-fef21b87b13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e395b7c2-bf49-487b-b436-261c50d553da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc69a5b6-c8b5-439e-98bd-f1adb8619c3e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322064a6-af80-43d1-9714-853639311b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428b8057-cade-441a-9401-099723d90a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be6f3e2-839d-400c-a03a-8a2d02421849",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f025c2e-88cb-4343-9cb8-be01a4537db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5f83ca-60b5-4f8e-86ae-a13dd6c11724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5605716-9d59-4f2a-90ba-2788904c0047",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7150a1-fc9f-4356-9d12-80c4dfde56d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c2b91a-e84b-4425-9035-b7c71811ba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de72258-aa47-4414-b357-b796fb839c9a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0396e5b-880b-4457-8aa9-73e812f27672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46808df3-9b56-4292-8e7d-63201dbfd7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bf883e-08d9-429a-8d09-a49adaafb125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9857ad84-f2d1-4fa0-aa3d-cd624ba7db4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89581b1f-19e4-4e5f-9161-0178a0fb53aa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac79b92-25d1-45bb-a02b-7ec37729b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0484b9-d01f-4324-8cfe-56fa782718b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fadd5dc-db3a-48f0-86ab-69bbc45aefc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db35027-e0ea-4ee5-84f2-bb38eec65ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58635097-9575-4b8f-bedf-0daf1c6a322c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc47a7-f7f6-4f7e-8692-f9285644225e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825d650f-76d3-4127-b8d6-47540f19e7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d1c03f-ec2a-4a98-afc7-335a9a99d46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4b42bc-483b-47f2-be15-cc8f48bdbb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fcbe43-e282-46e0-9262-186dfa3f9c23",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3892fd02-2963-4f75-b224-045f5f876b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c1bda41-31b3-4710-8d41-a246082a5ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0343ef-8580-4cfc-841e-5aa80c2c8da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08df65b-8448-4f9a-87f0-eada79a80370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822b202c-4134-4c83-8bcc-69308da5ec59",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb71d654-6b02-4e1a-9f0e-42ef5e434d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea8b61c-cce7-48db-b23a-2d0cc012c43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06590b5a-0074-487a-a94b-ebc41ed9d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e06936c-6a52-4204-bd5d-5c4c1e73e9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449fd48-441f-41b7-8a12-9db4a676fa9b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080d544-dc53-431e-9ad8-40cefd41cd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805105e9-62f3-4217-ae08-49295e5174ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b855f5da-42fa-4e05-83d1-9e7a44519f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447b629d-9e23-4a0e-afcb-8ee2567fa4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7b25a-7c05-41a5-8b97-37b541496cd1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d995c93a-3b4c-4358-b5aa-89b434248599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55eca763-b0df-468c-b39b-9254ba130e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18299690-8f73-4072-9a63-b037c7a83d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5141e30-55cf-4eeb-a342-6949f25210f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb94cbe-8977-4b7c-aac2-1dfc93daea7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e16d106-5039-4327-9aa5-cbed8fbb80b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d0c7eb-0475-432b-a884-e1bff76328c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3741ffe-3da0-4dd7-8480-bfe4030fad52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25be71c7-4826-4c23-93c5-c93640f87da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108d4580-b960-494e-9e01-92aadb394102",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e440e9-454e-4437-84e2-6653eb5d99a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5f3a3d-585a-489f-8367-aad8a32d097b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e54f09-9139-4da6-a167-deef145a6abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637cde6c-683d-41df-95ef-8eb6ab4473d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02389a44-6e36-4034-80ce-97937e56b377",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec22daa6-3f17-4b57-abc9-54b91b6acbeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf22e0b6-cd9d-43cd-8084-9c6e473dcd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d9e21d-b631-40d1-9966-748801501415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c697b8cf-e37e-4ecf-be65-9d254cbb31b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612b12bf-e868-4e7f-a35e-0968dd3405b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a4594b-d396-4e76-a559-de8c3654779e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f205ff1-4d44-4f0c-b119-f57f839269af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db170b-2273-42d3-a236-f6a3e70f253c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fe347e-e11c-4494-9f63-6413415df739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd03686-49b4-4c81-bb93-e9f602bb4d4d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f2491a-0be4-433d-847e-723c92ff741c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15750314-1a92-4b5c-a2b6-7cee5a644147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2951dea0-7ea4-4c50-a0f3-487fcb964108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41890980-b9e4-4fca-b3be-facc59711ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ad6ba-d583-42a9-bc15-654c30b1fb34",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228da54-ba78-43a4-9031-a59c5f3ba332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cf961c-ca9c-4e3f-8888-cd081a906379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644e8eae-7eac-498d-80cc-224b2d66394f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbadb7f-c1fd-45f4-9ccc-0963c1b6cf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5841a55a-08ee-43a7-94be-d2df0c04723a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8683a80a-115e-44f3-98f7-8dbcd28c0586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cb66fd-7f08-47af-a46d-5bf61580fb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea820009-1d1e-4fef-b426-6d75ce71506f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d5e2e1-1c64-4387-930b-235a1ecdc7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad93d9f-e787-4c74-ba67-defee4699551",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78236e77-9357-49e1-88f9-60124b097d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bd517f-c2d3-4b2d-87e1-8b6c16f008de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf09827-0e14-47cc-8c91-fcba34e7062c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac17e7f-5068-4107-b7ab-e63f40105035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d84547-233e-4a07-ad5e-e25f51841625",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091bbc00-5082-4d83-91ef-07a6c5cba3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e989b5-32be-4d8e-bf09-eb29e796248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fa6d0a-9b77-4a59-9a9c-56906b1a5568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df073413-293e-414b-ab95-5aa4f058cbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d4310-f78a-430d-b239-ab51cc0c5807",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17f9a94-fd02-422e-b80f-9b709a2ddfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcb69a2-b2bc-4c23-8b48-8431360b6dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1a52c2-94a8-43d2-99d4-12528b402573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb695fc-6059-4734-9e05-1d4f572e0560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c301a3-496e-4e90-b1ab-b59ef61686bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93556683-96d1-4d50-81e0-a673af571df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae211a2-3a17-47fb-8e03-09505550e014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f423351f-a318-4732-9c59-a07d359b60ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf9aa0e-f31d-4c79-a5bc-773ac169ea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea9b3be-019a-4298-b418-465415520448",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2391c21-ea5c-4e8c-9a1c-5315c09128fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961debf1-484f-4e4d-99be-bf3fbfadd426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a984fca-4175-488f-9d1f-e7b0f96c1a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfec0ea4-70f7-4803-8f22-5f03d2743b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccd3a52-a8ec-4c84-b0b9-03e29e8fe142",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3421cd05-2007-46ca-870b-cc4e5984576f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2be1c2e-7699-4c25-b9f9-a3b77e5dc14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788c7365-0d01-41fa-b4d5-8fb38e185bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b441992-cb8e-4bc2-b60d-63868740f157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6837d-571f-492a-be67-c95589e67190",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1cabd0-9c58-47c4-96e4-28270bc8915f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3a4c55-132c-45a8-b538-45489be6a20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03684f-fe4f-415a-b39d-8e651c5b5a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc052d6a-13d9-43d4-b9c3-cebfe021a3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546ca5c2-f019-4cae-8bf6-5aadce514cc2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad824261-7d35-43ce-9f5a-5f865e6ae581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3306be8-7b6e-4695-bf40-ab517e5708d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405f0f7e-3398-429d-a443-75cc1ea8e988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5595195c-f668-4e67-94b9-c9fe081b1696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e411f4b9-d534-48c3-8eef-376e6f47c65d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347077a-2434-40b8-b33c-a51fadf32bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27871b72-84d3-46dc-8688-22959f0707d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380e1eeb-ae53-47fb-9c04-49b943aacf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5fb1bf-3f38-4c8e-88ac-0a4dc5e77f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d47ced-391c-41d3-948f-4ab06ef6e739",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7fd469-6163-4941-9270-4413c38c340a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d5e0e6-75ff-41bb-8061-572ae7587737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ff18c-6cf2-4a16-967a-554c7cda11c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a78c712-65e5-457f-9a4c-a8adfc6232e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a3d946-69f8-4809-92c8-3e93561b28b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b626518e-7113-445a-8483-44ad5140cd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e024f55-c055-44ca-9a9a-3033d5d1839b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78c005d-1ee2-4933-8b25-503ca684422c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec6fe8-c994-4769-8abf-7a43dbdc4b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab69b1d-8fcf-4c75-9a40-b8a5dcede374",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6d590e-bc93-4ce8-9e55-2d9cedc1083b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e1a248-5467-4f1a-8a0e-e08dbf43f16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c823b8e2-9b35-4b2e-8ae7-630fa3ec3942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94c9298-0128-4bdb-8e76-073afbb6ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4633dc63-7370-4dad-915d-8d182fba93b9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c72d8e-00c6-49e5-b003-10324ecb62f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b7d086-1048-46c8-8b7e-90fc21bf1570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5e63ef-ab93-4d26-8b8a-d734720a5bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4952cc-e7da-45d4-b212-0b9ffe531d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8712e24d-d791-417b-99e3-da8030d9baa0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1eb553-5485-45f9-92ee-d73a80cf0f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051cbc0c-5194-46ce-9455-1b26f6b23438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6015ae-1c41-4751-9eb9-7e8417087be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5c6bf1-7e0f-4a94-8a40-1850c8fac11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff7d85d-e57f-4ac7-8ca2-a3cf21c15c29",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ae65d2-7754-4403-abf0-7c81169ba97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2315270c-b595-46c1-baba-f80e9c218438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87237022-ff71-422a-a158-95dc9f66f4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f47ac2b-97b1-4611-9ba9-cfced506ea0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afdf50b-003c-47f4-bd31-f562318aed30",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60917765-5e3a-459e-8efb-cb00d5b018fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc41403-aff8-4195-b150-4dfc65ed7e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4054ca77-9f56-44ec-a053-006aca0385de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6cc91a-0ae7-408e-851f-e02a3f1500ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195ca56d-242a-4672-9e9b-bbfbda30d023",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e2d00-0ad0-444e-bcce-467b17d5a91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1e7e1d-e405-4651-a320-d9cec4d5cb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e4a3b-64e6-4e70-bbd9-6ca58c704b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b4baaa-f38b-4c75-b8a7-6ce81f891656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88fe9b8-847a-4ee0-8265-74061cd3e268",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473598b6-a7b0-48a3-b429-e5a76acad0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bc72b6-9388-4f36-a72f-9a424c46d951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fa75ec-6d7c-4359-a534-942f619924ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fa4bf7-a6aa-4647-805d-b937f5b517cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dfaf71-92b6-4a24-a28c-4372f1872662",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9ccd8a-6ca3-472e-a98c-a62f33013a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba24ae4-caf2-470c-b048-df566e11b80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120e8bc-9f36-40ab-8bf4-0751450fa68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c1c3fc-824f-4e2a-9230-3294b8e3b338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4465d4c-1d34-40bb-8ad1-6a0781b5ac1c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b17a155-b84d-44d5-9504-d8c543420b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c823ac65-4b2e-485c-9bff-a248aa2ebe1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6230c367-10cb-4954-bddc-dc8bd891e5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd466c70-5d9e-4ae3-8985-c74dfb8d4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8efbb3b-9cca-4354-9595-2d309a95b65b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad033d50-a742-41a7-a8cf-510c73f3ecd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4307cbe0-0260-4237-a8b6-d341a0e60346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3247ebf2-78c5-484a-a6d9-d8ae040c58d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a773ee50-a0ef-4b61-a544-afc860505f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb1270c-7328-4146-88a5-c669a12b8354",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d14fae-65c3-4cc6-bfb5-eb609160d365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e8014e-9da8-4705-9357-fb879ac6b9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8971a95f-dca1-4b61-9423-879640e07757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fcd6c3-96d2-4d14-8da1-bd8610a989d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6f8991-6537-476e-a4a9-b56423cd8765",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03fbaeb-969a-4726-8f66-daddcf7dc950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec925db-f97a-4aef-918b-549465f36ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea0b80-c654-4a86-bb79-9f461e27026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed41437-9750-4732-a17c-cfd81671c4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718a74bd-9f7f-487a-9549-6a08715afc4b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02055dd2-6cb7-40e3-b9e1-942d73be4946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd6309e-1f55-47c8-818b-01c8757c22c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19fb516-9eb2-4cc2-a649-c748d4b891cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5a23e7-fe4e-4d40-8ea9-c8e501ce7a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcad0211-41ef-4732-b5e9-eb140bfcbcf9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7325f401-b8a1-415c-bbd8-38573e311074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a8e137-afe0-478b-a000-5520dd6bc3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ae97a0-14d2-4aa6-acbd-5af77d53ff6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18b745d-cfd1-4a93-bc45-2b02043f5bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbeb063-d14b-447c-87ca-a6e847cfe361",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9910cb6-e942-4cb4-88e3-ca5f7db6c77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c58930d-52c0-472b-b76b-1bd912bf107c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcc8bcc-a35f-4e92-bfe6-2cfedcd65639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0367ea53-0100-4988-9859-c7940e45af8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb978f-3dfc-4551-8c18-31495852d344",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf1c23-f461-4008-8ebf-bf17790971e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a9446b-3b19-4015-b322-bef87eb7f84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e9bd04-f56a-4468-8609-1d256e5d36a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95ec04b-a35d-4ed3-9624-d276ba13109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058fc562-5074-4d5a-ace5-2437ec13b0e7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e2cdec-08af-48d1-9fa4-07fe3449e49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a894329-4778-4176-9982-3fc57d1447f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5a4b6f-4b1c-4328-b9e0-8f5c65f96536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbeb093-9ecf-4cdd-984c-3c477e26c20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abea26e-3d48-48cc-880b-187e8d3e17cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5084f6d-e18d-42f2-b390-0c8d9a53b5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fb5c9e-bea3-4f32-921c-6f7e05441975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab1d787-e640-4399-a1a4-7c624fbccb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f08aa96-2e99-45ee-90e2-a533a19c36a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8206671-61f9-4c82-ab24-28a9e934273f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d990adb9-bc46-473e-9cc6-0b4fea037258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff5e6f5-43a2-470d-af20-5211382cb2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ceba2-77cb-4eb8-a9ec-2e31e268f4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6810c7a-de96-4418-bcbd-070fa155fcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa265f7-8531-4f32-b063-466fdbd7f5ff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd086401-1b76-4e50-b1cb-b402bf452683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5cc11f-1085-49ae-ab4a-6f3229025da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ede661-dfa4-4739-bc4a-e028ff910403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0500edc9-2c6b-46d4-a6c3-8d4423cd5fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b4bca1-a7c0-45ab-95bc-fae68e16cc0d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518b10dd-1601-4f90-8088-07c3734dd661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3beb6f-2680-4908-afd0-f74c4dddca1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce7196f-9e16-4369-b6ea-922cc3cd3466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87930e9-f35b-41dc-8a0d-164c5b0b6ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49853c-016c-4182-acca-2bb7256c6cde",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc40786-8074-41ec-be31-0e9efac7f2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8143616-f3e1-4007-87e7-b9aaa4a068f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0160a3e-42c6-4892-910e-8a21c3b876aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24432e28-3c50-4b99-80c1-62e165aedfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edac0cc-f2d9-4a9d-8e20-426c1ae5b03a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48ed81a-2574-4d0c-bea5-3237da884f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7101ea-d0c5-49d8-88cf-3ac14128973a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df4e5ae-89d8-4c85-aa4c-a795acfc4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3c5afd-1a0a-4ab1-ae33-6712170404c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acf8728-bd03-4c80-ba52-884f656b18a6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb7866-9c56-4a79-9cbd-5d16e1314bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6359592-5e13-402b-9553-bbc1e65521ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e075e82c-3870-4a6a-9908-3486a0535ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbae091-65f7-4984-a311-a4974f0c5f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ad68c9-2c6d-4a87-9abe-4a0a727f349d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a77a14b-3b21-46d3-9c48-409a782055de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed24c16f-d968-4be8-ad25-b28042eda10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3f3a24-61ad-414f-8e43-92774bbabd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f5842f-c2a6-4b67-badb-1e289546a717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb776a20-a060-40f5-bbb1-5d445a9e16c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1808fb1c-a8fc-4ab1-b54a-21323c677669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddf1750-6d2a-425a-a0d1-390d298cdd5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e14fbc3-0681-4665-ae6e-b106bd918170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31aa877-544d-4f68-a473-ab1e664a564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f1b0d2-556e-4964-bbe6-ebed2e283240",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69da2008-bb02-4525-a9ba-6f5449f2902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d78a54-1462-4604-adc8-fcdd9f2839cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf6a585-62da-4ddb-b2e5-cccbecd9eee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f612b8eb-a6c7-4ad9-8126-453196e4c804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b801242-fef4-4971-bf8f-96b1f41f8523",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7ef563-16a3-462d-8175-1be630495ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466fde5f-7900-4aa8-b015-df1990ef734d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237c7ecf-c8f0-440c-a224-f8c7915334bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e178620b-cf60-4a76-b0f9-282f8d4f2a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f98f64b-be56-44a6-bd14-218ddf9060ef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32a58ac-da20-4cf3-969d-361d46996fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c74072-ecfe-400d-a357-b004b4d3c2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d061ae6b-3425-4cd0-9bb3-d5428db9f308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa314c5-65bb-43b5-801e-c8b787acfc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12af2fe9-c268-4ca7-8a83-78e886e578cb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a556196-1452-4a9e-89d9-2e7aa2170950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a30bc5-ebfc-4836-b1e0-abb388a899cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603bba75-d2d0-4396-ae5d-0c4c4239d8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a543df56-2fee-49e5-853f-493318ca9e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81150f-c6f7-414a-bab4-7ff0bb2df08c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573235d8-c287-4e26-9467-d5755d9bc5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ccf1a5-3fef-44ac-9ec4-1250be6d74a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3be49e9-e1a5-4a15-aa52-8abed0ca1383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114b3b0e-d82c-48c8-bdb2-4de332e50cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8a150-7169-4565-89d3-3d41a01d623e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537b90d-ac72-4201-8e3c-bbdb10dfff20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce877917-ab0a-463e-ae38-e7529a1a93b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df1f81b-1aa3-48f9-a79b-ef993dd4ef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3e5257-5245-4850-bcce-813bf7ccc329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083576eb-673c-4e71-a64f-00b291abbe7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85530087-af22-4847-a350-a3cb2cbb4b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fa405c-2a6b-4fc6-95e6-b23f5085f5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cda56b3-7200-46de-b88b-4a649955f6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8884b516-c343-4fc0-9cb8-0abf9129e957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa48b254-fec4-4f1a-8d25-e25a5ebeaa8c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de87b3cd-94d4-4b96-b3f8-5b5e3d9670de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcadaa7b-21af-4cd6-8013-ea83c3edf70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23959d77-dcde-42a0-a09c-ea6f3102a438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7204c838-3e14-441f-a15a-7f162fea4bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff8fa65-dbb7-4a3b-b430-08a60f1a0efd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec5f9e6-1976-4456-8b77-4bfdba8c3078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc3d127-a7a9-4a81-8ee8-ee0d916d58f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca3221-cab4-4aa3-b946-46a18118d684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cf53b3-7e5d-4be8-b471-be4e28510204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5407668-1261-44f3-bd40-cea0ad57c4a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353f35ca-2bd2-4b24-a75d-4e7151f8ee0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593a1641-7bc7-466f-bcf4-30ecc752c874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5858a93-7a23-4e87-9477-dbf8f5ad646c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c79993b-ed98-43aa-8a06-1e16ccf9e66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864d450b-8bcb-44cb-b427-fd85f2c580a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8361ab86-0f14-40b7-a902-4a8a86f8efd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ffa9acc-7aa6-4602-9d42-6787daf08a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e2eb2f-d0ee-4e72-a901-9af119e7511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b40dca5-85ba-4c06-bff3-2e6d3f17b7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea74e35-c1b5-4589-853c-82c8df5c008c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949b5a3a-508e-484b-a96c-6fd32e17274b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31dd6337-0388-4239-b003-b4c52ce03d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574fe40e-262c-4180-92d6-1001aaa7539b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ea8855-7e36-4bba-97fe-a212123682fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d069811d-f272-44d1-9c94-b3d78f8a2d12",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3166be32-a86a-478e-aeab-36a1c6180f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56e9b84-0b6f-446e-bf1c-03907010117f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e838685-931a-4388-9930-83b1b4333fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a641b86d-0893-4268-97a0-aa10336c9833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2e2ef0-9d83-439a-ab7e-29d6b9cb6ef2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da98f96-65b0-4dd6-8ae1-ad1f3c51e4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f071e2e-e817-464d-a6f6-2d69fe950316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a0a5f0-5ea1-4814-a5df-7993bef037bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15af6fa-9790-4510-9759-7fb4cb2de6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51734a2-928d-4e48-81dd-72ab09ae9683",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840e28dd-8f30-400a-a3bb-8756ccc03d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c1ab0d-c472-469f-8a2a-fe22dab4ff70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7545e5a6-3f4a-47b4-b38a-1ca7dad35858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a48d90-dc15-4071-89c5-408eb32b4a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4605ef4-cc6b-4854-9acf-e2fe703cab97",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ae6c7a-9351-4ea9-946b-138770ea0866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb7069f-6c84-40d2-8fd4-512ce76b3e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4451a3f-eac5-43d5-bb3a-cbe3a2f03872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28e4bb9-5def-418f-b56e-9db2d9b3e295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f368d123-c22c-4a5a-b85d-af8e56424a8b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd51a0-ac34-4f7b-9e4f-18fe87ea0267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f20d3660-1d16-4bd6-9cb7-aa603428160f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba216baa-d60e-4c1a-b1a5-9714bad6aac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b39126-6989-412c-9cf3-a4027ec64fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0ed265-d033-4f0b-9f77-b75d3c899f88",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85703ae8-d6c4-4300-83b9-7b483cb66d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9c474a-cfa6-4cfe-bb78-609b152885af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaeab1a-11df-4255-a31c-646634d8777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08424a26-023a-44ad-a677-36237581d434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5182607d-a9ec-4626-918b-dd98f0887a63",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dd7107-198d-41ae-b641-c4ea63cce8b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f387359-02a1-401d-9784-c33f0bf72db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe56f7a4-ea90-43a8-b165-77cc8fa7512b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefc9e55-d438-4430-a0be-4622897c848b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46b3e2a-7f1c-42b9-88f9-3c80e29755b7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66191319-1239-4b3e-9815-6dd0902b99a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32960880-63b4-4e72-aad9-ef65c3f87baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66087538-0cae-4cd8-82f7-69ed58fc363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30660ecb-697a-4b0a-8b9e-8ec283e3bbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e789893a-6ab1-4e9d-8648-35fd154608ec",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6f410c-d360-4d9f-b46e-191299f1f41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a21b5794-9031-4a9c-bb9e-4a9b318840fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f737dc-cab6-4c7d-954c-6aaf735e0350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9a4529-a886-4005-9db7-9f9bdae2b4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da941c5-95e5-4f3d-b973-e42118d6e968",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdec1fc-93c0-4a24-8918-065a37624c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327a7722-d4b4-4382-95d1-cdb64998f829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ec1703-ff29-4802-8a9b-552ef99427a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6c7949-536d-4add-b75e-11adeea72f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce1bf9-f023-4aeb-b702-dcd72607e52e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ac667b-cb5a-4fdd-94ca-7f0d38573223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c00f3a6-0240-4964-8925-e93c7e89324e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b36d4-c700-4c2e-b2ae-66b7c0e82e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cd599b-08e2-4082-b432-e9331d3280fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d878840-b274-45dd-9124-4b1f157fc36a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf98543-bb42-402c-8bdb-7ca801237f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8104485-9c26-4ebf-bb79-479e3bca9da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244ddab-dc9b-4b81-bf69-3923dc618237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1839ed7d-ebb4-4c73-bef1-7d017507c3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259c0b9e-52ee-4d79-85b5-28716c037e39",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94807b9-12a5-4311-be66-a5e001cddee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201e9165-ffb1-4261-980c-07b75639bb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6519a9-3424-4dab-9059-0aab9b9836d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50af027a-f7a4-4a26-8e3e-005115ee43d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2da7ed-d69b-40ec-84ff-a2daa4f01107",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78158fd-8c1a-45d5-979e-1f801eab9a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b146b1-ca19-4bf4-be76-c8e258956994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6151de-4d0a-404d-aa7a-53672bedf81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ee163f-d3a9-4987-b7d9-a2aa1210b403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa1b8a-db7d-4346-a0d4-5329ed4d138e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf641d-3b5a-4ba1-a29e-bdb4b6922d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bc5c19-6722-4a08-895b-3f844d6680a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f0a100-f6cb-458c-8acd-a2955a784884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e50e004-0f89-4759-9a29-687656722ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9dc9e7-d7fd-4291-9306-4a716a2254bf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8ef6a3-ead5-48c4-8f81-6b372afb6292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad4db85-5fa6-4611-95cb-768a58a1f50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2403c-0c8d-4356-a563-1012bfb1215a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af084dbe-67a6-4734-ae39-234ab23bea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1908f8-1830-40cb-b1df-1f8044b06838",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd855c6-bea9-436a-ba26-06ceb0956e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5297c294-472e-4ee8-9fea-0e7fe4bdbdbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a1602e-cb14-4a69-9ee1-fb0d8b73aa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70d0ed4-b9ac-49fe-b9ed-678368d458dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573d67b6-2991-42dd-bea7-9c5e5760119a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bbd364-76a7-487e-ab65-eca8dd1144ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5d9293-4822-46c4-ab90-5ed270d6b20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf505f8-4587-4687-ba08-9fcc6a659165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6ef3cd-3f54-4c1c-872e-20dbac00994e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1b1755-6f89-43e9-8181-b8a723d3e057",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5315307d-7e5a-4c42-a0a3-84865a762951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f7e5d8-37a8-4ff4-8c3b-b34b4093ba3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b216909-1eac-4cd4-85b6-5ab90d966793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29c0faf-c66b-4b9c-b99b-86392a287750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5c3b07-e626-4512-bf2c-55a7a5995ed0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bb82e0-33dc-43ab-bf67-aed5eac52ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938380a7-3330-44fd-9a71-25227aef94a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f9bed-ce10-476b-8e59-47af8c4af20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f531a1a-932f-4792-bdde-45c2857be9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ca09ff-7eed-4476-8635-93ac677322b9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea592253-09f8-411e-8e6c-770d10f9d976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57d1df6-b233-4a8a-b241-159372eeee22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4615034e-3040-4fbf-98ae-1ba937ddb65a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a59a573-6627-46de-875e-8c7c57cba3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96bf4e5-7d8d-4219-964b-b1a909bbb77f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51ac3ff-02b1-4522-9b70-dbe12abbd50e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b460b8-e25f-4e27-9bc5-4e3c6844c451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfddccf-3856-4680-b71e-b5b09aca538c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533ea5cc-9aaf-4605-844a-231dd87c3658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce9cff4-e001-457c-ac95-e4b602d130ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5fdd7d-4b4e-413a-8a1a-fc35c28f88b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db83ae3-08c3-4f10-a118-85fc03263873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d933134-d679-487c-9949-e8236bc15038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7893ed-89b9-47f0-9160-ba9cdb1ead55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf31dc1-03fd-4a94-9bb9-537c441e5d2d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3464f5-3862-4659-833c-8380681845b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26cc8f3-496f-418c-baeb-9962e24b1770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d50517-2734-4552-ba0a-92acc7e333cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4179c1fc-e43b-4035-a1e1-ae386effc469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d65ad-62b8-45e8-b034-c9e07204f025",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a6f6f9-6d35-4a7a-bd6d-bbb6aeb1b60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef34ae6-1103-4ab8-bf3a-184f9e0ad077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9905237f-4f9f-460e-8512-44461bda9ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4616e816-87ff-4d6d-9483-987e9f4530b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78989fc-7e01-428d-95e0-b7c8212185d7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b3101b-4239-42b2-9a24-99f467c1611e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c97e96-29cc-4454-aca4-5248154fcf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab216bd-8074-49cd-8b06-27d8e1eb9db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71a5007-3966-4de8-a735-f9625e8bb80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea525a1-7276-488d-9c02-ee741882c43f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456633e6-5f25-40db-8534-3b909af7e823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a00aa0b6-2d0a-450b-8f0a-faca9f01b46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e44a784-34eb-4e1b-819e-f66a4ff5f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39f50bb-7061-4ac6-acfe-6e9464d74bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8573b51d-cb09-48c6-aef6-b8ff2af2cbcd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ff6b9-6b1d-47e0-ad81-7a637db5ac63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9757a86-4293-4e42-8e3e-7a51f83b5a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1c90b-beae-4d0d-866f-877aac07eb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f3c1f1-5965-4829-b418-9bc63ceb2eda"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccd293e1-088f-4cc7-b4ab-f4b863866c93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88964a66-c0c1-412d-b0c2-2812125458cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a2855a-8e82-4f10-8c15-76c1705d2fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d2abb25-5f69-445b-a73a-14c99906d504"
                    }
                  }
                ]
              },
              {
                "id": "e85dfed2-6a4d-44a9-a529-ca3febd0740d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4ed98fe-b626-477a-8100-e8db95d4c343",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ca19e8-552a-4b86-9f4c-64603b338c7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "255be06d-592f-4bdc-b1de-072f805941b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68931322-cb4f-43d2-bdbe-6b771f6af8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9980df-6201-4a92-ab27-4ee5d3d6908f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba461cb-8810-4581-bca5-91b74f9d42a9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39735ed-8409-439b-9e29-e05451e7af2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a8e87882-8aac-40f2-969a-eef529af230d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151d325c-aba8-4e95-acc2-97f8fb96f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83f49817-a739-4862-aeb8-e8d6ae76b89d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7981285-fe0d-4cb3-a600-7cbba66c9caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e42fc296-472c-4143-b7d3-8b45d820825b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47170068-5bbe-428f-abb3-8fcec68940e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98859dd9-0774-4b52-9fb8-4fec6a2f7dc5"
                    }
                  }
                ]
              },
              {
                "id": "8ccb657e-e7a9-4828-8c3a-14121432a874",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f791e52-78f5-4de7-99ee-64702483f182",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eeb8df-fdbd-4956-9688-4cbae7821634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b583d7c-8d9e-421a-8ec3-02487a140954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003bd60e-9c84-4f28-b415-69b22aff3a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d95fe7-884f-4cfa-b945-b8d9734f7355"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a22a381f-c371-42ee-966f-35674b37943d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a293bec6-8081-450d-858b-6cb78bad5650",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b52735-f73d-4c8a-983a-dd2b3d2ae902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b90a15d5-a770-477a-b19c-1389867d3fbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eee75a9e-039b-488f-bdd3-619d2802bb98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc199678-dd87-43af-bfb2-0b6bfe06791c"
                    }
                  }
                ]
              },
              {
                "id": "69a7d0e9-6214-4962-9bf5-728e1e612af8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa82e46-b506-4914-a75c-9b4aa31b6fcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c253811c-c9c2-4432-940c-a281f140f016"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f69213-c60c-41df-b16a-b0bcb82ad229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53178acb-3250-497b-b861-3d6bfd7e00d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cb814a1-4f64-4068-b220-b100f5162f71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "82faa113-f632-4a39-a17d-c306f6054676"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df9ee394-f907-479c-b828-becf793e5d97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fc18553-0e74-4143-9455-8f5d8d363867"
            }
          }
        ]
      },
      {
        "id": "77000385-76bb-4e64-b243-6a505b597c26",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cc772ce2-324d-4223-9092-8832511481f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77bc36af-960b-4772-aaba-17e44d8db23e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc8a170-1b5e-4603-a321-a6a64ce85944",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b51e8ac6-77e5-44ed-9395-98678d5b4f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a2a589-f332-427f-8be3-2242452c7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9b9f95a-1cad-4ce5-acc5-566cc31c186e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9055165-8bdc-47bb-aed4-89cd70c3a744",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b339cc-5e96-42c5-93ac-c48e90239464",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1d94094-ce4c-4d30-9630-f817a257e581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f1853f-7b37-4531-a435-4283a9ad90e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d8cabbe-49dc-472a-984c-60391e30b0ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f829d3f-6d78-49e7-b026-20b8a8315139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "961d8410-a3c0-4a07-91f5-7de22e5729f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1fb157d-1584-4786-9f15-000ce87424f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01335428-3f9b-4563-8b69-f27f88883e06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7580028-5b62-44b9-993d-3dc188aed3d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b837ca0b-07ae-403e-8c5f-83b93badfcb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c05aca4-7f91-4e8e-9e5d-d13243a3cebb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d2063e5-e295-48b1-9f4b-2e357d655c99"
            }
          }
        ]
      },
      {
        "id": "80b6873d-113a-4371-9a69-1e3ae88ea394",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9260775b-c6d5-4b62-8144-da1a12604686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a7cc04f-26a5-430f-ace7-6e003f7bfb0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "090f5dff-68b8-4738-ad59-05abeccbb16b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c352925c-58c5-434d-a4ec-512862f00199",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f577b5fe-cb30-4d49-89cb-d51952a33105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e154d-c039-49f4-ba2f-bc4e2f13cbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57afa1ca-a6e7-4bcc-9501-e2ec9e55e487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17eddb8-3ea5-44c2-8e17-1ead48fe5bd9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810751de-2d45-4e1a-99f6-bfc8a64fb3c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cab2ad6-88fa-43c7-a7aa-84ad9835d040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca456c2-99e1-4d88-a005-a45ef6c8bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "337ac971-df7b-46dd-bba1-2530273be983"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53b00f2d-6ab8-46df-a993-b1bf3f656de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96862ce-1f3d-4c51-9f2a-155ef8cfb316"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1824656-4630-4241-9a84-4704ae3f23c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c7a0205-369f-43cb-9665-262879bfdaee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc0eabe0-352e-44a1-857a-94bf47b7010d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2544378-75f1-4f67-8304-dd17fccc96c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a09d717a-c19b-4ab4-ad67-c9dc504359f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ae4e04b-d109-4708-b47a-a12cf0b9373b"
            }
          }
        ]
      },
      {
        "id": "e8632a44-7ffb-4204-85ce-106f65584994",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4c58fa7e-177e-40a8-8983-28f03bd04d53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f685151-3758-4234-ab08-238b055933df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b6e43a0-4329-405e-bc26-14112707972d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bdc8f-ff69-40b9-9bdf-2a8e4097cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c537ed9c-85aa-4511-b15c-c5913c5487f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be17d786-597d-4d4f-8d4c-cd5d6b9562ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e3e0ca-f192-437c-b874-7dd16edca37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862950e0-7f1c-4af4-b7be-2e8b98f815f9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027d0faa-32b8-4499-b374-730c562506f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "80acaae3-bca4-4593-994d-de7853759b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8281b09-192a-4370-bbd6-f017d6f6ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c2c2831-c113-49a9-accd-e0f9fd08aef6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a03c50-6fdf-4e6e-9ffc-32c8c5f099a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "128158fa-a4ee-4b50-aa19-bff5cd8191eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ebc3c28-1fc3-42cd-81a3-44a8d05c743a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f888e3fd-c8ab-4d76-b6fb-a08a08bbfaeb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d2d6335-c45e-437d-86ca-319680fb3548",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "730c7727-0621-4b05-a1d3-f596aa801845"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffe8f565-e3df-4eca-9f3f-96e32fbf81f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deb0205d-ff39-48bb-a5a3-d5490679c407"
            }
          }
        ]
      },
      {
        "id": "c4b8b3ff-9a57-4750-8321-3a650002e6d9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40bd37a3-03f8-4cdf-96b4-39570638e02c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5896230c-cab1-4cd7-be17-af99a5b13e99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1e56bd04-33a4-445b-8b4d-813f0c8b7ac0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a13dbf-722f-44a9-9318-78860c6ead9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04dd5d52-1c55-4c05-a755-33d6d2db7583",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 20.134615384615383,
      "responseMin": 9,
      "responseMax": 498,
      "responseSd": 44.219656630783334,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681864680888,
      "completed": 1681864700763
    },
    "executions": [
      {
        "id": "9f787052-94b7-44ea-826d-d68f75940576",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "49ae3df6-f7c1-4bae-b86c-e2c44b50cf8c",
          "httpRequestId": "92a1233f-df8b-4480-9fb6-3a19ee34c2db"
        },
        "item": {
          "id": "9f787052-94b7-44ea-826d-d68f75940576",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "52fc8155-102a-4347-828e-c562b7f969cf",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "252069e8-f21d-4c90-b6d0-6835ae9795de",
        "cursor": {
          "ref": "483fef11-2f6b-4509-8679-485dd0be1777",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c3c40a48-53d6-41b7-ae58-5819111cb613"
        },
        "item": {
          "id": "252069e8-f21d-4c90-b6d0-6835ae9795de",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "93dca36e-0cab-405a-8d12-e63e3de466b8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "5e62a79a-65bf-43c2-a017-9bf1c35c19b9",
        "cursor": {
          "ref": "45fea08e-0e9a-4954-9192-bf313f4ac206",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7a6de31e-f3a8-47f5-98f6-246e03a3275a"
        },
        "item": {
          "id": "5e62a79a-65bf-43c2-a017-9bf1c35c19b9",
          "name": "did_json"
        },
        "response": {
          "id": "0d43a8f5-39e3-4488-8271-453411b0643a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d222d-229f-48a3-8cbe-c17511790a82",
        "cursor": {
          "ref": "3898cc4a-c242-4c02-bed5-528842a2625b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9bce3a5-543c-4b97-b70e-1fe8575b7163"
        },
        "item": {
          "id": "7a7d222d-229f-48a3-8cbe-c17511790a82",
          "name": "did:invalid"
        },
        "response": {
          "id": "013b0865-e0c4-4a9c-b690-51b82bb29294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d222d-229f-48a3-8cbe-c17511790a82",
        "cursor": {
          "ref": "3898cc4a-c242-4c02-bed5-528842a2625b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9bce3a5-543c-4b97-b70e-1fe8575b7163"
        },
        "item": {
          "id": "7a7d222d-229f-48a3-8cbe-c17511790a82",
          "name": "did:invalid"
        },
        "response": {
          "id": "013b0865-e0c4-4a9c-b690-51b82bb29294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c145b698-9b9b-41dd-9d3a-5f0537b9d8fe",
        "cursor": {
          "ref": "f2a46834-5b01-40ec-a497-30e3ddb87651",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e94b3d35-3d1b-453d-acf7-f3f4cc1e8bd6"
        },
        "item": {
          "id": "c145b698-9b9b-41dd-9d3a-5f0537b9d8fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "43bd21b9-be8c-4683-9b7a-1582579e68d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a43fd9-c2ec-4dc5-b6f1-32ef2bbf559b",
        "cursor": {
          "ref": "090c4847-94f0-40f8-9ef8-ac130be40a5d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "306767d7-fa49-448e-84a0-51f24340bdc3"
        },
        "item": {
          "id": "42a43fd9-c2ec-4dc5-b6f1-32ef2bbf559b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a6e4fd95-4b3b-46c6-82cc-ffb9fc2355d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58882270-c826-41d3-85c7-f2bc6d0d3d3f",
        "cursor": {
          "ref": "4ad40ff1-0e83-474d-8fc5-6e6a4c3abaf7",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "08a58b2b-8727-4a20-8c8d-3437f762b11d"
        },
        "item": {
          "id": "58882270-c826-41d3-85c7-f2bc6d0d3d3f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8ffc1073-d668-4212-b522-69d479df8b52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c707b5-c692-424a-9300-00afdfd0d89e",
        "cursor": {
          "ref": "7903d5a5-43d0-45a4-a63b-cde63223e486",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5c827746-b9aa-4c00-bac2-dee2d77c6793"
        },
        "item": {
          "id": "39c707b5-c692-424a-9300-00afdfd0d89e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7ad44218-1b70-42fa-b3d8-72496b1f4813",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c707b5-c692-424a-9300-00afdfd0d89e",
        "cursor": {
          "ref": "7903d5a5-43d0-45a4-a63b-cde63223e486",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5c827746-b9aa-4c00-bac2-dee2d77c6793"
        },
        "item": {
          "id": "39c707b5-c692-424a-9300-00afdfd0d89e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7ad44218-1b70-42fa-b3d8-72496b1f4813",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4c0b19-156e-434d-8c06-a595e470a72b",
        "cursor": {
          "ref": "6b003e7f-4c4a-48c2-9b03-e026a0b7a776",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2ed5692d-2ea5-4b17-b70e-38c19dac60fe"
        },
        "item": {
          "id": "2f4c0b19-156e-434d-8c06-a595e470a72b",
          "name": "identifiers"
        },
        "response": {
          "id": "2712bcbd-7d9a-44ac-a6d3-4dd2297bddc3",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b2a0a2-8194-47f7-a312-20dae3f8a995",
        "cursor": {
          "ref": "b6b3ebe1-0907-4613-9e33-d75fb2e65290",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25e828ad-ed9d-4ac9-bf8d-3c7ab71e3b7a"
        },
        "item": {
          "id": "a6b2a0a2-8194-47f7-a312-20dae3f8a995",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "16348e5b-fada-454e-9593-42667a6a8edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b2a0a2-8194-47f7-a312-20dae3f8a995",
        "cursor": {
          "ref": "b6b3ebe1-0907-4613-9e33-d75fb2e65290",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25e828ad-ed9d-4ac9-bf8d-3c7ab71e3b7a"
        },
        "item": {
          "id": "a6b2a0a2-8194-47f7-a312-20dae3f8a995",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "16348e5b-fada-454e-9593-42667a6a8edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9caa4-4bbd-455f-893d-b91ee2710f02",
        "cursor": {
          "ref": "220cfe78-9b3a-44d3-93df-28aae5b64d9e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0574ea99-e6df-4b0a-8f4e-f8b5ea0fa4f7"
        },
        "item": {
          "id": "4be9caa4-4bbd-455f-893d-b91ee2710f02",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9987b830-b4da-4783-9bf0-50434b3b52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ade7561-2c8d-4a59-9c99-401017584442",
        "cursor": {
          "ref": "d03e9117-0d53-4139-a9e5-f61dc567f96f",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b0846c91-86c5-4068-a9e6-031791a2dded"
        },
        "item": {
          "id": "0ade7561-2c8d-4a59-9c99-401017584442",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5c6587fc-ad20-4e73-b512-68cb46de59c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4311a8-4a05-499f-ae27-913dce856aef",
        "cursor": {
          "ref": "d185500c-8335-4d77-88d7-17448b03755f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5344fb51-4805-4913-87b2-be21222a68c6"
        },
        "item": {
          "id": "3f4311a8-4a05-499f-ae27-913dce856aef",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b8442b6-3430-40d4-8811-f99e2285ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3eb076-bceb-4ee6-b536-964464f70bf9",
        "cursor": {
          "ref": "b455af5a-bf2a-41b4-b2fc-d84ab5e53cc1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2e82a2d0-f5b5-46b0-8b4e-6d9162bdc270"
        },
        "item": {
          "id": "8a3eb076-bceb-4ee6-b536-964464f70bf9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "48803ac8-ee19-424b-aa64-602d2462e82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f761b9-a79f-4647-8dd9-dc45186dcc74",
        "cursor": {
          "ref": "94e7edbe-dd81-4ccb-8e1d-4a05dd7794be",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9c78bd1-0dd1-4466-a961-599e82d21e2a"
        },
        "item": {
          "id": "b5f761b9-a79f-4647-8dd9-dc45186dcc74",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "39123a3a-9850-404f-9db7-dca1a6dd856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7ded33-809e-4e09-90dd-2eac0cec070c",
        "cursor": {
          "ref": "016cade7-45a6-4d88-bc5b-76511a562892",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1228d10b-dddc-4608-8097-0eb253515454"
        },
        "item": {
          "id": "bb7ded33-809e-4e09-90dd-2eac0cec070c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b92c8e09-41e8-4bbd-a9cf-bc51a4963934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c084a4-ade1-481f-90b1-8945e7fedbac",
        "cursor": {
          "ref": "cb833ee2-16f2-4698-bf2e-5f95fae871fd",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "270af2f9-1039-44dd-b17d-1e7c8ebf6d6b"
        },
        "item": {
          "id": "61c084a4-ade1-481f-90b1-8945e7fedbac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f94fa8a-e881-4945-b5cd-2efbfb4d0477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d0c736-1805-42dd-810b-d77a2810ad0f",
        "cursor": {
          "ref": "97dac41b-0f3b-46e5-9934-15a33efb6875",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d512acb9-3809-4878-8317-230abb03f118"
        },
        "item": {
          "id": "17d0c736-1805-42dd-810b-d77a2810ad0f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c669fb6c-de38-4daa-82d8-25a73353ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332445d8-07d5-4c31-b3c3-186ce9209d07",
        "cursor": {
          "ref": "f3ea076f-b1d3-47aa-a40c-7ba00a9cd7a4",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9d38bb45-be1a-4c98-9d79-c35be3deecf4"
        },
        "item": {
          "id": "332445d8-07d5-4c31-b3c3-186ce9209d07",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f3ec7224-de5e-4ef7-bbe1-89028babd913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c411c13-b665-4e6a-a51e-3cb34468727c",
        "cursor": {
          "ref": "068fbcff-7403-4ac4-a7cc-182590700b20",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9e57c4a5-6ed1-4759-9342-7cd15cace8c9"
        },
        "item": {
          "id": "7c411c13-b665-4e6a-a51e-3cb34468727c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f76d6b57-f846-43ed-86b8-57d2e415d1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e73e77-684d-4c38-92dc-5699c5a4e14e",
        "cursor": {
          "ref": "57d0f251-a205-4a83-824d-79de595c15e2",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "084bd5d2-25ca-44e7-b9a7-c735d46a40f5"
        },
        "item": {
          "id": "83e73e77-684d-4c38-92dc-5699c5a4e14e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ccaade25-0a80-4593-adae-788ca24b026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99e4df4-4e5f-4015-9489-3f9b0c0e686d",
        "cursor": {
          "ref": "2613a4bd-ce2a-4db5-8b9d-6c175e65a0fe",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "08133aca-a1a5-43c1-911d-dea97df91491"
        },
        "item": {
          "id": "a99e4df4-4e5f-4015-9489-3f9b0c0e686d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a4f478c9-6a62-4b2b-89a6-8a3582542b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88835150-34cc-4c75-a768-77d1109b6b2d",
        "cursor": {
          "ref": "76e8dad7-0421-41e0-baba-227b644406ec",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5033455e-65cc-4da7-bd1b-07203b0743eb"
        },
        "item": {
          "id": "88835150-34cc-4c75-a768-77d1109b6b2d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dae6ae14-11d5-4716-bf3e-69a6beb3f802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbf0154-e583-43d8-ad34-ba147166f8bf",
        "cursor": {
          "ref": "7c42c2ca-bd3c-4774-95f8-1707dcbe0ffe",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e49d0c89-d881-48a4-be03-4df84bb11851"
        },
        "item": {
          "id": "4dbf0154-e583-43d8-ad34-ba147166f8bf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "96cd4dd6-f106-47c4-9178-1b812657f59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25a7d07-fcc0-45fc-9471-7ea2fdb9286e",
        "cursor": {
          "ref": "ac42ce25-70a8-43fa-92c3-0473cac5a0e5",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5297fa57-12f5-42dd-aa14-f0246bbd3c1c"
        },
        "item": {
          "id": "e25a7d07-fcc0-45fc-9471-7ea2fdb9286e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "23d0788f-ea0d-4be7-9d34-07ea0ed2574b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3b6c9b-3fb6-4ba5-ae97-4034797ad32d",
        "cursor": {
          "ref": "b1e131b5-bba7-47f8-bf0a-f86276719648",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cfc37214-0df2-46e2-8a9b-4e1b91f20518"
        },
        "item": {
          "id": "2b3b6c9b-3fb6-4ba5-ae97-4034797ad32d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ae95d8f5-227c-4dcd-ad7a-203804252f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d34c85-bd08-4120-b9d7-cde69703d902",
        "cursor": {
          "ref": "d8d98386-2782-4d2d-8b7a-3136725bdabd",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6225c369-9d74-40d7-bdd4-043fecc1aab7"
        },
        "item": {
          "id": "96d34c85-bd08-4120-b9d7-cde69703d902",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a990854-329e-4cb8-b3d6-5d9d945f6a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dfa461-0fec-4a95-ad01-62177e9b08ef",
        "cursor": {
          "ref": "f4a15670-4ef6-44ca-8f29-7e603c8aedab",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b75a5210-85b9-4c32-a595-63b4d7f2b769"
        },
        "item": {
          "id": "07dfa461-0fec-4a95-ad01-62177e9b08ef",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "02797dc5-c257-455e-8675-32a50f26bf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f040ea-d07a-4adc-bf61-0dd1d79a2d04",
        "cursor": {
          "ref": "67b7b75e-58ae-46cc-a6de-e2484dd7140e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95b1fdad-2acb-4bdd-a5ab-f69e298563d5"
        },
        "item": {
          "id": "57f040ea-d07a-4adc-bf61-0dd1d79a2d04",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4a9ca453-b155-4fc1-b3f9-0c1abe7df467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a37fd63-2e11-4538-bfb0-f2658762cf11",
        "cursor": {
          "ref": "0db7f97b-d410-4dc6-afcd-80c6cecacc8f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ec615539-5cf9-439d-a98e-8a6348882290"
        },
        "item": {
          "id": "7a37fd63-2e11-4538-bfb0-f2658762cf11",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fadf6ba8-5314-48b9-b32c-64c1b2de0675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb70c829-2f45-4829-95ab-646661060501",
        "cursor": {
          "ref": "eafc2e4b-d7bf-43c5-94dc-f86d5b87ef06",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4fedebb9-b8fa-4f1e-add2-f9ed24ad5575"
        },
        "item": {
          "id": "cb70c829-2f45-4829-95ab-646661060501",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "839dc810-ee16-4eee-a882-4c984462ead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33e80d4-b9b1-4c8b-bf84-9c11c98d781d",
        "cursor": {
          "ref": "5f0a2ad3-6398-436d-abe6-8ec06c0b8c8e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cc5d09be-d83c-4c18-9d25-296e5de964fb"
        },
        "item": {
          "id": "b33e80d4-b9b1-4c8b-bf84-9c11c98d781d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "005a8d14-c8e1-4386-b544-5c43f4a690f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b83172-5fcc-47de-8600-e8590b3d613d",
        "cursor": {
          "ref": "c751fb98-6c63-495a-90bb-d3c1ba5d1182",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de72e4d2-a46b-44a6-a97c-f2205e1bf908"
        },
        "item": {
          "id": "a9b83172-5fcc-47de-8600-e8590b3d613d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fe6e12a1-e62f-4f83-81eb-d6c871addfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61a3db3-511d-4af3-9761-63e8a76f8224",
        "cursor": {
          "ref": "4c53e971-bf4c-49bd-b71e-101f386d23e3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5dd1937f-d839-4964-972e-a85bfd36b4f5"
        },
        "item": {
          "id": "e61a3db3-511d-4af3-9761-63e8a76f8224",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8fbbd367-8853-4e87-9d9c-3b49a01f9de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209b58a4-e95e-4e63-b8c9-db898fd016c6",
        "cursor": {
          "ref": "3a2d3872-f2ea-4be4-8274-e6ed05ae4b75",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "655f1848-c682-4755-8639-f9a2c6bf0386"
        },
        "item": {
          "id": "209b58a4-e95e-4e63-b8c9-db898fd016c6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c86c6f4c-f397-4d6f-b35f-3775b9ef2017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d8b34c-f2c9-4d02-8360-cdf6252165d0",
        "cursor": {
          "ref": "88c9a4b2-8d42-47cc-9569-9535488ee3ff",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3870b76f-3f33-4d2c-8b92-a1a9fec3e4ba"
        },
        "item": {
          "id": "99d8b34c-f2c9-4d02-8360-cdf6252165d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4c70002c-5a5c-428b-b252-e34b2d1a4903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad015c-532c-49ae-b7a6-d2ce89d6d739",
        "cursor": {
          "ref": "d16b4108-6c56-4554-b517-f2ffb586b771",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a2a29368-b0d5-4e3a-b4ab-e31c86556835"
        },
        "item": {
          "id": "9aad015c-532c-49ae-b7a6-d2ce89d6d739",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fa2d3668-f45a-46e9-845e-08939ce9ae2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2251992-cfe9-4e33-abe7-f2cc9ac2c01a",
        "cursor": {
          "ref": "897fa311-e45b-4e47-9087-9a8648cb0863",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f9416efc-a109-4f52-9b32-9f08d2dd7676"
        },
        "item": {
          "id": "b2251992-cfe9-4e33-abe7-f2cc9ac2c01a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2fed1967-e846-4f62-b96e-9a43d14ebd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1192765a-057c-4bc8-a0d0-8c6b5eaa2b20",
        "cursor": {
          "ref": "a1ebc449-5a43-4bb5-ae97-44c9845ccd0e",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4365aff6-296a-4c65-8c42-4425c0d3dd65"
        },
        "item": {
          "id": "1192765a-057c-4bc8-a0d0-8c6b5eaa2b20",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ea7e2edb-4ade-4fef-861f-e37a98b0ee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc21a232-c2d6-4ccd-a2a9-1e423e7815c4",
        "cursor": {
          "ref": "b8f2e8d4-7657-4899-a63a-6fddea0e7fa1",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4ad07ca7-3a5c-46ff-b104-335d20325c08"
        },
        "item": {
          "id": "dc21a232-c2d6-4ccd-a2a9-1e423e7815c4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cf3d1d62-61d1-488b-b467-3aeae5a3a04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7d5345-f417-4e93-9fdb-a24dbd7d4990",
        "cursor": {
          "ref": "12560ff0-bc37-443e-951b-b09b0ba36cf7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "988c696c-99d8-4f81-8cbe-fd6c37e68892"
        },
        "item": {
          "id": "dd7d5345-f417-4e93-9fdb-a24dbd7d4990",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bbf28221-4295-4981-a739-7dcce68ed42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252f45d-3f7a-474b-a6c1-bdabb56ac4fe",
        "cursor": {
          "ref": "27e39254-8d31-4180-9901-db30f38c46c6",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dc57de35-74c5-49f4-9310-2943995f6eb7"
        },
        "item": {
          "id": "4252f45d-3f7a-474b-a6c1-bdabb56ac4fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c6ca730c-54f9-4465-87d9-df4539d608d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4b78a-1900-4c64-a690-811b2aa83241",
        "cursor": {
          "ref": "d697a41e-bdb5-4b85-8655-3451bfe1e86b",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ffca97c0-64bd-40b6-9921-7d90b53711c3"
        },
        "item": {
          "id": "60b4b78a-1900-4c64-a690-811b2aa83241",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "76485b59-a84e-4dee-959b-def63859ceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee85d9a-ca49-40c0-a4f0-5c3216c27b98",
        "cursor": {
          "ref": "c83d7c40-0078-4f9d-be1c-56d6a4014a72",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a3ab08a1-2b47-465f-bc05-795739101a2f"
        },
        "item": {
          "id": "eee85d9a-ca49-40c0-a4f0-5c3216c27b98",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d94fa50c-ee3f-4b18-9910-710ef9045c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c06b9d-cf34-4fad-b021-3669a6a4560c",
        "cursor": {
          "ref": "d82e8424-e310-4ed1-86d7-9acc2ab27cd5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "22e03ca5-48dd-49d0-ab56-ca8d09a6e995"
        },
        "item": {
          "id": "63c06b9d-cf34-4fad-b021-3669a6a4560c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4cfd195e-5d3d-4f27-b462-c0c12a0fe25b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d279b3-5e24-487c-820c-c0d583af64c5",
        "cursor": {
          "ref": "83917028-3190-4272-9041-ac284d2d34f0",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8287010a-86ff-49b2-a052-7abffe0022ab"
        },
        "item": {
          "id": "51d279b3-5e24-487c-820c-c0d583af64c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d4ef2d3-9fdc-4e96-b2b7-b6ea4fb56b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0977cef2-5e17-4658-9010-962896f16354",
        "cursor": {
          "ref": "a26ca415-5064-43d4-91aa-7e95748455ae",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "188febc3-d827-4635-91c3-274972193121"
        },
        "item": {
          "id": "0977cef2-5e17-4658-9010-962896f16354",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cdbb0cba-9063-45b7-8dce-54d900bd39f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400514d9-88d2-42ea-a027-e155e474c658",
        "cursor": {
          "ref": "ba869390-00bb-43d4-a6f6-6e6fc1b9fd98",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "792bb121-076b-4882-a62a-3def51c405db"
        },
        "item": {
          "id": "400514d9-88d2-42ea-a027-e155e474c658",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ec9bdcb1-5d4e-4018-be2a-0bd99180dfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11958db6-abe0-4a12-b6f7-3aa7125451ea",
        "cursor": {
          "ref": "b5ca01fc-afa2-4cee-906e-32a3fa64b67f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "32e54612-0c18-4e30-a91e-ce950ae96ece"
        },
        "item": {
          "id": "11958db6-abe0-4a12-b6f7-3aa7125451ea",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ead314be-82a4-4137-9dbe-1c498eb1b6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5ad828-5753-4d91-9584-c3d31e4edfd8",
        "cursor": {
          "ref": "d6cce168-58fe-464e-a0ee-74ed3cd45aaf",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "955075b0-01ac-43ee-ae9b-102ce47f1585"
        },
        "item": {
          "id": "3e5ad828-5753-4d91-9584-c3d31e4edfd8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "47e02d5f-9a99-43f0-a092-9dc015a63d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a461de3b-5913-4abf-b7c7-b2d9cfb572ea",
        "cursor": {
          "ref": "625de9a5-b830-45cd-b5e0-3169a8e5f38b",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00e3da76-c507-445d-97ba-56c347a7404d"
        },
        "item": {
          "id": "a461de3b-5913-4abf-b7c7-b2d9cfb572ea",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "58a8da33-e31b-4557-a3f2-5d68551b037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a9c429-6126-4511-9048-ebc7ca96d992",
        "cursor": {
          "ref": "5e634219-4b7b-4d21-bd50-f567f839069a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "84040d3f-d9c5-4622-bc7e-eccffe2ec7d9"
        },
        "item": {
          "id": "d7a9c429-6126-4511-9048-ebc7ca96d992",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "42998e6a-5e95-417e-bf82-4e716c077528",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15b56e9-f66a-4170-93d4-0399691d8a73",
        "cursor": {
          "ref": "927ebbe0-8f09-44ee-b75e-99296bf3397b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75d260cf-7b92-4f7c-ab94-b0c4a344b504"
        },
        "item": {
          "id": "e15b56e9-f66a-4170-93d4-0399691d8a73",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c76c71d6-5c6b-46a8-b7fa-001ceae5721a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230ead37-6178-45e9-acae-e09d2be29ff1",
        "cursor": {
          "ref": "c8c51a29-c189-4194-ab28-be81ea8cc6ad",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1d2bd8fc-08c3-4b89-9299-28a3cd05a0e1"
        },
        "item": {
          "id": "230ead37-6178-45e9-acae-e09d2be29ff1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "df0d1e62-dab4-426c-9d7a-adc5e5bb3e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dedc3c1-4637-4785-9a56-9f07e3ff1ae2",
        "cursor": {
          "ref": "5f700972-2afb-4cc1-86a6-4bf1e7382f5d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6e17e2d3-9f02-4a7b-b56f-63d77390c99b"
        },
        "item": {
          "id": "9dedc3c1-4637-4785-9a56-9f07e3ff1ae2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "67b96d9d-9f5a-4c69-8bbf-455e65b32e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a153c85f-5b82-4a8e-995c-60c6f2056515",
        "cursor": {
          "ref": "ac794ff4-00b5-4d8c-9c98-be0656096728",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6dc41b26-d855-4ce3-bedf-49c47ff0e34e"
        },
        "item": {
          "id": "a153c85f-5b82-4a8e-995c-60c6f2056515",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84b2665d-3207-4c48-9336-61c930bd2f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f06add-fdc3-46a4-a61b-1baeb7da2776",
        "cursor": {
          "ref": "fcc21cf1-c569-444d-8ddc-a577f3de4383",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "55ce6744-d071-4683-8aeb-717a89007ca1"
        },
        "item": {
          "id": "42f06add-fdc3-46a4-a61b-1baeb7da2776",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5bb8c413-06d5-4649-a446-9adfa9222eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4477514-4f68-4fd4-a9c0-b519ed9eb361",
        "cursor": {
          "ref": "59a8cd2b-808b-4fb7-8131-60fa839d1a70",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2eaaa266-6441-4468-b66b-d04bcc38b548"
        },
        "item": {
          "id": "a4477514-4f68-4fd4-a9c0-b519ed9eb361",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2ad5288c-fb19-482c-b00d-c0064d7f1e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0c92f9-225a-43d4-a76a-990f5476064e",
        "cursor": {
          "ref": "a263e4f0-c443-4a8e-8da8-214466d27859",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d643e8b8-b88e-4f1d-8bf8-d7b026100990"
        },
        "item": {
          "id": "4a0c92f9-225a-43d4-a76a-990f5476064e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4dcb2bd1-a2e8-4cb1-a04d-f8d6ddf9aeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a9b9a5-2c7d-42cf-94ec-bd0e4a638028",
        "cursor": {
          "ref": "b1f7b036-96f3-44ee-958a-08c1419f17e2",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "19b6a7f0-91ab-45ad-87f6-5464ddf62521"
        },
        "item": {
          "id": "f7a9b9a5-2c7d-42cf-94ec-bd0e4a638028",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7b7f6084-a854-4a83-beb4-fbd6d93190ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a6a77b-bf61-4605-8cf5-e4d085d05e55",
        "cursor": {
          "ref": "39a75a52-a731-4726-b31d-6124440078ef",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a7d95fde-7f3b-4f6a-9064-83149b977539"
        },
        "item": {
          "id": "91a6a77b-bf61-4605-8cf5-e4d085d05e55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "507dc2b6-f3ad-41c8-88e2-d322704f8f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4908d00-1394-4e4c-83da-e3e4bde5c3cb",
        "cursor": {
          "ref": "2501d9fe-de0b-4669-87c7-7f6ba8772ebc",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4bc2ef5e-9667-4741-8295-f3fbc22288d9"
        },
        "item": {
          "id": "c4908d00-1394-4e4c-83da-e3e4bde5c3cb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f07031f7-4acc-41fb-9651-72f63949373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aecf6f-6b5a-43d5-87f0-452ee65cd977",
        "cursor": {
          "ref": "8d5e1984-e44b-426a-a874-93dff2e6452e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "217a93ce-e41b-4ed0-8b03-426b77db7d0c"
        },
        "item": {
          "id": "16aecf6f-6b5a-43d5-87f0-452ee65cd977",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3928db2-c488-402a-acfc-730a57c5d82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5125af-d4f1-4ac7-b558-1aecf4e641ec",
        "cursor": {
          "ref": "287e48a1-904f-4b35-860e-8928cf7348e6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e36972ff-8415-4d25-bbf5-d8ed80d96b54"
        },
        "item": {
          "id": "cd5125af-d4f1-4ac7-b558-1aecf4e641ec",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "74024e59-f085-4bdb-a7c2-b4861702651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31637f2-b97b-4f06-b90b-8235820c7438",
        "cursor": {
          "ref": "a60cf9a5-5c83-49dc-a44d-157be934c40a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "960057ec-1af3-46bc-82b0-9472fbf3991a"
        },
        "item": {
          "id": "f31637f2-b97b-4f06-b90b-8235820c7438",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "87836b06-fc61-419a-8385-899c93d94a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df895389-02c3-427d-a8d8-fdf1b0938d91",
        "cursor": {
          "ref": "6199c9f3-6b67-4352-881f-d154a1fd7700",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "df4d8711-6ef5-4474-b248-e298497b8777"
        },
        "item": {
          "id": "df895389-02c3-427d-a8d8-fdf1b0938d91",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1b81dfbe-92aa-4dfe-8176-d14e53d1ef5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ecac1-b26a-4a4d-9195-fd80ef5fe50a",
        "cursor": {
          "ref": "cf65ae8a-5408-446f-ba1d-61d06aa91abf",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "25bc9765-b99e-4764-a2ff-f4f0c760af8d"
        },
        "item": {
          "id": "6e6ecac1-b26a-4a4d-9195-fd80ef5fe50a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb3c2bb4-3e9b-4dad-9e83-a611dc1a6603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598f39f1-0351-4fb6-8b79-710dae9a8687",
        "cursor": {
          "ref": "5363311e-a025-491a-b493-ef1ecc72c962",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "14b22ed3-7e1e-47d7-ac31-f70d1a5ee6b0"
        },
        "item": {
          "id": "598f39f1-0351-4fb6-8b79-710dae9a8687",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "83fdff6d-2743-429e-b0cb-8d0f7561d3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb1075-82e8-4d8b-8278-fe203909d8e5",
        "cursor": {
          "ref": "e64fd2a2-9b60-448f-b2b6-02166b67ebbf",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3eefc6c-a5cb-446f-b3e3-90b853bac8fb"
        },
        "item": {
          "id": "fcdb1075-82e8-4d8b-8278-fe203909d8e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "818030d2-cd9a-4f51-9cb8-d10643a55396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba112774-70f2-4e14-8167-9597fbe56d8d",
        "cursor": {
          "ref": "b78a43f6-ef26-4976-a12f-e4d1739d0f4e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e3908bdd-e98b-412c-b4d8-7be403562af3"
        },
        "item": {
          "id": "ba112774-70f2-4e14-8167-9597fbe56d8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad951f16-499c-423d-ba3c-f7be72815056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e9e93-4df6-46b0-a098-8fdf3f7a6345",
        "cursor": {
          "ref": "9c17c673-7100-4227-b8a9-fa78f3a61f82",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dbc8b7a7-dcf5-4000-87cc-0e0eabb8c635"
        },
        "item": {
          "id": "f16e9e93-4df6-46b0-a098-8fdf3f7a6345",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0b9aadb8-19d8-4478-9ba3-29efbdf3fb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e495c-f324-420c-90ce-c7ad75b6d6a6",
        "cursor": {
          "ref": "2104da65-cfbc-4a02-b88f-6b6ec7bbb4a6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9b527bde-acd6-457a-abda-7a7a2b9b5579"
        },
        "item": {
          "id": "8d8e495c-f324-420c-90ce-c7ad75b6d6a6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dca6366d-c72c-458a-a205-53810ee49875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b2a6d-bc94-4c64-8659-17df9fa3ed75",
        "cursor": {
          "ref": "e6ae7f5d-f682-467f-b475-ed9121711e89",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fafa7227-2f1a-413c-a096-34c42da38233"
        },
        "item": {
          "id": "da1b2a6d-bc94-4c64-8659-17df9fa3ed75",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6a644d26-fd5b-4843-b368-0ac1f23d89d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a59039-5b26-42cb-aec4-608262282a54",
        "cursor": {
          "ref": "5c8fdda9-7889-4b60-ae61-908f22d17bc6",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "467cec6b-5882-40ca-9204-24c8a64fc9cb"
        },
        "item": {
          "id": "24a59039-5b26-42cb-aec4-608262282a54",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c4f0321-93f7-468a-9d9e-10ceb105ed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c8f19a-fcd2-47d7-a6ae-87711f31b9a5",
        "cursor": {
          "ref": "bba0b6e5-026b-43cc-a4e9-589b7ebae2a5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a03a6f50-1f16-4d7a-9503-bbb33a6910a7"
        },
        "item": {
          "id": "f5c8f19a-fcd2-47d7-a6ae-87711f31b9a5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "09cc58cb-8111-4e17-9d07-73860d211c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde98ad3-a00e-4602-9034-aa28992d587c",
        "cursor": {
          "ref": "0c4c2def-a28d-4fca-81fe-a57a1f51a54a",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4d592655-c34f-4c1f-80a8-0489cd0d2652"
        },
        "item": {
          "id": "fde98ad3-a00e-4602-9034-aa28992d587c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "100bc38a-760d-4de9-968f-2e7ca5f114ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07f541-d271-44ec-91a8-fa717b7a1ca3",
        "cursor": {
          "ref": "dea6b310-c2d3-4db6-bd6a-4aa9abc66adb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7b17afc9-ad0f-42bb-8d8c-61c7c45f7ee2"
        },
        "item": {
          "id": "7f07f541-d271-44ec-91a8-fa717b7a1ca3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a3ada793-8d53-4de3-b082-e5a1c178a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a342d9-aa3d-480a-91f9-e6e1309a9a3e",
        "cursor": {
          "ref": "cefeae2f-f06b-42a9-935c-74b2ae2d05b6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b2c223aa-cd5b-46c9-8aeb-5d015c719d2a"
        },
        "item": {
          "id": "f2a342d9-aa3d-480a-91f9-e6e1309a9a3e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6f1270f7-eaf1-496e-959a-55db29855e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256384ff-572b-43da-9aac-97bc7037798c",
        "cursor": {
          "ref": "e65aed5b-ca82-4f10-9446-dfebfa5f9c4a",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "434999ca-420b-400f-b81e-252e7280dfd1"
        },
        "item": {
          "id": "256384ff-572b-43da-9aac-97bc7037798c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "784c7230-8177-4035-8dfa-bb4c92d37fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7b0936-12a0-42fe-8c5b-14373f285086",
        "cursor": {
          "ref": "745bf17c-2865-49ee-91ba-37caec4d62ef",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "29b1bb83-9e84-40d1-b06d-c4a22628c756"
        },
        "item": {
          "id": "5f7b0936-12a0-42fe-8c5b-14373f285086",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a23596db-d84a-45a9-9a0c-547d970edcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af61b238-aad4-4adf-a4b0-a2e4b440652e",
        "cursor": {
          "ref": "b55745e4-c37a-4be4-ac1e-24f2c681508f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f04dffec-16d9-4d28-8ce1-f9796db781a6"
        },
        "item": {
          "id": "af61b238-aad4-4adf-a4b0-a2e4b440652e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "48a78b64-e78d-4f63-bea5-23910c2687fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb1cbc-4b4f-4c20-9e52-7277a4c12ca8",
        "cursor": {
          "ref": "f90ef9f4-180d-4aea-9c1b-23bd97c7edc7",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56f9be83-d2b8-47bb-a26d-ac6817defe00"
        },
        "item": {
          "id": "a2fb1cbc-4b4f-4c20-9e52-7277a4c12ca8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "884764dd-3e8a-44b0-a001-5c6954ef210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cba9b53-fbfd-4c66-a73b-e4bc9eff6980",
        "cursor": {
          "ref": "2764e4e3-9c90-484c-9128-5fa7909fb8b4",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a536fb94-97d9-4575-adc8-510795b2b589"
        },
        "item": {
          "id": "3cba9b53-fbfd-4c66-a73b-e4bc9eff6980",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "59fdbc74-9ebf-455f-a222-016e19e19817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bced73-fa5e-4cbd-9c28-14cd8d969356",
        "cursor": {
          "ref": "387812fa-1cd0-4f06-80e2-872811a659a7",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "69847015-49b1-476c-a52b-dcfa7c41b5c1"
        },
        "item": {
          "id": "08bced73-fa5e-4cbd-9c28-14cd8d969356",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2d28863b-032c-468f-8e4e-a562eee73756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a7c44-858b-4136-a605-5cf7eef0332d",
        "cursor": {
          "ref": "3e46f719-e670-419b-a4e3-75dc6bf5f193",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "65f17363-ba57-49b3-929d-37d10da6f75d"
        },
        "item": {
          "id": "d02a7c44-858b-4136-a605-5cf7eef0332d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ee6107fe-3da9-4d36-a696-9ed9ef1abbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c41b9-89d6-47a0-87b8-7b8de12c2736",
        "cursor": {
          "ref": "014ee852-91bd-4419-87e7-5a08ef774715",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "89a14c1e-c0dc-43d0-a68e-6d23090cb3e0"
        },
        "item": {
          "id": "db6c41b9-89d6-47a0-87b8-7b8de12c2736",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bdc52ece-96a8-443b-92df-594ec2e171a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f96c6c4-ffd5-4a2f-bd15-f401e52495ab",
        "cursor": {
          "ref": "0a2b4a3f-4e79-46e6-8e35-114b11aa67d2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "045a3f3f-0d93-4830-9a28-846cd49a79ec"
        },
        "item": {
          "id": "0f96c6c4-ffd5-4a2f-bd15-f401e52495ab",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d850237c-b01b-43b1-bed0-6c38fddd4dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc910c6-c2ae-4268-ba0c-5cef8f79da11",
        "cursor": {
          "ref": "505a2181-3832-4dc1-8567-eb9be6486212",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02addd45-a744-4a65-9d4e-d4543f096edc"
        },
        "item": {
          "id": "bfc910c6-c2ae-4268-ba0c-5cef8f79da11",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a29a3078-eb3f-49e2-97c8-b1cfa4fbf6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46951260-32d4-4da3-bce9-82b05581260e",
        "cursor": {
          "ref": "41e42f98-7188-46c2-97e8-b58650364d37",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "58c0d7f7-2798-445e-8e92-0f908d3c4d65"
        },
        "item": {
          "id": "46951260-32d4-4da3-bce9-82b05581260e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0e5f0b4f-78df-4929-a7aa-043b5b21452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10da6e34-c9c5-49ad-8812-706bc43df340",
        "cursor": {
          "ref": "7bd83ec5-c31e-4b9e-aaf9-79c5d5679356",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "56c0e1b3-f6d3-4362-adcf-db956cde91ea"
        },
        "item": {
          "id": "10da6e34-c9c5-49ad-8812-706bc43df340",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b27a0cf9-6bb1-4b4d-aa91-6787850a547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a0eaa4-6a26-4576-9f99-85881a59c2ed",
        "cursor": {
          "ref": "88590ce6-fd38-4575-8a91-eb4dc4987045",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "82f2485a-fff0-403e-af9e-681052a6bc35"
        },
        "item": {
          "id": "c2a0eaa4-6a26-4576-9f99-85881a59c2ed",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "abe8fc48-15ec-42f8-9c65-fd4371d71c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edeeb3d-2a22-4a34-8acc-8983dffe7f56",
        "cursor": {
          "ref": "e20cb70a-7858-43e3-bb7b-fea581d270a4",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8983d507-88ce-44a3-8cd6-fc3d28a1ff04"
        },
        "item": {
          "id": "8edeeb3d-2a22-4a34-8acc-8983dffe7f56",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "20866f1e-83b5-47a7-84f4-5efbfe621a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a456787d-8725-4bdb-a2ce-f65ed1a6afbb",
        "cursor": {
          "ref": "8db1b04d-acb7-4815-a2bc-3b04130ad124",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "07a39fbe-7c97-4820-9943-db258091f341"
        },
        "item": {
          "id": "a456787d-8725-4bdb-a2ce-f65ed1a6afbb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14873a76-626d-46eb-991f-c1bed0f541b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f79c16e-4abf-4353-9639-d0754a7ad710",
        "cursor": {
          "ref": "739245cb-634c-4e8e-ad5f-1fa3afc1659f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d7a63a7-ad1a-453d-80ea-09fb40bd90c0"
        },
        "item": {
          "id": "6f79c16e-4abf-4353-9639-d0754a7ad710",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "70d3480c-529b-4a30-bf74-894a7a9f7514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f54ce4-4abd-4a8e-8f92-c5b73be83858",
        "cursor": {
          "ref": "11996ebc-1961-42a4-b9a5-33fb4919cf4d",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0114f24a-8369-4be7-a6ec-b5560e9ff118"
        },
        "item": {
          "id": "54f54ce4-4abd-4a8e-8f92-c5b73be83858",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f2abd339-5a4c-447c-9016-6562ac9cdfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4535dd5-a8cc-4fac-acf6-8a6ebafbdf36",
        "cursor": {
          "ref": "aeffbc98-ff89-4e25-9bea-21214c8a928d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3c5e12e7-9d36-4c48-a7f6-074f38a67cec"
        },
        "item": {
          "id": "b4535dd5-a8cc-4fac-acf6-8a6ebafbdf36",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d31110a1-43c8-47ee-8852-6a36f4edd1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6485a7-97e4-4062-a0cf-a8f330febe5c",
        "cursor": {
          "ref": "c32e5a5a-6651-47ea-8aaf-374803430f4f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3db015b8-e865-4a7d-b392-be0a4f0ccbcf"
        },
        "item": {
          "id": "6d6485a7-97e4-4062-a0cf-a8f330febe5c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aad77d63-4607-4928-a488-57c0412d040a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897d1ff1-efa3-4455-96a5-55a649717b52",
        "cursor": {
          "ref": "716da256-5266-42c4-a022-e2f134da9ae4",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dcc81275-a863-4001-ae49-4be63b60e588"
        },
        "item": {
          "id": "897d1ff1-efa3-4455-96a5-55a649717b52",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "36613847-840a-4f7c-a832-4e3c651f3b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6847693-f5c0-4965-8f3a-c17a2b53c73d",
        "cursor": {
          "ref": "64837f58-0bbc-4de9-b5e6-69dbaf6394fd",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6b9a473e-74b0-45d2-9cba-ebd04727bfc2"
        },
        "item": {
          "id": "e6847693-f5c0-4965-8f3a-c17a2b53c73d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "151202c3-47bf-4cb7-be45-b44b561984c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae66555b-2789-4c04-8c82-3010e38ce5d5",
        "cursor": {
          "ref": "17b2ed44-e2d1-4ccc-88c5-de2a71bd902f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "37663737-9cb1-49fe-a8ec-17760fefd4bb"
        },
        "item": {
          "id": "ae66555b-2789-4c04-8c82-3010e38ce5d5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f2024df2-adca-4d81-b65f-39a8bc7de7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ec0e13-a09b-4ff6-9e34-1919b3e5ebc3",
        "cursor": {
          "ref": "cee2f9e5-af0e-4918-9546-bca33480a838",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8bfcff9f-59e7-47f2-85a1-10d40aeafdcb"
        },
        "item": {
          "id": "d3ec0e13-a09b-4ff6-9e34-1919b3e5ebc3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf7a2dd9-6dbd-400a-9383-028c13db300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54cedc-254e-4894-8502-8525d50b734a",
        "cursor": {
          "ref": "dc4c7dc1-9d05-4967-bcd7-429326e1ad75",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7b757f48-e533-42bd-8292-bb32b150488d"
        },
        "item": {
          "id": "db54cedc-254e-4894-8502-8525d50b734a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "958895a9-95f2-4140-8727-50be81c08e47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e8212-e237-41c0-970b-e2bd2067c718",
        "cursor": {
          "ref": "b3fd31f9-2f6c-47b7-b18a-c0e462d432d5",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b41e822-42c6-4047-8700-1b95c9e48c48"
        },
        "item": {
          "id": "7f9e8212-e237-41c0-970b-e2bd2067c718",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5b311d4e-ecbe-4183-8cf0-fd9100c127af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 44,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff3929a-7fbf-4a99-b036-b8bf75b07323",
        "cursor": {
          "ref": "1581eb59-4800-4eaf-a482-a1b9d1b44746",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1ed94ce7-8b15-49c2-8c4d-990b9bfd1966"
        },
        "item": {
          "id": "8ff3929a-7fbf-4a99-b036-b8bf75b07323",
          "name": "credentials_issue"
        },
        "response": {
          "id": "974fdb80-613c-4d21-af06-e3f64e5a136c",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a690acb6-517e-4c01-ab27-6c048d9e3019",
        "cursor": {
          "ref": "199dbf99-1a48-4cce-a01c-8ddb30e47370",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d91fe56-806d-4b8c-8afd-1b67c3c9d734"
        },
        "item": {
          "id": "a690acb6-517e-4c01-ab27-6c048d9e3019",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d4688d47-1ba4-46dc-8ea7-f9ab5af78d49",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f9a519-b651-40a9-a24b-b5986cd307ba",
        "cursor": {
          "ref": "e9098089-465d-44fc-8132-9c9b5321fc8e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54d05d82-7170-4b82-90c3-cb849d9c3be9"
        },
        "item": {
          "id": "26f9a519-b651-40a9-a24b-b5986cd307ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "524b28f1-4b20-4b8b-9216-0695d38199ff",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7ef214-d20a-49de-a3f6-a8ab46625053",
        "cursor": {
          "ref": "da057ba2-90d3-47b7-838b-dcd1151907af",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d62c7139-9fbe-4c08-949d-a4266f3c249e"
        },
        "item": {
          "id": "5c7ef214-d20a-49de-a3f6-a8ab46625053",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "975b9cd9-6073-41e3-9a9f-bc7fecfd961b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7ac2e6-3905-41b2-9c4f-663c018c43d1",
        "cursor": {
          "ref": "8cb0fb8d-2a1b-448d-9218-1dc182497c19",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b58c0d1e-56c7-4b65-9b00-697c8859db88"
        },
        "item": {
          "id": "ae7ac2e6-3905-41b2-9c4f-663c018c43d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "216f64cd-023b-4e57-bd24-e6fd911d7657",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcf7bda-4c60-47ab-8ec7-68c6ecf8b666",
        "cursor": {
          "ref": "05c11fbd-035a-422e-b3b3-7f2cc0fb5156",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "81d54569-24a3-492a-8633-8d53ef47bf61"
        },
        "item": {
          "id": "dfcf7bda-4c60-47ab-8ec7-68c6ecf8b666",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d2277482-282a-4cff-9d84-33ad6281376f",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c13914a-8c06-4273-99ef-b574771f08ee",
        "cursor": {
          "ref": "f725208a-fc40-47c0-8c70-6f78d4f0f9e8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "69062e58-fa7f-41cf-85ad-55229733bf25"
        },
        "item": {
          "id": "9c13914a-8c06-4273-99ef-b574771f08ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90ea34b2-6f2d-459b-b3d2-7ae21cbb93e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c13914a-8c06-4273-99ef-b574771f08ee",
        "cursor": {
          "ref": "f725208a-fc40-47c0-8c70-6f78d4f0f9e8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "69062e58-fa7f-41cf-85ad-55229733bf25"
        },
        "item": {
          "id": "9c13914a-8c06-4273-99ef-b574771f08ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90ea34b2-6f2d-459b-b3d2-7ae21cbb93e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f332b1ad-01a0-4e67-93bf-e47086e9788e",
        "cursor": {
          "ref": "25bfac72-957a-4935-a0f9-ce6fc51e5deb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0fa95d5c-056a-4879-9d06-6ab708fa4984"
        },
        "item": {
          "id": "f332b1ad-01a0-4e67-93bf-e47086e9788e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a534147a-e1d3-4ca9-bbea-d6c347b1d63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e80767f-6777-4cd8-8f13-3623f205a834",
        "cursor": {
          "ref": "3f75dd65-1b6d-4691-b4b9-56f9633c5ce7",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "008f081c-8ea5-4c0c-8feb-9a4f73a52eb5"
        },
        "item": {
          "id": "6e80767f-6777-4cd8-8f13-3623f205a834",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d41c1037-0014-46e0-bef4-1f1ca0c55b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83796bef-8078-44a1-b00b-1daa1ab7aac9",
        "cursor": {
          "ref": "4859e2c8-49c7-4fcf-8d7d-3adb93c2fb7e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "63d3e06a-0f9d-4513-97a1-ed8997a51114"
        },
        "item": {
          "id": "83796bef-8078-44a1-b00b-1daa1ab7aac9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "471f5541-1322-4df5-a1c7-5e26e9a11f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3218f69a-2cb0-431f-b77c-6f6c7525b987",
        "cursor": {
          "ref": "9906cf1e-fd27-4dda-a2b0-806313bb12df",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e739159-67c2-45cf-88f2-824c02884569"
        },
        "item": {
          "id": "3218f69a-2cb0-431f-b77c-6f6c7525b987",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e975ed47-4ecc-4e9c-8552-14856901f072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12396802-aa83-499c-a667-f2f49e559d4b",
        "cursor": {
          "ref": "63b718de-7fb8-4aeb-a166-0033fe0da16f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a17a47c7-987d-4ed4-8926-114382727d44"
        },
        "item": {
          "id": "12396802-aa83-499c-a667-f2f49e559d4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5e6b1fbc-f1c3-4743-b37a-5a32bbddbc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dba4762-1a97-4886-8005-c373eb197791",
        "cursor": {
          "ref": "7e4ed40a-8997-457c-9669-b6e2ba533b48",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9eb28df0-4b54-4338-bd72-76a6678d818a"
        },
        "item": {
          "id": "1dba4762-1a97-4886-8005-c373eb197791",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "97dfa04c-9cf2-4e7b-bb71-abc8799bd727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d133980d-e019-4ac8-82fa-f6e0bed85ac1",
        "cursor": {
          "ref": "072d6eb3-c33a-4c07-a9a3-2e07d3105493",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1b66fcd6-ff2b-4d32-906b-7461c1e603a5"
        },
        "item": {
          "id": "d133980d-e019-4ac8-82fa-f6e0bed85ac1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "291bfec2-9d2b-4d06-81c8-d5425cabe025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cdaa3b-ad1d-4729-ba1e-8fe03ff11b32",
        "cursor": {
          "ref": "52774e44-8c2d-4280-99f7-16ba9a80fe16",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9a1246d5-793b-4ac6-a605-384bada420cb"
        },
        "item": {
          "id": "81cdaa3b-ad1d-4729-ba1e-8fe03ff11b32",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1120ed94-3852-45dc-b0df-0d23f9b46835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356346e6-99f8-463e-80d7-e3fec6c6fb3d",
        "cursor": {
          "ref": "8fbbedc0-a3b4-4132-94e4-1e20bcb0913f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "57c7b2c4-5e4b-4401-bc7f-3c04c9334dea"
        },
        "item": {
          "id": "356346e6-99f8-463e-80d7-e3fec6c6fb3d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0743f04c-9337-41a5-b9aa-1eb97da432d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef4769-9a69-40b0-bc0f-4a52db9d72c2",
        "cursor": {
          "ref": "94052895-2c5d-409d-a665-4ddd2fd64cc6",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f068456f-ce9b-49c5-aa64-555420eba94c"
        },
        "item": {
          "id": "cfef4769-9a69-40b0-bc0f-4a52db9d72c2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce342220-2214-4842-9762-27f01438dfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5484be7-f514-4fbb-a7a6-92dee9d62b90",
        "cursor": {
          "ref": "a2003be0-9a14-4b07-ad34-c93fc42ee855",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f2f30a2a-2ced-44c0-be50-fd75c90ede45"
        },
        "item": {
          "id": "a5484be7-f514-4fbb-a7a6-92dee9d62b90",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "05f1825a-2852-46de-8131-14601c07b858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ed61c-fa46-4758-92bc-a5f3c29967ff",
        "cursor": {
          "ref": "f53f2043-2f2e-4b83-8022-394854f14e60",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2cb4acd8-f637-4f95-b7d9-2111d3501795"
        },
        "item": {
          "id": "829ed61c-fa46-4758-92bc-a5f3c29967ff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0c0b28b-fc35-438b-94e8-1617f959161d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820874e-9f7f-4262-b6e1-ba2d63709cf6",
        "cursor": {
          "ref": "cb1116c3-7b0e-4f47-a344-5c410680d137",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ef18afcd-6ac9-4e6f-b3d5-88b778e1f213"
        },
        "item": {
          "id": "6820874e-9f7f-4262-b6e1-ba2d63709cf6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "75626f57-2afe-460d-bd67-1cdc41ed75ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5fed69-8330-48be-956f-9dbdd6b4cb24",
        "cursor": {
          "ref": "86508b11-c9cc-471c-9c5b-57553e05852a",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ff9a64ff-e882-4b34-b15b-90721ed03b83"
        },
        "item": {
          "id": "1e5fed69-8330-48be-956f-9dbdd6b4cb24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4368192-8828-4de9-8b0f-9559b98fd4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b6e653-229b-467c-8c70-6c87fa14af7e",
        "cursor": {
          "ref": "59685954-f580-4a9f-9a90-69eac5e3bccc",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "efab0616-cd66-4a18-bd74-aabc017f8c87"
        },
        "item": {
          "id": "e3b6e653-229b-467c-8c70-6c87fa14af7e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b56edf44-1f0d-4a7c-b474-bdf9eb337f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d253d361-c6c2-4f2e-8662-75cb982b8798",
        "cursor": {
          "ref": "354c3bd6-0e91-42ed-8991-43de14ba873e",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2f4c076-fa60-471a-ae50-53e921ca8c36"
        },
        "item": {
          "id": "d253d361-c6c2-4f2e-8662-75cb982b8798",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61d7ef7a-90fb-4c90-91cd-0811fd73368e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7734be-0c9d-4547-a2a7-bd89123884ed",
        "cursor": {
          "ref": "d7664d0c-2983-463c-ab0d-c6b334e339e0",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "104cdefb-8e40-4351-9e32-17dbd6694629"
        },
        "item": {
          "id": "3b7734be-0c9d-4547-a2a7-bd89123884ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c0a3545-03ba-481c-9bec-eff3f3b44358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f300692-334b-4e8a-a2a2-dc241829724e",
        "cursor": {
          "ref": "62903ce9-d46b-4cb4-a71f-56d143a78b54",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7afa729-3811-4241-bb5f-3500296b659a"
        },
        "item": {
          "id": "7f300692-334b-4e8a-a2a2-dc241829724e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b56cc459-159b-40d9-a017-da79e83f5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb9d12-3a5d-4b51-ae8b-06b4ea13cd6d",
        "cursor": {
          "ref": "8d7c7a49-373b-4a6a-aeba-b525eaf81b3a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c3c3466-b854-4f5e-950b-f73ea9859dcb"
        },
        "item": {
          "id": "d1cb9d12-3a5d-4b51-ae8b-06b4ea13cd6d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6bc8479e-fde7-4de1-8dd5-84e46c0820db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a5afa-974e-4622-8a3d-985141ef5e81",
        "cursor": {
          "ref": "cabd13a4-56b0-4b1b-a335-335e9abcb88b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "08f97c4e-b631-4816-b02d-69f2a6659cf0"
        },
        "item": {
          "id": "a60a5afa-974e-4622-8a3d-985141ef5e81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "21868ca8-023b-4284-8083-359e3c80625c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78255e25-1f76-4101-b993-b89bc936af95",
        "cursor": {
          "ref": "f7a7c63e-5cd3-460e-a976-1f3e0dac777d",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2da2d319-1912-4505-9a6d-dec334ae7399"
        },
        "item": {
          "id": "78255e25-1f76-4101-b993-b89bc936af95",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8676ccf-e899-41df-a046-05339e7e055f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cbd752-6898-4a50-b857-3861b61bc187",
        "cursor": {
          "ref": "b2a71e84-011b-466b-bb1b-f33c28d2d808",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d50c739-dcee-429d-a0a6-4f287204ea6f"
        },
        "item": {
          "id": "b5cbd752-6898-4a50-b857-3861b61bc187",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25cf0cbf-8044-443b-83f3-b183a70286f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638facb-5d4a-4bc8-b983-d8ac595e0335",
        "cursor": {
          "ref": "bcdfdbdc-c91d-41be-b8b3-fc4a6cd7a7ea",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "51788b0b-9fd7-4316-81cd-874e646fcd69"
        },
        "item": {
          "id": "1638facb-5d4a-4bc8-b983-d8ac595e0335",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "93daf112-05df-4002-a877-d7721ff8ed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec3ccb2-b1aa-49d6-90c6-c0326dbe34cd",
        "cursor": {
          "ref": "47bc3893-0ae5-47cb-b0ea-8ba4db82e042",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d80992f9-0f3e-433c-b7e4-b2426d6d034c"
        },
        "item": {
          "id": "dec3ccb2-b1aa-49d6-90c6-c0326dbe34cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ee09e8d1-ef7d-4b01-8f33-b142ce136d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef23d0-390d-4c9f-97c2-7d4b08b874aa",
        "cursor": {
          "ref": "2d29470c-f53c-4b7e-824f-5bbddeca2a43",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "55a4a97d-4074-45d3-a7c1-097ce2e0002a"
        },
        "item": {
          "id": "feef23d0-390d-4c9f-97c2-7d4b08b874aa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2eba356f-1c62-402f-9bc4-1adad4017c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027128d6-0bdf-4845-af50-2cfcf2baf13c",
        "cursor": {
          "ref": "d28e12ce-b189-498d-98f6-fedff71a93af",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d1af7c0f-f1d3-434c-8f57-5af14ac15bf1"
        },
        "item": {
          "id": "027128d6-0bdf-4845-af50-2cfcf2baf13c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4cb77bb-2b66-4757-9877-772b80e4f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c786fe7-90e3-4809-a357-a0afb4029c6b",
        "cursor": {
          "ref": "54f5fa88-5aa1-4e79-b52f-5ce053d1395b",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "53d1aedf-dd93-4d05-84ed-2ae3793d06a1"
        },
        "item": {
          "id": "2c786fe7-90e3-4809-a357-a0afb4029c6b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "56bccb15-562e-461c-9fd0-c830dc5df59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f56529-393c-48c4-b797-ea7e48f15875",
        "cursor": {
          "ref": "ad097e43-c4f3-4efe-8da8-40951753b3a3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "58c2f21a-a6cc-440d-9a70-bbe8e46579c0"
        },
        "item": {
          "id": "76f56529-393c-48c4-b797-ea7e48f15875",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c40c7a08-6eda-448f-a1c4-db1e63475c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516c229f-cb40-46d0-a80b-172c8bb53158",
        "cursor": {
          "ref": "7fb4c830-dbcf-4032-be8d-e4fafdd8aa7e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "413176c7-2c59-4eaf-8f89-52df97bc9048"
        },
        "item": {
          "id": "516c229f-cb40-46d0-a80b-172c8bb53158",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "37b9d3d8-f957-47ce-bea8-b6e361b4a58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f2e40d-2b8f-4330-bf31-dc3be49f47b5",
        "cursor": {
          "ref": "879ce5cd-cfd1-4e83-82ba-a1d9d7af8eae",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "98d62c64-6d11-496a-ad34-2dc4770c1a92"
        },
        "item": {
          "id": "a5f2e40d-2b8f-4330-bf31-dc3be49f47b5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "630bb8c9-7360-4dba-979e-5fcb50afee01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbdf7d3-d002-4da1-967e-1a6944d0a646",
        "cursor": {
          "ref": "d11c68dd-5787-42e0-ac4a-42b738418ed8",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8cd51be-7885-4de0-b7cf-4d26306c1ce8"
        },
        "item": {
          "id": "4cbdf7d3-d002-4da1-967e-1a6944d0a646",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2cb0d685-5971-4585-bac9-de042c7e6573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7857a7-15ab-4909-aced-49c66b1a3395",
        "cursor": {
          "ref": "6d36e558-8bd5-4f63-939b-012f34c5276e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "128bed6a-4ad4-48fd-8f19-1f12f8db1be9"
        },
        "item": {
          "id": "7a7857a7-15ab-4909-aced-49c66b1a3395",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "de6e851c-8857-4d0d-a30c-a5d78d65896c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3474a440-8581-46fe-b5be-96b8217d4be7",
        "cursor": {
          "ref": "71cebbeb-dab2-4a9b-9719-c98d3769d9c2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d239c711-091d-4def-8538-4fd35b4a2d0b"
        },
        "item": {
          "id": "3474a440-8581-46fe-b5be-96b8217d4be7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "36ce3f33-316a-4187-95ff-743641d952ac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cee09b-26f0-4c7e-b994-885705605f39",
        "cursor": {
          "ref": "3ea9d0fd-6e66-497f-a2a4-fb9114d5785b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d49765f4-2067-4f0f-960e-0188b95e303d"
        },
        "item": {
          "id": "81cee09b-26f0-4c7e-b994-885705605f39",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "13f2d117-9134-444e-bfb2-b230a009c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cee09b-26f0-4c7e-b994-885705605f39",
        "cursor": {
          "ref": "3ea9d0fd-6e66-497f-a2a4-fb9114d5785b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d49765f4-2067-4f0f-960e-0188b95e303d"
        },
        "item": {
          "id": "81cee09b-26f0-4c7e-b994-885705605f39",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "13f2d117-9134-444e-bfb2-b230a009c215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25cbf44-6429-4892-961d-b3c625db778a",
        "cursor": {
          "ref": "7b8a2b4f-f7fd-482b-bb8c-38bdf22a738b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "40fa4863-c227-4417-a6b3-3a9e16363d80"
        },
        "item": {
          "id": "a25cbf44-6429-4892-961d-b3c625db778a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d5f8103b-6d0e-4e16-9760-218dde26550e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ff8fb-d837-42f1-bb1b-d0318a264c2b",
        "cursor": {
          "ref": "23fce018-f145-4e0d-8c46-6bf41890552a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d7d9ebb4-6866-4df0-99f7-168ec8dbdd19"
        },
        "item": {
          "id": "6f7ff8fb-d837-42f1-bb1b-d0318a264c2b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a452c20d-9b91-4fe7-9e17-39224be057f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc69a5b6-c8b5-439e-98bd-f1adb8619c3e",
        "cursor": {
          "ref": "812f8cd8-6830-4be1-80a1-b4e1d5e5969d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dee2ed10-0f17-432f-9667-deadc12bb2be"
        },
        "item": {
          "id": "dc69a5b6-c8b5-439e-98bd-f1adb8619c3e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f13521ae-05e4-4bdb-ad9a-8b404c65dddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be6f3e2-839d-400c-a03a-8a2d02421849",
        "cursor": {
          "ref": "bfab4396-aadd-463a-803c-d915dd5e5dd7",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2dfcebcd-1146-41d8-b673-75b3002c7c9a"
        },
        "item": {
          "id": "5be6f3e2-839d-400c-a03a-8a2d02421849",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e80619bf-69b1-44dd-9129-797d54cd0795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5605716-9d59-4f2a-90ba-2788904c0047",
        "cursor": {
          "ref": "c093b7a3-3ecd-4618-91b0-a5da26733b55",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f845c54-854a-4552-8c98-6db9f48e211e"
        },
        "item": {
          "id": "e5605716-9d59-4f2a-90ba-2788904c0047",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2b71ced4-f727-477d-9761-058f2e14dd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de72258-aa47-4414-b357-b796fb839c9a",
        "cursor": {
          "ref": "396e41f6-f7eb-4b0e-a1e3-97c53165efba",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1f1bb1c0-dfbd-4fc4-99f7-9a6485febcc3"
        },
        "item": {
          "id": "4de72258-aa47-4414-b357-b796fb839c9a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8be0486f-98ee-4778-b453-c9efa3c78dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89581b1f-19e4-4e5f-9161-0178a0fb53aa",
        "cursor": {
          "ref": "d5ac3afb-fbba-48fc-9650-e4b003a56627",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fc5a3dcf-8f16-410a-8132-fb242927c622"
        },
        "item": {
          "id": "89581b1f-19e4-4e5f-9161-0178a0fb53aa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "81d14985-a46b-4a9a-be8f-1b173644ac20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58635097-9575-4b8f-bedf-0daf1c6a322c",
        "cursor": {
          "ref": "cbb1d24e-95ec-46e3-b104-da470956554f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1caf43bf-0bc5-4580-82fd-64f6eb8d21c3"
        },
        "item": {
          "id": "58635097-9575-4b8f-bedf-0daf1c6a322c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ead1cbb-e8d2-4ac2-abf8-a52e9ef13dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fcbe43-e282-46e0-9262-186dfa3f9c23",
        "cursor": {
          "ref": "d0229a28-d2b0-433a-8949-c4864b3191f7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "74f4751c-5e6c-440f-808b-cf3b8c286a02"
        },
        "item": {
          "id": "35fcbe43-e282-46e0-9262-186dfa3f9c23",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3f75b99d-e9af-471d-b506-b73cd046b5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822b202c-4134-4c83-8bcc-69308da5ec59",
        "cursor": {
          "ref": "9831aa31-cbc6-4bb1-b653-770fa043d76d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d3f58658-d894-461e-878d-d45416a2d0ad"
        },
        "item": {
          "id": "822b202c-4134-4c83-8bcc-69308da5ec59",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c3131b83-28d8-410f-9b61-099d2844374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449fd48-441f-41b7-8a12-9db4a676fa9b",
        "cursor": {
          "ref": "54c039a7-6898-454f-973d-3dc9d8301f74",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e6377768-1de7-4d64-8774-67e6ca7f3abf"
        },
        "item": {
          "id": "4449fd48-441f-41b7-8a12-9db4a676fa9b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a349b001-196b-4544-86cd-037aad2d0fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7b25a-7c05-41a5-8b97-37b541496cd1",
        "cursor": {
          "ref": "2714ff65-f3d6-4c28-912c-8a25bf2b03d1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b60858fc-649f-4257-a8c2-4477e609f88e"
        },
        "item": {
          "id": "a9e7b25a-7c05-41a5-8b97-37b541496cd1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b5cb2796-27ec-4197-b1e4-becf35ce74aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb94cbe-8977-4b7c-aac2-1dfc93daea7f",
        "cursor": {
          "ref": "a0a80c05-dfec-4b9a-a02b-7127b72a89fc",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f6e1a4d8-ae80-405a-932c-f1c0e36289d6"
        },
        "item": {
          "id": "6bb94cbe-8977-4b7c-aac2-1dfc93daea7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ee7ea1cd-4492-4a41-a05e-6d2ce66a8513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108d4580-b960-494e-9e01-92aadb394102",
        "cursor": {
          "ref": "047ccf8c-3d5f-44cc-ac24-fe989b9e0449",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb1cd8ec-e85c-4335-86bb-ea115ab5533b"
        },
        "item": {
          "id": "108d4580-b960-494e-9e01-92aadb394102",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba73e68a-fdba-4823-8576-56049718b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02389a44-6e36-4034-80ce-97937e56b377",
        "cursor": {
          "ref": "e5cfa65f-0e76-4ed3-aec0-0f6d36e42a07",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9eba1f59-7c50-432d-b228-c9d0269752c0"
        },
        "item": {
          "id": "02389a44-6e36-4034-80ce-97937e56b377",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f300a6d5-4a06-4184-a2ac-6069a8288ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612b12bf-e868-4e7f-a35e-0968dd3405b1",
        "cursor": {
          "ref": "70f08083-d0cb-4014-ad2a-438795203c55",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "83ddb13e-5686-4cad-9e1f-9b81b5da0c6b"
        },
        "item": {
          "id": "612b12bf-e868-4e7f-a35e-0968dd3405b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61a601a9-2087-4d50-9694-a1b766173d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd03686-49b4-4c81-bb93-e9f602bb4d4d",
        "cursor": {
          "ref": "438f58cb-7a28-4010-ae5b-7bd02e423963",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b5a46ccf-edfc-4334-90cf-9b00eeb6d6e2"
        },
        "item": {
          "id": "cbd03686-49b4-4c81-bb93-e9f602bb4d4d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "06fc7c44-734b-49bf-b8b1-1571b3c8c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ad6ba-d583-42a9-bc15-654c30b1fb34",
        "cursor": {
          "ref": "ba1ded15-e662-4f86-a145-1d32af861f0b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "007daaa1-c01b-4623-83ff-49143f2156ce"
        },
        "item": {
          "id": "4a7ad6ba-d583-42a9-bc15-654c30b1fb34",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0ec6ba6d-005e-4f7c-b257-f8a123513c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5841a55a-08ee-43a7-94be-d2df0c04723a",
        "cursor": {
          "ref": "6389e163-5079-4e5e-904e-06bedc6dc799",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f2d2eb57-eeb0-4e26-97fd-3bc4c92770bc"
        },
        "item": {
          "id": "5841a55a-08ee-43a7-94be-d2df0c04723a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "47af8448-2fc6-4c9e-82cc-fe21fb262986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad93d9f-e787-4c74-ba67-defee4699551",
        "cursor": {
          "ref": "f4dec051-39e5-4760-b5db-f0772237986e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8e5ca8ad-576d-41e8-b430-824b39dbfe01"
        },
        "item": {
          "id": "3ad93d9f-e787-4c74-ba67-defee4699551",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03d95302-7731-4f68-8402-ef8cf70a918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d84547-233e-4a07-ad5e-e25f51841625",
        "cursor": {
          "ref": "3897f510-a750-42d0-88c8-d150647906ca",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9b1b78b-3ee8-44bd-b1ba-28f50c6c1403"
        },
        "item": {
          "id": "10d84547-233e-4a07-ad5e-e25f51841625",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "df2e9278-6b81-47a7-989d-6b6bf14a5302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d4310-f78a-430d-b239-ab51cc0c5807",
        "cursor": {
          "ref": "da843f20-4626-4290-b6d4-3c8f1e3542cd",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "15efc6c8-00ea-44d7-b396-4c875b62e33e"
        },
        "item": {
          "id": "b00d4310-f78a-430d-b239-ab51cc0c5807",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1d03fe74-c145-4ce1-adb4-474f7a2d736d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c301a3-496e-4e90-b1ab-b59ef61686bd",
        "cursor": {
          "ref": "0b25884f-90e8-45bd-ba7d-5d9073b58e5c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "18372616-beea-4b02-90ec-d0566dc21868"
        },
        "item": {
          "id": "d0c301a3-496e-4e90-b1ab-b59ef61686bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f84def0f-d1fb-4f51-97a1-17aea612960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea9b3be-019a-4298-b418-465415520448",
        "cursor": {
          "ref": "6b47541b-562f-4950-9f01-3ada3e93837d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9f0d767-8fc3-4bfc-8914-5722824413cd"
        },
        "item": {
          "id": "8ea9b3be-019a-4298-b418-465415520448",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cc6ffdb0-fe17-4642-8d82-627f21fe2da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccd3a52-a8ec-4c84-b0b9-03e29e8fe142",
        "cursor": {
          "ref": "d3b1df95-30ef-4086-9747-2e4673ffaa84",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bf04af02-b92b-450c-a862-444a67023ba5"
        },
        "item": {
          "id": "fccd3a52-a8ec-4c84-b0b9-03e29e8fe142",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7e292199-9668-43a3-af34-52ac87931376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6837d-571f-492a-be67-c95589e67190",
        "cursor": {
          "ref": "909e768f-fbad-4072-a337-e6c12af377d3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e54af817-50e5-4d4f-b81f-54d4a8667b47"
        },
        "item": {
          "id": "63a6837d-571f-492a-be67-c95589e67190",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "906306c5-ab4e-4d16-975f-57c53789e602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546ca5c2-f019-4cae-8bf6-5aadce514cc2",
        "cursor": {
          "ref": "d73f56c6-06e3-44e9-9be6-efc15c872931",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83f47dfd-70e7-4f99-ab7e-7d6fa4ba9d8f"
        },
        "item": {
          "id": "546ca5c2-f019-4cae-8bf6-5aadce514cc2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8faa3421-5bff-4346-b0a0-6e2c8b4f3c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e411f4b9-d534-48c3-8eef-376e6f47c65d",
        "cursor": {
          "ref": "57f283be-b50d-45ce-990e-7be485fad32c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a74cabb4-7966-4657-b543-e3218178f068"
        },
        "item": {
          "id": "e411f4b9-d534-48c3-8eef-376e6f47c65d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e4fb232e-839b-48ef-8d14-6f25a90ced40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d47ced-391c-41d3-948f-4ab06ef6e739",
        "cursor": {
          "ref": "16b84e58-f126-4fa9-a857-af9d62a5b17e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "87418147-2565-4c07-b5fa-e0deab9cd890"
        },
        "item": {
          "id": "f9d47ced-391c-41d3-948f-4ab06ef6e739",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0b9850c5-bdcd-4f82-9722-ee2cde2cce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a3d946-69f8-4809-92c8-3e93561b28b6",
        "cursor": {
          "ref": "38a15b07-e60a-47d2-82f9-d0d68d340871",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3abd4a29-bbab-440d-97cb-8db4455bf1ad"
        },
        "item": {
          "id": "a3a3d946-69f8-4809-92c8-3e93561b28b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8f641192-8b58-4eb8-a024-1a86d8706837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab69b1d-8fcf-4c75-9a40-b8a5dcede374",
        "cursor": {
          "ref": "eb2c8042-b9bc-4844-bc02-fcb15385badd",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2dc308a8-208f-491f-b508-85c8e2c3d743"
        },
        "item": {
          "id": "9ab69b1d-8fcf-4c75-9a40-b8a5dcede374",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30c7df97-2e56-4dfe-8eb0-2111b6853240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4633dc63-7370-4dad-915d-8d182fba93b9",
        "cursor": {
          "ref": "1701ea32-60f5-435c-8bd4-832d87b55893",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a84ed10-888a-41b9-8c88-af5a35f5844d"
        },
        "item": {
          "id": "4633dc63-7370-4dad-915d-8d182fba93b9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b9868ae9-a509-40ea-b67b-75f911fb2b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8712e24d-d791-417b-99e3-da8030d9baa0",
        "cursor": {
          "ref": "76cd0dc3-6562-45a7-a7ac-c7a38bb296a7",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "558a9f39-5c8d-4bb9-a29d-310097f1c1af"
        },
        "item": {
          "id": "8712e24d-d791-417b-99e3-da8030d9baa0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9183282e-8703-4651-b662-302f0974bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff7d85d-e57f-4ac7-8ca2-a3cf21c15c29",
        "cursor": {
          "ref": "01ed3358-9a30-45aa-a103-62833567ee4b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b95403bd-70b1-4a6d-aafd-6ad365d2ce65"
        },
        "item": {
          "id": "2ff7d85d-e57f-4ac7-8ca2-a3cf21c15c29",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "911468cd-fb59-4c53-aa28-ae4affee278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afdf50b-003c-47f4-bd31-f562318aed30",
        "cursor": {
          "ref": "36448122-03b8-4f49-adc1-b02a08159950",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e527f0b4-6891-4f58-a83d-17532012cb53"
        },
        "item": {
          "id": "7afdf50b-003c-47f4-bd31-f562318aed30",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81b4a084-1de5-49be-8490-6fe33b55abb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195ca56d-242a-4672-9e9b-bbfbda30d023",
        "cursor": {
          "ref": "96783dab-63e8-4631-876d-78063eaacf8c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d518d2f-9ca9-4243-965b-1c11bc0f7321"
        },
        "item": {
          "id": "195ca56d-242a-4672-9e9b-bbfbda30d023",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c37758fc-43ee-4faa-9769-5981b02245ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88fe9b8-847a-4ee0-8265-74061cd3e268",
        "cursor": {
          "ref": "c19f27e9-bc25-4a0e-b1c1-3fda8c89ac37",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "196aba4c-fc50-4e7a-aa10-1a9afb97d500"
        },
        "item": {
          "id": "f88fe9b8-847a-4ee0-8265-74061cd3e268",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5b50ee6e-cb44-46b8-83bb-b8ae85036a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dfaf71-92b6-4a24-a28c-4372f1872662",
        "cursor": {
          "ref": "afaa5edb-01f1-4d74-9c2f-8c51cd4e1dcb",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4113485-1a06-446a-831f-96e247ffa509"
        },
        "item": {
          "id": "47dfaf71-92b6-4a24-a28c-4372f1872662",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90d942dc-f290-4e2c-bd60-6e1923d8edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4465d4c-1d34-40bb-8ad1-6a0781b5ac1c",
        "cursor": {
          "ref": "20cee3ad-a993-4b5d-80d4-2d6cc68843b7",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "035c171e-8fa3-4cf5-b17c-3221bcc5f29f"
        },
        "item": {
          "id": "b4465d4c-1d34-40bb-8ad1-6a0781b5ac1c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1fa06ed9-2e0e-4b4e-94b5-81e418e3a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8efbb3b-9cca-4354-9595-2d309a95b65b",
        "cursor": {
          "ref": "21bbd607-dd2d-49c9-94dc-6d8e17eec208",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0885cedc-a25d-49e4-a055-8cd27b432865"
        },
        "item": {
          "id": "c8efbb3b-9cca-4354-9595-2d309a95b65b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e71b2a88-bd79-4f94-9636-774ac733ca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb1270c-7328-4146-88a5-c669a12b8354",
        "cursor": {
          "ref": "a2529744-a470-49b2-a621-299ba306d2fc",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "605dd6b0-41d3-4cd3-be7f-5f1005cb4efb"
        },
        "item": {
          "id": "1eb1270c-7328-4146-88a5-c669a12b8354",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de5236ca-7b6c-4892-8ef7-a2cecc6466d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6f8991-6537-476e-a4a9-b56423cd8765",
        "cursor": {
          "ref": "91258a7b-659e-445d-9883-731ee58d191b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6098fde3-f251-4e33-8081-e1f1ef46973b"
        },
        "item": {
          "id": "fe6f8991-6537-476e-a4a9-b56423cd8765",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65cb32a9-4c73-4cb7-8dba-bcff7b9862f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718a74bd-9f7f-487a-9549-6a08715afc4b",
        "cursor": {
          "ref": "d477f97c-4304-42fe-81c2-393315ed98d7",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b0f04ad-4369-4d5b-995e-27f7fdc5aec5"
        },
        "item": {
          "id": "718a74bd-9f7f-487a-9549-6a08715afc4b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "115e63d4-bebd-4823-90ba-d732b31b19bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcad0211-41ef-4732-b5e9-eb140bfcbcf9",
        "cursor": {
          "ref": "3ccfe2f4-3d96-403d-b103-f8fc73e0f6e9",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e73d5969-bdd5-4b03-a9c2-75aacb6d797d"
        },
        "item": {
          "id": "fcad0211-41ef-4732-b5e9-eb140bfcbcf9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c47b3ab6-1ebb-4f10-9607-6a438cbf8fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbeb063-d14b-447c-87ca-a6e847cfe361",
        "cursor": {
          "ref": "5a54ee52-9d41-4f18-94e0-6fbe096cbd79",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "636abecf-4130-437d-b3c4-6506f3ef0de0"
        },
        "item": {
          "id": "dbbeb063-d14b-447c-87ca-a6e847cfe361",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fcd3a5f6-4266-49bf-9ca7-e5d9dfcaf863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb978f-3dfc-4551-8c18-31495852d344",
        "cursor": {
          "ref": "2dc0acbc-7cbe-4661-824b-4f6bd4e64618",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ba1312eb-48a4-44af-8eae-ede5874d716f"
        },
        "item": {
          "id": "bceb978f-3dfc-4551-8c18-31495852d344",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f10976f8-1d0a-47e1-9a8a-b4e1971da6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058fc562-5074-4d5a-ace5-2437ec13b0e7",
        "cursor": {
          "ref": "086f4592-3b2a-4876-9a66-12eb0f9597b5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6147ddf3-ec6d-4e40-956d-9bf1b6828457"
        },
        "item": {
          "id": "058fc562-5074-4d5a-ace5-2437ec13b0e7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6f37a8f9-6955-4981-8ae0-90478feb0b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abea26e-3d48-48cc-880b-187e8d3e17cf",
        "cursor": {
          "ref": "151f0bd4-7324-4549-bf95-3568f59209ed",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cfdf4ce2-1921-4237-957d-f5a99baeb99c"
        },
        "item": {
          "id": "2abea26e-3d48-48cc-880b-187e8d3e17cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "20f86f37-cce7-46c2-8617-a0cdd647c3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8206671-61f9-4c82-ab24-28a9e934273f",
        "cursor": {
          "ref": "e853d706-84f4-44ed-ac04-60a71dcec83a",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8334448e-bef6-41cc-bbd3-5e320b64a9c7"
        },
        "item": {
          "id": "a8206671-61f9-4c82-ab24-28a9e934273f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6f101698-b79c-47d7-a48e-25765186de84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa265f7-8531-4f32-b063-466fdbd7f5ff",
        "cursor": {
          "ref": "7eebe546-0c86-490c-bca2-103d0f6d5ad8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a831de39-a24a-43f6-a1a4-24b74e2cb345"
        },
        "item": {
          "id": "1aa265f7-8531-4f32-b063-466fdbd7f5ff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "92dbc2d4-0a4d-4975-a902-f154543c951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b4bca1-a7c0-45ab-95bc-fae68e16cc0d",
        "cursor": {
          "ref": "0ac9b004-60d6-43d6-85bb-540cff389d30",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c47c8949-fafd-4c02-891a-466d01468c2f"
        },
        "item": {
          "id": "b0b4bca1-a7c0-45ab-95bc-fae68e16cc0d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8d8813be-43a3-4fb3-a84d-58061b05ad93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49853c-016c-4182-acca-2bb7256c6cde",
        "cursor": {
          "ref": "85737949-84eb-45e3-b2a8-b855d16a9075",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "39179989-14b6-4032-8de4-a77a3fa3ac25"
        },
        "item": {
          "id": "bb49853c-016c-4182-acca-2bb7256c6cde",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d8639c23-e1eb-4cbf-baf8-0ce89f2c5153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edac0cc-f2d9-4a9d-8e20-426c1ae5b03a",
        "cursor": {
          "ref": "058e540e-8154-43dc-a26d-1bd123e49cd2",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "80fcb602-d55e-4686-934a-4d3e7eec84f3"
        },
        "item": {
          "id": "0edac0cc-f2d9-4a9d-8e20-426c1ae5b03a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "178edcf7-bd85-4a5c-ac97-f93747eab22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acf8728-bd03-4c80-ba52-884f656b18a6",
        "cursor": {
          "ref": "134f1f6c-3fcd-4107-9ab2-f4cff5746201",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fe73a97f-ba3a-405f-b13a-5673715ce5b2"
        },
        "item": {
          "id": "3acf8728-bd03-4c80-ba52-884f656b18a6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3e057900-860e-479e-85dd-27862836de2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ad68c9-2c6d-4a87-9abe-4a0a727f349d",
        "cursor": {
          "ref": "d290e24f-a6bd-48ee-96da-08f03ed66c5c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8f8f24f4-3e73-4864-8e68-62cfb90227ab"
        },
        "item": {
          "id": "08ad68c9-2c6d-4a87-9abe-4a0a727f349d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a224584a-e773-435a-83f3-b0c04d483d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb776a20-a060-40f5-bbb1-5d445a9e16c4",
        "cursor": {
          "ref": "27f96896-50aa-490f-bf72-ba791a22d0e8",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0738640a-2512-485c-a9b4-bb4cc22bc8dc"
        },
        "item": {
          "id": "bb776a20-a060-40f5-bbb1-5d445a9e16c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "652bc7fe-bc22-47ae-b46f-40b8df37185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1b0d2-556e-4964-bbe6-ebed2e283240",
        "cursor": {
          "ref": "6f4eb856-f2e7-45f2-946c-9d0c3a2b7d1d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9bb56255-0300-41a4-b4e8-412d06652933"
        },
        "item": {
          "id": "92f1b0d2-556e-4964-bbe6-ebed2e283240",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3465acc-71e5-40b3-9679-52e83555545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b801242-fef4-4971-bf8f-96b1f41f8523",
        "cursor": {
          "ref": "32c0ab00-f1b6-4cf5-8cec-0873f44826d1",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "274cf37a-f511-4329-817f-803227e68876"
        },
        "item": {
          "id": "7b801242-fef4-4971-bf8f-96b1f41f8523",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "035e6c9a-c443-4e38-90ea-935c686ab74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f98f64b-be56-44a6-bd14-218ddf9060ef",
        "cursor": {
          "ref": "1d649577-987f-4a45-9230-da68bc6656ba",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6d8c7a7a-242b-4135-80f0-58c7a65c9c13"
        },
        "item": {
          "id": "8f98f64b-be56-44a6-bd14-218ddf9060ef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "495642b1-f879-4f51-b6f7-f572d2b3131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12af2fe9-c268-4ca7-8a83-78e886e578cb",
        "cursor": {
          "ref": "18e4a68d-e1ac-4591-9efb-b38db8a25d38",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "791dffa6-6286-4d6a-9e81-4165f1c5bccb"
        },
        "item": {
          "id": "12af2fe9-c268-4ca7-8a83-78e886e578cb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6aa784af-6c3b-478c-95a4-14a6e05e4922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81150f-c6f7-414a-bab4-7ff0bb2df08c",
        "cursor": {
          "ref": "2eec0641-ca2a-49df-b892-77911ac5e9c7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7565c101-1212-4cd2-9531-141ec178ab6a"
        },
        "item": {
          "id": "de81150f-c6f7-414a-bab4-7ff0bb2df08c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37ca4b58-7712-4268-ac1c-34e924d0906c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8a150-7169-4565-89d3-3d41a01d623e",
        "cursor": {
          "ref": "277b1a0c-c0f3-4b57-8be5-f5303431677a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4438cd23-167a-47a0-a68f-8cf8541f16bd"
        },
        "item": {
          "id": "72e8a150-7169-4565-89d3-3d41a01d623e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "38903197-6fda-490b-abf3-dd839c9ce56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083576eb-673c-4e71-a64f-00b291abbe7f",
        "cursor": {
          "ref": "f51fa33d-464d-4aea-ae35-2f97488971a2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2f33fd67-e4f3-4334-8635-25c1cd741627"
        },
        "item": {
          "id": "083576eb-673c-4e71-a64f-00b291abbe7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0352d8fb-9e2a-4840-979a-00d0f23d05a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa48b254-fec4-4f1a-8d25-e25a5ebeaa8c",
        "cursor": {
          "ref": "30495019-aea5-46cc-83d9-e23bcda1ead3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f957d57c-f71e-444b-b4a3-4c686582cfa2"
        },
        "item": {
          "id": "aa48b254-fec4-4f1a-8d25-e25a5ebeaa8c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f86c210f-392f-48e3-bf6d-666530024f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff8fa65-dbb7-4a3b-b430-08a60f1a0efd",
        "cursor": {
          "ref": "c76e5e7f-8f87-4826-a5fb-47a3c6c675ab",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7b96481f-6ef4-4005-90e7-094a0d5368e3"
        },
        "item": {
          "id": "1ff8fa65-dbb7-4a3b-b430-08a60f1a0efd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "26ceab62-4847-48c9-abe6-a131bb80c11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5407668-1261-44f3-bd40-cea0ad57c4a4",
        "cursor": {
          "ref": "7600ecd8-e541-468b-a45d-543a461c187a",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fa9e896c-53e1-41a9-b4ff-0699ed317a0d"
        },
        "item": {
          "id": "c5407668-1261-44f3-bd40-cea0ad57c4a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4d5caf87-59b9-4e5f-b3c6-10c0d474a722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d450b-8bcb-44cb-b427-fd85f2c580a0",
        "cursor": {
          "ref": "249ab3c5-3778-438b-93d3-116ef0e5976b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0e77efa1-c773-4b00-8f04-9b3f2332202a"
        },
        "item": {
          "id": "864d450b-8bcb-44cb-b427-fd85f2c580a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9dbf56cd-cf81-4b9e-97c0-051aae892110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea74e35-c1b5-4589-853c-82c8df5c008c",
        "cursor": {
          "ref": "b2dd9cf4-f8c5-414c-927d-e563b52f699c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ce196d2-d8b2-4ff4-827a-b7b29f2693fe"
        },
        "item": {
          "id": "aea74e35-c1b5-4589-853c-82c8df5c008c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "694aec80-eb3c-4716-98c9-1fcab0175ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d069811d-f272-44d1-9c94-b3d78f8a2d12",
        "cursor": {
          "ref": "32538b39-d28a-4d7b-b030-6cc5b62e1da2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0142003c-ea65-4aa3-aef2-487e55aab316"
        },
        "item": {
          "id": "d069811d-f272-44d1-9c94-b3d78f8a2d12",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7e861199-d519-40e4-80d5-309e1e5be468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2e2ef0-9d83-439a-ab7e-29d6b9cb6ef2",
        "cursor": {
          "ref": "8a5775ec-6da4-498b-af2b-38685d380204",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b80d1f5-b9a6-49e8-98f3-cc5b981bedb7"
        },
        "item": {
          "id": "cf2e2ef0-9d83-439a-ab7e-29d6b9cb6ef2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "31b41347-2335-4839-b45c-30dcf8c7b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51734a2-928d-4e48-81dd-72ab09ae9683",
        "cursor": {
          "ref": "c81e6af0-b885-4ffb-a4eb-c118c4a4d433",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9168b0ac-e973-4d12-8ed2-489db34e4eca"
        },
        "item": {
          "id": "b51734a2-928d-4e48-81dd-72ab09ae9683",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e20b76d0-9cc0-4cc8-98cb-5f0f9090bb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4605ef4-cc6b-4854-9acf-e2fe703cab97",
        "cursor": {
          "ref": "be2f74dc-d64c-4a84-bcb7-860ca388d13c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72a4e106-2df7-4692-ba1e-78e4182de5c8"
        },
        "item": {
          "id": "f4605ef4-cc6b-4854-9acf-e2fe703cab97",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eaef58f4-915f-4f81-92d6-98f1e3abbc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f368d123-c22c-4a5a-b85d-af8e56424a8b",
        "cursor": {
          "ref": "6b6b4225-8a60-4885-b382-e1c4797ddaf5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc3412ab-8dc6-446a-8093-0314c7258b17"
        },
        "item": {
          "id": "f368d123-c22c-4a5a-b85d-af8e56424a8b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a2960d72-f739-41bd-bd01-e857d0ce398a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0ed265-d033-4f0b-9f77-b75d3c899f88",
        "cursor": {
          "ref": "b1f1ddd7-aaae-4135-898e-3001600a247a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f10b5e6c-eae0-4a15-aa37-a2b5fee1655e"
        },
        "item": {
          "id": "1c0ed265-d033-4f0b-9f77-b75d3c899f88",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a47a6ed6-feab-4fb9-9b06-8dccef17397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5182607d-a9ec-4626-918b-dd98f0887a63",
        "cursor": {
          "ref": "7ef1eb20-2fc5-449d-9126-66ed5b2c4011",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6c8d9b6e-96a6-4403-b67d-00849d4a0668"
        },
        "item": {
          "id": "5182607d-a9ec-4626-918b-dd98f0887a63",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9d198c46-3689-4aed-a6c1-cf31c93cc734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46b3e2a-7f1c-42b9-88f9-3c80e29755b7",
        "cursor": {
          "ref": "82a581a1-a645-48d4-9660-dfb3ce9c17a6",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3ec98766-5802-40ec-92b3-2637b0285517"
        },
        "item": {
          "id": "c46b3e2a-7f1c-42b9-88f9-3c80e29755b7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e345169b-f45d-4e70-8394-2eb4ba04daa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789893a-6ab1-4e9d-8648-35fd154608ec",
        "cursor": {
          "ref": "5f13c239-8932-44b4-8ab8-f970564acdbb",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dd5b0c08-4dbd-48b5-8e42-35909d88f36e"
        },
        "item": {
          "id": "e789893a-6ab1-4e9d-8648-35fd154608ec",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "90e4e2e6-c84c-4aa6-bc21-c7001eb0ec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da941c5-95e5-4f3d-b973-e42118d6e968",
        "cursor": {
          "ref": "bd8de597-36e9-4d45-a42c-ccfee2278c3c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5a31d697-dbb0-42d4-aed3-5f585c2d8333"
        },
        "item": {
          "id": "8da941c5-95e5-4f3d-b973-e42118d6e968",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6ba4d5aa-a5da-4274-bfe2-ee88ca8042f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce1bf9-f023-4aeb-b702-dcd72607e52e",
        "cursor": {
          "ref": "56dff7ba-fbed-40c6-88f4-074f622d7068",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7d139202-f75f-400a-acec-4ae2a7e29376"
        },
        "item": {
          "id": "f1ce1bf9-f023-4aeb-b702-dcd72607e52e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "26487af4-5235-4889-8791-bcd277bf9e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d878840-b274-45dd-9124-4b1f157fc36a",
        "cursor": {
          "ref": "60289d37-6cab-4e7c-870b-8d80667c98a6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a640bed4-67cd-433a-bde3-2884ac776609"
        },
        "item": {
          "id": "7d878840-b274-45dd-9124-4b1f157fc36a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "80afdccc-3711-4295-aab1-ac450247d750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259c0b9e-52ee-4d79-85b5-28716c037e39",
        "cursor": {
          "ref": "804de806-7ee2-47b3-83a6-66c99a0564bc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5abc66d5-e419-4341-a3e6-5f87fe8dbb96"
        },
        "item": {
          "id": "259c0b9e-52ee-4d79-85b5-28716c037e39",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5b916c80-0e7f-4a40-99e6-2d6d136173ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2da7ed-d69b-40ec-84ff-a2daa4f01107",
        "cursor": {
          "ref": "8cd56ac5-4da1-4cac-80cf-bec6c036b7fe",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f3603a5d-776b-4c8b-9bcb-41bbd4d7a898"
        },
        "item": {
          "id": "2f2da7ed-d69b-40ec-84ff-a2daa4f01107",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "209d7d2b-7c68-40ab-970c-d26dbb46eb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa1b8a-db7d-4346-a0d4-5329ed4d138e",
        "cursor": {
          "ref": "c4e48df0-07b8-4aaf-9cda-64e43c3374dc",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2130bff0-5ebc-4576-9af8-72f8129e009d"
        },
        "item": {
          "id": "66aa1b8a-db7d-4346-a0d4-5329ed4d138e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95e21bde-07f7-4297-b117-b26d55c55b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9dc9e7-d7fd-4291-9306-4a716a2254bf",
        "cursor": {
          "ref": "63bfc4ff-0d73-4939-8f17-474a592dd112",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6254207-2986-4f58-a4eb-831d286d0cb9"
        },
        "item": {
          "id": "2c9dc9e7-d7fd-4291-9306-4a716a2254bf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5587b4fb-c5b1-4b28-b623-9580a29b2f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1908f8-1830-40cb-b1df-1f8044b06838",
        "cursor": {
          "ref": "c123f12f-6f9d-45a3-8368-235914b120d3",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f5df7596-dd8e-41d4-85e8-0c78fae215c5"
        },
        "item": {
          "id": "cc1908f8-1830-40cb-b1df-1f8044b06838",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9a00b0d-ecbc-440d-8ae8-b78bc3a7f4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573d67b6-2991-42dd-bea7-9c5e5760119a",
        "cursor": {
          "ref": "761e3579-2fe1-49a5-9b54-99049b77cd66",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0854aa4f-0dc2-4fc2-b907-3b49a16ab242"
        },
        "item": {
          "id": "573d67b6-2991-42dd-bea7-9c5e5760119a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0949d159-2242-44b1-b925-8613b0226aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1b1755-6f89-43e9-8181-b8a723d3e057",
        "cursor": {
          "ref": "317737fe-4a98-4766-817b-c2baad55f116",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9985789b-84be-4edf-b0c0-0fbde03a11d5"
        },
        "item": {
          "id": "ec1b1755-6f89-43e9-8181-b8a723d3e057",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bbeab43a-7264-4b0d-9f4b-2015e6cccffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5c3b07-e626-4512-bf2c-55a7a5995ed0",
        "cursor": {
          "ref": "1a416369-2ecc-49de-83a0-7a0db35f1a77",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f6d4f285-7a61-4032-b159-900d7ca1c189"
        },
        "item": {
          "id": "ba5c3b07-e626-4512-bf2c-55a7a5995ed0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "51844fed-37e5-4c13-a769-edf6c2ddf142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ca09ff-7eed-4476-8635-93ac677322b9",
        "cursor": {
          "ref": "c2b281e7-12ca-43fd-8bef-a466c2470fe8",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c98cb87e-944d-45db-bee3-bf05ea8b4c5a"
        },
        "item": {
          "id": "80ca09ff-7eed-4476-8635-93ac677322b9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4c536a4b-19d9-40ab-8453-5b27de6248e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96bf4e5-7d8d-4219-964b-b1a909bbb77f",
        "cursor": {
          "ref": "255c769b-7455-4560-8d67-39248a8c00f2",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e93410a8-471d-4713-9de8-8942c7dc7bae"
        },
        "item": {
          "id": "b96bf4e5-7d8d-4219-964b-b1a909bbb77f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a223281-c4de-4954-adba-2629626a8804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce9cff4-e001-457c-ac95-e4b602d130ef",
        "cursor": {
          "ref": "a73f4118-15f2-4c7d-9c78-42148ee37c85",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1ab78492-346f-45d9-bd98-b42762c9f4f9"
        },
        "item": {
          "id": "1ce9cff4-e001-457c-ac95-e4b602d130ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e1e92a2d-46c6-4e81-9dcd-46653ec55245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf31dc1-03fd-4a94-9bb9-537c441e5d2d",
        "cursor": {
          "ref": "459e6967-388e-4532-b780-9365e1607363",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b979ef55-9c98-4b9b-9f99-c384bc4e57eb"
        },
        "item": {
          "id": "7cf31dc1-03fd-4a94-9bb9-537c441e5d2d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "97df10cd-915d-4170-9783-77654acb337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d65ad-62b8-45e8-b034-c9e07204f025",
        "cursor": {
          "ref": "a2812a3d-ee35-47dd-a14d-6a00bc95f16d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "30cb852f-ba0c-410c-aa24-fb65777068cd"
        },
        "item": {
          "id": "3f3d65ad-62b8-45e8-b034-c9e07204f025",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4f57c800-3fba-44b8-b96e-6dd5c0edd455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78989fc-7e01-428d-95e0-b7c8212185d7",
        "cursor": {
          "ref": "a492420c-6b96-40b1-99fa-15b6d0cd1441",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d768af88-3fbd-45c2-8bda-1a84a99e9432"
        },
        "item": {
          "id": "a78989fc-7e01-428d-95e0-b7c8212185d7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "092563cf-5295-4de2-910b-e7ba494d0381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea525a1-7276-488d-9c02-ee741882c43f",
        "cursor": {
          "ref": "6c57fca4-3b9c-405b-99aa-f90fdeddeb0d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b596dfd6-e13a-4959-a68b-22fe5d8ba53a"
        },
        "item": {
          "id": "7ea525a1-7276-488d-9c02-ee741882c43f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6fb3e5d6-0edf-43bc-b0cc-26a6edef379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8573b51d-cb09-48c6-aef6-b8ff2af2cbcd",
        "cursor": {
          "ref": "48a57457-3405-4831-b4b4-49b0a4a0ba06",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9d65e63c-23bf-4402-821d-211b56cd86bb"
        },
        "item": {
          "id": "8573b51d-cb09-48c6-aef6-b8ff2af2cbcd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "099a4df1-b403-48ad-bb5c-3926da558274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed98fe-b626-477a-8100-e8db95d4c343",
        "cursor": {
          "ref": "4204040a-e7c0-4a40-8490-8897d0e65fc3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c51b23b3-2aec-4a0d-8b22-ea522b1c992b"
        },
        "item": {
          "id": "f4ed98fe-b626-477a-8100-e8db95d4c343",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "455e08ca-e746-47a1-9a39-82a4cd78f8bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba461cb-8810-4581-bca5-91b74f9d42a9",
        "cursor": {
          "ref": "c618945a-c06f-4112-acde-3f09cc9e7825",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3c470ab-d398-45ab-8d16-828779416776"
        },
        "item": {
          "id": "3ba461cb-8810-4581-bca5-91b74f9d42a9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e5b9297f-ad5f-4e5f-ba8a-a4f07dda9fe3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f791e52-78f5-4de7-99ee-64702483f182",
        "cursor": {
          "ref": "205b380a-c91d-4fca-bf8d-9ca9852887b6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8a292f5c-368c-44aa-acda-3afedb53700b"
        },
        "item": {
          "id": "2f791e52-78f5-4de7-99ee-64702483f182",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "429dd42c-070e-4650-aa4e-4a3ea01c04b0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293bec6-8081-450d-858b-6cb78bad5650",
        "cursor": {
          "ref": "c72abf49-e9da-45f4-a957-75ca67da75c8",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60c0abfd-988d-4051-8758-ce56c6e54207"
        },
        "item": {
          "id": "a293bec6-8081-450d-858b-6cb78bad5650",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec50e570-b8aa-4c1b-bcfe-57e878251cb2",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a7d0e9-6214-4962-9bf5-728e1e612af8",
        "cursor": {
          "ref": "43ca5c50-138b-409c-9c14-e99153b38862",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4bf2c03d-f7db-4ab3-ba85-22fce3183529"
        },
        "item": {
          "id": "69a7d0e9-6214-4962-9bf5-728e1e612af8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7c4a28bf-412f-4eb3-839b-4871b0bba653",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
        "cursor": {
          "ref": "c0acf414-2960-4790-9693-9c905be0b9ec",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "797be9a2-e921-4611-81b9-fa3591cbe0dd"
        },
        "item": {
          "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7c3d3a4-3b2c-4bb2-b5ef-ecee7f8f49d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
        "cursor": {
          "ref": "c0acf414-2960-4790-9693-9c905be0b9ec",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "797be9a2-e921-4611-81b9-fa3591cbe0dd"
        },
        "item": {
          "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7c3d3a4-3b2c-4bb2-b5ef-ecee7f8f49d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
        "cursor": {
          "ref": "c0acf414-2960-4790-9693-9c905be0b9ec",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "797be9a2-e921-4611-81b9-fa3591cbe0dd"
        },
        "item": {
          "id": "c0cca14b-0aaf-4052-b959-8c49a86380d4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7c3d3a4-3b2c-4bb2-b5ef-ecee7f8f49d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9055165-8bdc-47bb-aed4-89cd70c3a744",
        "cursor": {
          "ref": "03889031-2e5c-401a-a064-02763c8c3750",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "babb4d8f-aea5-40c0-a7ff-763412f1714a"
        },
        "item": {
          "id": "a9055165-8bdc-47bb-aed4-89cd70c3a744",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a6968094-8640-4335-9fbc-89b9a997914a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f5dff-68b8-4738-ad59-05abeccbb16b",
        "cursor": {
          "ref": "64e825cd-cc4a-4a27-b5f2-f0fa7062bd82",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30f33b25-7d58-457c-92f0-33fb56a6fa49"
        },
        "item": {
          "id": "090f5dff-68b8-4738-ad59-05abeccbb16b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "75cf3635-cdb8-48e2-adbd-4f2707d936b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f5dff-68b8-4738-ad59-05abeccbb16b",
        "cursor": {
          "ref": "64e825cd-cc4a-4a27-b5f2-f0fa7062bd82",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30f33b25-7d58-457c-92f0-33fb56a6fa49"
        },
        "item": {
          "id": "090f5dff-68b8-4738-ad59-05abeccbb16b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "75cf3635-cdb8-48e2-adbd-4f2707d936b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17eddb8-3ea5-44c2-8e17-1ead48fe5bd9",
        "cursor": {
          "ref": "f2e7a8f1-3fa3-425c-ade1-1833d6577fc1",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5ee75201-9d21-40c6-8c8b-4c02424d3b2d"
        },
        "item": {
          "id": "b17eddb8-3ea5-44c2-8e17-1ead48fe5bd9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "34d287d9-9d7d-45a6-8c69-b70ac2fe9b86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 12,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e43a0-4329-405e-bc26-14112707972d",
        "cursor": {
          "ref": "9e60b975-9835-4249-a9d0-cc21cfdccf90",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4182ec9f-9ddc-421b-8216-33f16f4b85b0"
        },
        "item": {
          "id": "0b6e43a0-4329-405e-bc26-14112707972d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac0b3723-a48f-4043-8c7c-0e7490f7e3a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e43a0-4329-405e-bc26-14112707972d",
        "cursor": {
          "ref": "9e60b975-9835-4249-a9d0-cc21cfdccf90",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4182ec9f-9ddc-421b-8216-33f16f4b85b0"
        },
        "item": {
          "id": "0b6e43a0-4329-405e-bc26-14112707972d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac0b3723-a48f-4043-8c7c-0e7490f7e3a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862950e0-7f1c-4af4-b7be-2e8b98f815f9",
        "cursor": {
          "ref": "00e82c8c-d4b2-4fae-835e-61940e6459ec",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c5132ad3-9c1c-477b-bd3b-4e7465fa84d7"
        },
        "item": {
          "id": "862950e0-7f1c-4af4-b7be-2e8b98f815f9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "56ad3390-efda-44d4-907f-8740d1fa54e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}